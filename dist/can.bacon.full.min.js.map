{"version":3,"file":"can.bacon.full.min.js","sources":["webpack/universalModuleDefinition","can.bacon.full.min.js","webpack/bootstrap 0124993a02942765c1b4*","./src/index.js","./src/index.js*","./src/can.js","./src/can.js*","./src/bacon.js","./src/bacon.js*","./bower_components/bacon/dist/Bacon.js","./bower_components/bacon/dist/Bacon.js*","./bower_components/canjs/amd/can.js","./bower_components/canjs/amd/can.js*","./bower_components/canjs/amd/can/model.js","./bower_components/canjs/amd/can/model.js*","./bower_components/canjs/amd/can/component.js","./bower_components/canjs/amd/can/component.js*","./bower_components/canjs/amd/can/util/library.js","./bower_components/canjs/amd/can/util/library.js*","./bower_components/canjs/amd/can/control/route.js","./bower_components/canjs/amd/can/control/route.js*","./bower_components/canjs/amd/can/view/mustache.js","./bower_components/canjs/amd/can/view/mustache.js*","(webpack)/buildin/amd-define.js","(webpack)/buildin/amd-options.js","(webpack)/buildin/module.js","(webpack)/buildin/module.js*","./bower_components/canjs/amd/can/view/callbacks.js","./bower_components/canjs/amd/can/view/callbacks.js*","./bower_components/canjs/amd/can/control.js","./bower_components/canjs/amd/can/control.js*","./bower_components/canjs/amd/can/observe.js","./bower_components/canjs/amd/can/observe.js*","./bower_components/canjs/amd/can/view/bindings.js","./bower_components/canjs/amd/can/view/bindings.js*","./bower_components/canjs/amd/can/map.js","./bower_components/canjs/amd/can/map.js*","./bower_components/canjs/amd/can/list.js","./bower_components/canjs/amd/can/list.js*","./bower_components/canjs/amd/can/route.js","./bower_components/canjs/amd/can/route.js*","./bower_components/canjs/amd/can/view/scope.js","./bower_components/canjs/amd/can/view/scope.js*","./bower_components/canjs/amd/can/view.js","./bower_components/canjs/amd/can/view.js*","./bower_components/canjs/amd/can/view/scanner.js","./bower_components/canjs/amd/can/view/scanner.js*","./bower_components/canjs/amd/can/compute.js","./bower_components/canjs/amd/can/compute.js*","./bower_components/canjs/amd/can/view/render.js","./bower_components/canjs/amd/can/view/render.js*","./bower_components/canjs/amd/can/util/jquery.js","./bower_components/canjs/amd/can/util/jquery.js*","./bower_components/canjs/amd/can ^$","./bower_components/canjs/amd/can/construct.js","./bower_components/canjs/amd/can/construct.js*","./bower_components/canjs/amd/can/util/bind.js","./bower_components/canjs/amd/can/util/bind.js*","./bower_components/canjs/amd/can/map/bubble.js","./bower_components/canjs/amd/can/map/bubble.js*","./bower_components/canjs/amd/can/util/batch.js","./bower_components/canjs/amd/can/util/batch.js*","./bower_components/canjs/amd/can/view/elements.js","./bower_components/canjs/amd/can/view/elements.js*","./bower_components/canjs/amd/can/view/live.js","./bower_components/canjs/amd/can/view/live.js*","./bower_components/canjs/amd/can/util/string.js","./bower_components/canjs/amd/can/util/string.js*","./bower_components/canjs/amd/can/util/string/deparam.js","./bower_components/canjs/amd/can/util/string/deparam.js*","./bower_components/canjs/amd/can/util/can.js","./bower_components/canjs/amd/can/util/can.js*","./bower_components/canjs/amd/can/util/attr.js","./bower_components/canjs/amd/can/util/attr.js*","./bower_components/canjs/amd/can/event.js","./bower_components/canjs/amd/can/event.js*","./bower_components/canjs/amd/can/util/inserted.js","./bower_components/canjs/amd/can/util/inserted.js*","./bower_components/canjs/amd/can/util/array/each.js","./bower_components/canjs/amd/can/util/array/each.js*","./bower_components/jquery/dist/jquery.js","./bower_components/jquery/dist/jquery.js*","./bower_components/canjs/amd/can/view/node_lists.js","./bower_components/canjs/amd/can/view/node_lists.js*","./bower_components/canjs/amd/can/view/parser.js","./bower_components/canjs/amd/can/view/parser.js*"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","MapChangeEvent","args","event","which","how","value","oldValue","ListChangeEvent","type","index","isNaN","Error","toBaconObservable","ctx","ev","selector","stream","bacon","fromBinder","sink","cb","Next","chooseEventData","arguments","can","delegate","bind","undelegate","unbind","isComputed","toProperty","eventArgs","evName","getEventValueForBacon","oldBind","Observable","apply","oldDelegate","oldBindAndSetup","bindAndSetup","oldControlOn","Control","prototype","on","eventName","func","takeUntil","element","Map","target","_data","hasOwnProperty","List","_type","syncAsMap","map","val","key","attr","removeAttr","removeOthers","undefined","console","warn","syncAsList","list","isMapEvent","splice","concat","Math","min","length","replace","toCanCompute","compute","onValue","toCanMap","toCanList","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","Bacon","BufferingSource","Bus","CompositeUnsubscribe","ConsumingSource","Desc","Dispatcher","End","Event","EventStream","Initial","None","Property","PropertyDispatcher","Some","Source","UpdateBarrier","addPropertyInitValueToStream","assert","assertArray","assertEventStream","assertFunction","assertNoArguments","assertString","cloneArray","compositeUnsubscribe","containsDuplicateDeps","convertArgsToFunction","describe","end","eventIdCounter","flatMap_","former","idCounter","initial","isArray","isFieldKey","isFunction","isObservable","latterF","liftCallback","makeFunction","makeFunctionArgs","makeFunction_","makeObservable","makeSpawner","next","nop","partiallyApplied","recursionDepth","registerObs","spys","toCombinator","toEvent","toFieldExtractor","toFieldKey","toOption","toSimpleExtractor","withDescription","withMethodCallSupport","_","_ref","__slice","slice","__hasProp","__extends","child","parent","ctor","constructor","__super__","__bind","fn","me","toString","version","binder","eventTransformer","unbinder","reply","_i","_len","last","more","noMore","isEnd","scheduler","setTimeout","$","asEventStream","_this","handler","off","jQuery","Zepto","fromEventTarget","sub","unsub","_ref1","_ref2","_ref3","_ref4","addEventListener","addListener","removeEventListener","removeListener","fromPromise","promise","abort","then","e","later","delay","sequentially","values","fromPoll","repeatedly","spy","push","obs","_results","running","wrapped","context","f","methodName","desc","callback","combineAsArray","flatMap","fromCallback","fromNodeCallback","error","poll","setInterval","clearInterval","interval","constant","never","fromArray","once","send","unsubd","empty","mergeAll","streams","fold","a","b","merge","zipAsArray","zipWith","xs","s","toEventStream","when","groupSimultaneous","sources","_j","_len1","subscribeInternal","onValues","combineWith","combineTemplate","template","applyStreamValue","combinator","compile","compileTemplate","constantValue","current","funcs","mkContext","setValue","ctxStack","popContext","pushContext","Object","RegExp","Date","newContext","pop","each","rootContext","isEvent","isInitial","isNext","isError","hasValue","filter","inspect","log","_super","valueF","cached","always","fmap","toNext","subscribe","onError","onEnd","errors","withHandler","takeWhile","endOnError","take","count","sampledBy","mapError","mapEnd","doAction","skip","skipDuplicates","isEqual","withStateMachine","prev","get","skipErrors","initState","state","fromF","newState","output","outputs","scan","seed","lazyF","acc","f_","resultProperty","x","y","initSent","sendInit","forEach","getOrElse","whenDoneWith","zip","other","Array","diff","start","prevTuple","tuple","flatMapFirst","flatMapLatest","not","slidingWindow","n","minValues","window","combine","decode","cases","awaiting","_arg","myValues","otherValues","name","reduce","assign","firstOnly","checkEnd","composite","add","__","unsubRoot","unsubscribed","unsubAll","unsubMe","unsubscribe","dispatcher","wrappedSubscribe","hasSubscribers","debounce","debounceImmediate","throttle","bufferWithTime","bufferWithTimeOrCount","Number","MAX_VALUE","bufferWithCount","flushOrSchedule","buffer","flush","schedule","onInput","onFlush","delayMs","scheduled","right","left","ends","smartSink","unsubBoth","initValue","sampler","unsubLeft","unsubRight","stopper","endMarker","data","skipUntil","starter","started","skipWhile","ok","startWith","lazy","result","samplerSource","thisSource","sample","changes","and","or","delayChanges","method","sampled","property","justInitValue","handleEvent","done","ended","prevError","pushIt","pushing","queue","removeSub","subscriptions","unsubscribeFromSource","waiters","subscription","without","w","ws","success","tmp","shift","inTransaction","unsubSrc","currentValueRootId","currentEventId","dispatchingId","maybeSubSource","valId","isDefined","guardedSink","subscribeAll","subscribeInput","unsubscribeInput","input","i","newSink","plug","sync","markEnded","consume","mayHave","hasAtLeast","flatten","fromObservable","collectDeps","dependsOn","findDeps","flatDeps","o","dep","deps","internalDeps","ix","len","needsBarrier","pat","patSources","pats","patterns","resultStream","usage","toArray","ixs","indexOf","any","cannotMatch","cannotSync","match","nonFlattened","part","triggers","_k","_len2","source","trigger","flushLater","flushWhileTriggers","functions","_l","_len3","fun","all","observables","checkObservable","contains","update","lateBindFirst","Function","ss","starting","remove","afterTransaction","afters","findIndependent","independent","rootEvent","waiter","doUnsub","message","condition","applied","charAt","partFuncs","parts","split","fieldValue","v","indexWhere","head","negate","tail","filtered","ys","obj","ex","internals","_error","d","now","getTime","pipe","def","thisArg","Deferred","makeArray","rejectWith","resolveWith","modelNum","getId","inst","__reading","__get","ajax","ajaxOb","dataType","params","url","extend","makeRequest","modelObj","serialize","deferred","jqXHR","model","unshift","initializers","models","prop","instancesRawData","oldList","Model","_reqs","self","ListClass","ML","modelList","rawDataIsArray","rawDataIsList","raw","getObject","rawPart","proxy","_clean","attributes","parseModel","store","parserMaker","parsers","parseModels","ajaxMethods","create","attrs","identity","capitalize","destroy","findAll","findOne","ajaxMaker","ajaxMethod","str","createURLFromResource","resource","fullName","setup","base","staticProps","protoProps","clean","newMethod","Construct","_overwrite","makeInitializer","parseName","dataProperty","makeParser","_url","_shortName","_ajax","_makeRequest","_bindings","isNew","save","destroyed","resolve","_bindsetup","_bindteardown","___set","makeGetterHandler","createUpdateDestroyHandler","responseHandlers","makeFindAll","makeFindOne","makeCreate","makeUpdate","oldMethod","oldArgs","funcName","stub","_bubbleRule","isPlainObject","_init","_destroyed","test","viewCallbacks","ignoreAttributesRegExp","paramReplacer","Component","scope","ComponentControl","events","attributeScopeMappings","defaults","temp","renderer","view","frag","mustache","tag","el","options","hookupOptions","scopePropertyUpdating","componentScope","initalScopeData","component","twoWayBindings","getAttribute","hyphenate","node","camelize","nodeName","toLowerCase","substr","templateType","computeData","newVal","hasDependencies","scopeResult","handlers","isEmptyObject","camelized","attributeName","renderedScope","helpers","_control","tags","content","contentHookup","rendererOptions","subtemplate","live","document","createDocumentFragment","appendChild","_lookup","_action","controlInstance","hasObjectLookup","readyCompute","lastIndex","matched","read","isArgument","processor","processors","click","join","ready","control","readyComputes","route","controller","routes","substring","batchNum","check","ext","SCOPE","HASH","CONTEXT_OBJ","SPECIAL_CONTEXT_OBJ","ARG_NAMES","argumentsRegExp","literalNumberStringBooleanRegExp","makeLookupLiteral","isLookup","isObserveLike","_get","isArrayLike","makeConvertToScopes","original","originalWithScope","opts","updatedScope","updatedOptions","Scope","Options","Mustache","render","scanner","text","Scanner","argNames","tokens","before","templateName","trim","quickFunc","cmd","mode","startTxt","startOnlyTxt","specialAttribute","escaped","hashes","whole","arg","txt","scopeAndOptions","hash","helper","helperOptions","inverse","getHelper","contexts","argIsObserve","validArgs","valid","isObserveList","isHelper","temporarilyBind","initialValue","init","partials","_helpers","registerHelper","partial","reads","__clearReading","__setReading","safeString","renderPartial","partialName","if","expr","truthy","unless","keys","resolved","lists","item","@index","@key","with","register","suffix","contentType","script","src","out","__webpack_amd_options__","webpackPolyfill","deprecate","paths","children","attrHandler","regExpAttributes","attrMatcher","automaticCustomElementCharacters","tagName","tagHandler","html5","elements","shivDocument","callbacks","_tags","_attributes","_regExpAttributes","tagData","helperTagCallback","proxyMethods","tagCallback","res","basicProcessor","special","actions","_isAction","_shifter","called","convertedName","arr","cls","pluginname","pluginName","_fullName","addClass","bindings","destroyCB","user","controls","Class","removeClass","inArray","Observe","startBatch","batch","stopBatch","stop","triggerBatch","isContentEditable","true","false","editable","parentNode","removeCurly","trueValue","falseValue","has","Checked","multiple","Multiselect","Content","Value","enter","keyCode","scopeData","returnObserveMethods","_context","specialData","toUpperCase","set","{value} change","change","isCheckbox","checked","setOrRemove","delimiter","isString","isSelected","childNodes","option","selected","currentValue","innerHTML","bubble","madeMap","teardownMap","cid","added","_cid","getMapFromObject","instance","serializeMap","_computes","_bubble","unbindAndTeardown","attrParts","keepKey","addToMap","teardown","hasCid","canMakeObserve","isDeferred","where","firstSerialize","serialized","_serialize","_getValue","keyName","defaultValues","_setupDefaults","_setupComputes","teardownMapping","_changes","computes","_computedBindings","clone","oldVal","_triggerChange","_each","_attrs","_set","isList","_remove","__type","__convert","__set","changeType","teardownFromParent","computedBinding","props","simpleExtend","curVal","spliceRemovesProps","instances","howMany","removed","removeMany","items","_updateAttrs","getArgs","orig","comparator","fromIndex","reverse","thisarg","newList","filteredList","timer","curParams","lastHash","changingData","matcher","paramsMatcher","makeProps","esc","matchesData","names","location","wrapQuote","stringify","removeBackslash","onRouteDataChange","clearTimeout","path","param","_call","lastIndexOf","querySeparator","exec","_setRoute","matchCount","matches","routeName","propCount","after","cpy","encodeURIComponent","deparam","remainder","decodeURIComponent","appState","_setup","setState","link","href","hashchange","matchingPartOfURL","setURL","defaultBinding","currentBinding","_teardown","binding","newArguments","oldParams","escapeReg","escapeDotReg","getNames","first","second","_parent","__cache","previousReads","rootObserve","rootReads","stopLookup","defaultObserve","defaultComputeReadings","defaultScope","currentObserve","currentReads","defaultReads","defaultPropertyDepth","foundObservable","observe","nameIndex","earlyExit","parentValue","executeAnonymousFunctions","hookupId","makeRenderer","textRenderer","$view","checkText","async","engine","getElementById","toId","steal","config","mapJoin","require","toUrl","types","registerView","reject","getDeferreds","deferreds","usefulPart","renderAs","hookup","fragment","nodeType","buildFragment","body","createTextNode","toStr","hookupEls","getElementsByTagName","hookups","removeAttribute","hook","cachedRenderers","cache","info","fragRenderer","preload","preloadStringRenderer","registerScript","__view_id","stringRenderer","renderTo","format","reading","dataCopy","response","objs","currentRenderer","__moduleName","newLine","notEndTag","getTag","reverseTagMap","bracketNum","myEval","eval","attrReg","finishTxt","put_cmd","insert_cmd","htmlTag","quote","beforeQuote","rescan","getAttrName","status","top","stack","tokenReg","tokenSimple","<",">","\"","'","tokenComplex","tokenMap","token","abbr","re","simple","complex","transform","offset","lastToken","bracketCount","attrName","buff","put","bonus","endStack","startTag","magicInTag","specialStates","attributeHookups","tagHookups","lastTagHookup","popTagHookup","tagNames","popTagName","tmap","escapeLeft","returnLeft","commentLeft","escapeFull","commentFull","templateLeft","emptyElement","tagToContentPropMap","pendingPart","cleanedTagName","isClosingTag","tagMap","returnRight","commands","insert","ii","escape","outStart","outEnd","pending","viewData","hooks","getHooks","__read","observed","ret","__addReading","getValueAndBind","oldObserved","onchanged","obEv","newObserveSet","updateOnChange","newValue","setupComputeHandlers","setCachedValue","readInfo","updater","bound","ob","isObserve","k","getterSetter","computed","form","setCached","old","setVal","canReadForChangeEvent","propertyName","oldUpdater","oldReading","unbindComputes","asyncComputer","foundObs","cur","readLength","lastHookups","pendingHookups","tagChildren","newTag","contentText","contentEscape","withinTemplatedSectionWithinAnElement","emptyHandler","setupLists","random","onlytxt","listData","setupLiveBinding","listTeardown","contentProp","attribute","attributePlaceholder","html","isBindableElement","bubbles","dispatch","addEvent","removeEvent","elems","ownerDocument","cacheable","oldClean","cleanData","elem","cbIndex","oldDomManip","domManip","createElement","append","table","inserted","MutationObserver","observer","mutations","mutation","copy","attributeOldValue","disconnect","removeData","oldAttr","oldRemove","nodeValue","oldBuildFragment","webpackContext","req","webpackContextResolve","initializing","constructorExtends","newInstance","_inherit","newProps","oldProps","addTo","what","propName","klass","proto","Constructor","shortName","namespace","_super_class","underscore","t","childrenOf","parentMap","toParent","teardownChildrenFrom","listenTo","triggeredNS","stopListening","bubbleEvent","_bubbleBindings","transactions","batchEvents","stopCallbacks","batchStopHandler","force","callStart","selectsCommentNodes","createComment","textarea","attrMap","defaultValue","tr","ol","ul","tbody","thead","tfoot","select","optgroup","td","th","li","getParentNode","defaultParentNode","setAttr","getAttr","oldElements","newFrag","nextSibling","insertBefore","removeChild","nodeLists","parser","NodeLists","tornDown","teardownCheck","listen","nodeList","unregister","getAttributeParts","parseAttrs","attrStart","attrValue","attrEnd","isNode","addTextNodeIfNoChildren","masterNodeList","indexMap","newNodeLists","newIndicies","itemIndex","itemHTML","gotText","itemFrag","masterListIndex","duringTeardown","fullTeardown","removedMappings","itemsToRemove","nodesToRemove","teardownList","updateList","attached","nodes","makeAndPut","oldNodes","setAttributes","oldAttrs","setAttrs","newAttrs","attributeReplace","goodParts","newAttr","getValue","simpleAttribute","regexp","strUndHash","strColons","strWords","strLowUp","strDash","strReplacer","strQuote","strSingleQuote","strHyphenMatch","strCamelMatch","getNext","isContainer","convertBadValues","isInvalid","roots","container","rootsLength","r","chr","inside","replacer","undHash","digitTest","keyBreaker","paramTest","prep","pairs","lastPart","pair","j","l","GLOBALCAN","object","VERSION","setImmediate","WebKitMutationObserver","MozMutationObserver","class","innerText","textContent","disabled","readonly","required","setAttribute","style","cssText","defaultChecked","setter","hasAttribute","allEvents","__bindEvents","eventList","idedEvents","__listenToEvents","otherId","othersEvents","eventsEvents","iterIdedEvents","othercid","__validate","one","inDocument","doc","ref","noGlobal","isArraylike","isWindow","winnow","qualifier","grep","risSimple","sibling","dir","createOptions","optionsCache","rnotwhite","flag","completed","Data","defineProperty","expando","dataAttr","rmultiDash","rbrace","parseJSON","data_user","returnTrue","returnFalse","safeActiveElement","activeElement","err","manipulationTarget","firstChild","disableScript","restoreScript","rscriptTypeMasked","setGlobalEval","refElements","data_priv","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","hasData","access","handle","getAll","querySelectorAll","fixInput","rcheckableType","actualDisplay","appendTo","display","getDefaultComputedStyle","css","detach","defaultDisplay","elemdisplay","iframe","documentElement","contentDocument","write","close","curCSS","width","minWidth","maxWidth","getStyles","getPropertyValue","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","capName","origName","cssPrefixes","setPositiveNumber","subtract","rnumsplit","max","augmentWidthOrHeight","extra","isBorderBox","styles","cssExpand","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","support","boxSizingReliable","parseFloat","showHide","show","hidden","isHidden","Tween","easing","createFxNow","fxNow","genFx","includeWidth","height","opacity","createTween","animation","tween","collection","tweeners","defaultPrefilter","toggle","oldfire","checkDisplay","anim","dataShow","_queueHooks","unqueued","fire","overflow","overflowX","overflowY","rfxtypes","hide","propFilter","specialEasing","camelCase","cssHooks","expand","Animation","properties","stopped","animationPrefilters","tick","currentTime","remaining","startTime","duration","percent","tweens","run","notifyWith","originalProperties","originalOptions","gotoEnd","fx","progress","complete","fail","addToPrefiltersOrTransports","structure","dataTypeExpression","dataTypes","inspectPrefiltersOrTransports","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","deep","flatOptions","ajaxSettings","ajaxHandleResponses","responses","ct","finalDataType","firstDataType","contents","mimeType","getResponseHeader","converters","ajaxConvert","isSuccess","conv2","conv","responseFields","dataFilter","buildParams","prefix","traditional","rbracket","getWindow","defaultView","class2type","hasOwn","rtrim","rmsPrefix","rdashAlpha","fcamelCase","letter","jquery","num","pushStack","prevObject","eq","sort","copyIsArray","isReady","msg","noop","isNumeric","globalEval","code","indirect","string","results","invert","callbackInverse","callbackExpect","guid","Sizzle","groups","nid","newSelector","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementsByClassName","qsa","rbuggyQSA","tokenize","rescape","toSelector","rsibling","testContext","qsaError","createCache","Expr","cacheLength","markFunction","div","addHandle","attrHandle","siblingCheck","sourceIndex","MAX_NEGATIVE","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","strundefined","setFilters","addCombinator","checkNonElements","doneName","xml","oldCache","outerCache","newCache","dirruns","elementMatcher","matchers","multipleContexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","find","dirrunsUnique","uniqueSort","getText","isXML","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","compilerCache","sortOrder","push_native","booleans","whitespace","characterEncoding","identifier","pseudos","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escapedWhitespace","high","String","fromCharCode","els","hasCompare","attachEvent","className","getById","getElementsByName","attrId","getAttributeNode","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","specified","duplicates","detectDuplicates","sortStable","selectors","createPseudo"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","forward","ofType","nodeIndex","useCache","lastChild","pseudo","idx","lang","elemLang","focus","hasFocus","tabIndex","enabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","soFar","preFilters","compiled","div1","unique","isXMLDoc","rneedsContext","rsingleTag","is","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","until","truncate","targets","closest","pos","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","Callbacks","memory","fired","firing","firingStart","firingLength","firingIndex","stopOnFalse","disable","lock","locked","fireWith","tuples","fns","newDefer","returned","notify","stateString","subordinate","progressValues","progressContexts","resolveContexts","resolveValues","updateFunc","readyList","readyWait","holdReady","hold","wait","triggerHandler","readyState","chainable","emptyGet","bulk","acceptData","owner","uid","accepts","descriptor","unlock","defineProperties","stored","camel","discard","_removeData","camelKey","dequeue","startLength","clearQueue","defer","pnum","checkClone","cloneNode","noCloneChecked","focusinBubbles","rkeyEvent","rmouseEvent","rfocusMorph","rtypenamespace","handleObjIn","eventHandle","handleObj","namespaces","origType","elemData","triggered","delegateType","bindType","delegateCount","mappedTypes","origCount","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","namespace_re","noBubble","parentWindow","isPropagationStopped","preventDefault","isDefaultPrevented","_default","fix","handlerQueue","delegateTarget","preDispatch","currentTarget","isImmediatePropagationStopped","stopPropagation","postDispatch","sel","fixHooks","keyHooks","charCode","mouseHooks","eventDoc","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","load","blur","beforeunload","returnValue","simulate","isSimulated","defaultPrevented","timeStamp","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","related","relatedTarget","attaches","origFn","rxhtmlTag","rtagName","rhtml","rnoInnerhtml","rchecked","rscriptType","rcleanScript","wrapMap","col","colgroup","caption","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","scripts","selection","wrap","prepend","keepData","replaceWith","replaceChild","hasScripts","iNoClone","_evalUrl","prependTo","insertAfter","replaceAll","getComputedStyle","computePixelPositionAndBoxSizingReliable","divStyle","pixelPositionVal","boxSizingReliableVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginRight","marginDiv","marginRight","swap","rdisplayswap","rrelNum","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","cssNumber","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","margin","padding","border","expanded","unit","propHooks","eased","step","linear","swing","cos","PI","timerId","rfxnum","rrun","*","scale","maxIterations","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","time","timeout","checkOn","optSelected","optDisabled","radioValue","nodeHook","boolHook","nType","attrHooks","attrNames","propFix","getter","rfocusable","removeProp","for","notxml","rclass","classes","clazz","finalValue","proceed","toggleClass","stateVal","classNames","hasClass","rreturn","valHooks","optionSet","hover","fnOver","fnOut","nonce","rquery","JSON","parse","parseXML","DOMParser","parseFromString","ajaxLocParts","ajaxLocation","rhash","rts","rheaders","rlocalProtocol","rnoContent","rprotocol","rurl","prefilters","allTypes","active","lastModified","etag","isLocal","processData","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","nativeStatusText","headers","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","lname","overrideMimeType","finalText","crossDomain","hasContent","beforeSend","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","unwrap","visible","r20","rCRLF","rsubmitterTypes","rsubmittable","serializeArray","xhr","XMLHttpRequest","xhrId","xhrCallbacks","xhrSuccessStatus",1223,"xhrSupported","ActiveXObject","cors","open","username","xhrFields","onload","onerror","responseText","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","keepScripts","parsed","_load","animated","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","win","box","getBoundingClientRect","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","defaultExtra","size","andSelf","_jQuery","_$","noConflict","canExpando","nodeMap","textNodeMap","_id","textNodeID","itemsInChildListTree","newNodes","unregisterChildren","oldListLength","nestList","childNodeList","unregistered","unregisteredCallback","makeMap","alphaNumericHU","attributeNames","spaceEQspace","dblQuote2dblQuote","quote2quote","attributeEqAndValue","matchStash","stash","endTag","txtBreak","block","inline","closeSelf","fillAttrs","HTMLParser","parseStartTag","rest","unary","parseEndTag","parseMustache","chars","comment","search","dblQuote","singleQuote"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"can.bacon\"] = factory();\n\telse\n\t\troot[\"can.bacon\"] = factory();\n})(this, function() {\nreturn ","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"can.bacon\"] = factory();\n\telse\n\t\troot[\"can.bacon\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\t\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/ \t\t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/******/ \t\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/ \t\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/ \t\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/ \t\n/******/ \t\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __moduleName = \"src/index\";\n\t__webpack_require__(1);\n\t__webpack_require__(2);\n\t\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __moduleName = \"src/can\";\n\tvar bacon = __webpack_require__(3);\n\tvar can = __webpack_require__(4);\n\tvar oldBind = can.bind;\n\tcan.bind = function(ev, cb) {\n\t  if (this instanceof bacon.Observable) {\n\t    return this;\n\t  } else if (cb) {\n\t    return oldBind.apply(this, arguments);\n\t  } else {\n\t    return toBaconObservable(this, ev);\n\t  }\n\t};\n\tvar oldDelegate = can.delegate;\n\tcan.delegate = function(selector, ev, cb) {\n\t  if (this instanceof bacon.Observable) {\n\t    return this;\n\t  } else if (cb) {\n\t    return oldDelegate.apply(this, arguments);\n\t  } else {\n\t    return toBaconObservable(this, ev, selector);\n\t  }\n\t};\n\tvar oldBindAndSetup = can.bindAndSetup;\n\tcan.bindAndSetup = function(ev, cb) {\n\t  return cb ? oldBindAndSetup.apply(this, arguments) : toBaconObservable(this, ev);\n\t};\n\tvar oldControlOn = can.Control.prototype.on;\n\tcan.Control.prototype.on = function(ctx, selector, eventName, func) {\n\t  if (!ctx) {\n\t    return oldControlOn.apply(this, arguments);\n\t  }\n\t  if (ctx instanceof bacon.Observable) {\n\t    return ctx.takeUntil(can.bind.call(this, \"destroyed\"));\n\t  }\n\t  if (typeof ctx === \"string\") {\n\t    func = eventName;\n\t    eventName = selector;\n\t    selector = ctx;\n\t    ctx = this.element;\n\t  }\n\t  if (func == null) {\n\t    func = eventName;\n\t    eventName = selector;\n\t    selector = null;\n\t  }\n\t  if (func == null) {\n\t    return toBaconObservable(ctx, eventName, selector).takeUntil(can.bind.call(this, \"destroyed\"));\n\t  } else {\n\t    return oldControlOn.apply(this, arguments);\n\t  }\n\t};\n\tcan.Map.prototype.bind = can.bindAndSetup;\n\tcan.Map.prototype.getEventValueForBacon = function(args) {\n\t  switch (args[0] && args[0].type) {\n\t    case \"change\":\n\t      return new MapChangeEvent(args);\n\t    default:\n\t      var target = args[0].target;\n\t      if (target._data && target._data.hasOwnProperty(args[0].type)) {\n\t        return args[1];\n\t      } else {\n\t        return args;\n\t      }\n\t  }\n\t};\n\tfunction MapChangeEvent(args) {\n\t  this.event = args[0];\n\t  this.which = args[1];\n\t  this.how = args[2];\n\t  this.value = args[3];\n\t  this.oldValue = args[4];\n\t}\n\tcan.List.prototype.getEventValueForBacon = function(args) {\n\t  switch (args[0] && args[0].type) {\n\t    case \"change\":\n\t    case \"set\":\n\t    case \"add\":\n\t    case \"remove\":\n\t      return new ListChangeEvent(args);\n\t    case \"length\":\n\t      return args[1];\n\t    default:\n\t      var target = args[0].target;\n\t      var _type = args[0].type;\n\t      if (target.hasOwnProperty(args[0].type)) {\n\t        return isNaN(_type) ? args[1] : args[1][0];\n\t      } else {\n\t        return args;\n\t      }\n\t  }\n\t};\n\tfunction ListChangeEvent(args) {\n\t  this.event = args[0];\n\t  switch (this.event.type) {\n\t    case \"change\":\n\t      this.index = isNaN(args[1]) ? args[1] : +args[1];\n\t      this.how = args[2];\n\t      this.value = this.how === \"remove\" ? args[4] : args[3];\n\t      this.oldValue = args[4];\n\t      break;\n\t    case \"set\":\n\t    case \"add\":\n\t    case \"remove\":\n\t      this.index = args[2];\n\t      this.how = this.event.type;\n\t      this.value = args[1];\n\t      this.oldValue = null;\n\t      break;\n\t    default:\n\t      throw new Error(\"Unexpected can.List event: \" + this.event.type);\n\t  }\n\t}\n\tfunction toBaconObservable(ctx, ev, selector) {\n\t  ev = ev == null ? \"change\" : ev;\n\t  var stream = bacon.fromBinder(function(sink) {\n\t    function cb() {\n\t      sink(new bacon.Next(chooseEventData(ctx, arguments)));\n\t    }\n\t    selector ? can.delegate.call(ctx, selector, ev, cb) : can.bind.call(ctx, ev, cb);\n\t    return (function() {\n\t      return selector ? can.undelegate.call(ctx, selector, ev, cb) : can.unbind.call(ctx, ev, cb);\n\t    });\n\t  });\n\t  if (ctx.isComputed) {\n\t    return stream.toProperty(ctx());\n\t  } else {\n\t    return stream;\n\t  }\n\t}\n\t;\n\tfunction chooseEventData(ctx, eventArgs, evName) {\n\t  if (ctx.isComputed) {\n\t    return eventArgs[1];\n\t  } else if (ctx.getEventValueForBacon) {\n\t    return ctx.getEventValueForBacon(eventArgs, evName);\n\t  } else {\n\t    return eventArgs[0];\n\t  }\n\t}\n\t\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __moduleName = \"src/bacon\";\n\tvar bacon = __webpack_require__(3);\n\tvar can = __webpack_require__(4);\n\tbacon.Observable.prototype.toCanCompute = function() {\n\t  var compute = arguments[0] !== (void 0) ? arguments[0] : can.compute();\n\t  this.onValue(compute);\n\t  return compute;\n\t};\n\tbacon.Observable.prototype.toCanMap = function() {\n\t  var map = arguments[0] !== (void 0) ? arguments[0] : new can.Map();\n\t  this.onValue((function(val) {\n\t    return syncAsMap(map, val);\n\t  }));\n\t  return map;\n\t};\n\tfunction syncAsMap(map, val) {\n\t  var key = val.hasOwnProperty(\"which\") ? val.which : val.index;\n\t  switch (val.how) {\n\t    case \"set\":\n\t      map.attr(key, val.value);\n\t      break;\n\t    case \"add\":\n\t      map.attr(key, val.value);\n\t      break;\n\t    case \"remove\":\n\t      map.removeAttr(key);\n\t      break;\n\t    case \"replace\":\n\t      map.attr(val.value, val.removeOthers);\n\t      break;\n\t    case undefined:\n\t      console.warn(\"Missing event type on change event: \", val);\n\t      map.attr(val);\n\t      break;\n\t    default:\n\t      console.warn(\"Unexpected event type: \", val.how);\n\t      map.attr(val);\n\t  }\n\t}\n\tbacon.Observable.prototype.toCanList = function() {\n\t  var list = arguments[0] !== (void 0) ? arguments[0] : new can.List();\n\t  this.onValue((function(val) {\n\t    return syncAsList(list, val);\n\t  }));\n\t  return list;\n\t};\n\tfunction syncAsList(list, val) {\n\t  var isMapEvent = val.hasOwnProperty(\"which\") || isNaN(val.index);\n\t  if (isMapEvent && val.how !== \"replace\") {\n\t    syncAsMap(list, val);\n\t  } else {\n\t    switch (val.how) {\n\t      case \"set\":\n\t        list.attr(val.index, val.value);\n\t        break;\n\t      case \"add\":\n\t        list.splice.apply(list, [val.index, 0].concat(val.value));\n\t        break;\n\t      case \"remove\":\n\t        list.splice(Math.min(val.index, !list.length ? 0 : list.length - 1), val.value ? val.value.length : 1);\n\t        break;\n\t      case \"replace\":\n\t        if (val.hasOwnProperty(\"removeOthers\")) {\n\t          list.attr(val.value, val.removeOthers);\n\t        } else {\n\t          list.replace(val.value);\n\t        }\n\t        break;\n\t      case undefined:\n\t        console.warn(\"Missing event type on change event: \", val);\n\t        list.replace(val.value);\n\t        break;\n\t      default:\n\t        console.warn(\"Unexpected event type: \", val.how);\n\t        list.replace(val.value);\n\t    }\n\t  }\n\t}\n\t\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {module.exports = function() {\n\t  \"use strict\";\n\t  var __moduleName = \"bower_components/bacon/dist/Bacon\";\n\t  (function() {\n\t    var Bacon,\n\t        BufferingSource,\n\t        Bus,\n\t        CompositeUnsubscribe,\n\t        ConsumingSource,\n\t        Desc,\n\t        Dispatcher,\n\t        End,\n\t        Error,\n\t        Event,\n\t        EventStream,\n\t        Initial,\n\t        Next,\n\t        None,\n\t        Observable,\n\t        Property,\n\t        PropertyDispatcher,\n\t        Some,\n\t        Source,\n\t        UpdateBarrier,\n\t        addPropertyInitValueToStream,\n\t        assert,\n\t        assertArray,\n\t        assertEventStream,\n\t        assertFunction,\n\t        assertNoArguments,\n\t        assertString,\n\t        cloneArray,\n\t        compositeUnsubscribe,\n\t        containsDuplicateDeps,\n\t        convertArgsToFunction,\n\t        describe,\n\t        end,\n\t        eventIdCounter,\n\t        flatMap_,\n\t        former,\n\t        idCounter,\n\t        initial,\n\t        isArray,\n\t        isFieldKey,\n\t        isFunction,\n\t        isObservable,\n\t        latterF,\n\t        liftCallback,\n\t        makeFunction,\n\t        makeFunctionArgs,\n\t        makeFunction_,\n\t        makeObservable,\n\t        makeSpawner,\n\t        next,\n\t        nop,\n\t        partiallyApplied,\n\t        recursionDepth,\n\t        registerObs,\n\t        spys,\n\t        toCombinator,\n\t        toEvent,\n\t        toFieldExtractor,\n\t        toFieldKey,\n\t        toOption,\n\t        toSimpleExtractor,\n\t        withDescription,\n\t        withMethodCallSupport,\n\t        _,\n\t        _ref,\n\t        __slice = [].slice,\n\t        __hasProp = {}.hasOwnProperty,\n\t        __extends = function(child, parent) {\n\t          for (var key in parent) {\n\t            if (__hasProp.call(parent, key))\n\t              child[key] = parent[key];\n\t          }\n\t          function ctor() {\n\t            this.constructor = child;\n\t          }\n\t          ctor.prototype = parent.prototype;\n\t          child.prototype = new ctor();\n\t          child.__super__ = parent.prototype;\n\t          return child;\n\t        },\n\t        __bind = function(fn, me) {\n\t          return function() {\n\t            return fn.apply(me, arguments);\n\t          };\n\t        };\n\t    Bacon = {toString: function() {\n\t        return \"Bacon\";\n\t      }};\n\t    Bacon.version = '0.7.11';\n\t    Bacon.fromBinder = function(binder, eventTransformer) {\n\t      if (eventTransformer == null) {\n\t        eventTransformer = _.id;\n\t      }\n\t      return new EventStream(describe(Bacon, \"fromBinder\", binder, eventTransformer), function(sink) {\n\t        var unbinder;\n\t        return unbinder = binder(function() {\n\t          var args,\n\t              event,\n\t              reply,\n\t              value,\n\t              _i,\n\t              _len;\n\t          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t          value = eventTransformer.apply(null, args);\n\t          if (!(isArray(value) && _.last(value) instanceof Event)) {\n\t            value = [value];\n\t          }\n\t          reply = Bacon.more;\n\t          for (_i = 0, _len = value.length; _i < _len; _i++) {\n\t            event = value[_i];\n\t            reply = sink(event = toEvent(event));\n\t            if (reply === Bacon.noMore || event.isEnd()) {\n\t              if (unbinder != null) {\n\t                unbinder();\n\t              } else {\n\t                Bacon.scheduler.setTimeout((function() {\n\t                  return unbinder();\n\t                }), 0);\n\t              }\n\t              return reply;\n\t            }\n\t          }\n\t          return reply;\n\t        });\n\t      });\n\t    };\n\t    Bacon.$ = {asEventStream: function(eventName, selector, eventTransformer) {\n\t        var _ref;\n\t        if (isFunction(selector)) {\n\t          _ref = [selector, null], eventTransformer = _ref[0], selector = _ref[1];\n\t        }\n\t        return withDescription(this.selector || this, \"asEventStream\", eventName, Bacon.fromBinder((function(_this) {\n\t          return function(handler) {\n\t            _this.on(eventName, selector, handler);\n\t            return function() {\n\t              return _this.off(eventName, selector, handler);\n\t            };\n\t          };\n\t        })(this), eventTransformer));\n\t      }};\n\t    if ((_ref = typeof jQuery !== \"undefined\" && jQuery !== null ? jQuery : typeof Zepto !== \"undefined\" && Zepto !== null ? Zepto : null) != null) {\n\t      _ref.fn.asEventStream = Bacon.$.asEventStream;\n\t    }\n\t    Bacon.fromEventTarget = function(target, eventName, eventTransformer) {\n\t      var sub,\n\t          unsub,\n\t          _ref1,\n\t          _ref2,\n\t          _ref3,\n\t          _ref4;\n\t      sub = (_ref1 = target.addEventListener) != null ? _ref1 : (_ref2 = target.addListener) != null ? _ref2 : target.bind;\n\t      unsub = (_ref3 = target.removeEventListener) != null ? _ref3 : (_ref4 = target.removeListener) != null ? _ref4 : target.unbind;\n\t      return withDescription(Bacon, \"fromEventTarget\", target, eventName, Bacon.fromBinder(function(handler) {\n\t        sub.call(target, eventName, handler);\n\t        return function() {\n\t          return unsub.call(target, eventName, handler);\n\t        };\n\t      }, eventTransformer));\n\t    };\n\t    Bacon.fromPromise = function(promise, abort) {\n\t      return withDescription(Bacon, \"fromPromise\", promise, Bacon.fromBinder(function(handler) {\n\t        promise.then(handler, function(e) {\n\t          return handler(new Error(e));\n\t        });\n\t        return function() {\n\t          if (abort) {\n\t            return typeof promise.abort === \"function\" ? promise.abort() : void 0;\n\t          }\n\t        };\n\t      }, (function(value) {\n\t        return [value, end()];\n\t      })));\n\t    };\n\t    Bacon.noMore = [\"<no-more>\"];\n\t    Bacon.more = [\"<more>\"];\n\t    Bacon.later = function(delay, value) {\n\t      return withDescription(Bacon, \"later\", delay, value, Bacon.sequentially(delay, [value]));\n\t    };\n\t    Bacon.sequentially = function(delay, values) {\n\t      var index;\n\t      index = 0;\n\t      return withDescription(Bacon, \"sequentially\", delay, values, Bacon.fromPoll(delay, function() {\n\t        var value;\n\t        value = values[index++];\n\t        if (index < values.length) {\n\t          return value;\n\t        } else if (index === values.length) {\n\t          return [value, end()];\n\t        } else {\n\t          return end();\n\t        }\n\t      }));\n\t    };\n\t    Bacon.repeatedly = function(delay, values) {\n\t      var index;\n\t      index = 0;\n\t      return withDescription(Bacon, \"repeatedly\", delay, values, Bacon.fromPoll(delay, function() {\n\t        return values[index++ % values.length];\n\t      }));\n\t    };\n\t    Bacon.spy = function(spy) {\n\t      return spys.push(spy);\n\t    };\n\t    spys = [];\n\t    registerObs = function(obs) {\n\t      var spy,\n\t          _i,\n\t          _len,\n\t          _results;\n\t      if (spys.length) {\n\t        if (!registerObs.running) {\n\t          try {\n\t            registerObs.running = true;\n\t            _results = [];\n\t            for (_i = 0, _len = spys.length; _i < _len; _i++) {\n\t              spy = spys[_i];\n\t              _results.push(spy(obs));\n\t            }\n\t            return _results;\n\t          } finally {\n\t            delete registerObs.running;\n\t          }\n\t        }\n\t      }\n\t    };\n\t    withMethodCallSupport = function(wrapped) {\n\t      return function() {\n\t        var args,\n\t            context,\n\t            f,\n\t            methodName;\n\t        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t        if (typeof f === \"object\" && args.length) {\n\t          context = f;\n\t          methodName = args[0];\n\t          f = function() {\n\t            return context[methodName].apply(context, arguments);\n\t          };\n\t          args = args.slice(1);\n\t        }\n\t        return wrapped.apply(null, [f].concat(__slice.call(args)));\n\t      };\n\t    };\n\t    liftCallback = function(desc, wrapped) {\n\t      return withMethodCallSupport(function() {\n\t        var args,\n\t            f,\n\t            stream;\n\t        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t        stream = partiallyApplied(wrapped, [function(values, callback) {\n\t          return f.apply(null, __slice.call(values).concat([callback]));\n\t        }]);\n\t        return withDescription.apply(null, [Bacon, desc, f].concat(__slice.call(args), [Bacon.combineAsArray(args).flatMap(stream)]));\n\t      });\n\t    };\n\t    Bacon.fromCallback = liftCallback(\"fromCallback\", function() {\n\t      var args,\n\t          f;\n\t      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t      return Bacon.fromBinder(function(handler) {\n\t        makeFunction(f, args)(handler);\n\t        return nop;\n\t      }, (function(value) {\n\t        return [value, end()];\n\t      }));\n\t    });\n\t    Bacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function() {\n\t      var args,\n\t          f;\n\t      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t      return Bacon.fromBinder(function(handler) {\n\t        makeFunction(f, args)(handler);\n\t        return nop;\n\t      }, function(error, value) {\n\t        if (error) {\n\t          return [new Error(error), end()];\n\t        }\n\t        return [value, end()];\n\t      });\n\t    });\n\t    Bacon.fromPoll = function(delay, poll) {\n\t      return withDescription(Bacon, \"fromPoll\", delay, poll, Bacon.fromBinder((function(handler) {\n\t        var id;\n\t        id = Bacon.scheduler.setInterval(handler, delay);\n\t        return function() {\n\t          return Bacon.scheduler.clearInterval(id);\n\t        };\n\t      }), poll));\n\t    };\n\t    Bacon.interval = function(delay, value) {\n\t      if (value == null) {\n\t        value = {};\n\t      }\n\t      return withDescription(Bacon, \"interval\", delay, value, Bacon.fromPoll(delay, function() {\n\t        return next(value);\n\t      }));\n\t    };\n\t    Bacon.constant = function(value) {\n\t      return new Property(describe(Bacon, \"constant\", value), function(sink) {\n\t        sink(initial(value));\n\t        sink(end());\n\t        return nop;\n\t      });\n\t    };\n\t    Bacon.never = function() {\n\t      return withDescription(Bacon, \"never\", Bacon.fromArray([]));\n\t    };\n\t    Bacon.once = function(value) {\n\t      return withDescription(Bacon, \"once\", value, Bacon.fromArray([value]));\n\t    };\n\t    Bacon.fromArray = function(values) {\n\t      assertArray(values);\n\t      values = cloneArray(values);\n\t      return new EventStream(describe(Bacon, \"fromArray\", values), function(sink) {\n\t        var send,\n\t            unsubd;\n\t        unsubd = false;\n\t        send = function() {\n\t          var reply,\n\t              value;\n\t          if (_.empty(values)) {\n\t            return sink(end());\n\t          } else {\n\t            value = values.splice(0, 1)[0];\n\t            reply = sink(toEvent(value));\n\t            if ((reply !== Bacon.noMore) && !unsubd) {\n\t              return send();\n\t            }\n\t          }\n\t        };\n\t        send();\n\t        return function() {\n\t          return unsubd = true;\n\t        };\n\t      });\n\t    };\n\t    Bacon.mergeAll = function() {\n\t      var streams;\n\t      streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t      if (isArray(streams[0])) {\n\t        streams = streams[0];\n\t      }\n\t      return withDescription.apply(null, [Bacon, \"mergeAll\"].concat(__slice.call(streams), [_.fold(streams, Bacon.never(), (function(a, b) {\n\t        return a.merge(b);\n\t      }))]));\n\t    };\n\t    Bacon.zipAsArray = function() {\n\t      var streams;\n\t      streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t      if (isArray(streams[0])) {\n\t        streams = streams[0];\n\t      }\n\t      return withDescription.apply(null, [Bacon, \"zipAsArray\"].concat(__slice.call(streams), [Bacon.zipWith(streams, function() {\n\t        var xs;\n\t        xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t        return xs;\n\t      })]));\n\t    };\n\t    Bacon.zipWith = function() {\n\t      var f,\n\t          streams,\n\t          _ref1;\n\t      f = arguments[0], streams = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t      if (!isFunction(f)) {\n\t        _ref1 = [f, streams[0]], streams = _ref1[0], f = _ref1[1];\n\t      }\n\t      streams = _.map((function(s) {\n\t        return s.toEventStream();\n\t      }), streams);\n\t      return withDescription.apply(null, [Bacon, \"zipWith\", f].concat(__slice.call(streams), [Bacon.when(streams, f)]));\n\t    };\n\t    Bacon.groupSimultaneous = function() {\n\t      var s,\n\t          sources,\n\t          streams;\n\t      streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t      if (streams.length === 1 && isArray(streams[0])) {\n\t        streams = streams[0];\n\t      }\n\t      sources = (function() {\n\t        var _i,\n\t            _len,\n\t            _results;\n\t        _results = [];\n\t        for (_i = 0, _len = streams.length; _i < _len; _i++) {\n\t          s = streams[_i];\n\t          _results.push(new BufferingSource(s));\n\t        }\n\t        return _results;\n\t      })();\n\t      return withDescription.apply(null, [Bacon, \"groupSimultaneous\"].concat(__slice.call(streams), [Bacon.when(sources, (function() {\n\t        var xs;\n\t        xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t        return xs;\n\t      }))]));\n\t    };\n\t    Bacon.combineAsArray = function() {\n\t      var index,\n\t          s,\n\t          sources,\n\t          stream,\n\t          streams,\n\t          _i,\n\t          _len;\n\t      streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t      if (streams.length === 1 && isArray(streams[0])) {\n\t        streams = streams[0];\n\t      }\n\t      for (index = _i = 0, _len = streams.length; _i < _len; index = ++_i) {\n\t        stream = streams[index];\n\t        if (!(isObservable(stream))) {\n\t          streams[index] = Bacon.constant(stream);\n\t        }\n\t      }\n\t      if (streams.length) {\n\t        sources = (function() {\n\t          var _j,\n\t              _len1,\n\t              _results;\n\t          _results = [];\n\t          for (_j = 0, _len1 = streams.length; _j < _len1; _j++) {\n\t            s = streams[_j];\n\t            _results.push(new Source(s, true, s.subscribeInternal));\n\t          }\n\t          return _results;\n\t        })();\n\t        return withDescription.apply(null, [Bacon, \"combineAsArray\"].concat(__slice.call(streams), [Bacon.when(sources, (function() {\n\t          var xs;\n\t          xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t          return xs;\n\t        })).toProperty()]));\n\t      } else {\n\t        return Bacon.constant([]);\n\t      }\n\t    };\n\t    Bacon.onValues = function() {\n\t      var f,\n\t          streams,\n\t          _i;\n\t      streams = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), f = arguments[_i++];\n\t      return Bacon.combineAsArray(streams).onValues(f);\n\t    };\n\t    Bacon.combineWith = function() {\n\t      var f,\n\t          streams;\n\t      f = arguments[0], streams = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t      return withDescription.apply(null, [Bacon, \"combineWith\", f].concat(__slice.call(streams), [Bacon.combineAsArray(streams).map(function(values) {\n\t        return f.apply(null, values);\n\t      })]));\n\t    };\n\t    Bacon.combineTemplate = function(template) {\n\t      var applyStreamValue,\n\t          combinator,\n\t          compile,\n\t          compileTemplate,\n\t          constantValue,\n\t          current,\n\t          funcs,\n\t          mkContext,\n\t          setValue,\n\t          streams;\n\t      funcs = [];\n\t      streams = [];\n\t      current = function(ctxStack) {\n\t        return ctxStack[ctxStack.length - 1];\n\t      };\n\t      setValue = function(ctxStack, key, value) {\n\t        return current(ctxStack)[key] = value;\n\t      };\n\t      applyStreamValue = function(key, index) {\n\t        return function(ctxStack, values) {\n\t          return setValue(ctxStack, key, values[index]);\n\t        };\n\t      };\n\t      constantValue = function(key, value) {\n\t        return function(ctxStack) {\n\t          return setValue(ctxStack, key, value);\n\t        };\n\t      };\n\t      mkContext = function(template) {\n\t        if (isArray(template)) {\n\t          return [];\n\t        } else {\n\t          return {};\n\t        }\n\t      };\n\t      compile = function(key, value) {\n\t        var popContext,\n\t            pushContext;\n\t        if (isObservable(value)) {\n\t          streams.push(value);\n\t          return funcs.push(applyStreamValue(key, streams.length - 1));\n\t        } else if (value === Object(value) && typeof value !== \"function\" && !(value instanceof RegExp) && !(value instanceof Date)) {\n\t          pushContext = function(key) {\n\t            return function(ctxStack) {\n\t              var newContext;\n\t              newContext = mkContext(value);\n\t              setValue(ctxStack, key, newContext);\n\t              return ctxStack.push(newContext);\n\t            };\n\t          };\n\t          popContext = function(ctxStack) {\n\t            return ctxStack.pop();\n\t          };\n\t          funcs.push(pushContext(key));\n\t          compileTemplate(value);\n\t          return funcs.push(popContext);\n\t        } else {\n\t          return funcs.push(constantValue(key, value));\n\t        }\n\t      };\n\t      compileTemplate = function(template) {\n\t        return _.each(template, compile);\n\t      };\n\t      compileTemplate(template);\n\t      combinator = function(values) {\n\t        var ctxStack,\n\t            f,\n\t            rootContext,\n\t            _i,\n\t            _len;\n\t        rootContext = mkContext(template);\n\t        ctxStack = [rootContext];\n\t        for (_i = 0, _len = funcs.length; _i < _len; _i++) {\n\t          f = funcs[_i];\n\t          f(ctxStack, values);\n\t        }\n\t        return rootContext;\n\t      };\n\t      return withDescription(Bacon, \"combineTemplate\", template, Bacon.combineAsArray(streams).map(combinator));\n\t    };\n\t    eventIdCounter = 0;\n\t    Event = (function() {\n\t      function Event() {\n\t        this.id = ++eventIdCounter;\n\t      }\n\t      Event.prototype.isEvent = function() {\n\t        return true;\n\t      };\n\t      Event.prototype.isEnd = function() {\n\t        return false;\n\t      };\n\t      Event.prototype.isInitial = function() {\n\t        return false;\n\t      };\n\t      Event.prototype.isNext = function() {\n\t        return false;\n\t      };\n\t      Event.prototype.isError = function() {\n\t        return false;\n\t      };\n\t      Event.prototype.hasValue = function() {\n\t        return false;\n\t      };\n\t      Event.prototype.filter = function() {\n\t        return true;\n\t      };\n\t      Event.prototype.inspect = function() {\n\t        return this.toString();\n\t      };\n\t      Event.prototype.log = function() {\n\t        return this.toString();\n\t      };\n\t      return Event;\n\t    })();\n\t    Next = (function(_super) {\n\t      __extends(Next, _super);\n\t      function Next(valueF) {\n\t        Next.__super__.constructor.call(this);\n\t        if (isFunction(valueF)) {\n\t          this.value = _.cached(valueF);\n\t        } else {\n\t          this.value = _.always(valueF);\n\t        }\n\t      }\n\t      Next.prototype.isNext = function() {\n\t        return true;\n\t      };\n\t      Next.prototype.hasValue = function() {\n\t        return true;\n\t      };\n\t      Next.prototype.fmap = function(f) {\n\t        var value;\n\t        value = this.value;\n\t        return this.apply(function() {\n\t          return f(value());\n\t        });\n\t      };\n\t      Next.prototype.apply = function(value) {\n\t        return new Next(value);\n\t      };\n\t      Next.prototype.filter = function(f) {\n\t        return f(this.value());\n\t      };\n\t      Next.prototype.toString = function() {\n\t        return _.toString(this.value());\n\t      };\n\t      Next.prototype.log = function() {\n\t        return this.value();\n\t      };\n\t      return Next;\n\t    })(Event);\n\t    Initial = (function(_super) {\n\t      __extends(Initial, _super);\n\t      function Initial() {\n\t        return Initial.__super__.constructor.apply(this, arguments);\n\t      }\n\t      Initial.prototype.isInitial = function() {\n\t        return true;\n\t      };\n\t      Initial.prototype.isNext = function() {\n\t        return false;\n\t      };\n\t      Initial.prototype.apply = function(value) {\n\t        return new Initial(value);\n\t      };\n\t      Initial.prototype.toNext = function() {\n\t        return new Next(this.value);\n\t      };\n\t      return Initial;\n\t    })(Next);\n\t    End = (function(_super) {\n\t      __extends(End, _super);\n\t      function End() {\n\t        return End.__super__.constructor.apply(this, arguments);\n\t      }\n\t      End.prototype.isEnd = function() {\n\t        return true;\n\t      };\n\t      End.prototype.fmap = function() {\n\t        return this;\n\t      };\n\t      End.prototype.apply = function() {\n\t        return this;\n\t      };\n\t      End.prototype.toString = function() {\n\t        return \"<end>\";\n\t      };\n\t      return End;\n\t    })(Event);\n\t    Error = (function(_super) {\n\t      __extends(Error, _super);\n\t      function Error(error) {\n\t        this.error = error;\n\t      }\n\t      Error.prototype.isError = function() {\n\t        return true;\n\t      };\n\t      Error.prototype.fmap = function() {\n\t        return this;\n\t      };\n\t      Error.prototype.apply = function() {\n\t        return this;\n\t      };\n\t      Error.prototype.toString = function() {\n\t        return \"<error> \" + _.toString(this.error);\n\t      };\n\t      return Error;\n\t    })(Event);\n\t    idCounter = 0;\n\t    Observable = (function() {\n\t      function Observable(desc) {\n\t        this.id = ++idCounter;\n\t        withDescription(desc, this);\n\t      }\n\t      Observable.prototype.onValue = function() {\n\t        var f;\n\t        f = makeFunctionArgs(arguments);\n\t        return this.subscribe(function(event) {\n\t          if (event.hasValue()) {\n\t            return f(event.value());\n\t          }\n\t        });\n\t      };\n\t      Observable.prototype.onValues = function(f) {\n\t        return this.onValue(function(args) {\n\t          return f.apply(null, args);\n\t        });\n\t      };\n\t      Observable.prototype.onError = function() {\n\t        var f;\n\t        f = makeFunctionArgs(arguments);\n\t        return this.subscribe(function(event) {\n\t          if (event.isError()) {\n\t            return f(event.error);\n\t          }\n\t        });\n\t      };\n\t      Observable.prototype.onEnd = function() {\n\t        var f;\n\t        f = makeFunctionArgs(arguments);\n\t        return this.subscribe(function(event) {\n\t          if (event.isEnd()) {\n\t            return f();\n\t          }\n\t        });\n\t      };\n\t      Observable.prototype.errors = function() {\n\t        return withDescription(this, \"errors\", this.filter(function() {\n\t          return false;\n\t        }));\n\t      };\n\t      Observable.prototype.filter = function() {\n\t        var args,\n\t            f;\n\t        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t        return convertArgsToFunction(this, f, args, function(f) {\n\t          return withDescription(this, \"filter\", f, this.withHandler(function(event) {\n\t            if (event.filter(f)) {\n\t              return this.push(event);\n\t            } else {\n\t              return Bacon.more;\n\t            }\n\t          }));\n\t        });\n\t      };\n\t      Observable.prototype.takeWhile = function() {\n\t        var args,\n\t            f;\n\t        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t        return convertArgsToFunction(this, f, args, function(f) {\n\t          return withDescription(this, \"takeWhile\", f, this.withHandler(function(event) {\n\t            if (event.filter(f)) {\n\t              return this.push(event);\n\t            } else {\n\t              this.push(end());\n\t              return Bacon.noMore;\n\t            }\n\t          }));\n\t        });\n\t      };\n\t      Observable.prototype.endOnError = function() {\n\t        var args,\n\t            f;\n\t        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t        if (f == null) {\n\t          f = true;\n\t        }\n\t        return convertArgsToFunction(this, f, args, function(f) {\n\t          return withDescription(this, \"endOnError\", this.withHandler(function(event) {\n\t            if (event.isError() && f(event.error)) {\n\t              this.push(event);\n\t              return this.push(end());\n\t            } else {\n\t              return this.push(event);\n\t            }\n\t          }));\n\t        });\n\t      };\n\t      Observable.prototype.take = function(count) {\n\t        if (count <= 0) {\n\t          return Bacon.never();\n\t        }\n\t        return withDescription(this, \"take\", count, this.withHandler(function(event) {\n\t          if (!event.hasValue()) {\n\t            return this.push(event);\n\t          } else {\n\t            count--;\n\t            if (count > 0) {\n\t              return this.push(event);\n\t            } else {\n\t              if (count === 0) {\n\t                this.push(event);\n\t              }\n\t              this.push(end());\n\t              return Bacon.noMore;\n\t            }\n\t          }\n\t        }));\n\t      };\n\t      Observable.prototype.map = function() {\n\t        var args,\n\t            p;\n\t        p = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t        if (p instanceof Property) {\n\t          return p.sampledBy(this, former);\n\t        } else {\n\t          return convertArgsToFunction(this, p, args, function(f) {\n\t            return withDescription(this, \"map\", f, this.withHandler(function(event) {\n\t              return this.push(event.fmap(f));\n\t            }));\n\t          });\n\t        }\n\t      };\n\t      Observable.prototype.mapError = function() {\n\t        var f;\n\t        f = makeFunctionArgs(arguments);\n\t        return withDescription(this, \"mapError\", f, this.withHandler(function(event) {\n\t          if (event.isError()) {\n\t            return this.push(next(f(event.error)));\n\t          } else {\n\t            return this.push(event);\n\t          }\n\t        }));\n\t      };\n\t      Observable.prototype.mapEnd = function() {\n\t        var f;\n\t        f = makeFunctionArgs(arguments);\n\t        return withDescription(this, \"mapEnd\", f, this.withHandler(function(event) {\n\t          if (event.isEnd()) {\n\t            this.push(next(f(event)));\n\t            this.push(end());\n\t            return Bacon.noMore;\n\t          } else {\n\t            return this.push(event);\n\t          }\n\t        }));\n\t      };\n\t      Observable.prototype.doAction = function() {\n\t        var f;\n\t        f = makeFunctionArgs(arguments);\n\t        return withDescription(this, \"doAction\", f, this.withHandler(function(event) {\n\t          if (event.hasValue()) {\n\t            f(event.value());\n\t          }\n\t          return this.push(event);\n\t        }));\n\t      };\n\t      Observable.prototype.skip = function(count) {\n\t        return withDescription(this, \"skip\", count, this.withHandler(function(event) {\n\t          if (!event.hasValue()) {\n\t            return this.push(event);\n\t          } else if (count > 0) {\n\t            count--;\n\t            return Bacon.more;\n\t          } else {\n\t            return this.push(event);\n\t          }\n\t        }));\n\t      };\n\t      Observable.prototype.skipDuplicates = function(isEqual) {\n\t        if (isEqual == null) {\n\t          isEqual = function(a, b) {\n\t            return a === b;\n\t          };\n\t        }\n\t        return withDescription(this, \"skipDuplicates\", this.withStateMachine(None, function(prev, event) {\n\t          if (!event.hasValue()) {\n\t            return [prev, [event]];\n\t          } else if (event.isInitial() || prev === None || !isEqual(prev.get(), event.value())) {\n\t            return [new Some(event.value()), [event]];\n\t          } else {\n\t            return [prev, []];\n\t          }\n\t        }));\n\t      };\n\t      Observable.prototype.skipErrors = function() {\n\t        return withDescription(this, \"skipErrors\", this.withHandler(function(event) {\n\t          if (event.isError()) {\n\t            return Bacon.more;\n\t          } else {\n\t            return this.push(event);\n\t          }\n\t        }));\n\t      };\n\t      Observable.prototype.withStateMachine = function(initState, f) {\n\t        var state;\n\t        state = initState;\n\t        return withDescription(this, \"withStateMachine\", initState, f, this.withHandler(function(event) {\n\t          var fromF,\n\t              newState,\n\t              output,\n\t              outputs,\n\t              reply,\n\t              _i,\n\t              _len;\n\t          fromF = f(state, event);\n\t          newState = fromF[0], outputs = fromF[1];\n\t          state = newState;\n\t          reply = Bacon.more;\n\t          for (_i = 0, _len = outputs.length; _i < _len; _i++) {\n\t            output = outputs[_i];\n\t            reply = this.push(output);\n\t            if (reply === Bacon.noMore) {\n\t              return reply;\n\t            }\n\t          }\n\t          return reply;\n\t        }));\n\t      };\n\t      Observable.prototype.scan = function(seed, f, lazyF) {\n\t        var acc,\n\t            f_,\n\t            resultProperty,\n\t            subscribe;\n\t        f_ = toCombinator(f);\n\t        f = lazyF ? f_ : function(x, y) {\n\t          return f_(x(), y());\n\t        };\n\t        acc = toOption(seed).map(function(x) {\n\t          return _.always(x);\n\t        });\n\t        subscribe = (function(_this) {\n\t          return function(sink) {\n\t            var initSent,\n\t                reply,\n\t                sendInit,\n\t                unsub;\n\t            initSent = false;\n\t            unsub = nop;\n\t            reply = Bacon.more;\n\t            sendInit = function() {\n\t              if (!initSent) {\n\t                return acc.forEach(function(valueF) {\n\t                  initSent = true;\n\t                  reply = sink(new Initial(valueF));\n\t                  if (reply === Bacon.noMore) {\n\t                    unsub();\n\t                    return unsub = nop;\n\t                  }\n\t                });\n\t              }\n\t            };\n\t            unsub = _this.subscribeInternal(function(event) {\n\t              var next,\n\t                  prev;\n\t              if (event.hasValue()) {\n\t                if (initSent && event.isInitial()) {\n\t                  return Bacon.more;\n\t                } else {\n\t                  if (!event.isInitial()) {\n\t                    sendInit();\n\t                  }\n\t                  initSent = true;\n\t                  prev = acc.getOrElse(function() {\n\t                    return void 0;\n\t                  });\n\t                  next = _.cached(function() {\n\t                    return f(prev, event.value);\n\t                  });\n\t                  acc = new Some(next);\n\t                  return sink(event.apply(next));\n\t                }\n\t              } else {\n\t                if (event.isEnd()) {\n\t                  reply = sendInit();\n\t                }\n\t                if (reply !== Bacon.noMore) {\n\t                  return sink(event);\n\t                }\n\t              }\n\t            });\n\t            UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n\t            return unsub;\n\t          };\n\t        })(this);\n\t        return resultProperty = new Property(describe(this, \"scan\", seed, f), subscribe);\n\t      };\n\t      Observable.prototype.fold = function(seed, f) {\n\t        return withDescription(this, \"fold\", seed, f, this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n\t      };\n\t      Observable.prototype.zip = function(other, f) {\n\t        if (f == null) {\n\t          f = Array;\n\t        }\n\t        return withDescription(this, \"zip\", other, Bacon.zipWith([this, other], f));\n\t      };\n\t      Observable.prototype.diff = function(start, f) {\n\t        f = toCombinator(f);\n\t        return withDescription(this, \"diff\", start, f, this.scan([start], function(prevTuple, next) {\n\t          return [next, f(prevTuple[0], next)];\n\t        }).filter(function(tuple) {\n\t          return tuple.length === 2;\n\t        }).map(function(tuple) {\n\t          return tuple[1];\n\t        }));\n\t      };\n\t      Observable.prototype.flatMap = function() {\n\t        return flatMap_(this, makeSpawner(arguments));\n\t      };\n\t      Observable.prototype.flatMapFirst = function() {\n\t        return flatMap_(this, makeSpawner(arguments), true);\n\t      };\n\t      Observable.prototype.flatMapLatest = function() {\n\t        var f,\n\t            stream;\n\t        f = makeSpawner(arguments);\n\t        stream = this.toEventStream();\n\t        return withDescription(this, \"flatMapLatest\", f, stream.flatMap(function(value) {\n\t          return makeObservable(f(value)).takeUntil(stream);\n\t        }));\n\t      };\n\t      Observable.prototype.not = function() {\n\t        return withDescription(this, \"not\", this.map(function(x) {\n\t          return !x;\n\t        }));\n\t      };\n\t      Observable.prototype.log = function() {\n\t        var args;\n\t        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t        this.subscribe(function(event) {\n\t          return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log.apply(console, __slice.call(args).concat([event.log()])) : void 0 : void 0;\n\t        });\n\t        return this;\n\t      };\n\t      Observable.prototype.slidingWindow = function(n, minValues) {\n\t        if (minValues == null) {\n\t          minValues = 0;\n\t        }\n\t        return withDescription(this, \"slidingWindow\", n, minValues, this.scan([], (function(window, value) {\n\t          return window.concat([value]).slice(-n);\n\t        })).filter((function(values) {\n\t          return values.length >= minValues;\n\t        })));\n\t      };\n\t      Observable.prototype.combine = function(other, f) {\n\t        var combinator;\n\t        combinator = toCombinator(f);\n\t        return withDescription(this, \"combine\", other, f, Bacon.combineAsArray(this, other).map(function(values) {\n\t          return combinator(values[0], values[1]);\n\t        }));\n\t      };\n\t      Observable.prototype.decode = function(cases) {\n\t        return withDescription(this, \"decode\", cases, this.combine(Bacon.combineTemplate(cases), function(key, values) {\n\t          return values[key];\n\t        }));\n\t      };\n\t      Observable.prototype.awaiting = function(other) {\n\t        return withDescription(this, \"awaiting\", other, Bacon.groupSimultaneous(this, other).map(function(_arg) {\n\t          var myValues,\n\t              otherValues;\n\t          myValues = _arg[0], otherValues = _arg[1];\n\t          return otherValues.length === 0;\n\t        }).toProperty(false).skipDuplicates());\n\t      };\n\t      Observable.prototype.name = function(name) {\n\t        this.toString = function() {\n\t          return name;\n\t        };\n\t        return this;\n\t      };\n\t      Observable.prototype.withDescription = function() {\n\t        return describe.apply(null, arguments).apply(this);\n\t      };\n\t      return Observable;\n\t    })();\n\t    Observable.prototype.reduce = Observable.prototype.fold;\n\t    Observable.prototype.assign = Observable.prototype.onValue;\n\t    flatMap_ = function(root, f, firstOnly) {\n\t      return new EventStream(describe(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), f), function(sink) {\n\t        var checkEnd,\n\t            composite;\n\t        composite = new CompositeUnsubscribe();\n\t        checkEnd = function(unsub) {\n\t          unsub();\n\t          if (composite.empty()) {\n\t            return sink(end());\n\t          }\n\t        };\n\t        composite.add(function(__, unsubRoot) {\n\t          return root.subscribeInternal(function(event) {\n\t            var child;\n\t            if (event.isEnd()) {\n\t              return checkEnd(unsubRoot);\n\t            } else if (event.isError()) {\n\t              return sink(event);\n\t            } else if (firstOnly && composite.count() > 1) {\n\t              return Bacon.more;\n\t            } else {\n\t              if (composite.unsubscribed) {\n\t                return Bacon.noMore;\n\t              }\n\t              child = makeObservable(f(event.value()));\n\t              return composite.add(function(unsubAll, unsubMe) {\n\t                return child.subscribeInternal(function(event) {\n\t                  var reply;\n\t                  if (event.isEnd()) {\n\t                    checkEnd(unsubMe);\n\t                    return Bacon.noMore;\n\t                  } else {\n\t                    if (event instanceof Initial) {\n\t                      event = event.toNext();\n\t                    }\n\t                    reply = sink(event);\n\t                    if (reply === Bacon.noMore) {\n\t                      unsubAll();\n\t                    }\n\t                    return reply;\n\t                  }\n\t                });\n\t              });\n\t            }\n\t          });\n\t        });\n\t        return composite.unsubscribe;\n\t      });\n\t    };\n\t    EventStream = (function(_super) {\n\t      __extends(EventStream, _super);\n\t      function EventStream(desc, subscribe) {\n\t        var dispatcher;\n\t        if (isFunction(desc)) {\n\t          subscribe = desc;\n\t          desc = [];\n\t        }\n\t        EventStream.__super__.constructor.call(this, desc);\n\t        assertFunction(subscribe);\n\t        dispatcher = new Dispatcher(subscribe);\n\t        this.subscribeInternal = dispatcher.subscribe;\n\t        this.subscribe = UpdateBarrier.wrappedSubscribe(this);\n\t        this.hasSubscribers = dispatcher.hasSubscribers;\n\t        registerObs(this);\n\t      }\n\t      EventStream.prototype.delay = function(delay) {\n\t        return withDescription(this, \"delay\", delay, this.flatMap(function(value) {\n\t          return Bacon.later(delay, value);\n\t        }));\n\t      };\n\t      EventStream.prototype.debounce = function(delay) {\n\t        return withDescription(this, \"debounce\", delay, this.flatMapLatest(function(value) {\n\t          return Bacon.later(delay, value);\n\t        }));\n\t      };\n\t      EventStream.prototype.debounceImmediate = function(delay) {\n\t        return withDescription(this, \"debounceImmediate\", delay, this.flatMapFirst(function(value) {\n\t          return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n\t        }));\n\t      };\n\t      EventStream.prototype.throttle = function(delay) {\n\t        return withDescription(this, \"throttle\", delay, this.bufferWithTime(delay).map(function(values) {\n\t          return values[values.length - 1];\n\t        }));\n\t      };\n\t      EventStream.prototype.bufferWithTime = function(delay) {\n\t        return withDescription(this, \"bufferWithTime\", delay, this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n\t      };\n\t      EventStream.prototype.bufferWithCount = function(count) {\n\t        return withDescription(this, \"bufferWithCount\", count, this.bufferWithTimeOrCount(void 0, count));\n\t      };\n\t      EventStream.prototype.bufferWithTimeOrCount = function(delay, count) {\n\t        var flushOrSchedule;\n\t        flushOrSchedule = function(buffer) {\n\t          if (buffer.values.length === count) {\n\t            return buffer.flush();\n\t          } else if (delay !== void 0) {\n\t            return buffer.schedule();\n\t          }\n\t        };\n\t        return withDescription(this, \"bufferWithTimeOrCount\", delay, count, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n\t      };\n\t      EventStream.prototype.buffer = function(delay, onInput, onFlush) {\n\t        var buffer,\n\t            delayMs,\n\t            reply;\n\t        if (onInput == null) {\n\t          onInput = (function() {});\n\t        }\n\t        if (onFlush == null) {\n\t          onFlush = (function() {});\n\t        }\n\t        buffer = {\n\t          scheduled: false,\n\t          end: null,\n\t          values: [],\n\t          flush: function() {\n\t            var reply;\n\t            this.scheduled = false;\n\t            if (this.values.length > 0) {\n\t              reply = this.push(next(this.values));\n\t              this.values = [];\n\t              if (this.end != null) {\n\t                return this.push(this.end);\n\t              } else if (reply !== Bacon.noMore) {\n\t                return onFlush(this);\n\t              }\n\t            } else {\n\t              if (this.end != null) {\n\t                return this.push(this.end);\n\t              }\n\t            }\n\t          },\n\t          schedule: function() {\n\t            if (!this.scheduled) {\n\t              this.scheduled = true;\n\t              return delay((function(_this) {\n\t                return function() {\n\t                  return _this.flush();\n\t                };\n\t              })(this));\n\t            }\n\t          }\n\t        };\n\t        reply = Bacon.more;\n\t        if (!isFunction(delay)) {\n\t          delayMs = delay;\n\t          delay = function(f) {\n\t            return Bacon.scheduler.setTimeout(f, delayMs);\n\t          };\n\t        }\n\t        return withDescription(this, \"buffer\", this.withHandler(function(event) {\n\t          buffer.push = this.push;\n\t          if (event.isError()) {\n\t            reply = this.push(event);\n\t          } else if (event.isEnd()) {\n\t            buffer.end = event;\n\t            if (!buffer.scheduled) {\n\t              buffer.flush();\n\t            }\n\t          } else {\n\t            buffer.values.push(event.value());\n\t            onInput(buffer);\n\t          }\n\t          return reply;\n\t        }));\n\t      };\n\t      EventStream.prototype.merge = function(right) {\n\t        var left;\n\t        assertEventStream(right);\n\t        left = this;\n\t        return new EventStream(describe(left, \"merge\", right), function(sink) {\n\t          var ends,\n\t              smartSink;\n\t          ends = 0;\n\t          smartSink = function(obs) {\n\t            return function(unsubBoth) {\n\t              return obs.subscribeInternal(function(event) {\n\t                var reply;\n\t                if (event.isEnd()) {\n\t                  ends++;\n\t                  if (ends === 2) {\n\t                    return sink(end());\n\t                  } else {\n\t                    return Bacon.more;\n\t                  }\n\t                } else {\n\t                  reply = sink(event);\n\t                  if (reply === Bacon.noMore) {\n\t                    unsubBoth();\n\t                  }\n\t                  return reply;\n\t                }\n\t              });\n\t            };\n\t          };\n\t          return compositeUnsubscribe(smartSink(left), smartSink(right));\n\t        });\n\t      };\n\t      EventStream.prototype.toProperty = function(initValue) {\n\t        if (arguments.length === 0) {\n\t          initValue = None;\n\t        }\n\t        return withDescription(this, \"toProperty\", initValue, this.scan(initValue, latterF, true));\n\t      };\n\t      EventStream.prototype.toEventStream = function() {\n\t        return this;\n\t      };\n\t      EventStream.prototype.sampledBy = function(sampler, combinator) {\n\t        return withDescription(this, \"sampledBy\", sampler, combinator, this.toProperty().sampledBy(sampler, combinator));\n\t      };\n\t      EventStream.prototype.concat = function(right) {\n\t        var left;\n\t        left = this;\n\t        return new EventStream(describe(left, \"concat\", right), function(sink) {\n\t          var unsubLeft,\n\t              unsubRight;\n\t          unsubRight = nop;\n\t          unsubLeft = left.subscribeInternal(function(e) {\n\t            if (e.isEnd()) {\n\t              return unsubRight = right.subscribeInternal(sink);\n\t            } else {\n\t              return sink(e);\n\t            }\n\t          });\n\t          return function() {\n\t            unsubLeft();\n\t            return unsubRight();\n\t          };\n\t        });\n\t      };\n\t      EventStream.prototype.takeUntil = function(stopper) {\n\t        var endMarker;\n\t        endMarker = {};\n\t        return withDescription(this, \"takeUntil\", stopper, Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function(event) {\n\t          var data,\n\t              reply,\n\t              value,\n\t              _i,\n\t              _len,\n\t              _ref1;\n\t          if (!event.hasValue()) {\n\t            return this.push(event);\n\t          } else {\n\t            _ref1 = event.value(), data = _ref1[0], stopper = _ref1[1];\n\t            if (stopper.length) {\n\t              return this.push(end());\n\t            } else {\n\t              reply = Bacon.more;\n\t              for (_i = 0, _len = data.length; _i < _len; _i++) {\n\t                value = data[_i];\n\t                if (value === endMarker) {\n\t                  reply = this.push(end());\n\t                } else {\n\t                  reply = this.push(next(value));\n\t                }\n\t              }\n\t              return reply;\n\t            }\n\t          }\n\t        }));\n\t      };\n\t      EventStream.prototype.skipUntil = function(starter) {\n\t        var started;\n\t        started = starter.take(1).map(true).toProperty(false);\n\t        return withDescription(this, \"skipUntil\", starter, this.filter(started));\n\t      };\n\t      EventStream.prototype.skipWhile = function() {\n\t        var args,\n\t            f,\n\t            ok;\n\t        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t        ok = false;\n\t        return convertArgsToFunction(this, f, args, function(f) {\n\t          return withDescription(this, \"skipWhile\", f, this.withHandler(function(event) {\n\t            if (ok || !event.hasValue() || !f(event.value())) {\n\t              if (event.hasValue()) {\n\t                ok = true;\n\t              }\n\t              return this.push(event);\n\t            } else {\n\t              return Bacon.more;\n\t            }\n\t          }));\n\t        });\n\t      };\n\t      EventStream.prototype.startWith = function(seed) {\n\t        return withDescription(this, \"startWith\", seed, Bacon.once(seed).concat(this));\n\t      };\n\t      EventStream.prototype.withHandler = function(handler) {\n\t        var dispatcher;\n\t        dispatcher = new Dispatcher(this.subscribeInternal, handler);\n\t        return new EventStream(describe(this, \"withHandler\", handler), dispatcher.subscribe);\n\t      };\n\t      return EventStream;\n\t    })(Observable);\n\t    Property = (function(_super) {\n\t      __extends(Property, _super);\n\t      function Property(desc, subscribe, handler) {\n\t        if (isFunction(desc)) {\n\t          handler = subscribe;\n\t          subscribe = desc;\n\t          desc = [];\n\t        }\n\t        Property.__super__.constructor.call(this, desc);\n\t        assertFunction(subscribe);\n\t        if (handler === true) {\n\t          this.subscribeInternal = subscribe;\n\t        } else {\n\t          this.subscribeInternal = new PropertyDispatcher(this, subscribe, handler).subscribe;\n\t        }\n\t        this.subscribe = UpdateBarrier.wrappedSubscribe(this);\n\t        registerObs(this);\n\t      }\n\t      Property.prototype.sampledBy = function(sampler, combinator) {\n\t        var lazy,\n\t            result,\n\t            samplerSource,\n\t            stream,\n\t            thisSource;\n\t        if (combinator != null) {\n\t          combinator = toCombinator(combinator);\n\t        } else {\n\t          lazy = true;\n\t          combinator = function(f) {\n\t            return f();\n\t          };\n\t        }\n\t        thisSource = new Source(this, false, this.subscribeInternal, lazy);\n\t        samplerSource = new Source(sampler, true, sampler.subscribeInternal, lazy);\n\t        stream = Bacon.when([thisSource, samplerSource], combinator);\n\t        result = sampler instanceof Property ? stream.toProperty() : stream;\n\t        return withDescription(this, \"sampledBy\", sampler, combinator, result);\n\t      };\n\t      Property.prototype.sample = function(interval) {\n\t        return withDescription(this, \"sample\", interval, this.sampledBy(Bacon.interval(interval, {})));\n\t      };\n\t      Property.prototype.changes = function() {\n\t        return new EventStream(describe(this, \"changes\"), (function(_this) {\n\t          return function(sink) {\n\t            return _this.subscribeInternal(function(event) {\n\t              if (!event.isInitial()) {\n\t                return sink(event);\n\t              }\n\t            });\n\t          };\n\t        })(this));\n\t      };\n\t      Property.prototype.withHandler = function(handler) {\n\t        return new Property(describe(this, \"withHandler\", handler), this.subscribeInternal, handler);\n\t      };\n\t      Property.prototype.toProperty = function() {\n\t        assertNoArguments(arguments);\n\t        return this;\n\t      };\n\t      Property.prototype.toEventStream = function() {\n\t        return new EventStream(describe(this, \"toEventStream\"), (function(_this) {\n\t          return function(sink) {\n\t            return _this.subscribeInternal(function(event) {\n\t              if (event.isInitial()) {\n\t                event = event.toNext();\n\t              }\n\t              return sink(event);\n\t            });\n\t          };\n\t        })(this));\n\t      };\n\t      Property.prototype.and = function(other) {\n\t        return withDescription(this, \"and\", other, this.combine(other, function(x, y) {\n\t          return x && y;\n\t        }));\n\t      };\n\t      Property.prototype.or = function(other) {\n\t        return withDescription(this, \"or\", other, this.combine(other, function(x, y) {\n\t          return x || y;\n\t        }));\n\t      };\n\t      Property.prototype.delay = function(delay) {\n\t        return this.delayChanges(\"delay\", delay, function(changes) {\n\t          return changes.delay(delay);\n\t        });\n\t      };\n\t      Property.prototype.debounce = function(delay) {\n\t        return this.delayChanges(\"debounce\", delay, function(changes) {\n\t          return changes.debounce(delay);\n\t        });\n\t      };\n\t      Property.prototype.throttle = function(delay) {\n\t        return this.delayChanges(\"throttle\", delay, function(changes) {\n\t          return changes.throttle(delay);\n\t        });\n\t      };\n\t      Property.prototype.delayChanges = function() {\n\t        var desc,\n\t            f,\n\t            _i;\n\t        desc = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), f = arguments[_i++];\n\t        return withDescription.apply(null, [this].concat(__slice.call(desc), [addPropertyInitValueToStream(this, f(this.changes()))]));\n\t      };\n\t      Property.prototype.takeUntil = function(stopper) {\n\t        var changes;\n\t        changes = this.changes().takeUntil(stopper);\n\t        return withDescription(this, \"takeUntil\", stopper, addPropertyInitValueToStream(this, changes));\n\t      };\n\t      Property.prototype.startWith = function(value) {\n\t        return withDescription(this, \"startWith\", value, this.scan(value, function(prev, next) {\n\t          return next;\n\t        }));\n\t      };\n\t      return Property;\n\t    })(Observable);\n\t    convertArgsToFunction = function(obs, f, args, method) {\n\t      var sampled;\n\t      if (f instanceof Property) {\n\t        sampled = f.sampledBy(obs, function(p, s) {\n\t          return [p, s];\n\t        });\n\t        return method.apply(sampled, [function(_arg) {\n\t          var p,\n\t              s;\n\t          p = _arg[0], s = _arg[1];\n\t          return p;\n\t        }]).map(function(_arg) {\n\t          var p,\n\t              s;\n\t          p = _arg[0], s = _arg[1];\n\t          return s;\n\t        });\n\t      } else {\n\t        f = makeFunction(f, args);\n\t        return method.apply(obs, [f]);\n\t      }\n\t    };\n\t    addPropertyInitValueToStream = function(property, stream) {\n\t      var justInitValue;\n\t      justInitValue = new EventStream(describe(property, \"justInitValue\"), function(sink) {\n\t        var unsub,\n\t            value;\n\t        value = null;\n\t        unsub = property.subscribeInternal(function(event) {\n\t          if (event.hasValue()) {\n\t            value = event;\n\t          }\n\t          return Bacon.noMore;\n\t        });\n\t        UpdateBarrier.whenDoneWith(justInitValue, function() {\n\t          if (value != null) {\n\t            sink(value);\n\t          }\n\t          return sink(end());\n\t        });\n\t        return unsub;\n\t      });\n\t      return justInitValue.concat(stream).toProperty();\n\t    };\n\t    Dispatcher = (function() {\n\t      function Dispatcher(subscribe, handleEvent) {\n\t        var done,\n\t            ended,\n\t            prevError,\n\t            pushIt,\n\t            pushing,\n\t            queue,\n\t            removeSub,\n\t            subscriptions,\n\t            unsubscribeFromSource,\n\t            waiters;\n\t        if (subscribe == null) {\n\t          subscribe = function() {\n\t            return nop;\n\t          };\n\t        }\n\t        subscriptions = [];\n\t        queue = [];\n\t        pushing = false;\n\t        ended = false;\n\t        this.hasSubscribers = function() {\n\t          return subscriptions.length > 0;\n\t        };\n\t        prevError = null;\n\t        unsubscribeFromSource = nop;\n\t        removeSub = function(subscription) {\n\t          return subscriptions = _.without(subscription, subscriptions);\n\t        };\n\t        waiters = null;\n\t        done = function() {\n\t          var w,\n\t              ws,\n\t              _i,\n\t              _len,\n\t              _results;\n\t          if (waiters != null) {\n\t            ws = waiters;\n\t            waiters = null;\n\t            _results = [];\n\t            for (_i = 0, _len = ws.length; _i < _len; _i++) {\n\t              w = ws[_i];\n\t              _results.push(w());\n\t            }\n\t            return _results;\n\t          }\n\t        };\n\t        pushIt = function(event) {\n\t          var reply,\n\t              sub,\n\t              success,\n\t              tmp,\n\t              _i,\n\t              _len;\n\t          if (!pushing) {\n\t            if (event === prevError) {\n\t              return;\n\t            }\n\t            if (event.isError()) {\n\t              prevError = event;\n\t            }\n\t            success = false;\n\t            try {\n\t              pushing = true;\n\t              tmp = subscriptions;\n\t              for (_i = 0, _len = tmp.length; _i < _len; _i++) {\n\t                sub = tmp[_i];\n\t                reply = sub.sink(event);\n\t                if (reply === Bacon.noMore || event.isEnd()) {\n\t                  removeSub(sub);\n\t                }\n\t              }\n\t              success = true;\n\t            } finally {\n\t              pushing = false;\n\t              if (!success) {\n\t                queue = [];\n\t              }\n\t            }\n\t            success = true;\n\t            while (queue.length) {\n\t              event = queue.shift();\n\t              this.push(event);\n\t            }\n\t            done(event);\n\t            if (this.hasSubscribers()) {\n\t              return Bacon.more;\n\t            } else {\n\t              unsubscribeFromSource();\n\t              return Bacon.noMore;\n\t            }\n\t          } else {\n\t            queue.push(event);\n\t            return Bacon.more;\n\t          }\n\t        };\n\t        this.push = (function(_this) {\n\t          return function(event) {\n\t            return UpdateBarrier.inTransaction(event, _this, pushIt, [event]);\n\t          };\n\t        })(this);\n\t        if (handleEvent == null) {\n\t          handleEvent = function(event) {\n\t            return this.push(event);\n\t          };\n\t        }\n\t        this.handleEvent = (function(_this) {\n\t          return function(event) {\n\t            if (event.isEnd()) {\n\t              ended = true;\n\t            }\n\t            return handleEvent.apply(_this, [event]);\n\t          };\n\t        })(this);\n\t        this.subscribe = (function(_this) {\n\t          return function(sink) {\n\t            var subscription,\n\t                unsubSrc;\n\t            if (ended) {\n\t              sink(end());\n\t              return nop;\n\t            } else {\n\t              assertFunction(sink);\n\t              subscription = {sink: sink};\n\t              subscriptions.push(subscription);\n\t              if (subscriptions.length === 1) {\n\t                unsubSrc = subscribe(_this.handleEvent);\n\t                unsubscribeFromSource = function() {\n\t                  unsubSrc();\n\t                  return unsubscribeFromSource = nop;\n\t                };\n\t              }\n\t              assertFunction(unsubscribeFromSource);\n\t              return function() {\n\t                removeSub(subscription);\n\t                if (!_this.hasSubscribers()) {\n\t                  return unsubscribeFromSource();\n\t                }\n\t              };\n\t            }\n\t          };\n\t        })(this);\n\t      }\n\t      return Dispatcher;\n\t    })();\n\t    PropertyDispatcher = (function(_super) {\n\t      __extends(PropertyDispatcher, _super);\n\t      function PropertyDispatcher(p, subscribe, handleEvent) {\n\t        var current,\n\t            currentValueRootId,\n\t            ended,\n\t            push;\n\t        PropertyDispatcher.__super__.constructor.call(this, subscribe, handleEvent);\n\t        current = None;\n\t        currentValueRootId = void 0;\n\t        push = this.push;\n\t        subscribe = this.subscribe;\n\t        ended = false;\n\t        this.push = (function(_this) {\n\t          return function(event) {\n\t            if (event.isEnd()) {\n\t              ended = true;\n\t            }\n\t            if (event.hasValue()) {\n\t              current = new Some(event);\n\t              currentValueRootId = UpdateBarrier.currentEventId();\n\t            }\n\t            return push.apply(_this, [event]);\n\t          };\n\t        })(this);\n\t        this.subscribe = (function(_this) {\n\t          return function(sink) {\n\t            var dispatchingId,\n\t                initSent,\n\t                maybeSubSource,\n\t                reply,\n\t                valId;\n\t            initSent = false;\n\t            reply = Bacon.more;\n\t            maybeSubSource = function() {\n\t              if (reply === Bacon.noMore) {\n\t                return nop;\n\t              } else if (ended) {\n\t                sink(end());\n\t                return nop;\n\t              } else {\n\t                return subscribe.apply(this, [sink]);\n\t              }\n\t            };\n\t            if (current.isDefined && (_this.hasSubscribers() || ended)) {\n\t              dispatchingId = UpdateBarrier.currentEventId();\n\t              valId = currentValueRootId;\n\t              if (!ended && valId && dispatchingId && dispatchingId !== valId) {\n\t                UpdateBarrier.whenDoneWith(p, function() {\n\t                  if (currentValueRootId === valId) {\n\t                    return sink(initial(current.get().value()));\n\t                  }\n\t                });\n\t                return maybeSubSource();\n\t              } else {\n\t                UpdateBarrier.inTransaction(void 0, _this, (function() {\n\t                  return reply = sink(initial(current.get().value()));\n\t                }), []);\n\t                return maybeSubSource();\n\t              }\n\t            } else {\n\t              return maybeSubSource();\n\t            }\n\t          };\n\t        })(this);\n\t      }\n\t      return PropertyDispatcher;\n\t    })(Dispatcher);\n\t    Bus = (function(_super) {\n\t      __extends(Bus, _super);\n\t      function Bus() {\n\t        var ended,\n\t            guardedSink,\n\t            sink,\n\t            subscribeAll,\n\t            subscribeInput,\n\t            subscriptions,\n\t            unsubAll,\n\t            unsubscribeInput;\n\t        sink = void 0;\n\t        subscriptions = [];\n\t        ended = false;\n\t        guardedSink = (function(_this) {\n\t          return function(input) {\n\t            return function(event) {\n\t              if (event.isEnd()) {\n\t                unsubscribeInput(input);\n\t                return Bacon.noMore;\n\t              } else {\n\t                return sink(event);\n\t              }\n\t            };\n\t          };\n\t        })(this);\n\t        unsubAll = function() {\n\t          var sub,\n\t              _i,\n\t              _len,\n\t              _results;\n\t          _results = [];\n\t          for (_i = 0, _len = subscriptions.length; _i < _len; _i++) {\n\t            sub = subscriptions[_i];\n\t            _results.push(typeof sub.unsub === \"function\" ? sub.unsub() : void 0);\n\t          }\n\t          return _results;\n\t        };\n\t        subscribeInput = function(subscription) {\n\t          return subscription.unsub = subscription.input.subscribeInternal(guardedSink(subscription.input));\n\t        };\n\t        unsubscribeInput = function(input) {\n\t          var i,\n\t              sub,\n\t              _i,\n\t              _len;\n\t          for (i = _i = 0, _len = subscriptions.length; _i < _len; i = ++_i) {\n\t            sub = subscriptions[i];\n\t            if (sub.input === input) {\n\t              if (typeof sub.unsub === \"function\") {\n\t                sub.unsub();\n\t              }\n\t              subscriptions.splice(i, 1);\n\t              return;\n\t            }\n\t          }\n\t        };\n\t        subscribeAll = (function(_this) {\n\t          return function(newSink) {\n\t            var subscription,\n\t                _i,\n\t                _len,\n\t                _ref1;\n\t            sink = newSink;\n\t            _ref1 = cloneArray(subscriptions);\n\t            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n\t              subscription = _ref1[_i];\n\t              subscribeInput(subscription);\n\t            }\n\t            return unsubAll;\n\t          };\n\t        })(this);\n\t        Bus.__super__.constructor.call(this, describe(Bacon, \"Bus\"), subscribeAll);\n\t        this.plug = (function(_this) {\n\t          return function(input) {\n\t            var sub;\n\t            if (ended) {\n\t              return;\n\t            }\n\t            sub = {input: input};\n\t            subscriptions.push(sub);\n\t            if ((sink != null)) {\n\t              subscribeInput(sub);\n\t            }\n\t            return function() {\n\t              return unsubscribeInput(input);\n\t            };\n\t          };\n\t        })(this);\n\t        this.push = (function(_this) {\n\t          return function(value) {\n\t            return typeof sink === \"function\" ? sink(next(value)) : void 0;\n\t          };\n\t        })(this);\n\t        this.error = (function(_this) {\n\t          return function(error) {\n\t            return typeof sink === \"function\" ? sink(new Error(error)) : void 0;\n\t          };\n\t        })(this);\n\t        this.end = (function(_this) {\n\t          return function() {\n\t            ended = true;\n\t            unsubAll();\n\t            return typeof sink === \"function\" ? sink(end()) : void 0;\n\t          };\n\t        })(this);\n\t      }\n\t      return Bus;\n\t    })(EventStream);\n\t    Source = (function() {\n\t      function Source(obs, sync, subscribe, lazy) {\n\t        this.obs = obs;\n\t        this.sync = sync;\n\t        this.subscribe = subscribe;\n\t        this.lazy = lazy != null ? lazy : false;\n\t        this.queue = [];\n\t        if (this.subscribe == null) {\n\t          this.subscribe = this.obs.subscribeInternal;\n\t        }\n\t        this.toString = this.obs.toString;\n\t      }\n\t      Source.prototype.markEnded = function() {\n\t        return this.ended = true;\n\t      };\n\t      Source.prototype.consume = function() {\n\t        if (this.lazy) {\n\t          return _.always(this.queue[0]);\n\t        } else {\n\t          return this.queue[0];\n\t        }\n\t      };\n\t      Source.prototype.push = function(x) {\n\t        return this.queue = [x];\n\t      };\n\t      Source.prototype.mayHave = function() {\n\t        return true;\n\t      };\n\t      Source.prototype.hasAtLeast = function() {\n\t        return this.queue.length;\n\t      };\n\t      Source.prototype.flatten = true;\n\t      return Source;\n\t    })();\n\t    ConsumingSource = (function(_super) {\n\t      __extends(ConsumingSource, _super);\n\t      function ConsumingSource() {\n\t        return ConsumingSource.__super__.constructor.apply(this, arguments);\n\t      }\n\t      ConsumingSource.prototype.consume = function() {\n\t        return this.queue.shift();\n\t      };\n\t      ConsumingSource.prototype.push = function(x) {\n\t        return this.queue.push(x);\n\t      };\n\t      ConsumingSource.prototype.mayHave = function(c) {\n\t        return !this.ended || this.queue.length >= c;\n\t      };\n\t      ConsumingSource.prototype.hasAtLeast = function(c) {\n\t        return this.queue.length >= c;\n\t      };\n\t      ConsumingSource.prototype.flatten = false;\n\t      return ConsumingSource;\n\t    })(Source);\n\t    BufferingSource = (function(_super) {\n\t      __extends(BufferingSource, _super);\n\t      function BufferingSource(obs) {\n\t        this.obs = obs;\n\t        BufferingSource.__super__.constructor.call(this, this.obs, true, this.obs.subscribeInternal);\n\t      }\n\t      BufferingSource.prototype.consume = function() {\n\t        var values;\n\t        values = this.queue;\n\t        this.queue = [];\n\t        return function() {\n\t          return values;\n\t        };\n\t      };\n\t      BufferingSource.prototype.push = function(x) {\n\t        return this.queue.push(x());\n\t      };\n\t      BufferingSource.prototype.hasAtLeast = function() {\n\t        return true;\n\t      };\n\t      return BufferingSource;\n\t    })(Source);\n\t    Source.fromObservable = function(s) {\n\t      if (s instanceof Source) {\n\t        return s;\n\t      } else if (s instanceof Property) {\n\t        return new Source(s, false);\n\t      } else {\n\t        return new ConsumingSource(s, true);\n\t      }\n\t    };\n\t    describe = function() {\n\t      var args,\n\t          context,\n\t          method;\n\t      context = arguments[0], method = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];\n\t      if ((context || method) instanceof Desc) {\n\t        return context || method;\n\t      } else {\n\t        return new Desc(context, method, args);\n\t      }\n\t    };\n\t    Desc = (function() {\n\t      function Desc(context, method, args) {\n\t        var collectDeps,\n\t            dependsOn,\n\t            findDeps,\n\t            flatDeps;\n\t        findDeps = function(x) {\n\t          if (isArray(x)) {\n\t            return _.flatMap(findDeps, x);\n\t          } else if (isObservable(x)) {\n\t            return [x];\n\t          } else if (x instanceof Source) {\n\t            return [x.obs];\n\t          } else {\n\t            return [];\n\t          }\n\t        };\n\t        flatDeps = null;\n\t        collectDeps = function(o) {\n\t          var dep,\n\t              deps,\n\t              _i,\n\t              _len,\n\t              _results;\n\t          deps = o.internalDeps();\n\t          _results = [];\n\t          for (_i = 0, _len = deps.length; _i < _len; _i++) {\n\t            dep = deps[_i];\n\t            flatDeps[dep.id] = true;\n\t            _results.push(collectDeps(dep));\n\t          }\n\t          return _results;\n\t        };\n\t        dependsOn = function(b) {\n\t          if (flatDeps == null) {\n\t            flatDeps = {};\n\t            collectDeps(this);\n\t          }\n\t          return flatDeps[b.id];\n\t        };\n\t        this.apply = function(obs) {\n\t          var deps;\n\t          deps = _.cached((function() {\n\t            return findDeps([context].concat(args));\n\t          }));\n\t          obs.internalDeps = obs.internalDeps || deps;\n\t          obs.dependsOn = dependsOn;\n\t          obs.deps = deps;\n\t          obs.toString = function() {\n\t            return _.toString(context) + \".\" + _.toString(method) + \"(\" + _.map(_.toString, args) + \")\";\n\t          };\n\t          obs.inspect = function() {\n\t            return obs.toString();\n\t          };\n\t          obs.desc = function() {\n\t            return {\n\t              context: context,\n\t              method: method,\n\t              args: args\n\t            };\n\t          };\n\t          return obs;\n\t        };\n\t      }\n\t      return Desc;\n\t    })();\n\t    withDescription = function() {\n\t      var desc,\n\t          obs,\n\t          _i;\n\t      desc = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), obs = arguments[_i++];\n\t      return describe.apply(null, desc).apply(obs);\n\t    };\n\t    Bacon.when = function() {\n\t      var f,\n\t          i,\n\t          index,\n\t          ix,\n\t          len,\n\t          needsBarrier,\n\t          pat,\n\t          patSources,\n\t          pats,\n\t          patterns,\n\t          resultStream,\n\t          s,\n\t          sources,\n\t          usage,\n\t          _i,\n\t          _j,\n\t          _len,\n\t          _len1,\n\t          _ref1;\n\t      patterns = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t      if (patterns.length === 0) {\n\t        return Bacon.never();\n\t      }\n\t      len = patterns.length;\n\t      usage = \"when: expecting arguments in the form (Observable+,function)+\";\n\t      assert(usage, len % 2 === 0);\n\t      sources = [];\n\t      pats = [];\n\t      i = 0;\n\t      while (i < len) {\n\t        patSources = _.toArray(patterns[i]);\n\t        f = patterns[i + 1];\n\t        pat = {\n\t          f: (isFunction(f) ? f : (function() {\n\t            return f;\n\t          })),\n\t          ixs: []\n\t        };\n\t        for (_i = 0, _len = patSources.length; _i < _len; _i++) {\n\t          s = patSources[_i];\n\t          assert(isObservable(s), usage);\n\t          index = _.indexOf(sources, s);\n\t          if (index < 0) {\n\t            sources.push(s);\n\t            index = sources.length - 1;\n\t          }\n\t          _ref1 = pat.ixs;\n\t          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n\t            ix = _ref1[_j];\n\t            if (ix.index === index) {\n\t              ix.count++;\n\t            }\n\t          }\n\t          pat.ixs.push({\n\t            index: index,\n\t            count: 1\n\t          });\n\t        }\n\t        if (patSources.length > 0) {\n\t          pats.push(pat);\n\t        }\n\t        i = i + 2;\n\t      }\n\t      if (!sources.length) {\n\t        return Bacon.never();\n\t      }\n\t      sources = _.map(Source.fromObservable, sources);\n\t      needsBarrier = (_.any(sources, function(s) {\n\t        return s.flatten;\n\t      })) && (containsDuplicateDeps(_.map((function(s) {\n\t        return s.obs;\n\t      }), sources)));\n\t      return resultStream = new EventStream(describe.apply(null, [Bacon, \"when\"].concat(__slice.call(patterns))), function(sink) {\n\t        var cannotMatch,\n\t            cannotSync,\n\t            ends,\n\t            match,\n\t            nonFlattened,\n\t            part,\n\t            triggers;\n\t        triggers = [];\n\t        ends = false;\n\t        match = function(p) {\n\t          var _k,\n\t              _len2,\n\t              _ref2;\n\t          _ref2 = p.ixs;\n\t          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n\t            i = _ref2[_k];\n\t            if (!sources[i.index].hasAtLeast(i.count)) {\n\t              return false;\n\t            }\n\t          }\n\t          return true;\n\t        };\n\t        cannotSync = function(source) {\n\t          return !source.sync || source.ended;\n\t        };\n\t        cannotMatch = function(p) {\n\t          var _k,\n\t              _len2,\n\t              _ref2;\n\t          _ref2 = p.ixs;\n\t          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n\t            i = _ref2[_k];\n\t            if (!sources[i.index].mayHave(i.count)) {\n\t              return true;\n\t            }\n\t          }\n\t        };\n\t        nonFlattened = function(trigger) {\n\t          return !trigger.source.flatten;\n\t        };\n\t        part = function(source) {\n\t          return function(unsubAll) {\n\t            var flush,\n\t                flushLater,\n\t                flushWhileTriggers;\n\t            flushLater = function() {\n\t              return UpdateBarrier.whenDoneWith(resultStream, flush);\n\t            };\n\t            flushWhileTriggers = function() {\n\t              var functions,\n\t                  p,\n\t                  reply,\n\t                  trigger,\n\t                  _k,\n\t                  _len2;\n\t              if (triggers.length > 0) {\n\t                reply = Bacon.more;\n\t                trigger = triggers.pop();\n\t                for (_k = 0, _len2 = pats.length; _k < _len2; _k++) {\n\t                  p = pats[_k];\n\t                  if (match(p)) {\n\t                    functions = (function() {\n\t                      var _l,\n\t                          _len3,\n\t                          _ref2,\n\t                          _results;\n\t                      _ref2 = p.ixs;\n\t                      _results = [];\n\t                      for (_l = 0, _len3 = _ref2.length; _l < _len3; _l++) {\n\t                        i = _ref2[_l];\n\t                        _results.push(sources[i.index].consume());\n\t                      }\n\t                      return _results;\n\t                    })();\n\t                    reply = sink(trigger.e.apply(function() {\n\t                      var fun,\n\t                          values;\n\t                      values = (function() {\n\t                        var _l,\n\t                            _len3,\n\t                            _results;\n\t                        _results = [];\n\t                        for (_l = 0, _len3 = functions.length; _l < _len3; _l++) {\n\t                          fun = functions[_l];\n\t                          _results.push(fun());\n\t                        }\n\t                        return _results;\n\t                      })();\n\t                      return p.f.apply(p, values);\n\t                    }));\n\t                    if (triggers.length && needsBarrier) {\n\t                      triggers = _.filter(nonFlattened, triggers);\n\t                    }\n\t                    if (reply === Bacon.noMore) {\n\t                      return reply;\n\t                    } else {\n\t                      return flushWhileTriggers();\n\t                    }\n\t                  }\n\t                }\n\t              } else {\n\t                return Bacon.more;\n\t              }\n\t            };\n\t            flush = function() {\n\t              var reply;\n\t              reply = flushWhileTriggers();\n\t              if (ends) {\n\t                ends = false;\n\t                if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n\t                  reply = Bacon.noMore;\n\t                  sink(end());\n\t                }\n\t              }\n\t              if (reply === Bacon.noMore) {\n\t                unsubAll();\n\t              }\n\t              return reply;\n\t            };\n\t            return source.subscribe(function(e) {\n\t              var reply;\n\t              if (e.isEnd()) {\n\t                ends = true;\n\t                source.markEnded();\n\t                flushLater();\n\t              } else if (e.isError()) {\n\t                reply = sink(e);\n\t              } else {\n\t                source.push(e.value);\n\t                if (source.sync) {\n\t                  triggers.push({\n\t                    source: source,\n\t                    e: e\n\t                  });\n\t                  if (needsBarrier) {\n\t                    flushLater();\n\t                  } else {\n\t                    flush();\n\t                  }\n\t                }\n\t              }\n\t              if (reply === Bacon.noMore) {\n\t                unsubAll();\n\t              }\n\t              return reply || Bacon.more;\n\t            });\n\t          };\n\t        };\n\t        return compositeUnsubscribe.apply(null, (function() {\n\t          var _k,\n\t              _len2,\n\t              _results;\n\t          _results = [];\n\t          for (_k = 0, _len2 = sources.length; _k < _len2; _k++) {\n\t            s = sources[_k];\n\t            _results.push(part(s));\n\t          }\n\t          return _results;\n\t        })());\n\t      });\n\t    };\n\t    containsDuplicateDeps = function(observables, state) {\n\t      var checkObservable;\n\t      if (state == null) {\n\t        state = [];\n\t      }\n\t      checkObservable = function(obs) {\n\t        var deps;\n\t        if (Bacon._.contains(state, obs)) {\n\t          return true;\n\t        } else {\n\t          deps = obs.internalDeps();\n\t          if (deps.length) {\n\t            state.push(obs);\n\t            return Bacon._.any(deps, checkObservable);\n\t          } else {\n\t            state.push(obs);\n\t            return false;\n\t          }\n\t        }\n\t      };\n\t      return Bacon._.any(observables, checkObservable);\n\t    };\n\t    Bacon.update = function() {\n\t      var i,\n\t          initial,\n\t          lateBindFirst,\n\t          patterns;\n\t      initial = arguments[0], patterns = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t      lateBindFirst = function(f) {\n\t        return function() {\n\t          var args;\n\t          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t          return function(i) {\n\t            return f.apply(null, [i].concat(args));\n\t          };\n\t        };\n\t      };\n\t      i = patterns.length - 1;\n\t      while (i > 0) {\n\t        if (!(patterns[i] instanceof Function)) {\n\t          patterns[i] = (function(x) {\n\t            return function() {\n\t              return x;\n\t            };\n\t          })(patterns[i]);\n\t        }\n\t        patterns[i] = lateBindFirst(patterns[i]);\n\t        i = i - 2;\n\t      }\n\t      return withDescription.apply(null, [Bacon, \"update\", initial].concat(__slice.call(patterns), [Bacon.when.apply(Bacon, patterns).scan(initial, (function(x, f) {\n\t        return f(x);\n\t      }))]));\n\t    };\n\t    compositeUnsubscribe = function() {\n\t      var ss;\n\t      ss = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t      return new CompositeUnsubscribe(ss).unsubscribe;\n\t    };\n\t    CompositeUnsubscribe = (function() {\n\t      function CompositeUnsubscribe(ss) {\n\t        var s,\n\t            _i,\n\t            _len;\n\t        if (ss == null) {\n\t          ss = [];\n\t        }\n\t        this.unsubscribe = __bind(this.unsubscribe, this);\n\t        this.unsubscribed = false;\n\t        this.subscriptions = [];\n\t        this.starting = [];\n\t        for (_i = 0, _len = ss.length; _i < _len; _i++) {\n\t          s = ss[_i];\n\t          this.add(s);\n\t        }\n\t      }\n\t      CompositeUnsubscribe.prototype.add = function(subscription) {\n\t        var ended,\n\t            unsub,\n\t            unsubMe;\n\t        if (this.unsubscribed) {\n\t          return;\n\t        }\n\t        ended = false;\n\t        unsub = nop;\n\t        this.starting.push(subscription);\n\t        unsubMe = (function(_this) {\n\t          return function() {\n\t            if (_this.unsubscribed) {\n\t              return;\n\t            }\n\t            ended = true;\n\t            _this.remove(unsub);\n\t            return _.remove(subscription, _this.starting);\n\t          };\n\t        })(this);\n\t        unsub = subscription(this.unsubscribe, unsubMe);\n\t        if (!(this.unsubscribed || ended)) {\n\t          this.subscriptions.push(unsub);\n\t        }\n\t        _.remove(subscription, this.starting);\n\t        return unsub;\n\t      };\n\t      CompositeUnsubscribe.prototype.remove = function(unsub) {\n\t        if (this.unsubscribed) {\n\t          return;\n\t        }\n\t        if ((_.remove(unsub, this.subscriptions)) !== void 0) {\n\t          return unsub();\n\t        }\n\t      };\n\t      CompositeUnsubscribe.prototype.unsubscribe = function() {\n\t        var s,\n\t            _i,\n\t            _len,\n\t            _ref1;\n\t        if (this.unsubscribed) {\n\t          return;\n\t        }\n\t        this.unsubscribed = true;\n\t        _ref1 = this.subscriptions;\n\t        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n\t          s = _ref1[_i];\n\t          s();\n\t        }\n\t        this.subscriptions = [];\n\t        return this.starting = [];\n\t      };\n\t      CompositeUnsubscribe.prototype.count = function() {\n\t        if (this.unsubscribed) {\n\t          return 0;\n\t        }\n\t        return this.subscriptions.length + this.starting.length;\n\t      };\n\t      CompositeUnsubscribe.prototype.empty = function() {\n\t        return this.count() === 0;\n\t      };\n\t      return CompositeUnsubscribe;\n\t    })();\n\t    Bacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\t    Some = (function() {\n\t      function Some(value) {\n\t        this.value = value;\n\t      }\n\t      Some.prototype.getOrElse = function() {\n\t        return this.value;\n\t      };\n\t      Some.prototype.get = function() {\n\t        return this.value;\n\t      };\n\t      Some.prototype.filter = function(f) {\n\t        if (f(this.value)) {\n\t          return new Some(this.value);\n\t        } else {\n\t          return None;\n\t        }\n\t      };\n\t      Some.prototype.map = function(f) {\n\t        return new Some(f(this.value));\n\t      };\n\t      Some.prototype.forEach = function(f) {\n\t        return f(this.value);\n\t      };\n\t      Some.prototype.isDefined = true;\n\t      Some.prototype.toArray = function() {\n\t        return [this.value];\n\t      };\n\t      Some.prototype.inspect = function() {\n\t        return \"Some(\" + this.value + \")\";\n\t      };\n\t      Some.prototype.toString = function() {\n\t        return this.inspect();\n\t      };\n\t      return Some;\n\t    })();\n\t    None = {\n\t      getOrElse: function(value) {\n\t        return value;\n\t      },\n\t      filter: function() {\n\t        return None;\n\t      },\n\t      map: function() {\n\t        return None;\n\t      },\n\t      forEach: function() {},\n\t      isDefined: false,\n\t      toArray: function() {\n\t        return [];\n\t      },\n\t      inspect: function() {\n\t        return \"None\";\n\t      },\n\t      toString: function() {\n\t        return this.inspect();\n\t      }\n\t    };\n\t    UpdateBarrier = (function() {\n\t      var afterTransaction,\n\t          afters,\n\t          currentEventId,\n\t          findIndependent,\n\t          flush,\n\t          inTransaction,\n\t          independent,\n\t          rootEvent,\n\t          waiters,\n\t          whenDoneWith,\n\t          wrappedSubscribe;\n\t      rootEvent = void 0;\n\t      waiters = [];\n\t      afters = [];\n\t      afterTransaction = function(f) {\n\t        if (rootEvent) {\n\t          return afters.push(f);\n\t        } else {\n\t          return f();\n\t        }\n\t      };\n\t      independent = function(waiter) {\n\t        return !_.any(waiters, (function(other) {\n\t          return waiter.obs.dependsOn(other.obs);\n\t        }));\n\t      };\n\t      whenDoneWith = function(obs, f) {\n\t        if (rootEvent) {\n\t          return waiters.push({\n\t            obs: obs,\n\t            f: f\n\t          });\n\t        } else {\n\t          return f();\n\t        }\n\t      };\n\t      findIndependent = function() {\n\t        while (!independent(waiters[0])) {\n\t          waiters.push(waiters.splice(0, 1)[0]);\n\t        }\n\t        return waiters.splice(0, 1)[0];\n\t      };\n\t      flush = function() {\n\t        var _results;\n\t        _results = [];\n\t        while (waiters.length) {\n\t          _results.push(findIndependent().f());\n\t        }\n\t        return _results;\n\t      };\n\t      inTransaction = function(event, context, f, args) {\n\t        var result;\n\t        if (rootEvent) {\n\t          return f.apply(context, args);\n\t        } else {\n\t          rootEvent = event;\n\t          try {\n\t            result = f.apply(context, args);\n\t            flush();\n\t          } finally {\n\t            rootEvent = void 0;\n\t            while (afters.length) {\n\t              f = afters.splice(0, 1)[0];\n\t              f();\n\t            }\n\t          }\n\t          return result;\n\t        }\n\t      };\n\t      currentEventId = function() {\n\t        if (rootEvent) {\n\t          return rootEvent.id;\n\t        } else {\n\t          return void 0;\n\t        }\n\t      };\n\t      wrappedSubscribe = function(obs) {\n\t        return function(sink) {\n\t          var doUnsub,\n\t              unsub,\n\t              unsubd;\n\t          unsubd = false;\n\t          doUnsub = function() {};\n\t          unsub = function() {\n\t            unsubd = true;\n\t            return doUnsub();\n\t          };\n\t          if (!unsubd) {\n\t            doUnsub = obs.subscribeInternal(function(event) {\n\t              return afterTransaction(function() {\n\t                var reply;\n\t                if (!unsubd) {\n\t                  reply = sink(event);\n\t                  if (reply === Bacon.noMore) {\n\t                    return unsub();\n\t                  }\n\t                }\n\t              });\n\t            });\n\t          }\n\t          return unsub;\n\t        };\n\t      };\n\t      return {\n\t        whenDoneWith: whenDoneWith,\n\t        inTransaction: inTransaction,\n\t        currentEventId: currentEventId,\n\t        wrappedSubscribe: wrappedSubscribe\n\t      };\n\t    })();\n\t    Bacon.EventStream = EventStream;\n\t    Bacon.Property = Property;\n\t    Bacon.Observable = Observable;\n\t    Bacon.Bus = Bus;\n\t    Bacon.Initial = Initial;\n\t    Bacon.Next = Next;\n\t    Bacon.End = End;\n\t    Bacon.Error = Error;\n\t    nop = function() {};\n\t    latterF = function(_, x) {\n\t      return x();\n\t    };\n\t    former = function(x, _) {\n\t      return x;\n\t    };\n\t    initial = function(value) {\n\t      return new Initial(_.always(value));\n\t    };\n\t    next = function(value) {\n\t      return new Next(_.always(value));\n\t    };\n\t    end = function() {\n\t      return new End();\n\t    };\n\t    toEvent = function(x) {\n\t      if (x instanceof Event) {\n\t        return x;\n\t      } else {\n\t        return next(x);\n\t      }\n\t    };\n\t    cloneArray = function(xs) {\n\t      return xs.slice(0);\n\t    };\n\t    assert = function(message, condition) {\n\t      if (!condition) {\n\t        throw message;\n\t      }\n\t    };\n\t    assertEventStream = function(event) {\n\t      if (!(event instanceof EventStream)) {\n\t        throw \"not an EventStream : \" + event;\n\t      }\n\t    };\n\t    assertFunction = function(f) {\n\t      return assert(\"not a function : \" + f, isFunction(f));\n\t    };\n\t    isFunction = function(f) {\n\t      return typeof f === \"function\";\n\t    };\n\t    isArray = function(xs) {\n\t      return xs instanceof Array;\n\t    };\n\t    isObservable = function(x) {\n\t      return x instanceof Observable;\n\t    };\n\t    assertArray = function(xs) {\n\t      if (!isArray(xs)) {\n\t        throw \"not an array : \" + xs;\n\t      }\n\t    };\n\t    assertNoArguments = function(args) {\n\t      return assert(\"no arguments supported\", args.length === 0);\n\t    };\n\t    assertString = function(x) {\n\t      if (typeof x !== \"string\") {\n\t        throw \"not a string : \" + x;\n\t      }\n\t    };\n\t    partiallyApplied = function(f, applied) {\n\t      return function() {\n\t        var args;\n\t        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\t        return f.apply(null, applied.concat(args));\n\t      };\n\t    };\n\t    makeSpawner = function(args) {\n\t      if (args.length === 1 && isObservable(args[0])) {\n\t        return _.always(args[0]);\n\t      } else {\n\t        return makeFunctionArgs(args);\n\t      }\n\t    };\n\t    makeFunctionArgs = function(args) {\n\t      args = Array.prototype.slice.call(args);\n\t      return makeFunction_.apply(null, args);\n\t    };\n\t    makeFunction_ = withMethodCallSupport(function() {\n\t      var args,\n\t          f;\n\t      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n\t      if (isFunction(f)) {\n\t        if (args.length) {\n\t          return partiallyApplied(f, args);\n\t        } else {\n\t          return f;\n\t        }\n\t      } else if (isFieldKey(f)) {\n\t        return toFieldExtractor(f, args);\n\t      } else {\n\t        return _.always(f);\n\t      }\n\t    });\n\t    makeFunction = function(f, args) {\n\t      return makeFunction_.apply(null, [f].concat(__slice.call(args)));\n\t    };\n\t    makeObservable = function(x) {\n\t      if (isObservable(x)) {\n\t        return x;\n\t      } else {\n\t        return Bacon.once(x);\n\t      }\n\t    };\n\t    isFieldKey = function(f) {\n\t      return (typeof f === \"string\") && f.length > 1 && f.charAt(0) === \".\";\n\t    };\n\t    Bacon.isFieldKey = isFieldKey;\n\t    toFieldExtractor = function(f, args) {\n\t      var partFuncs,\n\t          parts;\n\t      parts = f.slice(1).split(\".\");\n\t      partFuncs = _.map(toSimpleExtractor(args), parts);\n\t      return function(value) {\n\t        var _i,\n\t            _len;\n\t        for (_i = 0, _len = partFuncs.length; _i < _len; _i++) {\n\t          f = partFuncs[_i];\n\t          value = f(value);\n\t        }\n\t        return value;\n\t      };\n\t    };\n\t    toSimpleExtractor = function(args) {\n\t      return function(key) {\n\t        return function(value) {\n\t          var fieldValue;\n\t          if (value == null) {\n\t            return void 0;\n\t          } else {\n\t            fieldValue = value[key];\n\t            if (isFunction(fieldValue)) {\n\t              return fieldValue.apply(value, args);\n\t            } else {\n\t              return fieldValue;\n\t            }\n\t          }\n\t        };\n\t      };\n\t    };\n\t    toFieldKey = function(f) {\n\t      return f.slice(1);\n\t    };\n\t    toCombinator = function(f) {\n\t      var key;\n\t      if (isFunction(f)) {\n\t        return f;\n\t      } else if (isFieldKey(f)) {\n\t        key = toFieldKey(f);\n\t        return function(left, right) {\n\t          return left[key](right);\n\t        };\n\t      } else {\n\t        return assert(\"not a function or a field key: \" + f, false);\n\t      }\n\t    };\n\t    toOption = function(v) {\n\t      if (v instanceof Some || v === None) {\n\t        return v;\n\t      } else {\n\t        return new Some(v);\n\t      }\n\t    };\n\t    _ = {\n\t      indexOf: Array.prototype.indexOf ? function(xs, x) {\n\t        return xs.indexOf(x);\n\t      } : function(xs, x) {\n\t        var i,\n\t            y,\n\t            _i,\n\t            _len;\n\t        for (i = _i = 0, _len = xs.length; _i < _len; i = ++_i) {\n\t          y = xs[i];\n\t          if (x === y) {\n\t            return i;\n\t          }\n\t        }\n\t        return -1;\n\t      },\n\t      indexWhere: function(xs, f) {\n\t        var i,\n\t            y,\n\t            _i,\n\t            _len;\n\t        for (i = _i = 0, _len = xs.length; _i < _len; i = ++_i) {\n\t          y = xs[i];\n\t          if (f(y)) {\n\t            return i;\n\t          }\n\t        }\n\t        return -1;\n\t      },\n\t      head: function(xs) {\n\t        return xs[0];\n\t      },\n\t      always: function(x) {\n\t        return function() {\n\t          return x;\n\t        };\n\t      },\n\t      negate: function(f) {\n\t        return function(x) {\n\t          return !f(x);\n\t        };\n\t      },\n\t      empty: function(xs) {\n\t        return xs.length === 0;\n\t      },\n\t      tail: function(xs) {\n\t        return xs.slice(1, xs.length);\n\t      },\n\t      filter: function(f, xs) {\n\t        var filtered,\n\t            x,\n\t            _i,\n\t            _len;\n\t        filtered = [];\n\t        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n\t          x = xs[_i];\n\t          if (f(x)) {\n\t            filtered.push(x);\n\t          }\n\t        }\n\t        return filtered;\n\t      },\n\t      map: function(f, xs) {\n\t        var x,\n\t            _i,\n\t            _len,\n\t            _results;\n\t        _results = [];\n\t        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n\t          x = xs[_i];\n\t          _results.push(f(x));\n\t        }\n\t        return _results;\n\t      },\n\t      each: function(xs, f) {\n\t        var key,\n\t            value,\n\t            _results;\n\t        _results = [];\n\t        for (key in xs) {\n\t          value = xs[key];\n\t          _results.push(f(key, value));\n\t        }\n\t        return _results;\n\t      },\n\t      toArray: function(xs) {\n\t        if (isArray(xs)) {\n\t          return xs;\n\t        } else {\n\t          return [xs];\n\t        }\n\t      },\n\t      contains: function(xs, x) {\n\t        return _.indexOf(xs, x) !== -1;\n\t      },\n\t      id: function(x) {\n\t        return x;\n\t      },\n\t      last: function(xs) {\n\t        return xs[xs.length - 1];\n\t      },\n\t      all: function(xs, f) {\n\t        var x,\n\t            _i,\n\t            _len;\n\t        if (f == null) {\n\t          f = _.id;\n\t        }\n\t        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n\t          x = xs[_i];\n\t          if (!f(x)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      },\n\t      any: function(xs, f) {\n\t        var x,\n\t            _i,\n\t            _len;\n\t        if (f == null) {\n\t          f = _.id;\n\t        }\n\t        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n\t          x = xs[_i];\n\t          if (f(x)) {\n\t            return true;\n\t          }\n\t        }\n\t        return false;\n\t      },\n\t      without: function(x, xs) {\n\t        return _.filter((function(y) {\n\t          return y !== x;\n\t        }), xs);\n\t      },\n\t      remove: function(x, xs) {\n\t        var i;\n\t        i = _.indexOf(xs, x);\n\t        if (i >= 0) {\n\t          return xs.splice(i, 1);\n\t        }\n\t      },\n\t      fold: function(xs, seed, f) {\n\t        var x,\n\t            _i,\n\t            _len;\n\t        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n\t          x = xs[_i];\n\t          seed = f(seed, x);\n\t        }\n\t        return seed;\n\t      },\n\t      flatMap: function(f, xs) {\n\t        return _.fold(xs, [], (function(ys, x) {\n\t          return ys.concat(f(x));\n\t        }));\n\t      },\n\t      cached: function(f) {\n\t        var value;\n\t        value = None;\n\t        return function() {\n\t          if (value === None) {\n\t            value = f();\n\t            f = null;\n\t          }\n\t          return value;\n\t        };\n\t      },\n\t      toString: function(obj) {\n\t        var ex,\n\t            internals,\n\t            key,\n\t            value;\n\t        try {\n\t          recursionDepth++;\n\t          if (obj == null) {\n\t            return \"undefined\";\n\t          } else if (isFunction(obj)) {\n\t            return \"function\";\n\t          } else if (isArray(obj)) {\n\t            if (recursionDepth > 5) {\n\t              return \"[..]\";\n\t            }\n\t            return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n\t          } else if (((obj != null ? obj.toString : void 0) != null) && obj.toString !== Object.prototype.toString) {\n\t            return obj.toString();\n\t          } else if (typeof obj === \"object\") {\n\t            if (recursionDepth > 5) {\n\t              return \"{..}\";\n\t            }\n\t            internals = (function() {\n\t              var _results;\n\t              _results = [];\n\t              for (key in obj) {\n\t                if (!__hasProp.call(obj, key))\n\t                  continue;\n\t                value = (function() {\n\t                  try {\n\t                    return obj[key];\n\t                  } catch (_error) {\n\t                    ex = _error;\n\t                    return ex;\n\t                  }\n\t                })();\n\t                _results.push(_.toString(key) + \":\" + _.toString(value));\n\t              }\n\t              return _results;\n\t            })();\n\t            return \"{\" + internals + \"}\";\n\t          } else {\n\t            return obj;\n\t          }\n\t        } finally {\n\t          recursionDepth--;\n\t        }\n\t      }\n\t    };\n\t    recursionDepth = 0;\n\t    Bacon._ = _;\n\t    Bacon.scheduler = {\n\t      setTimeout: function(f, d) {\n\t        return setTimeout(f, d);\n\t      },\n\t      setInterval: function(f, i) {\n\t        return setInterval(f, i);\n\t      },\n\t      clearInterval: function(id) {\n\t        return clearInterval(id);\n\t      },\n\t      now: function() {\n\t        return new Date().getTime();\n\t      }\n\t    };\n\t    if (('function' !== \"undefined\" && __webpack_require__(10) !== null) && (__webpack_require__(11) != null)) {\n\t      !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t        return Bacon;\n\t      }.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t      this.Bacon = Bacon;\n\t    } else if (typeof module !== \"undefined\" && module !== null) {\n\t      module.exports = Bacon;\n\t      Bacon.Bacon = Bacon;\n\t    } else {\n\t      this.Bacon = Bacon;\n\t    }\n\t  }).call(this);\n\t  return {};\n\t}.call(typeof global !== 'undefined' ? global : this);\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)(module), (function() { return this; }())))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(8), __webpack_require__(5), __webpack_require__(9), __webpack_require__(6)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/model\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(17), __webpack_require__(18)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var pipe = function(def, thisArg, func) {\n\t    var d = new can.Deferred();\n\t    def.then(function() {\n\t      var args = can.makeArray(arguments),\n\t          success = true;\n\t      try {\n\t        args[0] = func.apply(thisArg, args);\n\t      } catch (e) {\n\t        success = false;\n\t        d.rejectWith(d, [e].concat(args));\n\t      }\n\t      if (success) {\n\t        d.resolveWith(d, args);\n\t      }\n\t    }, function() {\n\t      d.rejectWith(this, arguments);\n\t    });\n\t    if (typeof def.abort === 'function') {\n\t      d.abort = function() {\n\t        return def.abort();\n\t      };\n\t    }\n\t    return d;\n\t  },\n\t      modelNum = 0,\n\t      getId = function(inst) {\n\t        can.__reading(inst, inst.constructor.id);\n\t        return inst.__get(inst.constructor.id);\n\t      },\n\t      ajax = function(ajaxOb, data, type, dataType, success, error) {\n\t        var params = {};\n\t        if (typeof ajaxOb === 'string') {\n\t          var parts = ajaxOb.split(/\\s+/);\n\t          params.url = parts.pop();\n\t          if (parts.length) {\n\t            params.type = parts.pop();\n\t          }\n\t        } else {\n\t          can.extend(params, ajaxOb);\n\t        }\n\t        params.data = typeof data === \"object\" && !can.isArray(data) ? can.extend(params.data || {}, data) : data;\n\t        params.url = can.sub(params.url, params.data, true);\n\t        return can.ajax(can.extend({\n\t          type: type || 'post',\n\t          dataType: dataType || 'json',\n\t          success: success,\n\t          error: error\n\t        }, params));\n\t      },\n\t      makeRequest = function(modelObj, type, success, error, method) {\n\t        var args;\n\t        if (can.isArray(modelObj)) {\n\t          args = modelObj[1];\n\t          modelObj = modelObj[0];\n\t        } else {\n\t          args = modelObj.serialize();\n\t        }\n\t        args = [args];\n\t        var deferred,\n\t            model = modelObj.constructor,\n\t            jqXHR;\n\t        if (type === 'update' || type === 'destroy') {\n\t          args.unshift(getId(modelObj));\n\t        }\n\t        jqXHR = model[type].apply(model, args);\n\t        deferred = pipe(jqXHR, modelObj, function(data) {\n\t          modelObj[method || type + \"d\"](data, jqXHR);\n\t          return modelObj;\n\t        });\n\t        if (jqXHR.abort) {\n\t          deferred.abort = function() {\n\t            jqXHR.abort();\n\t          };\n\t        }\n\t        deferred.then(success, error);\n\t        return deferred;\n\t      },\n\t      initializers = {\n\t        models: function(prop) {\n\t          return function(instancesRawData, oldList) {\n\t            can.Model._reqs++;\n\t            if (!instancesRawData) {\n\t              return;\n\t            }\n\t            if (instancesRawData instanceof this.List) {\n\t              return instancesRawData;\n\t            }\n\t            var self = this,\n\t                tmp = [],\n\t                ListClass = self.List || ML,\n\t                modelList = oldList instanceof can.List ? oldList : new ListClass(),\n\t                rawDataIsArray = can.isArray(instancesRawData),\n\t                rawDataIsList = instancesRawData instanceof ML,\n\t                raw = rawDataIsArray ? instancesRawData : (rawDataIsList ? instancesRawData.serialize() : can.getObject(prop || \"data\", instancesRawData));\n\t            if (typeof raw === 'undefined') {\n\t              throw new Error('Could not get any raw data while converting using .models');\n\t            }\n\t            if (modelList.length) {\n\t              modelList.splice(0);\n\t            }\n\t            can.each(raw, function(rawPart) {\n\t              tmp.push(self.model(rawPart));\n\t            });\n\t            modelList.push.apply(modelList, tmp);\n\t            if (!rawDataIsArray) {\n\t              can.each(instancesRawData, function(val, prop) {\n\t                if (prop !== 'data') {\n\t                  modelList.attr(prop, val);\n\t                }\n\t              });\n\t            }\n\t            setTimeout(can.proxy(this._clean, this), 1);\n\t            return modelList;\n\t          };\n\t        },\n\t        model: function(prop) {\n\t          return function(attributes) {\n\t            if (!attributes) {\n\t              return;\n\t            }\n\t            if (typeof attributes.serialize === 'function') {\n\t              attributes = attributes.serialize();\n\t            }\n\t            if (this.parseModel) {\n\t              attributes = this.parseModel.apply(this, arguments);\n\t            } else if (prop) {\n\t              attributes = can.getObject(prop || \"data\", attributes);\n\t            }\n\t            var id = attributes[this.id],\n\t                model = (id || id === 0) && this.store[id] ? this.store[id].attr(attributes, this.removeAttr || false) : new this(attributes);\n\t            return model;\n\t          };\n\t        }\n\t      },\n\t      parserMaker = function(prop) {\n\t        return function(attributes) {\n\t          return prop ? can.getObject(prop || \"data\", attributes) : attributes;\n\t        };\n\t      },\n\t      parsers = {\n\t        parseModel: parserMaker,\n\t        parseModels: parserMaker\n\t      },\n\t      ajaxMethods = {\n\t        create: {\n\t          url: \"_shortName\",\n\t          type: \"post\"\n\t        },\n\t        update: {\n\t          data: function(id, attrs) {\n\t            attrs = attrs || {};\n\t            var identity = this.id;\n\t            if (attrs[identity] && attrs[identity] !== id) {\n\t              attrs[\"new\" + can.capitalize(id)] = attrs[identity];\n\t              delete attrs[identity];\n\t            }\n\t            attrs[identity] = id;\n\t            return attrs;\n\t          },\n\t          type: \"put\"\n\t        },\n\t        destroy: {\n\t          type: 'delete',\n\t          data: function(id, attrs) {\n\t            attrs = attrs || {};\n\t            attrs.id = attrs[this.id] = id;\n\t            return attrs;\n\t          }\n\t        },\n\t        findAll: {url: \"_shortName\"},\n\t        findOne: {}\n\t      },\n\t      ajaxMaker = function(ajaxMethod, str) {\n\t        return function(data) {\n\t          data = ajaxMethod.data ? ajaxMethod.data.apply(this, arguments) : data;\n\t          return ajax(str || this[ajaxMethod.url || \"_url\"], data, ajaxMethod.type || \"get\");\n\t        };\n\t      },\n\t      createURLFromResource = function(model, name) {\n\t        if (!model.resource) {\n\t          return;\n\t        }\n\t        var resource = model.resource.replace(/\\/+$/, \"\");\n\t        if (name === \"findAll\" || name === \"create\") {\n\t          return resource;\n\t        } else {\n\t          return resource + \"/{\" + model.id + \"}\";\n\t        }\n\t      };\n\t  can.Model = can.Map.extend({\n\t    fullName: \"can.Model\",\n\t    _reqs: 0,\n\t    setup: function(base, fullName, staticProps, protoProps) {\n\t      if (fullName !== \"string\") {\n\t        protoProps = staticProps;\n\t        staticProps = fullName;\n\t      }\n\t      if (!protoProps) {\n\t        protoProps = staticProps;\n\t      }\n\t      this.store = {};\n\t      can.Map.setup.apply(this, arguments);\n\t      if (!can.Model) {\n\t        return;\n\t      }\n\t      if (staticProps && staticProps.List) {\n\t        this.List = staticProps.List;\n\t        this.List.Map = this;\n\t      } else {\n\t        this.List = base.List.extend({Map: this}, {});\n\t      }\n\t      var self = this,\n\t          clean = can.proxy(this._clean, self);\n\t      can.each(ajaxMethods, function(method, name) {\n\t        if (!can.isFunction(self[name])) {\n\t          self[name] = ajaxMaker(method, self[name] ? self[name] : createURLFromResource(self, name));\n\t        }\n\t        if (self[\"make\" + can.capitalize(name)]) {\n\t          var newMethod = self[\"make\" + can.capitalize(name)](self[name]);\n\t          can.Construct._overwrite(self, base, name, function() {\n\t            can.Model._reqs++;\n\t            var def = newMethod.apply(this, arguments);\n\t            var then = def.then(clean, clean);\n\t            then.abort = def.abort;\n\t            return then;\n\t          });\n\t        }\n\t      });\n\t      can.each(initializers, function(makeInitializer, name) {\n\t        var parseName = \"parse\" + can.capitalize(name),\n\t            dataProperty = self[name];\n\t        if (typeof dataProperty === \"string\") {\n\t          can.Construct._overwrite(self, base, parseName, parsers[parseName](dataProperty));\n\t          can.Construct._overwrite(self, base, name, makeInitializer(dataProperty));\n\t        } else if (!protoProps || (!protoProps[name] && !protoProps[parseName])) {\n\t          can.Construct._overwrite(self, base, parseName, parsers[parseName]());\n\t        }\n\t      });\n\t      can.each(parsers, function(makeParser, name) {\n\t        if (typeof self[name] === \"string\") {\n\t          can.Construct._overwrite(self, base, name, makeParser(self[name]));\n\t        }\n\t      });\n\t      if (self.fullName === \"can.Model\" || !self.fullName) {\n\t        self.fullName = \"Model\" + (++modelNum);\n\t      }\n\t      can.Model._reqs = 0;\n\t      this._url = this._shortName + \"/{\" + this.id + \"}\";\n\t    },\n\t    _ajax: ajaxMaker,\n\t    _makeRequest: makeRequest,\n\t    _clean: function() {\n\t      can.Model._reqs--;\n\t      if (!can.Model._reqs) {\n\t        for (var id in this.store) {\n\t          if (!this.store[id]._bindings) {\n\t            delete this.store[id];\n\t          }\n\t        }\n\t      }\n\t      return arguments[0];\n\t    },\n\t    models: initializers.models(\"data\"),\n\t    model: initializers.model()\n\t  }, {\n\t    setup: function(attrs) {\n\t      var id = attrs && attrs[this.constructor.id];\n\t      if (can.Model._reqs && id != null) {\n\t        this.constructor.store[id] = this;\n\t      }\n\t      can.Map.prototype.setup.apply(this, arguments);\n\t    },\n\t    isNew: function() {\n\t      var id = getId(this);\n\t      return !(id || id === 0);\n\t    },\n\t    save: function(success, error) {\n\t      return makeRequest(this, this.isNew() ? 'create' : 'update', success, error);\n\t    },\n\t    destroy: function(success, error) {\n\t      if (this.isNew()) {\n\t        var self = this;\n\t        var def = can.Deferred();\n\t        def.then(success, error);\n\t        return def.done(function(data) {\n\t          self.destroyed(data);\n\t        }).resolve(self);\n\t      }\n\t      return makeRequest(this, 'destroy', success, error, 'destroyed');\n\t    },\n\t    _bindsetup: function() {\n\t      this.constructor.store[this.__get(this.constructor.id)] = this;\n\t      return can.Map.prototype._bindsetup.apply(this, arguments);\n\t    },\n\t    _bindteardown: function() {\n\t      delete this.constructor.store[getId(this)];\n\t      return can.Map.prototype._bindteardown.apply(this, arguments);\n\t    },\n\t    ___set: function(prop, val) {\n\t      can.Map.prototype.___set.call(this, prop, val);\n\t      if (prop === this.constructor.id && this._bindings) {\n\t        this.constructor.store[getId(this)] = this;\n\t      }\n\t    }\n\t  });\n\t  var makeGetterHandler = function(name) {\n\t    var parseName = \"parse\" + can.capitalize(name);\n\t    return function(data) {\n\t      if (this[parseName]) {\n\t        data = this[parseName].apply(this, arguments);\n\t      }\n\t      return this[name](data);\n\t    };\n\t  },\n\t      createUpdateDestroyHandler = function(data) {\n\t        if (this.parseModel) {\n\t          return this.parseModel.apply(this, arguments);\n\t        } else {\n\t          return this.model(data);\n\t        }\n\t      };\n\t  var responseHandlers = {\n\t    makeFindAll: makeGetterHandler(\"models\"),\n\t    makeFindOne: makeGetterHandler(\"model\"),\n\t    makeCreate: createUpdateDestroyHandler,\n\t    makeUpdate: createUpdateDestroyHandler\n\t  };\n\t  can.each(responseHandlers, function(method, name) {\n\t    can.Model[name] = function(oldMethod) {\n\t      return function() {\n\t        var args = can.makeArray(arguments),\n\t            oldArgs = can.isFunction(args[1]) ? args.splice(0, 1) : args.splice(0, 2),\n\t            def = pipe(oldMethod.apply(this, oldArgs), this, method);\n\t        def.then(args[0], args[1]);\n\t        return def;\n\t      };\n\t    };\n\t  });\n\t  can.each([\"created\", \"updated\", \"destroyed\"], function(funcName) {\n\t    can.Model.prototype[funcName] = function(attrs) {\n\t      var stub,\n\t          constructor = this.constructor;\n\t      stub = attrs && typeof attrs === 'object' && this.attr(attrs.attr ? attrs.attr() : attrs);\n\t      can.trigger(this, \"change\", funcName);\n\t      can.trigger(constructor, funcName, this);\n\t    };\n\t  });\n\t  var ML = can.Model.List = can.List.extend({_bubbleRule: function(eventName, list) {\n\t      return can.List._bubbleRule(eventName, list) || \"destroyed\";\n\t    }}, {\n\t    setup: function(params) {\n\t      if (can.isPlainObject(params) && !can.isArray(params)) {\n\t        can.List.prototype.setup.apply(this);\n\t        this.replace(this.constructor.Map.findAll(params));\n\t      } else {\n\t        can.List.prototype.setup.apply(this, arguments);\n\t      }\n\t      this._init = 1;\n\t      this.bind('destroyed', can.proxy(this._destroyed, this));\n\t      delete this._init;\n\t    },\n\t    _destroyed: function(ev, attr) {\n\t      if (/\\w+/.test(attr)) {\n\t        var index;\n\t        while ((index = this.indexOf(ev.target)) > -1) {\n\t          this.splice(index, 1);\n\t        }\n\t      }\n\t    }\n\t  });\n\t  return can.Model;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/component\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(13), __webpack_require__(14), __webpack_require__(15), __webpack_require__(9), __webpack_require__(16)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can, viewCallbacks) {\n\t  var ignoreAttributesRegExp = /^(dataViewId|class|id)$/i,\n\t      paramReplacer = /\\{([^\\}]+)\\}/g;\n\t  var Component = can.Component = can.Construct.extend({setup: function() {\n\t      can.Construct.setup.apply(this, arguments);\n\t      if (can.Component) {\n\t        var self = this,\n\t            scope = this.prototype.scope;\n\t        this.Control = ComponentControl.extend(this.prototype.events);\n\t        if (!scope || (typeof scope === \"object\" && !(scope instanceof can.Map))) {\n\t          this.Map = can.Map.extend(scope || {});\n\t        } else if (scope.prototype instanceof can.Map) {\n\t          this.Map = scope;\n\t        }\n\t        this.attributeScopeMappings = {};\n\t        can.each(this.Map ? this.Map.defaults : {}, function(val, prop) {\n\t          if (val === \"@\") {\n\t            self.attributeScopeMappings[prop] = prop;\n\t          }\n\t        });\n\t        if (this.prototype.template) {\n\t          if (typeof this.prototype.template === \"function\") {\n\t            var temp = this.prototype.template;\n\t            this.renderer = function() {\n\t              return can.view.frag(temp.apply(null, arguments));\n\t            };\n\t          } else {\n\t            this.renderer = can.view.mustache(this.prototype.template);\n\t          }\n\t        }\n\t        can.view.tag(this.prototype.tag, function(el, options) {\n\t          new self(el, options);\n\t        });\n\t      }\n\t    }}, {setup: function(el, hookupOptions) {\n\t      var initalScopeData = {},\n\t          component = this,\n\t          twoWayBindings = {},\n\t          scopePropertyUpdating,\n\t          componentScope,\n\t          frag;\n\t      can.each(this.constructor.attributeScopeMappings, function(val, prop) {\n\t        initalScopeData[prop] = el.getAttribute(can.hyphenate(val));\n\t      });\n\t      can.each(can.makeArray(el.attributes), function(node, index) {\n\t        var name = can.camelize(node.nodeName.toLowerCase()),\n\t            value = node.value;\n\t        if (component.constructor.attributeScopeMappings[name] || ignoreAttributesRegExp.test(name) || viewCallbacks.attr(node.nodeName)) {\n\t          return;\n\t        }\n\t        if (value[0] === \"{\" && value[value.length - 1] === \"}\") {\n\t          value = value.substr(1, value.length - 2);\n\t        } else {\n\t          if (hookupOptions.templateType !== \"legacy\") {\n\t            initalScopeData[name] = value;\n\t            return;\n\t          }\n\t        }\n\t        var computeData = hookupOptions.scope.computeData(value, {args: []}),\n\t            compute = computeData.compute;\n\t        var handler = function(ev, newVal) {\n\t          scopePropertyUpdating = name;\n\t          componentScope.attr(name, newVal);\n\t          scopePropertyUpdating = null;\n\t        };\n\t        compute.bind(\"change\", handler);\n\t        initalScopeData[name] = compute();\n\t        if (!compute.hasDependencies) {\n\t          compute.unbind(\"change\", handler);\n\t        } else {\n\t          can.bind.call(el, \"removed\", function() {\n\t            compute.unbind(\"change\", handler);\n\t          });\n\t          twoWayBindings[name] = computeData;\n\t        }\n\t      });\n\t      if (this.constructor.Map) {\n\t        componentScope = new this.constructor.Map(initalScopeData);\n\t      } else if (this.scope instanceof can.Map) {\n\t        componentScope = this.scope;\n\t      } else if (can.isFunction(this.scope)) {\n\t        var scopeResult = this.scope(initalScopeData, hookupOptions.scope, el);\n\t        if (scopeResult instanceof can.Map) {\n\t          componentScope = scopeResult;\n\t        } else if (scopeResult.prototype instanceof can.Map) {\n\t          componentScope = new scopeResult(initalScopeData);\n\t        } else {\n\t          componentScope = new (can.Map.extend(scopeResult))(initalScopeData);\n\t        }\n\t      }\n\t      var handlers = {};\n\t      can.each(twoWayBindings, function(computeData, prop) {\n\t        handlers[prop] = function(ev, newVal) {\n\t          if (scopePropertyUpdating !== prop) {\n\t            computeData.compute(newVal);\n\t          }\n\t        };\n\t        componentScope.bind(prop, handlers[prop]);\n\t      });\n\t      can.bind.call(el, \"removed\", function() {\n\t        can.each(handlers, function(handler, prop) {\n\t          componentScope.unbind(prop, handlers[prop]);\n\t        });\n\t      });\n\t      if (!can.isEmptyObject(this.constructor.attributeScopeMappings) || hookupOptions.templateType !== \"legacy\") {\n\t        can.bind.call(el, \"attributes\", function(ev) {\n\t          var camelized = can.camelize(ev.attributeName);\n\t          if (!twoWayBindings[camelized]) {\n\t            componentScope.attr(camelized, el.getAttribute(ev.attributeName));\n\t          }\n\t        });\n\t      }\n\t      this.scope = componentScope;\n\t      can.data(can.$(el), \"scope\", this.scope);\n\t      var renderedScope = hookupOptions.scope.add(this.scope),\n\t          options = {helpers: {}};\n\t      can.each(this.helpers || {}, function(val, prop) {\n\t        if (can.isFunction(val)) {\n\t          options.helpers[prop] = function() {\n\t            return val.apply(componentScope, arguments);\n\t          };\n\t        }\n\t      });\n\t      this._control = new this.constructor.Control(el, {scope: this.scope});\n\t      if (this.constructor.renderer) {\n\t        if (!options.tags) {\n\t          options.tags = {};\n\t        }\n\t        options.tags.content = function contentHookup(el, rendererOptions) {\n\t          var subtemplate = hookupOptions.subtemplate || rendererOptions.subtemplate;\n\t          if (subtemplate) {\n\t            delete options.tags.content;\n\t            can.view.live.replace([el], subtemplate(rendererOptions.scope, rendererOptions.options));\n\t            options.tags.content = contentHookup;\n\t          }\n\t        };\n\t        frag = this.constructor.renderer(renderedScope, hookupOptions.options.add(options));\n\t      } else {\n\t        if (hookupOptions.templateType === \"legacy\") {\n\t          frag = can.view.frag(hookupOptions.subtemplate ? hookupOptions.subtemplate(renderedScope, hookupOptions.options.add(options)) : \"\");\n\t        } else {\n\t          frag = hookupOptions.subtemplate ? hookupOptions.subtemplate(renderedScope, hookupOptions.options.add(options)) : document.createDocumentFragment();\n\t        }\n\t      }\n\t      can.appendChild(el, frag);\n\t    }});\n\t  var ComponentControl = can.Control.extend({\n\t    _lookup: function(options) {\n\t      return [options.scope, options, window];\n\t    },\n\t    _action: function(methodName, options, controlInstance) {\n\t      var hasObjectLookup,\n\t          readyCompute;\n\t      paramReplacer.lastIndex = 0;\n\t      hasObjectLookup = paramReplacer.test(methodName);\n\t      if (!controlInstance && hasObjectLookup) {\n\t        return;\n\t      } else if (!hasObjectLookup) {\n\t        return can.Control._action.apply(this, arguments);\n\t      } else {\n\t        readyCompute = can.compute(function() {\n\t          var delegate;\n\t          var name = methodName.replace(paramReplacer, function(matched, key) {\n\t            var value;\n\t            if (key === \"scope\") {\n\t              delegate = options.scope;\n\t              return \"\";\n\t            }\n\t            key = key.replace(/^scope\\./, \"\");\n\t            value = can.compute.read(options.scope, key.split(\".\"), {isArgument: true}).value;\n\t            if (value === undefined) {\n\t              value = can.getObject(key);\n\t            }\n\t            if (typeof value === \"string\") {\n\t              return value;\n\t            } else {\n\t              delegate = value;\n\t              return \"\";\n\t            }\n\t          });\n\t          var parts = name.split(/\\s+/g),\n\t              event = parts.pop();\n\t          return {\n\t            processor: this.processors[event] || this.processors.click,\n\t            parts: [name, parts.join(\" \"), event],\n\t            delegate: delegate || undefined\n\t          };\n\t        }, this);\n\t        var handler = function(ev, ready) {\n\t          controlInstance._bindings.control[methodName](controlInstance.element);\n\t          controlInstance._bindings.control[methodName] = ready.processor(ready.delegate || controlInstance.element, ready.parts[2], ready.parts[1], methodName, controlInstance);\n\t        };\n\t        readyCompute.bind(\"change\", handler);\n\t        controlInstance._bindings.readyComputes[methodName] = {\n\t          compute: readyCompute,\n\t          handler: handler\n\t        };\n\t        return readyCompute();\n\t      }\n\t    }\n\t  }, {\n\t    setup: function(el, options) {\n\t      this.scope = options.scope;\n\t      return can.Control.prototype.setup.call(this, el, options);\n\t    },\n\t    off: function() {\n\t      if (this._bindings) {\n\t        can.each(this._bindings.readyComputes || {}, function(value) {\n\t          value.compute.unbind(\"change\", value.handler);\n\t        });\n\t      }\n\t      can.Control.prototype.off.apply(this, arguments);\n\t      this._bindings.readyComputes = {};\n\t    }\n\t  });\n\t  if (window.$ && $.fn) {\n\t    $.fn.scope = function(attr) {\n\t      if (attr) {\n\t        return this.data(\"scope\").attr(attr);\n\t      } else {\n\t        return this.data(\"scope\");\n\t      }\n\t    };\n\t  }\n\t  can.scope = function(el, attr) {\n\t    el = can.$(el);\n\t    if (attr) {\n\t      return can.data(el, \"scope\").attr(attr);\n\t    } else {\n\t      return can.data(el, \"scope\");\n\t    }\n\t  };\n\t  return Component;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/library\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(25)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/control/route\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(19), __webpack_require__(14)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  can.Control.processors.route = function(el, event, selector, funcName, controller) {\n\t    selector = selector || \"\";\n\t    if (!can.route.routes[selector]) {\n\t      if (selector[0] === '/') {\n\t        selector = selector.substring(1);\n\t      }\n\t      can.route(selector);\n\t    }\n\t    var batchNum,\n\t        check = function(ev, attr, how) {\n\t          if (can.route.attr('route') === (selector) && (ev.batchNum === undefined || ev.batchNum !== batchNum)) {\n\t            batchNum = ev.batchNum;\n\t            var d = can.route.attr();\n\t            delete d.route;\n\t            if (can.isFunction(controller[funcName])) {\n\t              controller[funcName](d);\n\t            } else {\n\t              controller[controller[funcName]](d);\n\t            }\n\t          }\n\t        };\n\t    can.route.bind('change', check);\n\t    return function() {\n\t      can.route.unbind('change', check);\n\t    };\n\t  };\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/mustache\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(20), __webpack_require__(21), __webpack_require__(22), __webpack_require__(23), __webpack_require__(24)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  can.view.ext = \".mustache\";\n\t  var SCOPE = 'scope',\n\t      HASH = '___h4sh',\n\t      CONTEXT_OBJ = '{scope:' + SCOPE + ',options:options}',\n\t      SPECIAL_CONTEXT_OBJ = '{scope:' + SCOPE + ',options:options, special: true}',\n\t      ARG_NAMES = SCOPE + \",options\",\n\t      argumentsRegExp = /((([^\\s]+?=)?('.*?'|\".*?\"))|.*?)\\s/g,\n\t      literalNumberStringBooleanRegExp = /^(('.*?'|\".*?\"|[0-9]+\\.?[0-9]*|true|false|null|undefined)|((.+?)=(('.*?'|\".*?\"|[0-9]+\\.?[0-9]*|true|false)|(.+))))$/,\n\t      makeLookupLiteral = function(type) {\n\t        return '{get:\"' + type.replace(/\"/g, '\\\\\"') + '\"}';\n\t      },\n\t      isLookup = function(obj) {\n\t        return obj && typeof obj.get === \"string\";\n\t      },\n\t      isObserveLike = function(obj) {\n\t        return obj instanceof can.Map || (obj && !!obj._get);\n\t      },\n\t      isArrayLike = function(obj) {\n\t        return obj && obj.splice && typeof obj.length === 'number';\n\t      },\n\t      makeConvertToScopes = function(original, scope, options) {\n\t        var originalWithScope = function(ctx, opts) {\n\t          return original(ctx || scope, opts);\n\t        };\n\t        return function(updatedScope, updatedOptions) {\n\t          if (updatedScope !== undefined && !(updatedScope instanceof can.view.Scope)) {\n\t            updatedScope = scope.add(updatedScope);\n\t          }\n\t          if (updatedOptions !== undefined && !(updatedOptions instanceof can.view.Options)) {\n\t            updatedOptions = options.add(updatedOptions);\n\t          }\n\t          return originalWithScope(updatedScope, updatedOptions || options);\n\t        };\n\t      };\n\t  var Mustache = function(options, helpers) {\n\t    if (this.constructor !== Mustache) {\n\t      var mustache = new Mustache(options);\n\t      return function(data, options) {\n\t        return mustache.render(data, options);\n\t      };\n\t    }\n\t    if (typeof options === \"function\") {\n\t      this.template = {fn: options};\n\t      return;\n\t    }\n\t    can.extend(this, options);\n\t    this.template = this.scanner.scan(this.text, this.name);\n\t  };\n\t  can.Mustache = window.Mustache = Mustache;\n\t  Mustache.prototype.render = function(data, options) {\n\t    if (!(data instanceof can.view.Scope)) {\n\t      data = new can.view.Scope(data || {});\n\t    }\n\t    if (!(options instanceof can.view.Options)) {\n\t      options = new can.view.Options(options || {});\n\t    }\n\t    options = options || {};\n\t    return this.template.fn.call(data, data, options);\n\t  };\n\t  can.extend(Mustache.prototype, {scanner: new can.view.Scanner({\n\t      text: {\n\t        start: \"\",\n\t        scope: SCOPE,\n\t        options: \",options: options\",\n\t        argNames: ARG_NAMES\n\t      },\n\t      tokens: [[\"returnLeft\", \"{{{\", \"{{[{&]\"], [\"commentFull\", \"{{!}}\", \"^[\\\\s\\\\t]*{{!.+?}}\\\\n\"], [\"commentLeft\", \"{{!\", \"(\\\\n[\\\\s\\\\t]*{{!|{{!)\"], [\"escapeFull\", \"{{}}\", \"(^[\\\\s\\\\t]*{{[#/^][^}]+?}}\\\\n|\\\\n[\\\\s\\\\t]*{{[#/^][^}]+?}}\\\\n|\\\\n[\\\\s\\\\t]*{{[#/^][^}]+?}}$)\", function(content) {\n\t        return {\n\t          before: /^\\n.+?\\n$/.test(content) ? '\\n' : '',\n\t          content: content.match(/\\{\\{(.+?)\\}\\}/)[1] || ''\n\t        };\n\t      }], [\"escapeLeft\", \"{{\"], [\"returnRight\", \"}}}\"], [\"right\", \"}}\"]],\n\t      helpers: [{\n\t        name: /^>[\\s]*\\w*/,\n\t        fn: function(content, cmd) {\n\t          var templateName = can.trim(content.replace(/^>\\s?/, '')).replace(/[\"|']/g, \"\");\n\t          return \"can.Mustache.renderPartial('\" + templateName + \"',\" + ARG_NAMES + \")\";\n\t        }\n\t      }, {\n\t        name: /^\\s*data\\s/,\n\t        fn: function(content, cmd) {\n\t          var attr = content.match(/[\"|'](.*)[\"|']/)[1];\n\t          return \"can.proxy(function(__){\" + \"can.data(can.$(__),'\" + attr + \"', this.attr('.')); }, \" + SCOPE + \")\";\n\t        }\n\t      }, {\n\t        name: /\\s*\\(([\\$\\w]+)\\)\\s*->([^\\n]*)/,\n\t        fn: function(content) {\n\t          var quickFunc = /\\s*\\(([\\$\\w]+)\\)\\s*->([^\\n]*)/,\n\t              parts = content.match(quickFunc);\n\t          return \"can.proxy(function(__){var \" + parts[1] + \"=can.$(__);with(\" + SCOPE + \".attr('.')){\" + parts[2] + \"}}, this);\";\n\t        }\n\t      }, {\n\t        name: /^.*$/,\n\t        fn: function(content, cmd) {\n\t          var mode = false,\n\t              result = {\n\t                content: \"\",\n\t                startTxt: false,\n\t                startOnlyTxt: false,\n\t                end: false\n\t              };\n\t          content = can.trim(content);\n\t          if (content.length && (mode = content.match(/^([#^/]|else$)/))) {\n\t            mode = mode[0];\n\t            switch (mode) {\n\t              case '#':\n\t              case '^':\n\t                if (cmd.specialAttribute) {\n\t                  result.startOnlyTxt = true;\n\t                } else {\n\t                  result.startTxt = true;\n\t                  result.escaped = 0;\n\t                }\n\t                break;\n\t              case '/':\n\t                result.end = true;\n\t                result.content += 'return ___v1ew.join(\"\");}}])';\n\t                return result;\n\t            }\n\t            content = content.substring(1);\n\t          }\n\t          if (mode !== 'else') {\n\t            var args = [],\n\t                hashes = [],\n\t                i = 0,\n\t                m;\n\t            result.content += 'can.Mustache.txt(\\n' + (cmd.specialAttribute ? SPECIAL_CONTEXT_OBJ : CONTEXT_OBJ) + ',\\n' + (mode ? '\"' + mode + '\"' : 'null') + ',';\n\t            (can.trim(content) + ' ').replace(argumentsRegExp, function(whole, arg) {\n\t              if (i && (m = arg.match(literalNumberStringBooleanRegExp))) {\n\t                if (m[2]) {\n\t                  args.push(m[0]);\n\t                } else {\n\t                  hashes.push(m[4] + \":\" + (m[6] ? m[6] : makeLookupLiteral(m[5])));\n\t                }\n\t              } else {\n\t                args.push(makeLookupLiteral(arg));\n\t              }\n\t              i++;\n\t            });\n\t            result.content += args.join(\",\");\n\t            if (hashes.length) {\n\t              result.content += \",{\" + HASH + \":{\" + hashes.join(\",\") + \"}}\";\n\t            }\n\t          }\n\t          if (mode && mode !== 'else') {\n\t            result.content += ',[\\n\\n';\n\t          }\n\t          switch (mode) {\n\t            case '^':\n\t            case '#':\n\t              result.content += ('{fn:function(' + ARG_NAMES + '){var ___v1ew = [];');\n\t              break;\n\t            case 'else':\n\t              result.content += 'return ___v1ew.join(\"\");}},\\n{inverse:function(' + ARG_NAMES + '){\\nvar ___v1ew = [];';\n\t              break;\n\t            default:\n\t              result.content += (')');\n\t              break;\n\t          }\n\t          if (!mode) {\n\t            result.startTxt = true;\n\t            result.end = true;\n\t          }\n\t          return result;\n\t        }\n\t      }]\n\t    })});\n\t  var helpers = can.view.Scanner.prototype.helpers;\n\t  for (var i = 0; i < helpers.length; i++) {\n\t    Mustache.prototype.scanner.helpers.unshift(helpers[i]);\n\t  }\n\t  Mustache.txt = function(scopeAndOptions, mode, name) {\n\t    var scope = scopeAndOptions.scope,\n\t        options = scopeAndOptions.options,\n\t        args = [],\n\t        helperOptions = {\n\t          fn: function() {},\n\t          inverse: function() {}\n\t        },\n\t        hash,\n\t        context = scope.attr(\".\"),\n\t        getHelper = true,\n\t        helper;\n\t    for (var i = 3; i < arguments.length; i++) {\n\t      var arg = arguments[i];\n\t      if (mode && can.isArray(arg)) {\n\t        helperOptions = can.extend.apply(can, [helperOptions].concat(arg));\n\t      } else if (arg && arg[HASH]) {\n\t        hash = arg[HASH];\n\t        for (var prop in hash) {\n\t          if (isLookup(hash[prop])) {\n\t            hash[prop] = Mustache.get(hash[prop].get, scopeAndOptions, false, true);\n\t          }\n\t        }\n\t      } else if (arg && isLookup(arg)) {\n\t        args.push(Mustache.get(arg.get, scopeAndOptions, false, true));\n\t      } else {\n\t        args.push(arg);\n\t      }\n\t    }\n\t    if (isLookup(name)) {\n\t      var get = name.get;\n\t      name = Mustache.get(name.get, scopeAndOptions, args.length, false);\n\t      getHelper = (get === name);\n\t    }\n\t    helperOptions.fn = makeConvertToScopes(helperOptions.fn, scope, options);\n\t    helperOptions.inverse = makeConvertToScopes(helperOptions.inverse, scope, options);\n\t    if (mode === '^') {\n\t      var tmp = helperOptions.fn;\n\t      helperOptions.fn = helperOptions.inverse;\n\t      helperOptions.inverse = tmp;\n\t    }\n\t    if (helper = (getHelper && (typeof name === \"string\" && Mustache.getHelper(name, options)) || (can.isFunction(name) && !name.isComputed && {fn: name}))) {\n\t      can.extend(helperOptions, {\n\t        context: context,\n\t        scope: scope,\n\t        contexts: scope,\n\t        hash: hash\n\t      });\n\t      args.push(helperOptions);\n\t      return function() {\n\t        return helper.fn.apply(context, args) || '';\n\t      };\n\t    }\n\t    return function() {\n\t      var value;\n\t      if (can.isFunction(name) && name.isComputed) {\n\t        value = name();\n\t      } else {\n\t        value = name;\n\t      }\n\t      var validArgs = args.length ? args : [value],\n\t          valid = true,\n\t          result = [],\n\t          i,\n\t          argIsObserve,\n\t          arg;\n\t      if (mode) {\n\t        for (i = 0; i < validArgs.length; i++) {\n\t          arg = validArgs[i];\n\t          argIsObserve = typeof arg !== 'undefined' && isObserveLike(arg);\n\t          if (isArrayLike(arg)) {\n\t            if (mode === '#') {\n\t              valid = valid && !!(argIsObserve ? arg.attr('length') : arg.length);\n\t            } else if (mode === '^') {\n\t              valid = valid && !(argIsObserve ? arg.attr('length') : arg.length);\n\t            }\n\t          } else {\n\t            valid = mode === '#' ? valid && !!arg : mode === '^' ? valid && !arg : valid;\n\t          }\n\t        }\n\t      }\n\t      if (valid) {\n\t        if (mode === \"#\") {\n\t          if (isArrayLike(value)) {\n\t            var isObserveList = isObserveLike(value);\n\t            for (i = 0; i < value.length; i++) {\n\t              result.push(helperOptions.fn(isObserveList ? value.attr('' + i) : value[i]));\n\t            }\n\t            return result.join('');\n\t          } else {\n\t            return helperOptions.fn(value || {}) || '';\n\t          }\n\t        } else if (mode === \"^\") {\n\t          return helperOptions.inverse(value || {}) || '';\n\t        } else {\n\t          return '' + (value != null ? value : '');\n\t        }\n\t      }\n\t      return '';\n\t    };\n\t  };\n\t  Mustache.get = function(key, scopeAndOptions, isHelper, isArgument) {\n\t    var context = scopeAndOptions.scope.attr('.'),\n\t        options = scopeAndOptions.options || {};\n\t    if (isHelper) {\n\t      if (Mustache.getHelper(key, options)) {\n\t        return key;\n\t      }\n\t      if (scopeAndOptions.scope && can.isFunction(context[key])) {\n\t        return context[key];\n\t      }\n\t    }\n\t    var computeData = scopeAndOptions.scope.computeData(key, {\n\t      isArgument: isArgument,\n\t      args: [context, scopeAndOptions.scope]\n\t    }),\n\t        compute = computeData.compute;\n\t    can.compute.temporarilyBind(compute);\n\t    var initialValue = computeData.initialValue;\n\t    if ((initialValue === undefined || computeData.scope !== scopeAndOptions.scope) && Mustache.getHelper(key, options)) {\n\t      return key;\n\t    }\n\t    if (!compute.hasDependencies) {\n\t      return initialValue;\n\t    } else {\n\t      return compute;\n\t    }\n\t  };\n\t  Mustache.resolve = function(value) {\n\t    if (isObserveLike(value) && isArrayLike(value) && value.attr('length')) {\n\t      return value;\n\t    } else if (can.isFunction(value)) {\n\t      return value();\n\t    } else {\n\t      return value;\n\t    }\n\t  };\n\t  can.view.Options = can.view.Scope.extend({init: function(data, parent) {\n\t      if (!data.helpers && !data.partials && !data.tags) {\n\t        data = {helpers: data};\n\t      }\n\t      can.view.Scope.prototype.init.apply(this, arguments);\n\t    }});\n\t  Mustache._helpers = {};\n\t  Mustache.registerHelper = function(name, fn) {\n\t    this._helpers[name] = {\n\t      name: name,\n\t      fn: fn\n\t    };\n\t  };\n\t  Mustache.getHelper = function(name, options) {\n\t    var helper = options.attr(\"helpers.\" + name);\n\t    return helper ? {fn: helper} : this._helpers[name];\n\t  };\n\t  Mustache.render = function(partial, scope, options) {\n\t    if (!can.view.cached[partial]) {\n\t      var reads = can.__clearReading();\n\t      if (scope.attr('partial')) {\n\t        partial = scope.attr('partial');\n\t      }\n\t      can.__setReading(reads);\n\t    }\n\t    return can.view.render(partial, scope);\n\t  };\n\t  Mustache.safeString = function(str) {\n\t    return {toString: function() {\n\t        return str;\n\t      }};\n\t  };\n\t  Mustache.renderPartial = function(partialName, scope, options) {\n\t    var partial = options.attr(\"partials.\" + partialName);\n\t    if (partial) {\n\t      return partial.render ? partial.render(scope, options) : partial(scope, options);\n\t    } else {\n\t      return can.Mustache.render(partialName, scope, options);\n\t    }\n\t  };\n\t  can.each({\n\t    'if': function(expr, options) {\n\t      var value;\n\t      if (can.isFunction(expr)) {\n\t        value = can.compute.truthy(expr)();\n\t      } else {\n\t        value = !!Mustache.resolve(expr);\n\t      }\n\t      if (value) {\n\t        return options.fn(options.contexts || this);\n\t      } else {\n\t        return options.inverse(options.contexts || this);\n\t      }\n\t    },\n\t    'unless': function(expr, options) {\n\t      if (!Mustache.resolve(expr)) {\n\t        return options.fn(options.contexts || this);\n\t      }\n\t    },\n\t    'each': function(expr, options) {\n\t      var resolved = Mustache.resolve(expr),\n\t          result = [],\n\t          keys,\n\t          key,\n\t          i;\n\t      if (can.view.lists && (resolved instanceof can.List || (expr && expr.isComputed && resolved === undefined))) {\n\t        return can.view.lists(expr, function(item, index) {\n\t          return options.fn(options.scope.add({\"@index\": index}).add(item));\n\t        });\n\t      }\n\t      expr = resolved;\n\t      if (!!expr && isArrayLike(expr)) {\n\t        for (i = 0; i < expr.length; i++) {\n\t          result.push(options.fn(options.scope.add({\"@index\": i}).add(expr[i])));\n\t        }\n\t        return result.join('');\n\t      } else if (isObserveLike(expr)) {\n\t        keys = can.Map.keys(expr);\n\t        for (i = 0; i < keys.length; i++) {\n\t          key = keys[i];\n\t          result.push(options.fn(options.scope.add({\"@key\": key}).add(expr[key])));\n\t        }\n\t        return result.join('');\n\t      } else if (expr instanceof Object) {\n\t        for (key in expr) {\n\t          result.push(options.fn(options.scope.add({\"@key\": key}).add(expr[key])));\n\t        }\n\t        return result.join('');\n\t      }\n\t    },\n\t    'with': function(expr, options) {\n\t      var ctx = expr;\n\t      expr = Mustache.resolve(expr);\n\t      if (!!expr) {\n\t        return options.fn(ctx);\n\t      }\n\t    },\n\t    'log': function(expr, options) {\n\t      if (typeof console !== \"undefined\" && console.log) {\n\t        if (!options) {\n\t          console.log(expr.context);\n\t        } else {\n\t          console.log(expr, options.context);\n\t        }\n\t      }\n\t    }\n\t  }, function(fn, name) {\n\t    Mustache.registerHelper(name, fn);\n\t  });\n\t  can.view.register({\n\t    suffix: \"mustache\",\n\t    contentType: \"x-mustache-template\",\n\t    script: function(id, src) {\n\t      return \"can.Mustache(function(\" + ARG_NAMES + \") { \" + new Mustache({\n\t        text: src,\n\t        name: id\n\t      }).template.out + \" })\";\n\t    },\n\t    renderer: function(id, text) {\n\t      return Mustache({\n\t        text: text,\n\t        name: id\n\t      });\n\t    }\n\t  });\n\t  can.mustache.registerHelper = can.proxy(can.Mustache.registerHelper, can.Mustache);\n\t  can.mustache.safeString = can.Mustache.safeString;\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __moduleName = \"node_modules/webpack/buildin/module\";\n\tmodule.exports = function(module) {\n\t  if (!module.webpackPolyfill) {\n\t    module.deprecate = function() {};\n\t    module.paths = [];\n\t    module.children = [];\n\t    module.webpackPolyfill = 1;\n\t  }\n\t  return module;\n\t};\n\t\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/callbacks\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(21)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var attr = can.view.attr = function(attributeName, attrHandler) {\n\t    if (attrHandler) {\n\t      if (typeof attributeName === \"string\") {\n\t        attributes[attributeName] = attrHandler;\n\t      } else {\n\t        regExpAttributes.push({\n\t          match: attributeName,\n\t          handler: attrHandler\n\t        });\n\t      }\n\t    } else {\n\t      var cb = attributes[attributeName];\n\t      if (!cb) {\n\t        for (var i = 0,\n\t            len = regExpAttributes.length; i < len; i++) {\n\t          var attrMatcher = regExpAttributes[i];\n\t          if (attrMatcher.match.test(attributeName)) {\n\t            cb = attrMatcher.handler;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      return cb;\n\t    }\n\t  };\n\t  var attributes = {},\n\t      regExpAttributes = [],\n\t      automaticCustomElementCharacters = /[-\\:]/;\n\t  var tag = can.view.tag = function(tagName, tagHandler) {\n\t    if (tagHandler) {\n\t      if (window.html5) {\n\t        window.html5.elements += \" \" + tagName;\n\t        window.html5.shivDocument();\n\t      }\n\t      tags[tagName.toLowerCase()] = tagHandler;\n\t    } else {\n\t      var cb = tags[tagName.toLowerCase()];\n\t      if (!cb && automaticCustomElementCharacters.test(tagName)) {\n\t        cb = function() {};\n\t      }\n\t      return cb;\n\t    }\n\t  };\n\t  var tags = {};\n\t  can.view.callbacks = {\n\t    _tags: tags,\n\t    _attributes: attributes,\n\t    _regExpAttributes: regExpAttributes,\n\t    tag: tag,\n\t    attr: attr,\n\t    tagHandler: function(el, tagName, tagData) {\n\t      var helperTagCallback = tagData.options.read('tags.' + tagName, {\n\t        isArgument: true,\n\t        proxyMethods: false\n\t      }).value,\n\t          tagCallback = helperTagCallback || tags[tagName];\n\t      var scope = tagData.scope,\n\t          res = tagCallback ? tagCallback(el, tagData) : scope;\n\t      if (res && tagData.subtemplate) {\n\t        if (scope !== res) {\n\t          scope = scope.add(res);\n\t        }\n\t        var result = tagData.subtemplate(scope, tagData.options);\n\t        var frag = typeof result === \"string\" ? can.view.frag(result) : result;\n\t        can.appendChild(el, frag);\n\t      }\n\t    }\n\t  };\n\t  return can.view.callbacks;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/control\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(27)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var bind = function(el, ev, callback) {\n\t    can.bind.call(el, ev, callback);\n\t    return function() {\n\t      can.unbind.call(el, ev, callback);\n\t    };\n\t  },\n\t      isFunction = can.isFunction,\n\t      extend = can.extend,\n\t      each = can.each,\n\t      slice = [].slice,\n\t      paramReplacer = /\\{([^\\}]+)\\}/g,\n\t      special = can.getObject(\"$.event.special\", [can]) || {},\n\t      delegate = function(el, selector, ev, callback) {\n\t        can.delegate.call(el, selector, ev, callback);\n\t        return function() {\n\t          can.undelegate.call(el, selector, ev, callback);\n\t        };\n\t      },\n\t      binder = function(el, ev, callback, selector) {\n\t        return selector ? delegate(el, can.trim(selector), ev, callback) : bind(el, ev, callback);\n\t      },\n\t      basicProcessor;\n\t  var Control = can.Control = can.Construct({\n\t    setup: function() {\n\t      can.Construct.setup.apply(this, arguments);\n\t      if (can.Control) {\n\t        var control = this,\n\t            funcName;\n\t        control.actions = {};\n\t        for (funcName in control.prototype) {\n\t          if (control._isAction(funcName)) {\n\t            control.actions[funcName] = control._action(funcName);\n\t          }\n\t        }\n\t      }\n\t    },\n\t    _shifter: function(context, name) {\n\t      var method = typeof name === \"string\" ? context[name] : name;\n\t      if (!isFunction(method)) {\n\t        method = context[method];\n\t      }\n\t      return function() {\n\t        context.called = name;\n\t        return method.apply(context, [this.nodeName ? can.$(this) : this].concat(slice.call(arguments, 0)));\n\t      };\n\t    },\n\t    _isAction: function(methodName) {\n\t      var val = this.prototype[methodName],\n\t          type = typeof val;\n\t      return (methodName !== 'constructor') && (type === \"function\" || (type === \"string\" && isFunction(this.prototype[val]))) && !!(special[methodName] || processors[methodName] || /[^\\w]/.test(methodName));\n\t    },\n\t    _action: function(methodName, options) {\n\t      paramReplacer.lastIndex = 0;\n\t      if (options || !paramReplacer.test(methodName)) {\n\t        var convertedName = options ? can.sub(methodName, this._lookup(options)) : methodName;\n\t        if (!convertedName) {\n\t          return null;\n\t        }\n\t        var arr = can.isArray(convertedName),\n\t            name = arr ? convertedName[1] : convertedName,\n\t            parts = name.split(/\\s+/g),\n\t            event = parts.pop();\n\t        return {\n\t          processor: processors[event] || basicProcessor,\n\t          parts: [name, parts.join(\" \"), event],\n\t          delegate: arr ? convertedName[0] : undefined\n\t        };\n\t      }\n\t    },\n\t    _lookup: function(options) {\n\t      return [options, window];\n\t    },\n\t    processors: {},\n\t    defaults: {}\n\t  }, {\n\t    setup: function(element, options) {\n\t      var cls = this.constructor,\n\t          pluginname = cls.pluginName || cls._fullName,\n\t          arr;\n\t      this.element = can.$(element);\n\t      if (pluginname && pluginname !== 'can_control') {\n\t        this.element.addClass(pluginname);\n\t      }\n\t      arr = can.data(this.element, 'controls');\n\t      if (!arr) {\n\t        arr = [];\n\t        can.data(this.element, 'controls', arr);\n\t      }\n\t      arr.push(this);\n\t      this.options = extend({}, cls.defaults, options);\n\t      this.on();\n\t      return [this.element, this.options];\n\t    },\n\t    on: function(el, selector, eventName, func) {\n\t      if (!el) {\n\t        this.off();\n\t        var cls = this.constructor,\n\t            bindings = this._bindings,\n\t            actions = cls.actions,\n\t            element = this.element,\n\t            destroyCB = can.Control._shifter(this, \"destroy\"),\n\t            funcName,\n\t            ready;\n\t        for (funcName in actions) {\n\t          if (actions.hasOwnProperty(funcName)) {\n\t            ready = actions[funcName] || cls._action(funcName, this.options, this);\n\t            if (ready) {\n\t              bindings.control[funcName] = ready.processor(ready.delegate || element, ready.parts[2], ready.parts[1], funcName, this);\n\t            }\n\t          }\n\t        }\n\t        can.bind.call(element, \"removed\", destroyCB);\n\t        bindings.user.push(function(el) {\n\t          can.unbind.call(el, \"removed\", destroyCB);\n\t        });\n\t        return bindings.user.length;\n\t      }\n\t      if (typeof el === 'string') {\n\t        func = eventName;\n\t        eventName = selector;\n\t        selector = el;\n\t        el = this.element;\n\t      }\n\t      if (func === undefined) {\n\t        func = eventName;\n\t        eventName = selector;\n\t        selector = null;\n\t      }\n\t      if (typeof func === 'string') {\n\t        func = can.Control._shifter(this, func);\n\t      }\n\t      this._bindings.user.push(binder(el, eventName, func, selector));\n\t      return this._bindings.user.length;\n\t    },\n\t    off: function() {\n\t      var el = this.element[0],\n\t          bindings = this._bindings;\n\t      if (bindings) {\n\t        each(bindings.user || [], function(value) {\n\t          value(el);\n\t        });\n\t        each(bindings.control || {}, function(value) {\n\t          value(el);\n\t        });\n\t      }\n\t      this._bindings = {\n\t        user: [],\n\t        control: {}\n\t      };\n\t    },\n\t    destroy: function() {\n\t      if (this.element === null) {\n\t        return;\n\t      }\n\t      var Class = this.constructor,\n\t          pluginName = Class.pluginName || Class._fullName,\n\t          controls;\n\t      this.off();\n\t      if (pluginName && pluginName !== 'can_control') {\n\t        this.element.removeClass(pluginName);\n\t      }\n\t      controls = can.data(this.element, \"controls\");\n\t      controls.splice(can.inArray(this, controls), 1);\n\t      can.trigger(this, \"destroyed\");\n\t      this.element = null;\n\t    }\n\t  });\n\t  var processors = can.Control.processors;\n\t  basicProcessor = function(el, event, selector, methodName, control) {\n\t    return binder(el, event, can.Control._shifter(control, methodName), selector);\n\t  };\n\t  each([\"change\", \"click\", \"contextmenu\", \"dblclick\", \"keydown\", \"keyup\", \"keypress\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"reset\", \"resize\", \"scroll\", \"select\", \"submit\", \"focusin\", \"focusout\", \"mouseenter\", \"mouseleave\", \"touchstart\", \"touchmove\", \"touchcancel\", \"touchend\", \"touchleave\"], function(v) {\n\t    processors[v] = basicProcessor;\n\t  });\n\t  return Control;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/observe\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(17), __webpack_require__(18), __webpack_require__(23)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  can.Observe = can.Map;\n\t  can.Observe.startBatch = can.batch.start;\n\t  can.Observe.stopBatch = can.batch.stop;\n\t  can.Observe.triggerBatch = can.batch.trigger;\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/bindings\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(9), __webpack_require__(14)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var isContentEditable = (function() {\n\t    var values = {\n\t      \"\": true,\n\t      \"true\": true,\n\t      \"false\": false\n\t    };\n\t    var editable = function(el) {\n\t      if (!el || !el.getAttribute) {\n\t        return;\n\t      }\n\t      var attr = el.getAttribute(\"contenteditable\");\n\t      return values[attr];\n\t    };\n\t    return function(el) {\n\t      var val = editable(el);\n\t      if (typeof val === \"boolean\") {\n\t        return val;\n\t      } else {\n\t        return !!editable(el.parentNode);\n\t      }\n\t    };\n\t  })(),\n\t      removeCurly = function(value) {\n\t        if (value[0] === \"{\" && value[value.length - 1] === \"}\") {\n\t          return value.substr(1, value.length - 2);\n\t        }\n\t        return value;\n\t      };\n\t  can.view.attr(\"can-value\", function(el, data) {\n\t    var attr = removeCurly(el.getAttribute(\"can-value\")),\n\t        value = data.scope.computeData(attr, {args: []}).compute,\n\t        trueValue,\n\t        falseValue;\n\t    if (el.nodeName.toLowerCase() === \"input\") {\n\t      if (el.type === \"checkbox\") {\n\t        if (can.attr.has(el, \"can-true-value\")) {\n\t          trueValue = el.getAttribute(\"can-true-value\");\n\t        } else {\n\t          trueValue = true;\n\t        }\n\t        if (can.attr.has(el, \"can-false-value\")) {\n\t          falseValue = el.getAttribute(\"can-false-value\");\n\t        } else {\n\t          falseValue = false;\n\t        }\n\t      }\n\t      if (el.type === \"checkbox\" || el.type === \"radio\") {\n\t        new Checked(el, {\n\t          value: value,\n\t          trueValue: trueValue,\n\t          falseValue: falseValue\n\t        });\n\t        return;\n\t      }\n\t    }\n\t    if (el.nodeName.toLowerCase() === \"select\" && el.multiple) {\n\t      new Multiselect(el, {value: value});\n\t      return;\n\t    }\n\t    if (isContentEditable(el)) {\n\t      new Content(el, {value: value});\n\t      return;\n\t    }\n\t    new Value(el, {value: value});\n\t  });\n\t  var special = {enter: function(data, el, original) {\n\t      return {\n\t        event: \"keyup\",\n\t        handler: function(ev) {\n\t          if (ev.keyCode === 13) {\n\t            return original.call(this, ev);\n\t          }\n\t        }\n\t      };\n\t    }};\n\t  can.view.attr(/can-[\\w\\.]+/, function(el, data) {\n\t    var attributeName = data.attributeName,\n\t        event = attributeName.substr(\"can-\".length),\n\t        handler = function(ev) {\n\t          var attr = removeCurly(el.getAttribute(attributeName)),\n\t              scopeData = data.scope.read(attr, {\n\t                returnObserveMethods: true,\n\t                isArgument: true\n\t              });\n\t          return scopeData.value.call(scopeData.parent, data.scope._context, can.$(this), ev);\n\t        };\n\t    if (special[event]) {\n\t      var specialData = special[event](data, el, handler);\n\t      handler = specialData.handler;\n\t      event = specialData.event;\n\t    }\n\t    can.bind.call(el, event, handler);\n\t  });\n\t  var Value = can.Control.extend({\n\t    init: function() {\n\t      if (this.element[0].nodeName.toUpperCase() === \"SELECT\") {\n\t        setTimeout(can.proxy(this.set, this), 1);\n\t      } else {\n\t        this.set();\n\t      }\n\t    },\n\t    \"{value} change\": \"set\",\n\t    set: function() {\n\t      if (!this.element) {\n\t        return;\n\t      }\n\t      var val = this.options.value();\n\t      this.element[0].value = (val == null ? '' : val);\n\t    },\n\t    \"change\": function() {\n\t      if (!this.element) {\n\t        return;\n\t      }\n\t      this.options.value(this.element[0].value);\n\t    }\n\t  }),\n\t      Checked = can.Control.extend({\n\t        init: function() {\n\t          this.isCheckbox = (this.element[0].type.toLowerCase() === \"checkbox\");\n\t          this.check();\n\t        },\n\t        \"{value} change\": \"check\",\n\t        check: function() {\n\t          if (this.isCheckbox) {\n\t            var value = this.options.value(),\n\t                trueValue = this.options.trueValue || true;\n\t            this.element[0].checked = (value === trueValue);\n\t          } else {\n\t            var setOrRemove = this.options.value() == this.element[0].value ? \"set\" : \"remove\";\n\t            can.attr[setOrRemove](this.element[0], 'checked', true);\n\t          }\n\t        },\n\t        \"change\": function() {\n\t          if (this.isCheckbox) {\n\t            this.options.value(this.element[0].checked ? this.options.trueValue : this.options.falseValue);\n\t          } else {\n\t            if (this.element[0].checked) {\n\t              this.options.value(this.element[0].value);\n\t            }\n\t          }\n\t        }\n\t      }),\n\t      Multiselect = Value.extend({\n\t        init: function() {\n\t          this.delimiter = \";\";\n\t          this.set();\n\t        },\n\t        set: function() {\n\t          var newVal = this.options.value();\n\t          if (typeof newVal === 'string') {\n\t            newVal = newVal.split(this.delimiter);\n\t            this.isString = true;\n\t          } else if (newVal) {\n\t            newVal = can.makeArray(newVal);\n\t          }\n\t          var isSelected = {};\n\t          can.each(newVal, function(val) {\n\t            isSelected[val] = true;\n\t          });\n\t          can.each(this.element[0].childNodes, function(option) {\n\t            if (option.value) {\n\t              option.selected = !!isSelected[option.value];\n\t            }\n\t          });\n\t        },\n\t        get: function() {\n\t          var values = [],\n\t              children = this.element[0].childNodes;\n\t          can.each(children, function(child) {\n\t            if (child.selected && child.value) {\n\t              values.push(child.value);\n\t            }\n\t          });\n\t          return values;\n\t        },\n\t        'change': function() {\n\t          var value = this.get(),\n\t              currentValue = this.options.value();\n\t          if (this.isString || typeof currentValue === \"string\") {\n\t            this.isString = true;\n\t            this.options.value(value.join(this.delimiter));\n\t          } else if (currentValue instanceof can.List) {\n\t            currentValue.attr(value, true);\n\t          } else {\n\t            this.options.value(value);\n\t          }\n\t        }\n\t      }),\n\t      Content = can.Control.extend({\n\t        init: function() {\n\t          this.set();\n\t          this.on(\"blur\", \"setValue\");\n\t        },\n\t        \"{value} change\": \"set\",\n\t        set: function() {\n\t          var val = this.options.value();\n\t          this.element[0].innerHTML = (typeof val === 'undefined' ? '' : val);\n\t        },\n\t        setValue: function() {\n\t          this.options.value(this.element[0].innerHTML);\n\t        }\n\t      });\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/map\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(28), __webpack_require__(29), __webpack_require__(27), __webpack_require__(30)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can, bind, bubble) {\n\t  var madeMap = null;\n\t  var teardownMap = function() {\n\t    for (var cid in madeMap) {\n\t      if (madeMap[cid].added) {\n\t        delete madeMap[cid].obj._cid;\n\t      }\n\t    }\n\t    madeMap = null;\n\t  };\n\t  var getMapFromObject = function(obj) {\n\t    return madeMap && madeMap[obj._cid] && madeMap[obj._cid].instance;\n\t  };\n\t  var serializeMap = null;\n\t  var Map = can.Map = can.Construct.extend({\n\t    setup: function() {\n\t      can.Construct.setup.apply(this, arguments);\n\t      if (can.Map) {\n\t        if (!this.defaults) {\n\t          this.defaults = {};\n\t        }\n\t        this._computes = [];\n\t        for (var prop in this.prototype) {\n\t          if (prop !== \"define\" && typeof this.prototype[prop] !== \"function\") {\n\t            this.defaults[prop] = this.prototype[prop];\n\t          } else if (this.prototype[prop].isComputed) {\n\t            this._computes.push(prop);\n\t          }\n\t        }\n\t        this.helpers.define(this);\n\t      }\n\t      if (can.List && !(this.prototype instanceof can.List)) {\n\t        this.List = Map.List.extend({Map: this}, {});\n\t      }\n\t    },\n\t    _bubble: bubble,\n\t    _bubbleRule: function(eventName) {\n\t      return (eventName === \"change\" || eventName.indexOf(\".\") >= 0) && \"change\";\n\t    },\n\t    _computes: [],\n\t    bind: can.bindAndSetup,\n\t    on: can.bindAndSetup,\n\t    unbind: can.unbindAndTeardown,\n\t    off: can.unbindAndTeardown,\n\t    id: \"id\",\n\t    helpers: {\n\t      define: function() {},\n\t      attrParts: function(attr, keepKey) {\n\t        if (keepKey) {\n\t          return [attr];\n\t        }\n\t        return can.isArray(attr) ? attr : (\"\" + attr).split(\".\");\n\t      },\n\t      addToMap: function(obj, instance) {\n\t        var teardown;\n\t        if (!madeMap) {\n\t          teardown = teardownMap;\n\t          madeMap = {};\n\t        }\n\t        var hasCid = obj._cid;\n\t        var cid = can.cid(obj);\n\t        if (!madeMap[cid]) {\n\t          madeMap[cid] = {\n\t            obj: obj,\n\t            instance: instance,\n\t            added: !hasCid\n\t          };\n\t        }\n\t        return teardown;\n\t      },\n\t      isObservable: function(obj) {\n\t        return obj instanceof can.Map || (obj && obj === can.route);\n\t      },\n\t      canMakeObserve: function(obj) {\n\t        return obj && !can.isDeferred(obj) && (can.isArray(obj) || can.isPlainObject(obj));\n\t      },\n\t      serialize: function(map, how, where) {\n\t        var cid = can.cid(map),\n\t            firstSerialize = false;\n\t        if (!serializeMap) {\n\t          firstSerialize = true;\n\t          serializeMap = {\n\t            attr: {},\n\t            serialize: {}\n\t          };\n\t        }\n\t        serializeMap[how][cid] = where;\n\t        map.each(function(val, name) {\n\t          var result,\n\t              isObservable = Map.helpers.isObservable(val),\n\t              serialized = isObservable && serializeMap[how][can.cid(val)];\n\t          if (serialized) {\n\t            result = serialized;\n\t          } else {\n\t            if (how === \"serialize\") {\n\t              result = Map.helpers._serialize(map, name, val);\n\t            } else {\n\t              result = Map.helpers._getValue(map, name, val, how);\n\t            }\n\t          }\n\t          if (result !== undefined) {\n\t            where[name] = result;\n\t          }\n\t        });\n\t        can.__reading(map, '__keys');\n\t        if (firstSerialize) {\n\t          serializeMap = null;\n\t        }\n\t        return where;\n\t      },\n\t      _serialize: function(map, name, val) {\n\t        return Map.helpers._getValue(map, name, val, \"serialize\");\n\t      },\n\t      _getValue: function(map, name, val, how) {\n\t        if (Map.helpers.isObservable(val)) {\n\t          return val[how]();\n\t        } else {\n\t          return val;\n\t        }\n\t      }\n\t    },\n\t    keys: function(map) {\n\t      var keys = [];\n\t      can.__reading(map, '__keys');\n\t      for (var keyName in map._data) {\n\t        keys.push(keyName);\n\t      }\n\t      return keys;\n\t    }\n\t  }, {\n\t    setup: function(obj) {\n\t      this._data = {};\n\t      can.cid(this, \".map\");\n\t      this._init = 1;\n\t      var defaultValues = this._setupDefaults();\n\t      this._setupComputes(defaultValues);\n\t      var teardownMapping = obj && can.Map.helpers.addToMap(obj, this);\n\t      var data = can.extend(can.extend(true, {}, defaultValues), obj);\n\t      this.attr(data);\n\t      if (teardownMapping) {\n\t        teardownMapping();\n\t      }\n\t      this.bind('change', can.proxy(this._changes, this));\n\t      delete this._init;\n\t    },\n\t    _setupComputes: function() {\n\t      var computes = this.constructor._computes;\n\t      this._computedBindings = {};\n\t      for (var i = 0,\n\t          len = computes.length,\n\t          prop; i < len; i++) {\n\t        prop = computes[i];\n\t        this[prop] = this[prop].clone(this);\n\t        this._computedBindings[prop] = {count: 0};\n\t      }\n\t    },\n\t    _setupDefaults: function() {\n\t      return this.constructor.defaults || {};\n\t    },\n\t    _bindsetup: function() {},\n\t    _bindteardown: function() {},\n\t    _changes: function(ev, attr, how, newVal, oldVal) {\n\t      can.batch.trigger(this, {\n\t        type: attr,\n\t        batchNum: ev.batchNum\n\t      }, [newVal, oldVal]);\n\t      if (how === \"remove\" || how === \"add\") {\n\t        can.batch.trigger(this, {\n\t          type: \"__keys\",\n\t          batchNum: ev.batchNum\n\t        });\n\t      }\n\t    },\n\t    _triggerChange: function(attr, how, newVal, oldVal) {\n\t      can.batch.trigger(this, \"change\", can.makeArray(arguments));\n\t    },\n\t    _each: function(callback) {\n\t      var data = this.__get();\n\t      for (var prop in data) {\n\t        if (data.hasOwnProperty(prop)) {\n\t          callback(data[prop], prop);\n\t        }\n\t      }\n\t    },\n\t    attr: function(attr, val) {\n\t      var type = typeof attr;\n\t      if (type !== \"string\" && type !== \"number\") {\n\t        return this._attrs(attr, val);\n\t      } else if (arguments.length === 1) {\n\t        can.__reading(this, attr);\n\t        return this._get(attr);\n\t      } else {\n\t        this._set(attr, val);\n\t        return this;\n\t      }\n\t    },\n\t    each: function() {\n\t      return can.each.apply(undefined, [this].concat(can.makeArray(arguments)));\n\t    },\n\t    removeAttr: function(attr) {\n\t      var isList = can.List && this instanceof can.List,\n\t          parts = can.Map.helpers.attrParts(attr),\n\t          prop = parts.shift(),\n\t          current = isList ? this[prop] : this._data[prop];\n\t      if (parts.length && current) {\n\t        return current.removeAttr(parts);\n\t      } else {\n\t        if (typeof attr === 'string' && !!~attr.indexOf('.')) {\n\t          prop = attr;\n\t        }\n\t        this._remove(prop, current);\n\t        return current;\n\t      }\n\t    },\n\t    _remove: function(prop, current) {\n\t      if (prop in this._data) {\n\t        delete this._data[prop];\n\t        if (!(prop in this.constructor.prototype)) {\n\t          delete this[prop];\n\t        }\n\t        this._triggerChange(prop, \"remove\", undefined, current);\n\t      }\n\t    },\n\t    _get: function(attr) {\n\t      var value;\n\t      if (typeof attr === 'string' && !!~attr.indexOf('.')) {\n\t        value = this.__get(attr);\n\t        if (value !== undefined) {\n\t          return value;\n\t        }\n\t      }\n\t      var parts = can.Map.helpers.attrParts(attr),\n\t          current = this.__get(parts.shift());\n\t      return parts.length ? current ? current._get(parts) : undefined : current;\n\t    },\n\t    __get: function(attr) {\n\t      if (attr) {\n\t        if (this._computedBindings[attr]) {\n\t          return this[attr]();\n\t        } else {\n\t          return this._data[attr];\n\t        }\n\t      } else {\n\t        return this._data;\n\t      }\n\t    },\n\t    __type: function(value, prop) {\n\t      if (!(value instanceof can.Map) && can.Map.helpers.canMakeObserve(value)) {\n\t        var cached = getMapFromObject(value);\n\t        if (cached) {\n\t          return cached;\n\t        }\n\t        if (can.isArray(value)) {\n\t          var List = can.List;\n\t          return new List(value);\n\t        } else {\n\t          var Map = this.constructor.Map || can.Map;\n\t          return new Map(value);\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    _set: function(attr, value, keepKey) {\n\t      var parts = can.Map.helpers.attrParts(attr, keepKey),\n\t          prop = parts.shift(),\n\t          current = this._init ? undefined : this.__get(prop);\n\t      if (parts.length && Map.helpers.isObservable(current)) {\n\t        current._set(parts, value);\n\t      } else if (!parts.length) {\n\t        if (this.__convert) {\n\t          value = this.__convert(prop, value);\n\t        }\n\t        this.__set(prop, this.__type(value, prop), current);\n\t      } else {\n\t        throw \"can.Map: Object does not exist\";\n\t      }\n\t    },\n\t    __set: function(prop, value, current) {\n\t      if (value !== current) {\n\t        var changeType = this.__get().hasOwnProperty(prop) ? \"set\" : \"add\";\n\t        this.___set(prop, this.constructor._bubble.set(this, prop, value, current));\n\t        this._triggerChange(prop, changeType, value, current);\n\t        if (current) {\n\t          this.constructor._bubble.teardownFromParent(this, current);\n\t        }\n\t      }\n\t    },\n\t    ___set: function(prop, val) {\n\t      if (this._computedBindings[prop]) {\n\t        this[prop](val);\n\t      } else {\n\t        this._data[prop] = val;\n\t      }\n\t      if (!can.isFunction(this.constructor.prototype[prop]) && !this._computedBindings[prop]) {\n\t        this[prop] = val;\n\t      }\n\t    },\n\t    bind: function(eventName, handler) {\n\t      var computedBinding = this._computedBindings && this._computedBindings[eventName];\n\t      if (computedBinding) {\n\t        if (!computedBinding.count) {\n\t          computedBinding.count = 1;\n\t          var self = this;\n\t          computedBinding.handler = function(ev, newVal, oldVal) {\n\t            can.batch.trigger(self, {\n\t              type: eventName,\n\t              batchNum: ev.batchNum\n\t            }, [newVal, oldVal]);\n\t          };\n\t          this[eventName].bind(\"change\", computedBinding.handler);\n\t        } else {\n\t          computedBinding.count++;\n\t        }\n\t      }\n\t      this.constructor._bubble.bind(this, eventName);\n\t      return can.bindAndSetup.apply(this, arguments);\n\t    },\n\t    unbind: function(eventName, handler) {\n\t      var computedBinding = this._computedBindings && this._computedBindings[eventName];\n\t      if (computedBinding) {\n\t        if (computedBinding.count === 1) {\n\t          computedBinding.count = 0;\n\t          this[eventName].unbind(\"change\", computedBinding.handler);\n\t          delete computedBinding.handler;\n\t        } else {\n\t          computedBinding.count--;\n\t        }\n\t      }\n\t      this.constructor._bubble.unbind(this, eventName);\n\t      return can.unbindAndTeardown.apply(this, arguments);\n\t    },\n\t    serialize: function() {\n\t      return can.Map.helpers.serialize(this, 'serialize', {});\n\t    },\n\t    _attrs: function(props, remove) {\n\t      if (props === undefined) {\n\t        return Map.helpers.serialize(this, 'attr', {});\n\t      }\n\t      props = can.simpleExtend({}, props);\n\t      var prop,\n\t          self = this,\n\t          newVal;\n\t      can.batch.start();\n\t      this.each(function(curVal, prop) {\n\t        if (prop === \"_cid\") {\n\t          return;\n\t        }\n\t        newVal = props[prop];\n\t        if (newVal === undefined) {\n\t          if (remove) {\n\t            self.removeAttr(prop);\n\t          }\n\t          return;\n\t        }\n\t        if (self.__convert) {\n\t          newVal = self.__convert(prop, newVal);\n\t        }\n\t        if (Map.helpers.isObservable(newVal)) {\n\t          self.__set(prop, self.__type(newVal, prop), curVal);\n\t        } else if (Map.helpers.isObservable(curVal) && Map.helpers.canMakeObserve(newVal)) {\n\t          curVal.attr(newVal, remove);\n\t        } else if (curVal !== newVal) {\n\t          self.__set(prop, self.__type(newVal, prop), curVal);\n\t        }\n\t        delete props[prop];\n\t      });\n\t      for (prop in props) {\n\t        if (prop !== \"_cid\") {\n\t          newVal = props[prop];\n\t          this._set(prop, newVal, true);\n\t        }\n\t      }\n\t      can.batch.stop();\n\t      return this;\n\t    },\n\t    compute: function(prop) {\n\t      if (can.isFunction(this.constructor.prototype[prop])) {\n\t        return can.compute(this[prop], this);\n\t      } else {\n\t        var reads = prop.split(\".\"),\n\t            last = reads.length - 1,\n\t            options = {args: []};\n\t        return can.compute(function(newVal) {\n\t          if (arguments.length) {\n\t            can.compute.read(this, reads.slice(0, last)).value.attr(reads[last], newVal);\n\t          } else {\n\t            return can.compute.read(this, reads, options).value;\n\t          }\n\t        }, this);\n\t      }\n\t    }\n\t  });\n\t  Map.prototype.on = Map.prototype.bind;\n\t  Map.prototype.off = Map.prototype.unbind;\n\t  return Map;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/list\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(17), __webpack_require__(29)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can, Map, bubble) {\n\t  var splice = [].splice,\n\t      spliceRemovesProps = (function() {\n\t        var obj = {\n\t          0: \"a\",\n\t          length: 1\n\t        };\n\t        splice.call(obj, 0, 1);\n\t        return !obj[0];\n\t      })();\n\t  var list = Map.extend({Map: Map}, {\n\t    setup: function(instances, options) {\n\t      this.length = 0;\n\t      can.cid(this, \".map\");\n\t      this._init = 1;\n\t      this._setupComputes();\n\t      instances = instances || [];\n\t      var teardownMapping;\n\t      if (can.isDeferred(instances)) {\n\t        this.replace(instances);\n\t      } else {\n\t        teardownMapping = instances.length && can.Map.helpers.addToMap(instances, this);\n\t        this.push.apply(this, can.makeArray(instances || []));\n\t      }\n\t      if (teardownMapping) {\n\t        teardownMapping();\n\t      }\n\t      this.bind('change', can.proxy(this._changes, this));\n\t      can.simpleExtend(this, options);\n\t      delete this._init;\n\t    },\n\t    _triggerChange: function(attr, how, newVal, oldVal) {\n\t      Map.prototype._triggerChange.apply(this, arguments);\n\t      var index = +attr;\n\t      if (!~attr.indexOf('.') && !isNaN(index)) {\n\t        if (how === 'add') {\n\t          can.batch.trigger(this, how, [newVal, index]);\n\t          can.batch.trigger(this, 'length', [this.length]);\n\t        } else if (how === 'remove') {\n\t          can.batch.trigger(this, how, [oldVal, index]);\n\t          can.batch.trigger(this, 'length', [this.length]);\n\t        } else {\n\t          can.batch.trigger(this, how, [newVal, index]);\n\t        }\n\t      }\n\t    },\n\t    __get: function(attr) {\n\t      if (attr) {\n\t        if (this[attr] && this[attr].isComputed && can.isFunction(this.constructor.prototype[attr])) {\n\t          return this[attr]();\n\t        } else {\n\t          return this[attr];\n\t        }\n\t      } else {\n\t        return this;\n\t      }\n\t    },\n\t    ___set: function(attr, val) {\n\t      this[attr] = val;\n\t      if (+attr >= this.length) {\n\t        this.length = (+attr + 1);\n\t      }\n\t    },\n\t    _remove: function(prop, current) {\n\t      if (isNaN(+prop)) {\n\t        delete this[prop];\n\t        this._triggerChange(prop, \"remove\", undefined, current);\n\t      } else {\n\t        this.splice(prop, 1);\n\t      }\n\t    },\n\t    _each: function(callback) {\n\t      var data = this.__get();\n\t      for (var i = 0; i < data.length; i++) {\n\t        callback(data[i], i);\n\t      }\n\t    },\n\t    serialize: function() {\n\t      return Map.helpers.serialize(this, 'serialize', []);\n\t    },\n\t    splice: function(index, howMany) {\n\t      var args = can.makeArray(arguments),\n\t          i;\n\t      for (i = 2; i < args.length; i++) {\n\t        args[i] = bubble.set(this, i, this.__type(args[i], i));\n\t      }\n\t      if (howMany === undefined) {\n\t        howMany = args[1] = this.length - index;\n\t      }\n\t      var removed = splice.apply(this, args);\n\t      if (!spliceRemovesProps) {\n\t        for (i = this.length; i < removed.length + this.length; i++) {\n\t          delete this[i];\n\t        }\n\t      }\n\t      can.batch.start();\n\t      if (howMany > 0) {\n\t        this._triggerChange(\"\" + index, \"remove\", undefined, removed);\n\t        bubble.removeMany(this, removed);\n\t      }\n\t      if (args.length > 2) {\n\t        this._triggerChange(\"\" + index, \"add\", args.slice(2), removed);\n\t      }\n\t      can.batch.stop();\n\t      return removed;\n\t    },\n\t    _attrs: function(items, remove) {\n\t      if (items === undefined) {\n\t        return Map.helpers.serialize(this, 'attr', []);\n\t      }\n\t      items = can.makeArray(items);\n\t      can.batch.start();\n\t      this._updateAttrs(items, remove);\n\t      can.batch.stop();\n\t    },\n\t    _updateAttrs: function(items, remove) {\n\t      var len = Math.min(items.length, this.length);\n\t      for (var prop = 0; prop < len; prop++) {\n\t        var curVal = this[prop],\n\t            newVal = items[prop];\n\t        if (Map.helpers.isObservable(curVal) && Map.helpers.canMakeObserve(newVal)) {\n\t          curVal.attr(newVal, remove);\n\t        } else if (curVal !== newVal) {\n\t          this._set(prop, newVal);\n\t        } else {}\n\t      }\n\t      if (items.length > this.length) {\n\t        this.push.apply(this, items.slice(this.length));\n\t      } else if (items.length < this.length && remove) {\n\t        this.splice(items.length);\n\t      }\n\t    }\n\t  }),\n\t      getArgs = function(args) {\n\t        return args[0] && can.isArray(args[0]) ? args[0] : can.makeArray(args);\n\t      };\n\t  can.each({\n\t    push: \"length\",\n\t    unshift: 0\n\t  }, function(where, name) {\n\t    var orig = [][name];\n\t    list.prototype[name] = function() {\n\t      var args = [],\n\t          len = where ? this.length : 0,\n\t          i = arguments.length,\n\t          res,\n\t          val;\n\t      while (i--) {\n\t        val = arguments[i];\n\t        args[i] = bubble.set(this, i, this.__type(val, i));\n\t      }\n\t      res = orig.apply(this, args);\n\t      if (!this.comparator || args.length) {\n\t        this._triggerChange(\"\" + len, \"add\", args, undefined);\n\t      }\n\t      return res;\n\t    };\n\t  });\n\t  can.each({\n\t    pop: \"length\",\n\t    shift: 0\n\t  }, function(where, name) {\n\t    list.prototype[name] = function() {\n\t      var args = getArgs(arguments),\n\t          len = where && this.length ? this.length - 1 : 0;\n\t      var res = [][name].apply(this, args);\n\t      this._triggerChange(\"\" + len, \"remove\", undefined, [res]);\n\t      if (res && res.unbind) {\n\t        bubble.remove(this, res);\n\t      }\n\t      return res;\n\t    };\n\t  });\n\t  can.extend(list.prototype, {\n\t    indexOf: function(item, fromIndex) {\n\t      this.attr('length');\n\t      return can.inArray(item, this, fromIndex);\n\t    },\n\t    join: function() {\n\t      return [].join.apply(this.attr(), arguments);\n\t    },\n\t    reverse: function() {\n\t      var list = can.makeArray([].reverse.call(this));\n\t      this.replace(list);\n\t    },\n\t    slice: function() {\n\t      var temp = Array.prototype.slice.apply(this, arguments);\n\t      return new this.constructor(temp);\n\t    },\n\t    concat: function() {\n\t      var args = [];\n\t      can.each(can.makeArray(arguments), function(arg, i) {\n\t        args[i] = arg instanceof can.List ? arg.serialize() : arg;\n\t      });\n\t      return new this.constructor(Array.prototype.concat.apply(this.serialize(), args));\n\t    },\n\t    forEach: function(cb, thisarg) {\n\t      return can.each(this, cb, thisarg || this);\n\t    },\n\t    replace: function(newList) {\n\t      if (can.isDeferred(newList)) {\n\t        newList.then(can.proxy(this.replace, this));\n\t      } else {\n\t        this.splice.apply(this, [0, this.length].concat(can.makeArray(newList || [])));\n\t      }\n\t      return this;\n\t    },\n\t    filter: function(callback, thisArg) {\n\t      var filteredList = new can.List(),\n\t          self = this,\n\t          filtered;\n\t      this.each(function(item, index, list) {\n\t        filtered = callback.call(thisArg | self, item, index, self);\n\t        if (filtered) {\n\t          filteredList.push(item);\n\t        }\n\t      });\n\t      return filteredList;\n\t    }\n\t  });\n\t  can.List = Map.List = list;\n\t  return can.List;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/route\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(17), __webpack_require__(18), __webpack_require__(34)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var matcher = /\\:([\\w\\.]+)/g,\n\t      paramsMatcher = /^(?:&[^=]+=[^&]*)+/,\n\t      makeProps = function(props) {\n\t        var tags = [];\n\t        can.each(props, function(val, name) {\n\t          tags.push((name === 'className' ? 'class' : name) + '=\"' + (name === \"href\" ? val : can.esc(val)) + '\"');\n\t        });\n\t        return tags.join(\" \");\n\t      },\n\t      matchesData = function(route, data) {\n\t        var count = 0,\n\t            i = 0,\n\t            defaults = {};\n\t        for (var name in route.defaults) {\n\t          if (route.defaults[name] === data[name]) {\n\t            defaults[name] = 1;\n\t            count++;\n\t          }\n\t        }\n\t        for (; i < route.names.length; i++) {\n\t          if (!data.hasOwnProperty(route.names[i])) {\n\t            return -1;\n\t          }\n\t          if (!defaults[route.names[i]]) {\n\t            count++;\n\t          }\n\t        }\n\t        return count;\n\t      },\n\t      location = window.location,\n\t      wrapQuote = function(str) {\n\t        return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, \"\\\\$1\");\n\t      },\n\t      each = can.each,\n\t      extend = can.extend,\n\t      stringify = function(obj) {\n\t        if (obj && typeof obj === \"object\") {\n\t          if (obj instanceof can.Map) {\n\t            obj = obj.attr();\n\t          } else {\n\t            obj = can.isFunction(obj.slice) ? obj.slice() : can.extend({}, obj);\n\t          }\n\t          can.each(obj, function(val, prop) {\n\t            obj[prop] = stringify(val);\n\t          });\n\t        } else if (obj !== undefined && obj !== null && can.isFunction(obj.toString)) {\n\t          obj = obj.toString();\n\t        }\n\t        return obj;\n\t      },\n\t      removeBackslash = function(str) {\n\t        return str.replace(/\\\\/g, \"\");\n\t      },\n\t      timer,\n\t      curParams,\n\t      lastHash,\n\t      changingData,\n\t      onRouteDataChange = function(ev, attr, how, newval) {\n\t        changingData = 1;\n\t        clearTimeout(timer);\n\t        timer = setTimeout(function() {\n\t          changingData = 0;\n\t          var serialized = can.route.data.serialize(),\n\t              path = can.route.param(serialized, true);\n\t          can.route._call(\"setURL\", path);\n\t          lastHash = path;\n\t        }, 10);\n\t      };\n\t  can.route = function(url, defaults) {\n\t    var root = can.route._call(\"root\");\n\t    if (root.lastIndexOf(\"/\") === root.length - 1 && url.indexOf(\"/\") === 0) {\n\t      url = url.substr(1);\n\t    }\n\t    defaults = defaults || {};\n\t    var names = [],\n\t        res,\n\t        test = \"\",\n\t        lastIndex = matcher.lastIndex = 0,\n\t        next,\n\t        querySeparator = can.route._call(\"querySeparator\");\n\t    while (res = matcher.exec(url)) {\n\t      names.push(res[1]);\n\t      test += removeBackslash(url.substring(lastIndex, matcher.lastIndex - res[0].length));\n\t      next = \"\\\\\" + (removeBackslash(url.substr(matcher.lastIndex, 1)) || querySeparator);\n\t      test += \"([^\" + next + \"]\" + (defaults[res[1]] ? \"*\" : \"+\") + \")\";\n\t      lastIndex = matcher.lastIndex;\n\t    }\n\t    test += url.substr(lastIndex).replace(\"\\\\\", \"\");\n\t    can.route.routes[url] = {\n\t      test: new RegExp(\"^\" + test + \"($|\" + wrapQuote(querySeparator) + \")\"),\n\t      route: url,\n\t      names: names,\n\t      defaults: defaults,\n\t      length: url.split('/').length\n\t    };\n\t    return can.route;\n\t  };\n\t  extend(can.route, {\n\t    param: function(data, _setRoute) {\n\t      var route,\n\t          matches = 0,\n\t          matchCount,\n\t          routeName = data.route,\n\t          propCount = 0;\n\t      delete data.route;\n\t      each(data, function() {\n\t        propCount++;\n\t      });\n\t      each(can.route.routes, function(temp, name) {\n\t        matchCount = matchesData(temp, data);\n\t        if (matchCount > matches) {\n\t          route = temp;\n\t          matches = matchCount;\n\t        }\n\t        if (matchCount >= propCount) {\n\t          return false;\n\t        }\n\t      });\n\t      if (can.route.routes[routeName] && matchesData(can.route.routes[routeName], data) === matches) {\n\t        route = can.route.routes[routeName];\n\t      }\n\t      if (route) {\n\t        var cpy = extend({}, data),\n\t            res = route.route.replace(matcher, function(whole, name) {\n\t              delete cpy[name];\n\t              return data[name] === route.defaults[name] ? \"\" : encodeURIComponent(data[name]);\n\t            }).replace(\"\\\\\", \"\"),\n\t            after;\n\t        each(route.defaults, function(val, name) {\n\t          if (cpy[name] === val) {\n\t            delete cpy[name];\n\t          }\n\t        });\n\t        after = can.param(cpy);\n\t        if (_setRoute) {\n\t          can.route.attr('route', route.route);\n\t        }\n\t        return res + (after ? can.route._call(\"querySeparator\") + after : \"\");\n\t      }\n\t      return can.isEmptyObject(data) ? \"\" : can.route._call(\"querySeparator\") + can.param(data);\n\t    },\n\t    deparam: function(url) {\n\t      var root = can.route._call(\"root\");\n\t      if (root.lastIndexOf(\"/\") === root.length - 1 && url.indexOf(\"/\") === 0) {\n\t        url = url.substr(1);\n\t      }\n\t      var route = {length: -1},\n\t          querySeparator = can.route._call(\"querySeparator\"),\n\t          paramsMatcher = can.route._call(\"paramsMatcher\");\n\t      each(can.route.routes, function(temp, name) {\n\t        if (temp.test.test(url) && temp.length > route.length) {\n\t          route = temp;\n\t        }\n\t      });\n\t      if (route.length > -1) {\n\t        var parts = url.match(route.test),\n\t            start = parts.shift(),\n\t            remainder = url.substr(start.length - (parts[parts.length - 1] === querySeparator ? 1 : 0)),\n\t            obj = (remainder && paramsMatcher.test(remainder)) ? can.deparam(remainder.slice(1)) : {};\n\t        obj = extend(true, {}, route.defaults, obj);\n\t        each(parts, function(part, i) {\n\t          if (part && part !== querySeparator) {\n\t            obj[route.names[i]] = decodeURIComponent(part);\n\t          }\n\t        });\n\t        obj.route = route.route;\n\t        return obj;\n\t      }\n\t      if (url.charAt(0) !== querySeparator) {\n\t        url = querySeparator + url;\n\t      }\n\t      return paramsMatcher.test(url) ? can.deparam(url.slice(1)) : {};\n\t    },\n\t    data: new can.Map({}),\n\t    map: function(data) {\n\t      var appState;\n\t      if (data instanceof can.Map) {\n\t        appState = data;\n\t      } else if (data.prototype instanceof can.Map) {\n\t        appState = new data();\n\t      }\n\t      can.route.data = appState;\n\t    },\n\t    routes: {},\n\t    ready: function(val) {\n\t      if (val !== true) {\n\t        can.route._setup();\n\t        can.route.setState();\n\t      }\n\t      return can.route;\n\t    },\n\t    url: function(options, merge) {\n\t      if (merge) {\n\t        options = can.extend({}, can.route.deparam(can.route._call(\"matchingPartOfURL\")), options);\n\t      }\n\t      return can.route._call(\"root\") + can.route.param(options);\n\t    },\n\t    link: function(name, options, props, merge) {\n\t      return \"<a \" + makeProps(extend({href: can.route.url(options, merge)}, props)) + \">\" + name + \"</a>\";\n\t    },\n\t    current: function(options) {\n\t      return this._call(\"matchingPartOfURL\") === can.route.param(options);\n\t    },\n\t    bindings: {hashchange: {\n\t        paramsMatcher: paramsMatcher,\n\t        querySeparator: \"&\",\n\t        bind: function() {\n\t          can.bind.call(window, 'hashchange', setState);\n\t        },\n\t        unbind: function() {\n\t          can.unbind.call(window, 'hashchange', setState);\n\t        },\n\t        matchingPartOfURL: function() {\n\t          return location.href.split(/#!?/)[1] || \"\";\n\t        },\n\t        setURL: function(path) {\n\t          location.hash = \"#!\" + path;\n\t          return path;\n\t        },\n\t        root: \"#!\"\n\t      }},\n\t    defaultBinding: \"hashchange\",\n\t    currentBinding: null,\n\t    _setup: function() {\n\t      if (!can.route.currentBinding) {\n\t        can.route._call(\"bind\");\n\t        can.route.bind(\"change\", onRouteDataChange);\n\t        can.route.currentBinding = can.route.defaultBinding;\n\t      }\n\t    },\n\t    _teardown: function() {\n\t      if (can.route.currentBinding) {\n\t        can.route._call(\"unbind\");\n\t        can.route.unbind(\"change\", onRouteDataChange);\n\t        can.route.currentBinding = null;\n\t      }\n\t      clearTimeout(timer);\n\t      changingData = 0;\n\t    },\n\t    _call: function() {\n\t      var args = can.makeArray(arguments),\n\t          prop = args.shift(),\n\t          binding = can.route.bindings[can.route.currentBinding || can.route.defaultBinding],\n\t          method = binding[prop];\n\t      if (method.apply) {\n\t        return method.apply(binding, args);\n\t      } else {\n\t        return method;\n\t      }\n\t    }\n\t  });\n\t  each(['bind', 'unbind', 'on', 'off', 'delegate', 'undelegate', 'removeAttr', 'compute', '_get', '__get'], function(name) {\n\t    can.route[name] = function() {\n\t      if (!can.route.data[name]) {\n\t        return;\n\t      }\n\t      return can.route.data[name].apply(can.route.data, arguments);\n\t    };\n\t  });\n\t  can.route.attr = function(attr, val) {\n\t    var type = typeof attr,\n\t        newArguments;\n\t    if (val === undefined) {\n\t      newArguments = arguments;\n\t    } else if (type !== \"string\" && type !== \"number\") {\n\t      newArguments = [stringify(attr), val];\n\t    } else {\n\t      newArguments = [attr, stringify(val)];\n\t    }\n\t    return can.route.data.attr.apply(can.route.data, newArguments);\n\t  };\n\t  var setState = can.route.setState = function() {\n\t    var hash = can.route._call(\"matchingPartOfURL\");\n\t    var oldParams = curParams;\n\t    curParams = can.route.deparam(hash);\n\t    if (!changingData || hash !== lastHash) {\n\t      can.batch.start();\n\t      for (var attr in oldParams) {\n\t        if (!curParams[attr]) {\n\t          can.route.removeAttr(attr);\n\t        }\n\t      }\n\t      can.route.attr(curParams);\n\t      can.batch.stop();\n\t    }\n\t  };\n\t  return can.route;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/scope\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(27), __webpack_require__(17), __webpack_require__(18), __webpack_require__(21), __webpack_require__(23)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var escapeReg = /(\\\\)?\\./g,\n\t      escapeDotReg = /\\\\\\./g,\n\t      getNames = function(attr) {\n\t        var names = [],\n\t            last = 0;\n\t        attr.replace(escapeReg, function(first, second, index) {\n\t          if (!second) {\n\t            names.push(attr.slice(last, index).replace(escapeDotReg, '.'));\n\t            last = index + first.length;\n\t          }\n\t        });\n\t        names.push(attr.slice(last).replace(escapeDotReg, '.'));\n\t        return names;\n\t      };\n\t  var Scope = can.Construct.extend({read: can.compute.read}, {\n\t    init: function(context, parent) {\n\t      this._context = context;\n\t      this._parent = parent;\n\t      this.__cache = {};\n\t    },\n\t    attr: function(key) {\n\t      var previousReads = can.__clearReading(),\n\t          res = this.read(key, {\n\t            isArgument: true,\n\t            returnObserveMethods: true,\n\t            proxyMethods: false\n\t          }).value;\n\t      can.__setReading(previousReads);\n\t      return res;\n\t    },\n\t    add: function(context) {\n\t      if (context !== this._context) {\n\t        return new this.constructor(context, this);\n\t      } else {\n\t        return this;\n\t      }\n\t    },\n\t    computeData: function(key, options) {\n\t      options = options || {args: []};\n\t      var self = this,\n\t          rootObserve,\n\t          rootReads,\n\t          computeData = {compute: can.compute(function(newVal) {\n\t              if (arguments.length) {\n\t                if (rootObserve.isComputed && !rootReads.length) {\n\t                  rootObserve(newVal);\n\t                } else {\n\t                  var last = rootReads.length - 1;\n\t                  can.compute.read(rootObserve, rootReads.slice(0, last)).value.attr(rootReads[last], newVal);\n\t                }\n\t              } else {\n\t                if (rootObserve) {\n\t                  return can.compute.read(rootObserve, rootReads, options).value;\n\t                }\n\t                var data = self.read(key, options);\n\t                rootObserve = data.rootObserve;\n\t                rootReads = data.reads;\n\t                computeData.scope = data.scope;\n\t                computeData.initialValue = data.value;\n\t                return data.value;\n\t              }\n\t            })};\n\t      return computeData;\n\t    },\n\t    compute: function(key, options) {\n\t      return this.computeData(key, options).compute;\n\t    },\n\t    read: function(attr, options) {\n\t      var stopLookup;\n\t      if (attr.substr(0, 2) === './') {\n\t        stopLookup = true;\n\t        attr = attr.substr(2);\n\t      } else if (attr.substr(0, 3) === \"../\") {\n\t        return this._parent.read(attr.substr(3), options);\n\t      } else if (attr === \"..\") {\n\t        return {value: this._parent._context};\n\t      } else if (attr === \".\" || attr === \"this\") {\n\t        return {value: this._context};\n\t      }\n\t      var names = attr.indexOf('\\\\.') === -1 ? attr.split('.') : getNames(attr),\n\t          context,\n\t          scope = this,\n\t          defaultObserve,\n\t          defaultReads = [],\n\t          defaultPropertyDepth = -1,\n\t          defaultComputeReadings,\n\t          defaultScope,\n\t          currentObserve,\n\t          currentReads;\n\t      while (scope) {\n\t        context = scope._context;\n\t        if (context !== null) {\n\t          var data = can.compute.read(context, names, can.simpleExtend({\n\t            foundObservable: function(observe, nameIndex) {\n\t              currentObserve = observe;\n\t              currentReads = names.slice(nameIndex);\n\t            },\n\t            earlyExit: function(parentValue, nameIndex) {\n\t              if (nameIndex > defaultPropertyDepth) {\n\t                defaultObserve = currentObserve;\n\t                defaultReads = currentReads;\n\t                defaultPropertyDepth = nameIndex;\n\t                defaultScope = scope;\n\t                defaultComputeReadings = can.__clearReading();\n\t              }\n\t            },\n\t            executeAnonymousFunctions: true\n\t          }, options));\n\t          if (data.value !== undefined) {\n\t            return {\n\t              scope: scope,\n\t              rootObserve: currentObserve,\n\t              value: data.value,\n\t              reads: currentReads\n\t            };\n\t          }\n\t        }\n\t        can.__clearReading();\n\t        if (!stopLookup) {\n\t          scope = scope._parent;\n\t        } else {\n\t          scope = null;\n\t        }\n\t      }\n\t      if (defaultObserve) {\n\t        can.__setReading(defaultComputeReadings);\n\t        return {\n\t          scope: defaultScope,\n\t          rootObserve: defaultObserve,\n\t          reads: defaultReads,\n\t          value: undefined\n\t        };\n\t      } else {\n\t        return {\n\t          names: names,\n\t          value: undefined\n\t        };\n\t      }\n\t    }\n\t  });\n\t  can.view.Scope = Scope;\n\t  return Scope;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var isFunction = can.isFunction,\n\t      makeArray = can.makeArray,\n\t      hookupId = 1;\n\t  var makeRenderer = function(textRenderer) {\n\t    var renderer = function() {\n\t      return $view.frag(textRenderer.apply(this, arguments));\n\t    };\n\t    renderer.render = function() {\n\t      return textRenderer.apply(textRenderer, arguments);\n\t    };\n\t    return renderer;\n\t  };\n\t  var checkText = function(text, url) {\n\t    if (!text.length) {\n\t      throw \"can.view: No template or empty template:\" + url;\n\t    }\n\t  };\n\t  var get = function(obj, async) {\n\t    var url = typeof obj === 'string' ? obj : obj.url,\n\t        suffix = (obj.engine && '.' + obj.engine) || url.match(/\\.[\\w\\d]+$/),\n\t        type,\n\t        el,\n\t        id;\n\t    if (url.match(/^#/)) {\n\t      url = url.substr(1);\n\t    }\n\t    if (el = document.getElementById(url)) {\n\t      suffix = '.' + el.type.match(/\\/(x\\-)?(.+)/)[2];\n\t    }\n\t    if (!suffix && !$view.cached[url]) {\n\t      url += suffix = $view.ext;\n\t    }\n\t    if (can.isArray(suffix)) {\n\t      suffix = suffix[0];\n\t    }\n\t    id = $view.toId(url);\n\t    if (url.match(/^\\/\\//)) {\n\t      url = url.substr(2);\n\t      url = !window.steal ? url : steal.config().root.mapJoin(\"\" + steal.id(url));\n\t    }\n\t    if (window.require) {\n\t      if (__webpack_require__(26).toUrl) {\n\t        url = __webpack_require__(26).toUrl(url);\n\t      }\n\t    }\n\t    type = $view.types[suffix];\n\t    if ($view.cached[id]) {\n\t      return $view.cached[id];\n\t    } else if (el) {\n\t      return $view.registerView(id, el.innerHTML, type);\n\t    } else {\n\t      var d = new can.Deferred();\n\t      can.ajax({\n\t        async: async,\n\t        url: url,\n\t        dataType: 'text',\n\t        error: function(jqXHR) {\n\t          checkText('', url);\n\t          d.reject(jqXHR);\n\t        },\n\t        success: function(text) {\n\t          checkText(text, url);\n\t          $view.registerView(id, text, type, d);\n\t        }\n\t      });\n\t      return d;\n\t    }\n\t  };\n\t  var getDeferreds = function(data) {\n\t    var deferreds = [];\n\t    if (can.isDeferred(data)) {\n\t      return [data];\n\t    } else {\n\t      for (var prop in data) {\n\t        if (can.isDeferred(data[prop])) {\n\t          deferreds.push(data[prop]);\n\t        }\n\t      }\n\t    }\n\t    return deferreds;\n\t  };\n\t  var usefulPart = function(resolved) {\n\t    return can.isArray(resolved) && resolved[1] === 'success' ? resolved[0] : resolved;\n\t  };\n\t  var $view = can.view = can.template = function(view, data, helpers, callback) {\n\t    if (isFunction(helpers)) {\n\t      callback = helpers;\n\t      helpers = undefined;\n\t    }\n\t    var result;\n\t    if (isFunction(view)) {\n\t      result = view(data, helpers, callback);\n\t    } else {\n\t      result = $view.renderAs(\"fragment\", view, data, helpers, callback);\n\t    }\n\t    return result;\n\t  };\n\t  can.extend($view, {\n\t    frag: function(result, parentNode) {\n\t      return $view.hookup($view.fragment(result), parentNode);\n\t    },\n\t    fragment: function(result) {\n\t      if (typeof result !== \"string\" && result.nodeType === 11) {\n\t        return result;\n\t      }\n\t      var frag = can.buildFragment(result, document.body);\n\t      if (!frag.childNodes.length) {\n\t        frag.appendChild(document.createTextNode(''));\n\t      }\n\t      return frag;\n\t    },\n\t    toId: function(src) {\n\t      return can.map(src.toString().split(/\\/|\\./g), function(part) {\n\t        if (part) {\n\t          return part;\n\t        }\n\t      }).join('_');\n\t    },\n\t    toStr: function(txt) {\n\t      return txt == null ? \"\" : \"\" + txt;\n\t    },\n\t    hookup: function(fragment, parentNode) {\n\t      var hookupEls = [],\n\t          id,\n\t          func;\n\t      can.each(fragment.childNodes ? can.makeArray(fragment.childNodes) : fragment, function(node) {\n\t        if (node.nodeType === 1) {\n\t          hookupEls.push(node);\n\t          hookupEls.push.apply(hookupEls, can.makeArray(node.getElementsByTagName('*')));\n\t        }\n\t      });\n\t      can.each(hookupEls, function(el) {\n\t        if (el.getAttribute && (id = el.getAttribute('data-view-id')) && (func = $view.hookups[id])) {\n\t          func(el, parentNode, id);\n\t          delete $view.hookups[id];\n\t          el.removeAttribute('data-view-id');\n\t        }\n\t      });\n\t      return fragment;\n\t    },\n\t    hookups: {},\n\t    hook: function(cb) {\n\t      $view.hookups[++hookupId] = cb;\n\t      return ' data-view-id=\\'' + hookupId + '\\'';\n\t    },\n\t    cached: {},\n\t    cachedRenderers: {},\n\t    cache: true,\n\t    register: function(info) {\n\t      this.types['.' + info.suffix] = info;\n\t      can[info.suffix] = $view[info.suffix] = function(id, text) {\n\t        if (!text) {\n\t          if (info.fragRenderer) {\n\t            return info.fragRenderer(null, id);\n\t          } else {\n\t            return makeRenderer(info.renderer(null, id));\n\t          }\n\t        }\n\t        if (info.fragRenderer) {\n\t          return $view.preload(id, info.fragRenderer(id, text));\n\t        } else {\n\t          return $view.preloadStringRenderer(id, info.renderer(id, text));\n\t        }\n\t      };\n\t    },\n\t    types: {},\n\t    ext: \".ejs\",\n\t    registerScript: function(type, id, src) {\n\t      return 'can.view.preloadStringRenderer(\\'' + id + '\\',' + $view.types['.' + type].script(id, src) + ');';\n\t    },\n\t    preload: function(id, renderer) {\n\t      var def = $view.cached[id] = new can.Deferred().resolve(function(data, helpers) {\n\t        return renderer.call(data, data, helpers);\n\t      });\n\t      def.__view_id = id;\n\t      $view.cachedRenderers[id] = renderer;\n\t      return renderer;\n\t    },\n\t    preloadStringRenderer: function(id, stringRenderer) {\n\t      return this.preload(id, makeRenderer(stringRenderer));\n\t    },\n\t    render: function(view, data, helpers, callback) {\n\t      return can.view.renderAs(\"string\", view, data, helpers, callback);\n\t    },\n\t    renderTo: function(format, renderer, data, helpers) {\n\t      return (format === \"string\" && renderer.render ? renderer.render : renderer)(data, helpers);\n\t    },\n\t    renderAs: function(format, view, data, helpers, callback) {\n\t      if (isFunction(helpers)) {\n\t        callback = helpers;\n\t        helpers = undefined;\n\t      }\n\t      var deferreds = getDeferreds(data);\n\t      var reading,\n\t          deferred,\n\t          dataCopy,\n\t          async,\n\t          response;\n\t      if (deferreds.length) {\n\t        deferred = new can.Deferred();\n\t        dataCopy = can.extend({}, data);\n\t        deferreds.push(get(view, true));\n\t        can.when.apply(can, deferreds).then(function(resolved) {\n\t          var objs = makeArray(arguments),\n\t              renderer = objs.pop(),\n\t              result;\n\t          if (can.isDeferred(data)) {\n\t            dataCopy = usefulPart(resolved);\n\t          } else {\n\t            for (var prop in data) {\n\t              if (can.isDeferred(data[prop])) {\n\t                dataCopy[prop] = usefulPart(objs.shift());\n\t              }\n\t            }\n\t          }\n\t          result = can.view.renderTo(format, renderer, dataCopy, helpers);\n\t          deferred.resolve(result, dataCopy);\n\t          if (callback) {\n\t            callback(result, dataCopy);\n\t          }\n\t        }, function() {\n\t          deferred.reject.apply(deferred, arguments);\n\t        });\n\t        return deferred;\n\t      } else {\n\t        reading = can.__clearReading();\n\t        async = isFunction(callback);\n\t        deferred = get(view, async);\n\t        if (reading) {\n\t          can.__setReading(reading);\n\t        }\n\t        if (async) {\n\t          response = deferred;\n\t          deferred.then(function(renderer) {\n\t            callback(data ? can.view.renderTo(format, renderer, data, helpers) : renderer);\n\t          });\n\t        } else {\n\t          if (deferred.state() === 'resolved' && deferred.__view_id) {\n\t            var currentRenderer = $view.cachedRenderers[deferred.__view_id];\n\t            return data ? can.view.renderTo(format, currentRenderer, data, helpers) : currentRenderer;\n\t          } else {\n\t            deferred.then(function(renderer) {\n\t              response = data ? can.view.renderTo(format, renderer, data, helpers) : renderer;\n\t            });\n\t          }\n\t        }\n\t        return response;\n\t      }\n\t    },\n\t    registerView: function(id, text, type, def) {\n\t      var info = (typeof type === \"object\" ? type : $view.types[type || $view.ext]),\n\t          renderer;\n\t      if (info.fragRenderer) {\n\t        renderer = info.fragRenderer(id, text);\n\t      } else {\n\t        renderer = makeRenderer(info.renderer(id, text));\n\t      }\n\t      def = def || new can.Deferred();\n\t      if ($view.cache) {\n\t        $view.cached[id] = def;\n\t        def.__view_id = id;\n\t        $view.cachedRenderers[id] = renderer;\n\t      }\n\t      return def.resolve(renderer);\n\t    }\n\t  });\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/scanner\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(21), __webpack_require__(31), __webpack_require__(13)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can, elements, viewCallbacks) {\n\t  var newLine = /(\\r|\\n)+/g,\n\t      notEndTag = /\\//,\n\t      clean = function(content) {\n\t        return content.split('\\\\').join(\"\\\\\\\\\").split(\"\\n\").join(\"\\\\n\").split('\"').join('\\\\\"').split(\"\\t\").join(\"\\\\t\");\n\t      },\n\t      getTag = function(tagName, tokens, i) {\n\t        if (tagName) {\n\t          return tagName;\n\t        } else {\n\t          while (i < tokens.length) {\n\t            if (tokens[i] === \"<\" && !notEndTag.test(tokens[i + 1])) {\n\t              return elements.reverseTagMap[tokens[i + 1]] || 'span';\n\t            }\n\t            i++;\n\t          }\n\t        }\n\t        return '';\n\t      },\n\t      bracketNum = function(content) {\n\t        return (--content.split(\"{\").length) - (--content.split(\"}\").length);\n\t      },\n\t      myEval = function(script) {\n\t        eval(script);\n\t      },\n\t      attrReg = /([^\\s]+)[\\s]*=[\\s]*$/,\n\t      startTxt = 'var ___v1ew = [];',\n\t      finishTxt = \"return ___v1ew.join('')\",\n\t      put_cmd = \"___v1ew.push(\\n\",\n\t      insert_cmd = put_cmd,\n\t      htmlTag = null,\n\t      quote = null,\n\t      beforeQuote = null,\n\t      rescan = null,\n\t      getAttrName = function() {\n\t        var matches = beforeQuote.match(attrReg);\n\t        return matches && matches[1];\n\t      },\n\t      status = function() {\n\t        return quote ? \"'\" + getAttrName() + \"'\" : (htmlTag ? 1 : 0);\n\t      },\n\t      top = function(stack) {\n\t        return stack[stack.length - 1];\n\t      },\n\t      Scanner;\n\t  can.view.Scanner = Scanner = function(options) {\n\t    can.extend(this, {\n\t      text: {},\n\t      tokens: []\n\t    }, options);\n\t    this.text.options = this.text.options || \"\";\n\t    this.tokenReg = [];\n\t    this.tokenSimple = {\n\t      \"<\": \"<\",\n\t      \">\": \">\",\n\t      '\"': '\"',\n\t      \"'\": \"'\"\n\t    };\n\t    this.tokenComplex = [];\n\t    this.tokenMap = {};\n\t    for (var i = 0,\n\t        token; token = this.tokens[i]; i++) {\n\t      if (token[2]) {\n\t        this.tokenReg.push(token[2]);\n\t        this.tokenComplex.push({\n\t          abbr: token[1],\n\t          re: new RegExp(token[2]),\n\t          rescan: token[3]\n\t        });\n\t      } else {\n\t        this.tokenReg.push(token[1]);\n\t        this.tokenSimple[token[1]] = token[0];\n\t      }\n\t      this.tokenMap[token[0]] = token[1];\n\t    }\n\t    this.tokenReg = new RegExp(\"(\" + this.tokenReg.slice(0).concat([\"<\", \">\", '\"', \"'\"]).join(\"|\") + \")\", \"g\");\n\t  };\n\t  Scanner.prototype = {\n\t    helpers: [],\n\t    scan: function(source, name) {\n\t      var tokens = [],\n\t          last = 0,\n\t          simple = this.tokenSimple,\n\t          complex = this.tokenComplex;\n\t      source = source.replace(newLine, \"\\n\");\n\t      if (this.transform) {\n\t        source = this.transform(source);\n\t      }\n\t      source.replace(this.tokenReg, function(whole, part) {\n\t        var offset = arguments[arguments.length - 2];\n\t        if (offset > last) {\n\t          tokens.push(source.substring(last, offset));\n\t        }\n\t        if (simple[whole]) {\n\t          tokens.push(whole);\n\t        } else {\n\t          for (var i = 0,\n\t              token; token = complex[i]; i++) {\n\t            if (token.re.test(whole)) {\n\t              tokens.push(token.abbr);\n\t              if (token.rescan) {\n\t                tokens.push(token.rescan(part));\n\t              }\n\t              break;\n\t            }\n\t          }\n\t        }\n\t        last = offset + part.length;\n\t      });\n\t      if (last < source.length) {\n\t        tokens.push(source.substr(last));\n\t      }\n\t      var content = '',\n\t          buff = [startTxt + (this.text.start || '')],\n\t          put = function(content, bonus) {\n\t            buff.push(put_cmd, '\"', clean(content), '\"' + (bonus || '') + ');');\n\t          },\n\t          endStack = [],\n\t          lastToken,\n\t          startTag = null,\n\t          magicInTag = false,\n\t          specialStates = {\n\t            attributeHookups: [],\n\t            tagHookups: [],\n\t            lastTagHookup: ''\n\t          },\n\t          popTagHookup = function() {\n\t            specialStates.lastTagHookup = specialStates.tagHookups.pop() + specialStates.tagHookups.length;\n\t          },\n\t          tagName = '',\n\t          tagNames = [],\n\t          popTagName = false,\n\t          bracketCount,\n\t          specialAttribute = false,\n\t          i = 0,\n\t          token,\n\t          tmap = this.tokenMap,\n\t          attrName;\n\t      htmlTag = quote = beforeQuote = null;\n\t      for (; (token = tokens[i++]) !== undefined; ) {\n\t        if (startTag === null) {\n\t          switch (token) {\n\t            case tmap.left:\n\t            case tmap.escapeLeft:\n\t            case tmap.returnLeft:\n\t              magicInTag = htmlTag && 1;\n\t            case tmap.commentLeft:\n\t              startTag = token;\n\t              if (content.length) {\n\t                put(content);\n\t              }\n\t              content = '';\n\t              break;\n\t            case tmap.escapeFull:\n\t              magicInTag = htmlTag && 1;\n\t              rescan = 1;\n\t              startTag = tmap.escapeLeft;\n\t              if (content.length) {\n\t                put(content);\n\t              }\n\t              rescan = tokens[i++];\n\t              content = rescan.content || rescan;\n\t              if (rescan.before) {\n\t                put(rescan.before);\n\t              }\n\t              tokens.splice(i, 0, tmap.right);\n\t              break;\n\t            case tmap.commentFull:\n\t              break;\n\t            case tmap.templateLeft:\n\t              content += tmap.left;\n\t              break;\n\t            case '<':\n\t              if (tokens[i].indexOf(\"!--\") !== 0) {\n\t                htmlTag = 1;\n\t                magicInTag = 0;\n\t              }\n\t              content += token;\n\t              break;\n\t            case '>':\n\t              htmlTag = 0;\n\t              var emptyElement = (content.substr(content.length - 1) === \"/\" || content.substr(content.length - 2) === \"--\"),\n\t                  attrs = \"\";\n\t              if (specialStates.attributeHookups.length) {\n\t                attrs = \"attrs: ['\" + specialStates.attributeHookups.join(\"','\") + \"'], \";\n\t                specialStates.attributeHookups = [];\n\t              }\n\t              if ((tagName + specialStates.tagHookups.length) !== specialStates.lastTagHookup && tagName === top(specialStates.tagHookups)) {\n\t                if (emptyElement) {\n\t                  content = content.substr(0, content.length - 1);\n\t                }\n\t                buff.push(put_cmd, '\"', clean(content), '\"', \",can.view.pending({tagName:'\" + tagName + \"',\" + (attrs) + \"scope: \" + (this.text.scope || \"this\") + this.text.options);\n\t                if (emptyElement) {\n\t                  buff.push(\"}));\");\n\t                  content = \"/>\";\n\t                  popTagHookup();\n\t                } else if (tokens[i] === \"<\" && tokens[i + 1] === \"/\" + tagName) {\n\t                  buff.push(\"}));\");\n\t                  content = token;\n\t                  popTagHookup();\n\t                } else {\n\t                  buff.push(\",subtemplate: function(\" + this.text.argNames + \"){\\n\" + startTxt + (this.text.start || ''));\n\t                  content = '';\n\t                }\n\t              } else if (magicInTag || (!popTagName && elements.tagToContentPropMap[tagNames[tagNames.length - 1]]) || attrs) {\n\t                var pendingPart = \",can.view.pending({\" + attrs + \"scope: \" + (this.text.scope || \"this\") + this.text.options + \"}),\\\"\";\n\t                if (emptyElement) {\n\t                  put(content.substr(0, content.length - 1), pendingPart + \"/>\\\"\");\n\t                } else {\n\t                  put(content, pendingPart + \">\\\"\");\n\t                }\n\t                content = '';\n\t                magicInTag = 0;\n\t              } else {\n\t                content += token;\n\t              }\n\t              if (emptyElement || popTagName) {\n\t                tagNames.pop();\n\t                tagName = tagNames[tagNames.length - 1];\n\t                popTagName = false;\n\t              }\n\t              specialStates.attributeHookups = [];\n\t              break;\n\t            case \"'\":\n\t            case '\"':\n\t              if (htmlTag) {\n\t                if (quote && quote === token) {\n\t                  quote = null;\n\t                  var attr = getAttrName();\n\t                  if (viewCallbacks.attr(attr)) {\n\t                    specialStates.attributeHookups.push(attr);\n\t                  }\n\t                  if (specialAttribute) {\n\t                    content += token;\n\t                    put(content);\n\t                    buff.push(finishTxt, \"}));\\n\");\n\t                    content = \"\";\n\t                    specialAttribute = false;\n\t                    break;\n\t                  }\n\t                } else if (quote === null) {\n\t                  quote = token;\n\t                  beforeQuote = lastToken;\n\t                  attrName = getAttrName();\n\t                  if ((tagName === \"img\" && attrName === \"src\") || attrName === \"style\") {\n\t                    put(content.replace(attrReg, \"\"));\n\t                    content = \"\";\n\t                    specialAttribute = true;\n\t                    buff.push(insert_cmd, \"can.view.txt(2,'\" + getTag(tagName, tokens, i) + \"',\" + status() + \",this,function(){\", startTxt);\n\t                    put(attrName + \"=\" + token);\n\t                    break;\n\t                  }\n\t                }\n\t              }\n\t            default:\n\t              if (lastToken === '<') {\n\t                tagName = token.substr(0, 3) === \"!--\" ? \"!--\" : token.split(/\\s/)[0];\n\t                var isClosingTag = false,\n\t                    cleanedTagName;\n\t                if (tagName.indexOf(\"/\") === 0) {\n\t                  isClosingTag = true;\n\t                  cleanedTagName = tagName.substr(1);\n\t                }\n\t                if (isClosingTag) {\n\t                  if (top(tagNames) === cleanedTagName) {\n\t                    tagName = cleanedTagName;\n\t                    popTagName = true;\n\t                  }\n\t                  if (top(specialStates.tagHookups) === cleanedTagName) {\n\t                    put(content.substr(0, content.length - 1));\n\t                    buff.push(finishTxt + \"}}) );\");\n\t                    content = \"><\";\n\t                    popTagHookup();\n\t                  }\n\t                } else {\n\t                  if (tagName.lastIndexOf(\"/\") === tagName.length - 1) {\n\t                    tagName = tagName.substr(0, tagName.length - 1);\n\t                  }\n\t                  if (tagName !== \"!--\" && (viewCallbacks.tag(tagName))) {\n\t                    if (tagName === \"content\" && elements.tagMap[top(tagNames)]) {\n\t                      token = token.replace(\"content\", elements.tagMap[top(tagNames)]);\n\t                    }\n\t                    specialStates.tagHookups.push(tagName);\n\t                  }\n\t                  tagNames.push(tagName);\n\t                }\n\t              }\n\t              content += token;\n\t              break;\n\t          }\n\t        } else {\n\t          switch (token) {\n\t            case tmap.right:\n\t            case tmap.returnRight:\n\t              switch (startTag) {\n\t                case tmap.left:\n\t                  bracketCount = bracketNum(content);\n\t                  if (bracketCount === 1) {\n\t                    buff.push(insert_cmd, 'can.view.txt(0,\\'' + getTag(tagName, tokens, i) + '\\',' + status() + ',this,function(){', startTxt, content);\n\t                    endStack.push({\n\t                      before: \"\",\n\t                      after: finishTxt + \"}));\\n\"\n\t                    });\n\t                  } else {\n\t                    last = endStack.length && bracketCount === -1 ? endStack.pop() : {after: \";\"};\n\t                    if (last.before) {\n\t                      buff.push(last.before);\n\t                    }\n\t                    buff.push(content, \";\", last.after);\n\t                  }\n\t                  break;\n\t                case tmap.escapeLeft:\n\t                case tmap.returnLeft:\n\t                  bracketCount = bracketNum(content);\n\t                  if (bracketCount) {\n\t                    endStack.push({\n\t                      before: finishTxt,\n\t                      after: \"}));\\n\"\n\t                    });\n\t                  }\n\t                  var escaped = startTag === tmap.escapeLeft ? 1 : 0,\n\t                      commands = {\n\t                        insert: insert_cmd,\n\t                        tagName: getTag(tagName, tokens, i),\n\t                        status: status(),\n\t                        specialAttribute: specialAttribute\n\t                      };\n\t                  for (var ii = 0; ii < this.helpers.length; ii++) {\n\t                    var helper = this.helpers[ii];\n\t                    if (helper.name.test(content)) {\n\t                      content = helper.fn(content, commands);\n\t                      if (helper.name.source === /^>[\\s]*\\w*/.source) {\n\t                        escaped = 0;\n\t                      }\n\t                      break;\n\t                    }\n\t                  }\n\t                  if (typeof content === 'object') {\n\t                    if (content.startTxt && content.end && specialAttribute) {\n\t                      buff.push(insert_cmd, \"can.view.toStr( \", content.content, '() ) );');\n\t                    } else {\n\t                      if (content.startTxt) {\n\t                        buff.push(insert_cmd, \"can.view.txt(\\n\" + (typeof status() === \"string\" || (content.escaped != null ? content.escaped : escaped)) + \",\\n'\" + tagName + \"',\\n\" + status() + \",\\nthis,\\n\");\n\t                      } else if (content.startOnlyTxt) {\n\t                        buff.push(insert_cmd, 'can.view.onlytxt(this,\\n');\n\t                      }\n\t                      buff.push(content.content);\n\t                      if (content.end) {\n\t                        buff.push('));');\n\t                      }\n\t                    }\n\t                  } else if (specialAttribute) {\n\t                    buff.push(insert_cmd, content, ');');\n\t                  } else {\n\t                    buff.push(insert_cmd, \"can.view.txt(\\n\" + (typeof status() === \"string\" || escaped) + \",\\n'\" + tagName + \"',\\n\" + status() + \",\\nthis,\\nfunction(){ \" + (this.text.escape || '') + \"return \", content, bracketCount ? startTxt : \"}));\\n\");\n\t                  }\n\t                  if (rescan && rescan.after && rescan.after.length) {\n\t                    put(rescan.after.length);\n\t                    rescan = null;\n\t                  }\n\t                  break;\n\t              }\n\t              startTag = null;\n\t              content = '';\n\t              break;\n\t            case tmap.templateLeft:\n\t              content += tmap.left;\n\t              break;\n\t            default:\n\t              content += token;\n\t              break;\n\t          }\n\t        }\n\t        lastToken = token;\n\t      }\n\t      if (content.length) {\n\t        put(content);\n\t      }\n\t      buff.push(\";\");\n\t      var template = buff.join(''),\n\t          out = {out: (this.text.outStart || \"\") + template + \" \" + finishTxt + (this.text.outEnd || \"\")};\n\t      myEval.call(out, 'this.fn = (function(' + this.text.argNames + '){' + out.out + '});\\r\\n//# sourceURL=' + name + '.js');\n\t      return out;\n\t    }\n\t  };\n\t  can.view.pending = function(viewData) {\n\t    var hooks = can.view.getHooks();\n\t    return can.view.hook(function(el) {\n\t      can.each(hooks, function(fn) {\n\t        fn(el);\n\t      });\n\t      viewData.templateType = \"legacy\";\n\t      if (viewData.tagName) {\n\t        viewCallbacks.tagHandler(el, viewData.tagName, viewData);\n\t      }\n\t      can.each(viewData && viewData.attrs || [], function(attributeName) {\n\t        viewData.attributeName = attributeName;\n\t        var callback = viewCallbacks.attr(attributeName);\n\t        if (callback) {\n\t          callback(el, viewData);\n\t        }\n\t      });\n\t    });\n\t  };\n\t  can.view.tag(\"content\", function(el, tagData) {\n\t    return tagData.scope;\n\t  });\n\t  can.view.Scanner = Scanner;\n\t  return Scanner;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/compute\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(28), __webpack_require__(30)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can, bind) {\n\t  var stack = [];\n\t  can.__read = function(func, self) {\n\t    stack.push({});\n\t    var value = func.call(self);\n\t    return {\n\t      value: value,\n\t      observed: stack.pop()\n\t    };\n\t  };\n\t  can.__reading = function(obj, event) {\n\t    if (stack.length) {\n\t      stack[stack.length - 1][obj._cid + '|' + event] = {\n\t        obj: obj,\n\t        event: event + \"\"\n\t      };\n\t    }\n\t  };\n\t  can.__clearReading = function() {\n\t    if (stack.length) {\n\t      var ret = stack[stack.length - 1];\n\t      stack[stack.length - 1] = {};\n\t      return ret;\n\t    }\n\t  };\n\t  can.__setReading = function(o) {\n\t    if (stack.length) {\n\t      stack[stack.length - 1] = o;\n\t    }\n\t  };\n\t  can.__addReading = function(o) {\n\t    if (stack.length) {\n\t      can.simpleExtend(stack[stack.length - 1], o);\n\t    }\n\t  };\n\t  var getValueAndBind = function(func, context, oldObserved, onchanged) {\n\t    var info = can.__read(func, context),\n\t        newObserveSet = info.observed,\n\t        obEv,\n\t        name;\n\t    for (name in newObserveSet) {\n\t      if (oldObserved[name]) {\n\t        delete oldObserved[name];\n\t      } else {\n\t        obEv = newObserveSet[name];\n\t        obEv.obj.bind(obEv.event, onchanged);\n\t      }\n\t    }\n\t    for (name in oldObserved) {\n\t      obEv = oldObserved[name];\n\t      obEv.obj.unbind(obEv.event, onchanged);\n\t    }\n\t    return info;\n\t  };\n\t  var updateOnChange = function(compute, newValue, oldValue, batchNum) {\n\t    if (newValue !== oldValue) {\n\t      can.batch.trigger(compute, batchNum ? {\n\t        type: \"change\",\n\t        batchNum: batchNum\n\t      } : 'change', [newValue, oldValue]);\n\t    }\n\t  };\n\t  var setupComputeHandlers = function(compute, func, context, setCachedValue) {\n\t    var readInfo,\n\t        onchanged,\n\t        batchNum;\n\t    return {\n\t      on: function(updater) {\n\t        if (!onchanged) {\n\t          onchanged = function(ev) {\n\t            if (compute.bound && (ev.batchNum === undefined || ev.batchNum !== batchNum)) {\n\t              var oldValue = readInfo.value;\n\t              readInfo = getValueAndBind(func, context, readInfo.observed, onchanged);\n\t              updater(readInfo.value, oldValue, ev.batchNum);\n\t              batchNum = batchNum = ev.batchNum;\n\t            }\n\t          };\n\t        }\n\t        readInfo = getValueAndBind(func, context, {}, onchanged);\n\t        setCachedValue(readInfo.value);\n\t        compute.hasDependencies = !can.isEmptyObject(readInfo.observed);\n\t      },\n\t      off: function(updater) {\n\t        for (var name in readInfo.observed) {\n\t          var ob = readInfo.observed[name];\n\t          ob.obj.unbind(ob.event, onchanged);\n\t        }\n\t      }\n\t    };\n\t  };\n\t  var isObserve = function(obj) {\n\t    return obj instanceof can.Map || obj && obj.__get;\n\t  },\n\t      k = function() {};\n\t  can.compute = function(getterSetter, context, eventName) {\n\t    if (getterSetter && getterSetter.isComputed) {\n\t      return getterSetter;\n\t    }\n\t    var computed,\n\t        on = k,\n\t        off = k,\n\t        value,\n\t        get = function() {\n\t          return value;\n\t        },\n\t        set = function(newVal) {\n\t          value = newVal;\n\t        },\n\t        setCached = set,\n\t        args = can.makeArray(arguments),\n\t        updater = function(newValue, oldValue, batchNum) {\n\t          setCached(newValue);\n\t          updateOnChange(computed, newValue, oldValue, batchNum);\n\t        },\n\t        form;\n\t    computed = function(newVal) {\n\t      if (arguments.length) {\n\t        var old = value;\n\t        var setVal = set.call(context, newVal, old);\n\t        if (computed.hasDependencies) {\n\t          return get.call(context);\n\t        }\n\t        if (setVal === undefined) {\n\t          value = get.call(context);\n\t        } else {\n\t          value = setVal;\n\t        }\n\t        updateOnChange(computed, value, old);\n\t        return value;\n\t      } else {\n\t        if (stack.length && computed.canReadForChangeEvent !== false) {\n\t          can.__reading(computed, 'change');\n\t          if (!computed.bound) {\n\t            can.compute.temporarilyBind(computed);\n\t          }\n\t        }\n\t        if (computed.bound) {\n\t          return value;\n\t        } else {\n\t          return get.call(context);\n\t        }\n\t      }\n\t    };\n\t    if (typeof getterSetter === 'function') {\n\t      set = getterSetter;\n\t      get = getterSetter;\n\t      computed.canReadForChangeEvent = eventName === false ? false : true;\n\t      var handlers = setupComputeHandlers(computed, getterSetter, context || this, setCached);\n\t      on = handlers.on;\n\t      off = handlers.off;\n\t    } else if (context) {\n\t      if (typeof context === 'string') {\n\t        var propertyName = context,\n\t            isObserve = getterSetter instanceof can.Map;\n\t        if (isObserve) {\n\t          computed.hasDependencies = true;\n\t        }\n\t        get = function() {\n\t          if (isObserve) {\n\t            return getterSetter.attr(propertyName);\n\t          } else {\n\t            return getterSetter[propertyName];\n\t          }\n\t        };\n\t        set = function(newValue) {\n\t          if (isObserve) {\n\t            getterSetter.attr(propertyName, newValue);\n\t          } else {\n\t            getterSetter[propertyName] = newValue;\n\t          }\n\t        };\n\t        var handler;\n\t        on = function(update) {\n\t          handler = function() {\n\t            update(get(), value);\n\t          };\n\t          can.bind.call(getterSetter, eventName || propertyName, handler);\n\t          value = can.__read(get).value;\n\t        };\n\t        off = function() {\n\t          can.unbind.call(getterSetter, eventName || propertyName, handler);\n\t        };\n\t      } else {\n\t        if (typeof context === 'function') {\n\t          value = getterSetter;\n\t          set = context;\n\t          context = eventName;\n\t          form = 'setter';\n\t        } else {\n\t          value = getterSetter;\n\t          var options = context,\n\t              oldUpdater = updater;\n\t          context = options.context || options;\n\t          get = options.get || get;\n\t          set = options.set || function() {\n\t            return value;\n\t          };\n\t          if (options.fn) {\n\t            var fn = options.fn,\n\t                data;\n\t            get = function() {\n\t              return fn.call(context, value);\n\t            };\n\t            if (fn.length === 0) {\n\t              data = setupComputeHandlers(computed, fn, context, setCached);\n\t            } else if (fn.length === 1) {\n\t              data = setupComputeHandlers(computed, function() {\n\t                return fn.call(context, value);\n\t              }, context, setCached);\n\t            } else {\n\t              updater = function(newVal) {\n\t                if (newVal !== undefined) {\n\t                  oldUpdater(newVal, value);\n\t                }\n\t              };\n\t              data = setupComputeHandlers(computed, function() {\n\t                var res = fn.call(context, value, function(newVal) {\n\t                  oldUpdater(newVal, value);\n\t                });\n\t                return res !== undefined ? res : value;\n\t              }, context, setCached);\n\t            }\n\t            on = data.on;\n\t            off = data.off;\n\t          } else {\n\t            updater = function() {\n\t              var newVal = get.call(context);\n\t              oldUpdater(newVal, value);\n\t            };\n\t          }\n\t          on = options.on || on;\n\t          off = options.off || off;\n\t        }\n\t      }\n\t    } else {\n\t      value = getterSetter;\n\t    }\n\t    can.cid(computed, 'compute');\n\t    return can.simpleExtend(computed, {\n\t      isComputed: true,\n\t      _bindsetup: function() {\n\t        this.bound = true;\n\t        var oldReading = can.__clearReading();\n\t        on.call(this, updater);\n\t        can.__setReading(oldReading);\n\t      },\n\t      _bindteardown: function() {\n\t        off.call(this, updater);\n\t        this.bound = false;\n\t      },\n\t      bind: can.bindAndSetup,\n\t      unbind: can.unbindAndTeardown,\n\t      clone: function(context) {\n\t        if (context) {\n\t          if (form === 'setter') {\n\t            args[2] = context;\n\t          } else {\n\t            args[1] = context;\n\t          }\n\t        }\n\t        return can.compute.apply(can, args);\n\t      }\n\t    });\n\t  };\n\t  var computes,\n\t      unbindComputes = function() {\n\t        for (var i = 0,\n\t            len = computes.length; i < len; i++) {\n\t          computes[i].unbind('change', k);\n\t        }\n\t        computes = null;\n\t      };\n\t  can.compute.temporarilyBind = function(compute) {\n\t    compute.bind('change', k);\n\t    if (!computes) {\n\t      computes = [];\n\t      setTimeout(unbindComputes, 10);\n\t    }\n\t    computes.push(compute);\n\t  };\n\t  can.compute.truthy = function(compute) {\n\t    return can.compute(function() {\n\t      var res = compute();\n\t      if (typeof res === 'function') {\n\t        res = res();\n\t      }\n\t      return !!res;\n\t    });\n\t  };\n\t  can.compute.async = function(initialValue, asyncComputer, context) {\n\t    return can.compute(initialValue, {\n\t      fn: asyncComputer,\n\t      context: context\n\t    });\n\t  };\n\t  can.compute.read = function(parent, reads, options) {\n\t    options = options || {};\n\t    var cur = parent,\n\t        type,\n\t        prev,\n\t        foundObs;\n\t    for (var i = 0,\n\t        readLength = reads.length; i < readLength; i++) {\n\t      prev = cur;\n\t      if (prev && prev.isComputed) {\n\t        if (options.foundObservable) {\n\t          options.foundObservable(prev, i);\n\t        }\n\t        prev = prev();\n\t      }\n\t      if (isObserve(prev)) {\n\t        if (!foundObs && options.foundObservable) {\n\t          options.foundObservable(prev, i);\n\t        }\n\t        foundObs = 1;\n\t        if (typeof prev[reads[i]] === 'function' && prev.constructor.prototype[reads[i]] === prev[reads[i]]) {\n\t          if (options.returnObserveMethods) {\n\t            cur = cur[reads[i]];\n\t          } else if (reads[i] === 'constructor' && prev instanceof can.Construct) {\n\t            cur = prev[reads[i]];\n\t          } else {\n\t            cur = prev[reads[i]].apply(prev, options.args || []);\n\t          }\n\t        } else {\n\t          cur = cur.attr(reads[i]);\n\t        }\n\t      } else {\n\t        cur = prev[reads[i]];\n\t      }\n\t      type = typeof cur;\n\t      if (cur && cur.isComputed && (!options.isArgument && i < readLength - 1)) {\n\t        if (!foundObs && options.foundObservable) {\n\t          options.foundObservable(prev, i + 1);\n\t        }\n\t        cur = cur();\n\t      } else if (i < reads.length - 1 && type === 'function' && options.executeAnonymousFunctions && !(can.Construct && cur.prototype instanceof can.Construct)) {\n\t        cur = cur();\n\t      }\n\t      if (i < reads.length - 1 && (cur === null || type !== 'function' && type !== 'object')) {\n\t        if (options.earlyExit) {\n\t          options.earlyExit(prev, i, cur);\n\t        }\n\t        return {\n\t          value: undefined,\n\t          parent: prev\n\t        };\n\t      }\n\t    }\n\t    if (typeof cur === 'function' && !(can.Construct && cur.prototype instanceof can.Construct)) {\n\t      if (options.isArgument) {\n\t        if (!cur.isComputed && options.proxyMethods !== false) {\n\t          cur = can.proxy(cur, prev);\n\t        }\n\t      } else {\n\t        if (cur.isComputed && !foundObs && options.foundObservable) {\n\t          options.foundObservable(cur, i);\n\t        }\n\t        cur = cur.call(prev);\n\t      }\n\t    }\n\t    if (cur === undefined) {\n\t      if (options.earlyExit) {\n\t        options.earlyExit(prev, i - 1);\n\t      }\n\t    }\n\t    return {\n\t      value: cur,\n\t      parent: prev\n\t    };\n\t  };\n\t  return can.compute;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/render\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(21), __webpack_require__(31), __webpack_require__(32), __webpack_require__(33)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can, elements, live) {\n\t  var pendingHookups = [],\n\t      tagChildren = function(tagName) {\n\t        var newTag = elements.tagMap[tagName] || \"span\";\n\t        if (newTag === \"span\") {\n\t          return \"@@!!@@\";\n\t        }\n\t        return \"<\" + newTag + \">\" + tagChildren(newTag) + \"</\" + newTag + \">\";\n\t      },\n\t      contentText = function(input, tag) {\n\t        if (typeof input === 'string') {\n\t          return input;\n\t        }\n\t        if (!input && input !== 0) {\n\t          return '';\n\t        }\n\t        var hook = (input.hookup && function(el, id) {\n\t          input.hookup.call(input, el, id);\n\t        }) || (typeof input === 'function' && input);\n\t        if (hook) {\n\t          if (tag) {\n\t            return \"<\" + tag + \" \" + can.view.hook(hook) + \"></\" + tag + \">\";\n\t          } else {\n\t            pendingHookups.push(hook);\n\t          }\n\t          return '';\n\t        }\n\t        return \"\" + input;\n\t      },\n\t      contentEscape = function(txt, tag) {\n\t        return (typeof txt === 'string' || typeof txt === 'number') ? can.esc(txt) : contentText(txt, tag);\n\t      },\n\t      withinTemplatedSectionWithinAnElement = false,\n\t      emptyHandler = function() {};\n\t  var lastHookups;\n\t  can.extend(can.view, {\n\t    live: live,\n\t    setupLists: function() {\n\t      var old = can.view.lists,\n\t          data;\n\t      can.view.lists = function(list, renderer) {\n\t        data = {\n\t          list: list,\n\t          renderer: renderer\n\t        };\n\t        return Math.random();\n\t      };\n\t      return function() {\n\t        can.view.lists = old;\n\t        return data;\n\t      };\n\t    },\n\t    getHooks: function() {\n\t      var hooks = pendingHookups.slice(0);\n\t      lastHookups = hooks;\n\t      pendingHookups = [];\n\t      return hooks;\n\t    },\n\t    onlytxt: function(self, func) {\n\t      return contentEscape(func.call(self));\n\t    },\n\t    txt: function(escape, tagName, status, self, func) {\n\t      var tag = (elements.tagMap[tagName] || \"span\"),\n\t          setupLiveBinding = false,\n\t          value,\n\t          listData,\n\t          compute,\n\t          unbind = emptyHandler,\n\t          attributeName;\n\t      if (withinTemplatedSectionWithinAnElement) {\n\t        value = func.call(self);\n\t      } else {\n\t        if (typeof status === \"string\" || status === 1) {\n\t          withinTemplatedSectionWithinAnElement = true;\n\t        }\n\t        var listTeardown = can.view.setupLists();\n\t        unbind = function() {\n\t          compute.unbind(\"change\", emptyHandler);\n\t        };\n\t        compute = can.compute(func, self, false);\n\t        compute.bind(\"change\", emptyHandler);\n\t        listData = listTeardown();\n\t        value = compute();\n\t        withinTemplatedSectionWithinAnElement = false;\n\t        setupLiveBinding = compute.hasDependencies;\n\t      }\n\t      if (listData) {\n\t        unbind();\n\t        return \"<\" + tag + can.view.hook(function(el, parentNode) {\n\t          live.list(el, listData.list, listData.renderer, self, parentNode);\n\t        }) + \"></\" + tag + \">\";\n\t      }\n\t      if (!setupLiveBinding || typeof value === \"function\") {\n\t        unbind();\n\t        return ((withinTemplatedSectionWithinAnElement || escape === 2 || !escape) ? contentText : contentEscape)(value, status === 0 && tag);\n\t      }\n\t      var contentProp = elements.tagToContentPropMap[tagName];\n\t      if (status === 0 && !contentProp) {\n\t        return \"<\" + tag + can.view.hook(escape && typeof value !== \"object\" ? function(el, parentNode) {\n\t          live.text(el, compute, parentNode);\n\t          unbind();\n\t        } : function(el, parentNode) {\n\t          live.html(el, compute, parentNode);\n\t          unbind();\n\t        }) + \">\" + tagChildren(tag) + \"</\" + tag + \">\";\n\t      } else if (status === 1) {\n\t        pendingHookups.push(function(el) {\n\t          live.attributes(el, compute, compute());\n\t          unbind();\n\t        });\n\t        return compute();\n\t      } else if (escape === 2) {\n\t        attributeName = status;\n\t        pendingHookups.push(function(el) {\n\t          live.specialAttribute(el, attributeName, compute);\n\t          unbind();\n\t        });\n\t        return compute();\n\t      } else {\n\t        attributeName = status === 0 ? contentProp : status;\n\t        (status === 0 ? lastHookups : pendingHookups).push(function(el) {\n\t          live.attribute(el, attributeName, compute);\n\t          unbind();\n\t        });\n\t        return live.attributePlaceholder;\n\t      }\n\t    }\n\t  });\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/jquery\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(40), __webpack_require__(35), __webpack_require__(36), __webpack_require__(37), __webpack_require__(39), __webpack_require__(38)], __WEBPACK_AMD_DEFINE_RESULT__ = (function($, can, attr, event) {\n\t  var isBindableElement = function(node) {\n\t    return (node.nodeName && (node.nodeType === 1 || node.nodeType === 9)) || node == window;\n\t  };\n\t  $.extend(can, $, {\n\t    trigger: function(obj, event, args, bubbles) {\n\t      if (isBindableElement(obj)) {\n\t        $.event.trigger(event, args, obj, !bubbles);\n\t      } else if (obj.trigger) {\n\t        obj.trigger(event, args);\n\t      } else {\n\t        if (typeof event === 'string') {\n\t          event = {type: event};\n\t        }\n\t        event.target = event.target || obj;\n\t        can.dispatch.call(obj, event, args);\n\t      }\n\t    },\n\t    event: can.event,\n\t    addEvent: can.addEvent,\n\t    removeEvent: can.removeEvent,\n\t    buildFragment: function(elems, context) {\n\t      var ret;\n\t      elems = [elems];\n\t      context = context || document;\n\t      context = !context.nodeType && context[0] || context;\n\t      context = context.ownerDocument || context;\n\t      ret = $.buildFragment(elems, context);\n\t      return ret.cacheable ? $.clone(ret.fragment) : ret.fragment || ret;\n\t    },\n\t    $: $,\n\t    each: can.each,\n\t    bind: function(ev, cb) {\n\t      if (this.bind && this.bind !== can.bind) {\n\t        this.bind(ev, cb);\n\t      } else if (isBindableElement(this)) {\n\t        $.event.add(this, ev, cb);\n\t      } else {\n\t        can.addEvent.call(this, ev, cb);\n\t      }\n\t      return this;\n\t    },\n\t    unbind: function(ev, cb) {\n\t      if (this.unbind && this.unbind !== can.unbind) {\n\t        this.unbind(ev, cb);\n\t      } else if (isBindableElement(this)) {\n\t        $.event.remove(this, ev, cb);\n\t      } else {\n\t        can.removeEvent.call(this, ev, cb);\n\t      }\n\t      return this;\n\t    },\n\t    delegate: function(selector, ev, cb) {\n\t      if (this.delegate) {\n\t        this.delegate(selector, ev, cb);\n\t      } else if (isBindableElement(this)) {\n\t        $(this).delegate(selector, ev, cb);\n\t      } else {\n\t        can.bind.call(this, ev, cb);\n\t      }\n\t      return this;\n\t    },\n\t    undelegate: function(selector, ev, cb) {\n\t      if (this.undelegate) {\n\t        this.undelegate(selector, ev, cb);\n\t      } else if (isBindableElement(this)) {\n\t        $(this).undelegate(selector, ev, cb);\n\t      } else {\n\t        can.unbind.call(this, ev, cb);\n\t      }\n\t      return this;\n\t    },\n\t    proxy: function(fn, context) {\n\t      return function() {\n\t        return fn.apply(context, arguments);\n\t      };\n\t    },\n\t    attr: attr\n\t  });\n\t  can.on = can.bind;\n\t  can.off = can.unbind;\n\t  $.each(['append', 'filter', 'addClass', 'remove', 'data', 'get', 'has'], function(i, name) {\n\t    can[name] = function(wrapped) {\n\t      return wrapped[name].apply(wrapped, can.makeArray(arguments).slice(1));\n\t    };\n\t  });\n\t  var oldClean = $.cleanData;\n\t  $.cleanData = function(elems) {\n\t    $.each(elems, function(i, elem) {\n\t      if (elem) {\n\t        can.trigger(elem, 'removed', [], false);\n\t      }\n\t    });\n\t    oldClean(elems);\n\t  };\n\t  var oldDomManip = $.fn.domManip,\n\t      cbIndex;\n\t  $.fn.domManip = function(args, cb1, cb2) {\n\t    for (var i = 1; i < arguments.length; i++) {\n\t      if (typeof arguments[i] === 'function') {\n\t        cbIndex = i;\n\t        break;\n\t      }\n\t    }\n\t    return oldDomManip.apply(this, arguments);\n\t  };\n\t  $(document.createElement(\"div\")).append(document.createElement(\"div\"));\n\t  $.fn.domManip = (cbIndex === 2 ? function(args, table, callback) {\n\t    return oldDomManip.call(this, args, table, function(elem) {\n\t      var elems;\n\t      if (elem.nodeType === 11) {\n\t        elems = can.makeArray(elem.childNodes);\n\t      }\n\t      var ret = callback.apply(this, arguments);\n\t      can.inserted(elems ? elems : [elem]);\n\t      return ret;\n\t    });\n\t  } : function(args, callback) {\n\t    return oldDomManip.call(this, args, function(elem) {\n\t      var elems;\n\t      if (elem.nodeType === 11) {\n\t        elems = can.makeArray(elem.childNodes);\n\t      }\n\t      var ret = callback.apply(this, arguments);\n\t      can.inserted(elems ? elems : [elem]);\n\t      return ret;\n\t    });\n\t  });\n\t  if (!can.attr.MutationObserver) {\n\t    var oldAttr = $.attr;\n\t    $.attr = function(el, attrName) {\n\t      var oldValue,\n\t          newValue;\n\t      if (arguments.length >= 3) {\n\t        oldValue = oldAttr.call(this, el, attrName);\n\t      }\n\t      var res = oldAttr.apply(this, arguments);\n\t      if (arguments.length >= 3) {\n\t        newValue = oldAttr.call(this, el, attrName);\n\t      }\n\t      if (newValue !== oldValue) {\n\t        can.attr.trigger(el, attrName, oldValue);\n\t      }\n\t      return res;\n\t    };\n\t    var oldRemove = $.removeAttr;\n\t    $.removeAttr = function(el, attrName) {\n\t      var oldValue = oldAttr.call(this, el, attrName),\n\t          res = oldRemove.apply(this, arguments);\n\t      if (oldValue != null) {\n\t        can.attr.trigger(el, attrName, oldValue);\n\t      }\n\t      return res;\n\t    };\n\t    $.event.special.attributes = {\n\t      setup: function() {\n\t        can.data(can.$(this), \"canHasAttributesBindings\", true);\n\t      },\n\t      teardown: function() {\n\t        $.removeData(this, \"canHasAttributesBindings\");\n\t      }\n\t    };\n\t  } else {\n\t    $.event.special.attributes = {\n\t      setup: function() {\n\t        var self = this;\n\t        var observer = new can.attr.MutationObserver(function(mutations) {\n\t          mutations.forEach(function(mutation) {\n\t            var copy = can.simpleExtend({}, mutation);\n\t            can.trigger(self, copy, []);\n\t          });\n\t        });\n\t        observer.observe(this, {\n\t          attributes: true,\n\t          attributeOldValue: true\n\t        });\n\t        can.data(can.$(this), \"canAttributesObserver\", observer);\n\t      },\n\t      teardown: function() {\n\t        can.data(can.$(this), \"canAttributesObserver\").disconnect();\n\t        $.removeData(this, \"canAttributesObserver\");\n\t      }\n\t    };\n\t  }\n\t  (function() {\n\t    var text = \"<-\\n>\",\n\t        frag = can.buildFragment(text, document);\n\t    if (text !== frag.childNodes[0].nodeValue) {\n\t      var oldBuildFragment = can.buildFragment;\n\t      can.buildFragment = function(content, context) {\n\t        var res = oldBuildFragment(content, context);\n\t        if (res.childNodes.length === 1 && res.childNodes[0].nodeType === 3) {\n\t          res.childNodes[0].nodeValue = content;\n\t        }\n\t        return res;\n\t      };\n\t    }\n\t  })();\n\t  $.event.special.inserted = {};\n\t  $.event.special.removed = {};\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/construct\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(33)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var initializing = 0;\n\t  can.Construct = function() {\n\t    if (arguments.length) {\n\t      return can.Construct.extend.apply(can.Construct, arguments);\n\t    }\n\t  };\n\t  can.extend(can.Construct, {\n\t    constructorExtends: true,\n\t    newInstance: function() {\n\t      var inst = this.instance(),\n\t          args;\n\t      if (inst.setup) {\n\t        args = inst.setup.apply(inst, arguments);\n\t      }\n\t      if (inst.init) {\n\t        inst.init.apply(inst, args || arguments);\n\t      }\n\t      return inst;\n\t    },\n\t    _inherit: function(newProps, oldProps, addTo) {\n\t      can.extend(addTo || newProps, newProps || {});\n\t    },\n\t    _overwrite: function(what, oldProps, propName, val) {\n\t      what[propName] = val;\n\t    },\n\t    setup: function(base, fullName) {\n\t      this.defaults = can.extend(true, {}, base.defaults, this.defaults);\n\t    },\n\t    instance: function() {\n\t      initializing = 1;\n\t      var inst = new this();\n\t      initializing = 0;\n\t      return inst;\n\t    },\n\t    extend: function(fullName, klass, proto) {\n\t      if (typeof fullName !== 'string') {\n\t        proto = klass;\n\t        klass = fullName;\n\t        fullName = null;\n\t      }\n\t      if (!proto) {\n\t        proto = klass;\n\t        klass = null;\n\t      }\n\t      proto = proto || {};\n\t      var _super_class = this,\n\t          _super = this.prototype,\n\t          parts,\n\t          current,\n\t          _fullName,\n\t          _shortName,\n\t          name,\n\t          shortName,\n\t          namespace,\n\t          prototype;\n\t      prototype = this.instance();\n\t      can.Construct._inherit(proto, _super, prototype);\n\t      function Constructor() {\n\t        if (!initializing) {\n\t          return this.constructor !== Constructor && arguments.length && Constructor.constructorExtends ? Constructor.extend.apply(Constructor, arguments) : Constructor.newInstance.apply(Constructor, arguments);\n\t        }\n\t      }\n\t      for (name in _super_class) {\n\t        if (_super_class.hasOwnProperty(name)) {\n\t          Constructor[name] = _super_class[name];\n\t        }\n\t      }\n\t      can.Construct._inherit(klass, _super_class, Constructor);\n\t      if (fullName) {\n\t        parts = fullName.split('.');\n\t        shortName = parts.pop();\n\t        current = can.getObject(parts.join('.'), window, true);\n\t        namespace = current;\n\t        _fullName = can.underscore(fullName.replace(/\\./g, \"_\"));\n\t        _shortName = can.underscore(shortName);\n\t        current[shortName] = Constructor;\n\t      }\n\t      can.extend(Constructor, {\n\t        constructor: Constructor,\n\t        prototype: prototype,\n\t        namespace: namespace,\n\t        _shortName: _shortName,\n\t        fullName: fullName,\n\t        _fullName: _fullName\n\t      });\n\t      if (shortName !== undefined) {\n\t        Constructor.shortName = shortName;\n\t      }\n\t      Constructor.prototype.constructor = Constructor;\n\t      var t = [_super_class].concat(can.makeArray(arguments)),\n\t          args = Constructor.setup.apply(Constructor, t);\n\t      if (Constructor.init) {\n\t        Constructor.init.apply(Constructor, args || t);\n\t      }\n\t      return Constructor;\n\t    }\n\t  });\n\t  can.Construct.prototype.setup = function() {};\n\t  can.Construct.prototype.init = function() {};\n\t  return can.Construct;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/bind\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  can.bindAndSetup = function() {\n\t    can.addEvent.apply(this, arguments);\n\t    if (!this._init) {\n\t      if (!this._bindings) {\n\t        this._bindings = 1;\n\t        if (this._bindsetup) {\n\t          this._bindsetup();\n\t        }\n\t      } else {\n\t        this._bindings++;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  can.unbindAndTeardown = function(ev, handler) {\n\t    can.removeEvent.apply(this, arguments);\n\t    if (this._bindings === null) {\n\t      this._bindings = 0;\n\t    } else {\n\t      this._bindings--;\n\t    }\n\t    if (!this._bindings && this._bindteardown) {\n\t      this._bindteardown();\n\t    }\n\t    return this;\n\t  };\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/map/bubble\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var bubble = can.bubble = {\n\t    event: function(map, eventName) {\n\t      return map.constructor._bubbleRule(eventName, map);\n\t    },\n\t    childrenOf: function(parentMap, eventName) {\n\t      parentMap._each(function(child, prop) {\n\t        if (child && child.bind) {\n\t          bubble.toParent(child, parentMap, prop, eventName);\n\t        }\n\t      });\n\t    },\n\t    teardownChildrenFrom: function(parentMap, eventName) {\n\t      parentMap._each(function(child) {\n\t        bubble.teardownFromParent(parentMap, child, eventName);\n\t      });\n\t    },\n\t    toParent: function(child, parent, prop, eventName) {\n\t      can.listenTo.call(parent, child, eventName, function() {\n\t        var args = can.makeArray(arguments),\n\t            ev = args.shift();\n\t        args[0] = (can.List && parent instanceof can.List ? parent.indexOf(child) : prop) + (args[0] ? \".\" + args[0] : \"\");\n\t        ev.triggeredNS = ev.triggeredNS || {};\n\t        if (ev.triggeredNS[parent._cid]) {\n\t          return;\n\t        }\n\t        ev.triggeredNS[parent._cid] = true;\n\t        can.trigger(parent, ev, args);\n\t      });\n\t    },\n\t    teardownFromParent: function(parent, child, eventName) {\n\t      if (child && child.unbind) {\n\t        can.stopListening.call(parent, child, eventName);\n\t      }\n\t    },\n\t    bind: function(parent, eventName) {\n\t      if (!parent._init) {\n\t        var bubbleEvent = bubble.event(parent, eventName);\n\t        if (bubbleEvent) {\n\t          if (!parent._bubbleBindings) {\n\t            parent._bubbleBindings = {};\n\t          }\n\t          if (!parent._bubbleBindings[bubbleEvent]) {\n\t            parent._bubbleBindings[bubbleEvent] = 1;\n\t            bubble.childrenOf(parent, bubbleEvent);\n\t          } else {\n\t            parent._bubbleBindings[bubbleEvent]++;\n\t          }\n\t        }\n\t      }\n\t    },\n\t    unbind: function(parent, eventName) {\n\t      var bubbleEvent = bubble.event(parent, eventName);\n\t      if (bubbleEvent) {\n\t        if (parent._bubbleBindings) {\n\t          parent._bubbleBindings[bubbleEvent]--;\n\t        }\n\t        if (!parent._bubbleBindings[bubbleEvent]) {\n\t          delete parent._bubbleBindings[bubbleEvent];\n\t          bubble.teardownChildrenFrom(parent, bubbleEvent);\n\t          if (can.isEmptyObject(parent._bubbleBindings)) {\n\t            delete parent._bubbleBindings;\n\t          }\n\t        }\n\t      }\n\t    },\n\t    add: function(parent, child, prop) {\n\t      if (child instanceof can.Map && parent._bubbleBindings) {\n\t        for (var eventName in parent._bubbleBindings) {\n\t          if (parent._bubbleBindings[eventName]) {\n\t            bubble.teardownFromParent(parent, child, eventName);\n\t            bubble.toParent(child, parent, prop, eventName);\n\t          }\n\t        }\n\t      }\n\t    },\n\t    removeMany: function(parent, children) {\n\t      for (var i = 0,\n\t          len = children.length; i < len; i++) {\n\t        bubble.remove(parent, children[i]);\n\t      }\n\t    },\n\t    remove: function(parent, child) {\n\t      if (child instanceof can.Map && parent._bubbleBindings) {\n\t        for (var eventName in parent._bubbleBindings) {\n\t          if (parent._bubbleBindings[eventName]) {\n\t            bubble.teardownFromParent(parent, child, eventName);\n\t          }\n\t        }\n\t      }\n\t    },\n\t    set: function(parent, prop, value, current) {\n\t      if (can.Map.helpers.isObservable(value)) {\n\t        bubble.add(parent, value, prop);\n\t      }\n\t      if (can.Map.helpers.isObservable(current)) {\n\t        bubble.remove(parent, current);\n\t      }\n\t      return value;\n\t    }\n\t  };\n\t  return bubble;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/batch\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(35)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var batchNum = 1,\n\t      transactions = 0,\n\t      batchEvents = [],\n\t      stopCallbacks = [];\n\t  can.batch = {\n\t    start: function(batchStopHandler) {\n\t      transactions++;\n\t      if (batchStopHandler) {\n\t        stopCallbacks.push(batchStopHandler);\n\t      }\n\t    },\n\t    stop: function(force, callStart) {\n\t      if (force) {\n\t        transactions = 0;\n\t      } else {\n\t        transactions--;\n\t      }\n\t      if (transactions === 0) {\n\t        var items = batchEvents.slice(0),\n\t            callbacks = stopCallbacks.slice(0),\n\t            i,\n\t            len;\n\t        batchEvents = [];\n\t        stopCallbacks = [];\n\t        batchNum++;\n\t        if (callStart) {\n\t          can.batch.start();\n\t        }\n\t        for (i = 0, len = items.length; i < len; i++) {\n\t          can.trigger.apply(can, items[i]);\n\t        }\n\t        for (i = 0, len = callbacks.length; i < callbacks.length; i++) {\n\t          callbacks[i]();\n\t        }\n\t      }\n\t    },\n\t    trigger: function(item, event, args) {\n\t      if (!item._init) {\n\t        if (transactions === 0) {\n\t          return can.trigger(item, event, args);\n\t        } else {\n\t          event = typeof event === 'string' ? {type: event} : event;\n\t          event.batchNum = batchNum;\n\t          batchEvents.push([item, event, args]);\n\t        }\n\t      }\n\t    }\n\t  };\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/elements\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(21)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var selectsCommentNodes = (function() {\n\t    return can.$(document.createComment('~')).length === 1;\n\t  })();\n\t  var elements = {\n\t    tagToContentPropMap: {\n\t      option: 'textContent' in document.createElement('option') ? 'textContent' : 'innerText',\n\t      textarea: 'value'\n\t    },\n\t    attrMap: can.attr.map,\n\t    attrReg: /([^\\s=]+)[\\s]*=[\\s]*/,\n\t    defaultValue: can.attr.defaultValue,\n\t    tagMap: {\n\t      '': 'span',\n\t      table: 'tbody',\n\t      tr: 'td',\n\t      ol: 'li',\n\t      ul: 'li',\n\t      tbody: 'tr',\n\t      thead: 'tr',\n\t      tfoot: 'tr',\n\t      select: 'option',\n\t      optgroup: 'option'\n\t    },\n\t    reverseTagMap: {\n\t      tr: 'tbody',\n\t      option: 'select',\n\t      td: 'tr',\n\t      th: 'tr',\n\t      li: 'ul'\n\t    },\n\t    getParentNode: function(el, defaultParentNode) {\n\t      return defaultParentNode && el.parentNode.nodeType === 11 ? defaultParentNode : el.parentNode;\n\t    },\n\t    setAttr: can.attr.set,\n\t    getAttr: can.attr.get,\n\t    removeAttr: can.attr.remove,\n\t    contentText: function(text) {\n\t      if (typeof text === 'string') {\n\t        return text;\n\t      }\n\t      if (!text && text !== 0) {\n\t        return '';\n\t      }\n\t      return '' + text;\n\t    },\n\t    after: function(oldElements, newFrag) {\n\t      var last = oldElements[oldElements.length - 1];\n\t      if (last.nextSibling) {\n\t        can.insertBefore(last.parentNode, newFrag, last.nextSibling);\n\t      } else {\n\t        can.appendChild(last.parentNode, newFrag);\n\t      }\n\t    },\n\t    replace: function(oldElements, newFrag) {\n\t      elements.after(oldElements, newFrag);\n\t      if (can.remove(can.$(oldElements)).length < oldElements.length && !selectsCommentNodes) {\n\t        can.each(oldElements, function(el) {\n\t          if (el.nodeType === 8) {\n\t            el.parentNode.removeChild(el);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  };\n\t  can.view.elements = elements;\n\t  return elements;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/live\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(31), __webpack_require__(21), __webpack_require__(41), __webpack_require__(42)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can, elements, view, nodeLists, parser) {\n\t  elements = elements || can.view.elements;\n\t  nodeLists = nodeLists || can.view.NodeLists;\n\t  parser = parser || can.view.parser;\n\t  var setup = function(el, bind, unbind) {\n\t    var tornDown = false,\n\t        teardown = function() {\n\t          if (!tornDown) {\n\t            tornDown = true;\n\t            unbind(data);\n\t            can.unbind.call(el, 'removed', teardown);\n\t          }\n\t          return true;\n\t        },\n\t        data = {teardownCheck: function(parent) {\n\t            return parent ? false : teardown();\n\t          }};\n\t    can.bind.call(el, 'removed', teardown);\n\t    bind(data);\n\t    return data;\n\t  },\n\t      listen = function(el, compute, change) {\n\t        return setup(el, function() {\n\t          compute.bind('change', change);\n\t        }, function(data) {\n\t          compute.unbind('change', change);\n\t          if (data.nodeList) {\n\t            nodeLists.unregister(data.nodeList);\n\t          }\n\t        });\n\t      },\n\t      getAttributeParts = function(newVal) {\n\t        var attrs = {},\n\t            attr;\n\t        parser.parseAttrs(newVal, {\n\t          attrStart: function(name) {\n\t            attrs[name] = \"\";\n\t            attr = name;\n\t          },\n\t          attrValue: function(value) {\n\t            attrs[attr] += value;\n\t          },\n\t          attrEnd: function() {}\n\t        });\n\t        return attrs;\n\t      },\n\t      splice = [].splice,\n\t      isNode = function(obj) {\n\t        return obj && obj.nodeType;\n\t      },\n\t      addTextNodeIfNoChildren = function(frag) {\n\t        if (!frag.childNodes.length) {\n\t          frag.appendChild(document.createTextNode(\"\"));\n\t        }\n\t      };\n\t  var live = {\n\t    list: function(el, compute, render, context, parentNode) {\n\t      var masterNodeList = [el],\n\t          indexMap = [],\n\t          add = function(ev, items, index) {\n\t            var frag = document.createDocumentFragment(),\n\t                newNodeLists = [],\n\t                newIndicies = [];\n\t            can.each(items, function(item, key) {\n\t              var itemIndex = can.compute(key + index),\n\t                  itemHTML = render.call(context, item, itemIndex),\n\t                  gotText = typeof itemHTML === \"string\",\n\t                  itemFrag = can.frag(itemHTML);\n\t              itemFrag = gotText ? can.view.hookup(itemFrag) : itemFrag;\n\t              var childNodes = can.makeArray(itemFrag.childNodes);\n\t              newNodeLists.push(nodeLists.register(childNodes));\n\t              frag.appendChild(itemFrag);\n\t              newIndicies.push(itemIndex);\n\t            });\n\t            var masterListIndex = index + 1;\n\t            if (!masterNodeList[masterListIndex]) {\n\t              elements.after(masterListIndex === 1 ? [text] : [nodeLists.last(masterNodeList[masterListIndex - 1])], frag);\n\t            } else {\n\t              var el = nodeLists.first(masterNodeList[masterListIndex]);\n\t              can.insertBefore(el.parentNode, frag, el);\n\t            }\n\t            splice.apply(masterNodeList, [masterListIndex, 0].concat(newNodeLists));\n\t            splice.apply(indexMap, [index, 0].concat(newIndicies));\n\t            for (var i = index + newIndicies.length,\n\t                len = indexMap.length; i < len; i++) {\n\t              indexMap[i](i);\n\t            }\n\t          },\n\t          remove = function(ev, items, index, duringTeardown, fullTeardown) {\n\t            if (!duringTeardown && data.teardownCheck(text.parentNode)) {\n\t              return;\n\t            }\n\t            var removedMappings = masterNodeList.splice(index + 1, items.length),\n\t                itemsToRemove = [];\n\t            can.each(removedMappings, function(nodeList) {\n\t              var nodesToRemove = nodeLists.unregister(nodeList);\n\t              [].push.apply(itemsToRemove, nodesToRemove);\n\t            });\n\t            indexMap.splice(index, items.length);\n\t            for (var i = index,\n\t                len = indexMap.length; i < len; i++) {\n\t              indexMap[i](i);\n\t            }\n\t            if (!fullTeardown) {\n\t              can.remove(can.$(itemsToRemove));\n\t            }\n\t          },\n\t          text = document.createTextNode(''),\n\t          list,\n\t          teardownList = function(fullTeardown) {\n\t            if (list && list.unbind) {\n\t              list.unbind('add', add).unbind('remove', remove);\n\t            }\n\t            remove({}, {length: masterNodeList.length - 1}, 0, true, fullTeardown);\n\t          },\n\t          updateList = function(ev, newList, oldList) {\n\t            teardownList();\n\t            list = newList || [];\n\t            if (list.bind) {\n\t              list.bind('add', add).bind('remove', remove);\n\t            }\n\t            add({}, list, 0);\n\t          };\n\t      parentNode = elements.getParentNode(el, parentNode);\n\t      var data = setup(parentNode, function() {\n\t        if (can.isFunction(compute)) {\n\t          compute.bind('change', updateList);\n\t        }\n\t      }, function() {\n\t        if (can.isFunction(compute)) {\n\t          compute.unbind('change', updateList);\n\t        }\n\t        teardownList(true);\n\t      });\n\t      live.replace(masterNodeList, text, data.teardownCheck);\n\t      updateList({}, can.isFunction(compute) ? compute() : compute);\n\t    },\n\t    html: function(el, compute, parentNode) {\n\t      var data;\n\t      parentNode = elements.getParentNode(el, parentNode);\n\t      data = listen(parentNode, compute, function(ev, newVal, oldVal) {\n\t        var attached = nodeLists.first(nodes).parentNode;\n\t        if (attached) {\n\t          makeAndPut(newVal);\n\t        }\n\t        data.teardownCheck(nodeLists.first(nodes).parentNode);\n\t      });\n\t      var nodes = [el],\n\t          makeAndPut = function(val) {\n\t            var isString = !isNode(val),\n\t                frag = can.frag(val),\n\t                oldNodes = can.makeArray(nodes);\n\t            addTextNodeIfNoChildren(frag);\n\t            if (isString) {\n\t              frag = can.view.hookup(frag, parentNode);\n\t            }\n\t            oldNodes = nodeLists.update(nodes, frag.childNodes);\n\t            elements.replace(oldNodes, frag);\n\t          };\n\t      data.nodeList = nodes;\n\t      nodeLists.register(nodes, data.teardownCheck);\n\t      makeAndPut(compute());\n\t    },\n\t    replace: function(nodes, val, teardown) {\n\t      var oldNodes = nodes.slice(0),\n\t          frag = can.frag(val);\n\t      nodeLists.register(nodes, teardown);\n\t      if (typeof val === 'string') {\n\t        frag = can.view.hookup(frag, nodes[0].parentNode);\n\t      }\n\t      nodeLists.update(nodes, frag.childNodes);\n\t      elements.replace(oldNodes, frag);\n\t      return nodes;\n\t    },\n\t    text: function(el, compute, parentNode) {\n\t      var parent = elements.getParentNode(el, parentNode);\n\t      var data = listen(parent, compute, function(ev, newVal, oldVal) {\n\t        if (typeof node.nodeValue !== 'unknown') {\n\t          node.nodeValue = can.view.toStr(newVal);\n\t        }\n\t        data.teardownCheck(node.parentNode);\n\t      }),\n\t          node = document.createTextNode(can.view.toStr(compute()));\n\t      data.nodeList = live.replace([el], node, data.teardownCheck);\n\t    },\n\t    setAttributes: function(el, newVal) {\n\t      var attrs = getAttributeParts(newVal);\n\t      for (var name in attrs) {\n\t        can.attr.set(el, name, attrs[name]);\n\t      }\n\t    },\n\t    attributes: function(el, compute, currentValue) {\n\t      var oldAttrs = {};\n\t      var setAttrs = function(newVal) {\n\t        var newAttrs = getAttributeParts(newVal),\n\t            name;\n\t        for (name in newAttrs) {\n\t          var newValue = newAttrs[name],\n\t              oldValue = oldAttrs[name];\n\t          if (newValue !== oldValue) {\n\t            can.attr.set(el, name, newValue);\n\t          }\n\t          delete oldAttrs[name];\n\t        }\n\t        for (name in oldAttrs) {\n\t          elements.removeAttr(el, name);\n\t        }\n\t        oldAttrs = newAttrs;\n\t      };\n\t      listen(el, compute, function(ev, newVal) {\n\t        setAttrs(newVal);\n\t      });\n\t      if (arguments.length >= 3) {\n\t        oldAttrs = getAttributeParts(currentValue);\n\t      } else {\n\t        setAttrs(compute());\n\t      }\n\t    },\n\t    attributePlaceholder: '__!!__',\n\t    attributeReplace: /__!!__/g,\n\t    attribute: function(el, attributeName, compute) {\n\t      listen(el, compute, function(ev, newVal) {\n\t        elements.setAttr(el, attributeName, hook.render());\n\t      });\n\t      var wrapped = can.$(el),\n\t          hooks;\n\t      hooks = can.data(wrapped, 'hooks');\n\t      if (!hooks) {\n\t        can.data(wrapped, 'hooks', hooks = {});\n\t      }\n\t      var attr = elements.getAttr(el, attributeName),\n\t          parts = attr.split(live.attributePlaceholder),\n\t          goodParts = [],\n\t          hook;\n\t      goodParts.push(parts.shift(), parts.join(live.attributePlaceholder));\n\t      if (hooks[attributeName]) {\n\t        hooks[attributeName].computes.push(compute);\n\t      } else {\n\t        hooks[attributeName] = {\n\t          render: function() {\n\t            var i = 0,\n\t                newAttr = attr ? attr.replace(live.attributeReplace, function() {\n\t                  return elements.contentText(hook.computes[i++]());\n\t                }) : elements.contentText(hook.computes[i++]());\n\t            return newAttr;\n\t          },\n\t          computes: [compute],\n\t          batchNum: undefined\n\t        };\n\t      }\n\t      hook = hooks[attributeName];\n\t      goodParts.splice(1, 0, compute());\n\t      elements.setAttr(el, attributeName, goodParts.join(''));\n\t    },\n\t    specialAttribute: function(el, attributeName, compute) {\n\t      listen(el, compute, function(ev, newVal) {\n\t        elements.setAttr(el, attributeName, getValue(newVal));\n\t      });\n\t      elements.setAttr(el, attributeName, getValue(compute()));\n\t    },\n\t    simpleAttribute: function(el, attributeName, compute) {\n\t      listen(el, compute, function(ev, newVal) {\n\t        elements.setAttr(el, attributeName, newVal);\n\t      });\n\t      elements.setAttr(el, attributeName, compute());\n\t    }\n\t  };\n\t  live.attr = live.simpleAttribute;\n\t  live.attrs = live.attributes;\n\t  var newLine = /(\\r|\\n)+/g;\n\t  var getValue = function(val) {\n\t    var regexp = /^[\"'].*[\"']$/;\n\t    val = val.replace(elements.attrReg, '').replace(newLine, '');\n\t    return regexp.test(val) ? val.substr(1, val.length - 2) : val;\n\t  };\n\t  can.view.live = live;\n\t  return live;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/string\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var strUndHash = /_|-/,\n\t      strColons = /\\=\\=/,\n\t      strWords = /([A-Z]+)([A-Z][a-z])/g,\n\t      strLowUp = /([a-z\\d])([A-Z])/g,\n\t      strDash = /([a-z\\d])([A-Z])/g,\n\t      strReplacer = /\\{([^\\}]+)\\}/g,\n\t      strQuote = /\"/g,\n\t      strSingleQuote = /'/g,\n\t      strHyphenMatch = /-+(.)?/g,\n\t      strCamelMatch = /[a-z][A-Z]/g,\n\t      getNext = function(obj, prop, add) {\n\t        var result = obj[prop];\n\t        if (result === undefined && add === true) {\n\t          result = obj[prop] = {};\n\t        }\n\t        return result;\n\t      },\n\t      isContainer = function(current) {\n\t        return /^f|^o/.test(typeof current);\n\t      },\n\t      convertBadValues = function(content) {\n\t        var isInvalid = content === null || content === undefined || isNaN(content) && '' + content === 'NaN';\n\t        return '' + (isInvalid ? '' : content);\n\t      };\n\t  can.extend(can, {\n\t    esc: function(content) {\n\t      return convertBadValues(content).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(strQuote, '&#34;').replace(strSingleQuote, '&#39;');\n\t    },\n\t    getObject: function(name, roots, add) {\n\t      var parts = name ? name.split('.') : [],\n\t          length = parts.length,\n\t          current,\n\t          r = 0,\n\t          i,\n\t          container,\n\t          rootsLength;\n\t      roots = can.isArray(roots) ? roots : [roots || window];\n\t      rootsLength = roots.length;\n\t      if (!length) {\n\t        return roots[0];\n\t      }\n\t      for (r; r < rootsLength; r++) {\n\t        current = roots[r];\n\t        container = undefined;\n\t        for (i = 0; i < length && isContainer(current); i++) {\n\t          container = current;\n\t          current = getNext(container, parts[i]);\n\t        }\n\t        if (container !== undefined && current !== undefined) {\n\t          break;\n\t        }\n\t      }\n\t      if (add === false && current !== undefined) {\n\t        delete container[parts[i - 1]];\n\t      }\n\t      if (add === true && current === undefined) {\n\t        current = roots[0];\n\t        for (i = 0; i < length && isContainer(current); i++) {\n\t          current = getNext(current, parts[i], true);\n\t        }\n\t      }\n\t      return current;\n\t    },\n\t    capitalize: function(s, cache) {\n\t      return s.charAt(0).toUpperCase() + s.slice(1);\n\t    },\n\t    camelize: function(str) {\n\t      return convertBadValues(str).replace(strHyphenMatch, function(match, chr) {\n\t        return chr ? chr.toUpperCase() : '';\n\t      });\n\t    },\n\t    hyphenate: function(str) {\n\t      return convertBadValues(str).replace(strCamelMatch, function(str, offset) {\n\t        return str.charAt(0) + '-' + str.charAt(1).toLowerCase();\n\t      });\n\t    },\n\t    underscore: function(s) {\n\t      return s.replace(strColons, '/').replace(strWords, '$1_$2').replace(strLowUp, '$1_$2').replace(strDash, '_').toLowerCase();\n\t    },\n\t    sub: function(str, data, remove) {\n\t      var obs = [];\n\t      str = str || '';\n\t      obs.push(str.replace(strReplacer, function(whole, inside) {\n\t        var ob = can.getObject(inside, data, remove === true ? false : undefined);\n\t        if (ob === undefined || ob === null) {\n\t          obs = null;\n\t          return '';\n\t        }\n\t        if (isContainer(ob) && obs) {\n\t          obs.push(ob);\n\t          return '';\n\t        }\n\t        return '' + ob;\n\t      }));\n\t      return obs === null ? obs : obs.length <= 1 ? obs[0] : obs;\n\t    },\n\t    replacer: strReplacer,\n\t    undHash: strUndHash\n\t  });\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/string/deparam\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(33)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var digitTest = /^\\d+$/,\n\t      keyBreaker = /([^\\[\\]]+)|(\\[\\])/g,\n\t      paramTest = /([^?#]*)(#.*)?$/,\n\t      prep = function(str) {\n\t        return decodeURIComponent(str.replace(/\\+/g, ' '));\n\t      };\n\t  can.extend(can, {deparam: function(params) {\n\t      var data = {},\n\t          pairs,\n\t          lastPart;\n\t      if (params && paramTest.test(params)) {\n\t        pairs = params.split('&');\n\t        can.each(pairs, function(pair) {\n\t          var parts = pair.split('='),\n\t              key = prep(parts.shift()),\n\t              value = prep(parts.join('=')),\n\t              current = data;\n\t          if (key) {\n\t            parts = key.match(keyBreaker);\n\t            for (var j = 0,\n\t                l = parts.length - 1; j < l; j++) {\n\t              if (!current[parts[j]]) {\n\t                current[parts[j]] = digitTest.test(parts[j + 1]) || parts[j + 1] === '[]' ? [] : {};\n\t              }\n\t              current = current[parts[j]];\n\t            }\n\t            lastPart = parts.pop();\n\t            if (lastPart === '[]') {\n\t              current.push(value);\n\t            } else {\n\t              current[lastPart] = value;\n\t            }\n\t          }\n\t        });\n\t      }\n\t      return data;\n\t    }});\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/can\";\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t  var can = window.can || {};\n\t  if (typeof GLOBALCAN === 'undefined' || GLOBALCAN !== false) {\n\t    window.can = can;\n\t  }\n\t  can.k = function() {};\n\t  can.isDeferred = function(obj) {\n\t    var isFunction = this.isFunction;\n\t    return obj && isFunction(obj.then) && isFunction(obj.pipe);\n\t  };\n\t  var cid = 0;\n\t  can.cid = function(object, name) {\n\t    if (!object._cid) {\n\t      cid++;\n\t      object._cid = (name || '') + cid;\n\t    }\n\t    return object._cid;\n\t  };\n\t  can.VERSION = '2.1.0';\n\t  can.simpleExtend = function(d, s) {\n\t    for (var prop in s) {\n\t      d[prop] = s[prop];\n\t    }\n\t    return d;\n\t  };\n\t  can.frag = function(item) {\n\t    var frag;\n\t    if (!item || typeof item === \"string\") {\n\t      frag = can.buildFragment(item == null ? \"\" : \"\" + item, document.body);\n\t      if (!frag.childNodes.length) {\n\t        frag.appendChild(document.createTextNode(''));\n\t      }\n\t      return frag;\n\t    } else if (item.nodeType === 11) {\n\t      return item;\n\t    } else if (typeof item.nodeType === \"number\") {\n\t      frag = document.createDocumentFragment();\n\t      frag.appendChild(item);\n\t      return frag;\n\t    } else if (typeof item.length === \"number\") {\n\t      frag = document.createDocumentFragment();\n\t      can.each(item, function(item) {\n\t        frag.appendChild(can.frag(item));\n\t      });\n\t      return frag;\n\t    } else {\n\t      frag = can.buildFragment(\"\" + item, document.body);\n\t      if (!frag.childNodes.length) {\n\t        frag.appendChild(document.createTextNode(''));\n\t      }\n\t      return frag;\n\t    }\n\t  };\n\t  can.__reading = function() {};\n\t  return can;\n\t}.call(exports, __webpack_require__, exports, module)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/attr\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(35)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var setImmediate = window.setImmediate || function(cb) {\n\t    return setTimeout(cb, 0);\n\t  },\n\t      attr = {\n\t        MutationObserver: window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver,\n\t        map: {\n\t          \"class\": \"className\",\n\t          \"value\": \"value\",\n\t          \"innerText\": \"innerText\",\n\t          \"textContent\": \"textContent\",\n\t          \"checked\": true,\n\t          \"disabled\": true,\n\t          \"readonly\": true,\n\t          \"required\": true,\n\t          src: function(el, val) {\n\t            if (val == null || val === \"\") {\n\t              el.removeAttribute(\"src\");\n\t              return null;\n\t            } else {\n\t              el.setAttribute(\"src\", val);\n\t              return val;\n\t            }\n\t          },\n\t          style: function(el, val) {\n\t            return el.style.cssText = val || \"\";\n\t          }\n\t        },\n\t        defaultValue: [\"input\", \"textarea\"],\n\t        set: function(el, attrName, val) {\n\t          var oldValue;\n\t          if (!attr.MutationObserver) {\n\t            oldValue = attr.get(el, attrName);\n\t          }\n\t          var tagName = el.nodeName.toString().toLowerCase(),\n\t              prop = attr.map[attrName],\n\t              newValue;\n\t          if (typeof prop === \"function\") {\n\t            newValue = prop(el, val);\n\t          } else if (prop === true) {\n\t            newValue = el[attrName] = true;\n\t            if (attrName === \"checked\" && el.type === \"radio\") {\n\t              if (can.inArray(tagName, attr.defaultValue) >= 0) {\n\t                el.defaultChecked = true;\n\t              }\n\t            }\n\t          } else if (prop) {\n\t            newValue = el[prop] = val;\n\t            if (prop === \"value\" && can.inArray(tagName, attr.defaultValue) >= 0) {\n\t              el.defaultValue = val;\n\t            }\n\t          } else {\n\t            el.setAttribute(attrName, val);\n\t            newValue = val;\n\t          }\n\t          if (!attr.MutationObserver && newValue !== oldValue) {\n\t            attr.trigger(el, attrName, oldValue);\n\t          }\n\t        },\n\t        trigger: function(el, attrName, oldValue) {\n\t          if (can.data(can.$(el), \"canHasAttributesBindings\")) {\n\t            return setImmediate(function() {\n\t              can.trigger(el, {\n\t                type: \"attributes\",\n\t                attributeName: attrName,\n\t                target: el,\n\t                oldValue: oldValue,\n\t                bubbles: false\n\t              }, []);\n\t            });\n\t          }\n\t        },\n\t        get: function(el, attrName) {\n\t          var prop = attr.map[attrName];\n\t          if (typeof prop === \"string\" && el[prop]) {\n\t            return el[prop];\n\t          }\n\t          return el.getAttribute(attrName);\n\t        },\n\t        remove: function(el, attrName) {\n\t          var oldValue;\n\t          if (!attr.MutationObserver) {\n\t            oldValue = attr.get(el, attrName);\n\t          }\n\t          var setter = attr.map[attrName];\n\t          if (typeof setter === \"function\") {\n\t            setter(el, undefined);\n\t          }\n\t          if (setter === true) {\n\t            el[attrName] = false;\n\t          } else if (typeof setter === \"string\") {\n\t            el[setter] = \"\";\n\t          } else {\n\t            el.removeAttribute(attrName);\n\t          }\n\t          if (!attr.MutationObserver && oldValue != null) {\n\t            attr.trigger(el, attrName, oldValue);\n\t          }\n\t        },\n\t        has: (function() {\n\t          var el = document.createElement('div');\n\t          if (el.hasAttribute) {\n\t            return function(el, name) {\n\t              return el.hasAttribute(name);\n\t            };\n\t          } else {\n\t            return function(el, name) {\n\t              return el.getAttribute(name) !== null;\n\t            };\n\t          }\n\t        })()\n\t      };\n\t  return attr;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/event\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(35)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  can.addEvent = function(event, handler) {\n\t    var allEvents = this.__bindEvents || (this.__bindEvents = {}),\n\t        eventList = allEvents[event] || (allEvents[event] = []);\n\t    eventList.push({\n\t      handler: handler,\n\t      name: event\n\t    });\n\t    return this;\n\t  };\n\t  can.listenTo = function(other, event, handler) {\n\t    var idedEvents = this.__listenToEvents;\n\t    if (!idedEvents) {\n\t      idedEvents = this.__listenToEvents = {};\n\t    }\n\t    var otherId = can.cid(other);\n\t    var othersEvents = idedEvents[otherId];\n\t    if (!othersEvents) {\n\t      othersEvents = idedEvents[otherId] = {\n\t        obj: other,\n\t        events: {}\n\t      };\n\t    }\n\t    var eventsEvents = othersEvents.events[event];\n\t    if (!eventsEvents) {\n\t      eventsEvents = othersEvents.events[event] = [];\n\t    }\n\t    eventsEvents.push(handler);\n\t    can.bind.call(other, event, handler);\n\t  };\n\t  can.stopListening = function(other, event, handler) {\n\t    var idedEvents = this.__listenToEvents,\n\t        iterIdedEvents = idedEvents,\n\t        i = 0;\n\t    if (!idedEvents) {\n\t      return this;\n\t    }\n\t    if (other) {\n\t      var othercid = can.cid(other);\n\t      (iterIdedEvents = {})[othercid] = idedEvents[othercid];\n\t      if (!idedEvents[othercid]) {\n\t        return this;\n\t      }\n\t    }\n\t    for (var cid in iterIdedEvents) {\n\t      var othersEvents = iterIdedEvents[cid],\n\t          eventsEvents;\n\t      other = idedEvents[cid].obj;\n\t      if (!event) {\n\t        eventsEvents = othersEvents.events;\n\t      } else {\n\t        (eventsEvents = {})[event] = othersEvents.events[event];\n\t      }\n\t      for (var eventName in eventsEvents) {\n\t        var handlers = eventsEvents[eventName] || [];\n\t        i = 0;\n\t        while (i < handlers.length) {\n\t          if (handler && handler === handlers[i] || !handler) {\n\t            can.unbind.call(other, eventName, handlers[i]);\n\t            handlers.splice(i, 1);\n\t          } else {\n\t            i++;\n\t          }\n\t        }\n\t        if (!handlers.length) {\n\t          delete othersEvents.events[eventName];\n\t        }\n\t      }\n\t      if (can.isEmptyObject(othersEvents.events)) {\n\t        delete idedEvents[cid];\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  can.removeEvent = function(event, fn, __validate) {\n\t    if (!this.__bindEvents) {\n\t      return this;\n\t    }\n\t    var events = this.__bindEvents[event] || [],\n\t        i = 0,\n\t        ev,\n\t        isFunction = typeof fn === 'function';\n\t    while (i < events.length) {\n\t      ev = events[i];\n\t      if (__validate ? __validate(ev, event, fn) : isFunction && ev.handler === fn || !isFunction && (ev.cid === fn || !fn)) {\n\t        events.splice(i, 1);\n\t      } else {\n\t        i++;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  can.dispatch = function(event, args) {\n\t    var events = this.__bindEvents;\n\t    if (!events) {\n\t      return;\n\t    }\n\t    if (typeof event === 'string') {\n\t      event = {type: event};\n\t    }\n\t    var eventName = event.type,\n\t        handlers = (events[eventName] || []).slice(0);\n\t    args = [event].concat(args || []);\n\t    for (var i = 0,\n\t        len = handlers.length; i < len; i++) {\n\t      handlers[i].handler.apply(this, args);\n\t    }\n\t    return event;\n\t  };\n\t  can.one = function(event, handler) {\n\t    var one = function() {\n\t      can.unbind.call(this, event, one);\n\t      return handler.apply(this, arguments);\n\t    };\n\t    can.bind.call(this, event, one);\n\t    return this;\n\t  };\n\t  can.event = {\n\t    on: can.addEvent,\n\t    off: can.removeEvent,\n\t    bind: can.addEvent,\n\t    unbind: can.removeEvent,\n\t    delegate: function(selector, event, handler) {\n\t      return can.addEvent.call(event, handler);\n\t    },\n\t    undelegate: function(selector, event, handler) {\n\t      return can.removeEvent.call(event, handler);\n\t    },\n\t    trigger: can.dispatch,\n\t    one: can.one,\n\t    addEvent: can.addEvent,\n\t    removeEvent: can.removeEvent,\n\t    listenTo: can.listenTo,\n\t    stopListening: can.stopListening,\n\t    dispatch: can.dispatch\n\t  };\n\t  return can.event;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/inserted\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(35)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  can.inserted = function(elems) {\n\t    elems = can.makeArray(elems);\n\t    var inDocument = false,\n\t        doc = can.$(document.contains ? document : document.body),\n\t        children;\n\t    for (var i = 0,\n\t        elem; (elem = elems[i]) !== undefined; i++) {\n\t      if (!inDocument) {\n\t        if (elem.getElementsByTagName) {\n\t          if (can.has(doc, elem).length) {\n\t            inDocument = true;\n\t          } else {\n\t            return;\n\t          }\n\t        } else {\n\t          continue;\n\t        }\n\t      }\n\t      if (inDocument && elem.getElementsByTagName) {\n\t        children = can.makeArray(elem.getElementsByTagName(\"*\"));\n\t        can.trigger(elem, \"inserted\", [], false);\n\t        for (var j = 0,\n\t            child; (child = children[j]) !== undefined; j++) {\n\t          can.trigger(child, \"inserted\", [], false);\n\t        }\n\t      }\n\t    }\n\t  };\n\t  can.appendChild = function(el, child) {\n\t    var children;\n\t    if (child.nodeType === 11) {\n\t      children = can.makeArray(child.childNodes);\n\t    } else {\n\t      children = [child];\n\t    }\n\t    el.appendChild(child);\n\t    can.inserted(children);\n\t  };\n\t  can.insertBefore = function(el, child, ref) {\n\t    var children;\n\t    if (child.nodeType === 11) {\n\t      children = can.makeArray(child.childNodes);\n\t    } else {\n\t      children = [child];\n\t    }\n\t    el.insertBefore(child, ref);\n\t    can.inserted(children);\n\t  };\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/util/array/each\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(35)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var isArrayLike = function(obj) {\n\t    var length = obj.length;\n\t    return typeof arr !== \"function\" && (length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj);\n\t  };\n\t  can.each = function(elements, callback, context) {\n\t    var i = 0,\n\t        key,\n\t        len,\n\t        item;\n\t    if (elements) {\n\t      if (isArrayLike(elements)) {\n\t        if (can.List && elements instanceof can.List) {\n\t          for (len = elements.attr(\"length\"); i < len; i++) {\n\t            item = elements.attr(i);\n\t            if (callback.call(context || item, item, i, elements) === false) {\n\t              break;\n\t            }\n\t          }\n\t        } else {\n\t          for (len = elements.length; i < len; i++) {\n\t            item = elements[i];\n\t            if (callback.call(context || item, item, i, elements) === false) {\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      } else if (typeof elements === \"object\") {\n\t        if (can.Map && elements instanceof can.Map || elements === can.route) {\n\t          var keys = can.Map.keys(elements);\n\t          for (i = 0, len = keys.length; i < len; i++) {\n\t            key = keys[i];\n\t            item = elements.attr(key);\n\t            if (callback.call(context || item, item, key, elements) === false) {\n\t              break;\n\t            }\n\t          }\n\t        } else {\n\t          for (key in elements) {\n\t            if (elements.hasOwnProperty(key) && callback.call(context || elements[key], elements[key], key, elements) === false) {\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return elements;\n\t  };\n\t  return can;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function() {\n\t  \"use strict\";\n\t  var __moduleName = \"bower_components/jquery/dist/jquery\";\n\t  (function(global, factory) {\n\t    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n\t      module.exports = global.document ? factory(global, true) : function(w) {\n\t        if (!w.document) {\n\t          throw new Error(\"jQuery requires a window with a document\");\n\t        }\n\t        return factory(w);\n\t      };\n\t    } else {\n\t      factory(global);\n\t    }\n\t  }(typeof window !== \"undefined\" ? window : this, function(window, noGlobal) {\n\t    var arr = [];\n\t    var slice = arr.slice;\n\t    var concat = arr.concat;\n\t    var push = arr.push;\n\t    var indexOf = arr.indexOf;\n\t    var class2type = {};\n\t    var toString = class2type.toString;\n\t    var hasOwn = class2type.hasOwnProperty;\n\t    var support = {};\n\t    var document = window.document,\n\t        version = \"2.1.1\",\n\t        jQuery = function(selector, context) {\n\t          return new jQuery.fn.init(selector, context);\n\t        },\n\t        rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\t        rmsPrefix = /^-ms-/,\n\t        rdashAlpha = /-([\\da-z])/gi,\n\t        fcamelCase = function(all, letter) {\n\t          return letter.toUpperCase();\n\t        };\n\t    jQuery.fn = jQuery.prototype = {\n\t      jquery: version,\n\t      constructor: jQuery,\n\t      selector: \"\",\n\t      length: 0,\n\t      toArray: function() {\n\t        return slice.call(this);\n\t      },\n\t      get: function(num) {\n\t        return num != null ? (num < 0 ? this[num + this.length] : this[num]) : slice.call(this);\n\t      },\n\t      pushStack: function(elems) {\n\t        var ret = jQuery.merge(this.constructor(), elems);\n\t        ret.prevObject = this;\n\t        ret.context = this.context;\n\t        return ret;\n\t      },\n\t      each: function(callback, args) {\n\t        return jQuery.each(this, callback, args);\n\t      },\n\t      map: function(callback) {\n\t        return this.pushStack(jQuery.map(this, function(elem, i) {\n\t          return callback.call(elem, i, elem);\n\t        }));\n\t      },\n\t      slice: function() {\n\t        return this.pushStack(slice.apply(this, arguments));\n\t      },\n\t      first: function() {\n\t        return this.eq(0);\n\t      },\n\t      last: function() {\n\t        return this.eq(-1);\n\t      },\n\t      eq: function(i) {\n\t        var len = this.length,\n\t            j = +i + (i < 0 ? len : 0);\n\t        return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n\t      },\n\t      end: function() {\n\t        return this.prevObject || this.constructor(null);\n\t      },\n\t      push: push,\n\t      sort: arr.sort,\n\t      splice: arr.splice\n\t    };\n\t    jQuery.extend = jQuery.fn.extend = function() {\n\t      var options,\n\t          name,\n\t          src,\n\t          copy,\n\t          copyIsArray,\n\t          clone,\n\t          target = arguments[0] || {},\n\t          i = 1,\n\t          length = arguments.length,\n\t          deep = false;\n\t      if (typeof target === \"boolean\") {\n\t        deep = target;\n\t        target = arguments[i] || {};\n\t        i++;\n\t      }\n\t      if (typeof target !== \"object\" && !jQuery.isFunction(target)) {\n\t        target = {};\n\t      }\n\t      if (i === length) {\n\t        target = this;\n\t        i--;\n\t      }\n\t      for (; i < length; i++) {\n\t        if ((options = arguments[i]) != null) {\n\t          for (name in options) {\n\t            src = target[name];\n\t            copy = options[name];\n\t            if (target === copy) {\n\t              continue;\n\t            }\n\t            if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {\n\t              if (copyIsArray) {\n\t                copyIsArray = false;\n\t                clone = src && jQuery.isArray(src) ? src : [];\n\t              } else {\n\t                clone = src && jQuery.isPlainObject(src) ? src : {};\n\t              }\n\t              target[name] = jQuery.extend(deep, clone, copy);\n\t            } else if (copy !== undefined) {\n\t              target[name] = copy;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return target;\n\t    };\n\t    jQuery.extend({\n\t      expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n\t      isReady: true,\n\t      error: function(msg) {\n\t        throw new Error(msg);\n\t      },\n\t      noop: function() {},\n\t      isFunction: function(obj) {\n\t        return jQuery.type(obj) === \"function\";\n\t      },\n\t      isArray: Array.isArray,\n\t      isWindow: function(obj) {\n\t        return obj != null && obj === obj.window;\n\t      },\n\t      isNumeric: function(obj) {\n\t        return !jQuery.isArray(obj) && obj - parseFloat(obj) >= 0;\n\t      },\n\t      isPlainObject: function(obj) {\n\t        if (jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow(obj)) {\n\t          return false;\n\t        }\n\t        if (obj.constructor && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n\t          return false;\n\t        }\n\t        return true;\n\t      },\n\t      isEmptyObject: function(obj) {\n\t        var name;\n\t        for (name in obj) {\n\t          return false;\n\t        }\n\t        return true;\n\t      },\n\t      type: function(obj) {\n\t        if (obj == null) {\n\t          return obj + \"\";\n\t        }\n\t        return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n\t      },\n\t      globalEval: function(code) {\n\t        var script,\n\t            indirect = eval;\n\t        code = jQuery.trim(code);\n\t        if (code) {\n\t          if (code.indexOf(\"use strict\") === 1) {\n\t            script = document.createElement(\"script\");\n\t            script.text = code;\n\t            document.head.appendChild(script).parentNode.removeChild(script);\n\t          } else {\n\t            indirect(code);\n\t          }\n\t        }\n\t      },\n\t      camelCase: function(string) {\n\t        return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n\t      },\n\t      nodeName: function(elem, name) {\n\t        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t      },\n\t      each: function(obj, callback, args) {\n\t        var value,\n\t            i = 0,\n\t            length = obj.length,\n\t            isArray = isArraylike(obj);\n\t        if (args) {\n\t          if (isArray) {\n\t            for (; i < length; i++) {\n\t              value = callback.apply(obj[i], args);\n\t              if (value === false) {\n\t                break;\n\t              }\n\t            }\n\t          } else {\n\t            for (i in obj) {\n\t              value = callback.apply(obj[i], args);\n\t              if (value === false) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t          if (isArray) {\n\t            for (; i < length; i++) {\n\t              value = callback.call(obj[i], i, obj[i]);\n\t              if (value === false) {\n\t                break;\n\t              }\n\t            }\n\t          } else {\n\t            for (i in obj) {\n\t              value = callback.call(obj[i], i, obj[i]);\n\t              if (value === false) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return obj;\n\t      },\n\t      trim: function(text) {\n\t        return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n\t      },\n\t      makeArray: function(arr, results) {\n\t        var ret = results || [];\n\t        if (arr != null) {\n\t          if (isArraylike(Object(arr))) {\n\t            jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n\t          } else {\n\t            push.call(ret, arr);\n\t          }\n\t        }\n\t        return ret;\n\t      },\n\t      inArray: function(elem, arr, i) {\n\t        return arr == null ? -1 : indexOf.call(arr, elem, i);\n\t      },\n\t      merge: function(first, second) {\n\t        var len = +second.length,\n\t            j = 0,\n\t            i = first.length;\n\t        for (; j < len; j++) {\n\t          first[i++] = second[j];\n\t        }\n\t        first.length = i;\n\t        return first;\n\t      },\n\t      grep: function(elems, callback, invert) {\n\t        var callbackInverse,\n\t            matches = [],\n\t            i = 0,\n\t            length = elems.length,\n\t            callbackExpect = !invert;\n\t        for (; i < length; i++) {\n\t          callbackInverse = !callback(elems[i], i);\n\t          if (callbackInverse !== callbackExpect) {\n\t            matches.push(elems[i]);\n\t          }\n\t        }\n\t        return matches;\n\t      },\n\t      map: function(elems, callback, arg) {\n\t        var value,\n\t            i = 0,\n\t            length = elems.length,\n\t            isArray = isArraylike(elems),\n\t            ret = [];\n\t        if (isArray) {\n\t          for (; i < length; i++) {\n\t            value = callback(elems[i], i, arg);\n\t            if (value != null) {\n\t              ret.push(value);\n\t            }\n\t          }\n\t        } else {\n\t          for (i in elems) {\n\t            value = callback(elems[i], i, arg);\n\t            if (value != null) {\n\t              ret.push(value);\n\t            }\n\t          }\n\t        }\n\t        return concat.apply([], ret);\n\t      },\n\t      guid: 1,\n\t      proxy: function(fn, context) {\n\t        var tmp,\n\t            args,\n\t            proxy;\n\t        if (typeof context === \"string\") {\n\t          tmp = fn[context];\n\t          context = fn;\n\t          fn = tmp;\n\t        }\n\t        if (!jQuery.isFunction(fn)) {\n\t          return undefined;\n\t        }\n\t        args = slice.call(arguments, 2);\n\t        proxy = function() {\n\t          return fn.apply(context || this, args.concat(slice.call(arguments)));\n\t        };\n\t        proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\t        return proxy;\n\t      },\n\t      now: Date.now,\n\t      support: support\n\t    });\n\t    jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\t      class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n\t    });\n\t    function isArraylike(obj) {\n\t      var length = obj.length,\n\t          type = jQuery.type(obj);\n\t      if (type === \"function\" || jQuery.isWindow(obj)) {\n\t        return false;\n\t      }\n\t      if (obj.nodeType === 1 && length) {\n\t        return true;\n\t      }\n\t      return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj;\n\t    }\n\t    var Sizzle = (function(window) {\n\t      var i,\n\t          support,\n\t          Expr,\n\t          getText,\n\t          isXML,\n\t          tokenize,\n\t          compile,\n\t          select,\n\t          outermostContext,\n\t          sortInput,\n\t          hasDuplicate,\n\t          setDocument,\n\t          document,\n\t          docElem,\n\t          documentIsHTML,\n\t          rbuggyQSA,\n\t          rbuggyMatches,\n\t          matches,\n\t          contains,\n\t          expando = \"sizzle\" + -(new Date()),\n\t          preferredDoc = window.document,\n\t          dirruns = 0,\n\t          done = 0,\n\t          classCache = createCache(),\n\t          tokenCache = createCache(),\n\t          compilerCache = createCache(),\n\t          sortOrder = function(a, b) {\n\t            if (a === b) {\n\t              hasDuplicate = true;\n\t            }\n\t            return 0;\n\t          },\n\t          strundefined = typeof undefined,\n\t          MAX_NEGATIVE = 1 << 31,\n\t          hasOwn = ({}).hasOwnProperty,\n\t          arr = [],\n\t          pop = arr.pop,\n\t          push_native = arr.push,\n\t          push = arr.push,\n\t          slice = arr.slice,\n\t          indexOf = arr.indexOf || function(elem) {\n\t            var i = 0,\n\t                len = this.length;\n\t            for (; i < len; i++) {\n\t              if (this[i] === elem) {\n\t                return i;\n\t              }\n\t            }\n\t            return -1;\n\t          },\n\t          booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\t          whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t          characterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\t          identifier = characterEncoding.replace(\"w\", \"w#\"),\n\t          attributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace + \"*([*^$|!~]?=)\" + whitespace + \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n\t          pseudos = \":(\" + characterEncoding + \")(?:\\\\((\" + \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + \".*\" + \")\\\\)|)\",\n\t          rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n\t          rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n\t          rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n\t          rattributeQuotes = new RegExp(\"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\"),\n\t          rpseudo = new RegExp(pseudos),\n\t          ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n\t          matchExpr = {\n\t            \"ID\": new RegExp(\"^#(\" + characterEncoding + \")\"),\n\t            \"CLASS\": new RegExp(\"^\\\\.(\" + characterEncoding + \")\"),\n\t            \"TAG\": new RegExp(\"^(\" + characterEncoding.replace(\"w\", \"w*\") + \")\"),\n\t            \"ATTR\": new RegExp(\"^\" + attributes),\n\t            \"PSEUDO\": new RegExp(\"^\" + pseudos),\n\t            \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n\t            \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n\t            \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n\t          },\n\t          rinputs = /^(?:input|select|textarea|button)$/i,\n\t          rheader = /^h\\d$/i,\n\t          rnative = /^[^{]+\\{\\s*\\[native \\w/,\n\t          rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\t          rsibling = /[+~]/,\n\t          rescape = /'|\\\\/g,\n\t          runescape = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\"),\n\t          funescape = function(_, escaped, escapedWhitespace) {\n\t            var high = \"0x\" + escaped - 0x10000;\n\t            return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n\t          };\n\t      try {\n\t        push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes);\n\t        arr[preferredDoc.childNodes.length].nodeType;\n\t      } catch (e) {\n\t        push = {apply: arr.length ? function(target, els) {\n\t            push_native.apply(target, slice.call(els));\n\t          } : function(target, els) {\n\t            var j = target.length,\n\t                i = 0;\n\t            while ((target[j++] = els[i++])) {}\n\t            target.length = j - 1;\n\t          }};\n\t      }\n\t      function Sizzle(selector, context, results, seed) {\n\t        var match,\n\t            elem,\n\t            m,\n\t            nodeType,\n\t            i,\n\t            groups,\n\t            old,\n\t            nid,\n\t            newContext,\n\t            newSelector;\n\t        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n\t          setDocument(context);\n\t        }\n\t        context = context || document;\n\t        results = results || [];\n\t        if (!selector || typeof selector !== \"string\") {\n\t          return results;\n\t        }\n\t        if ((nodeType = context.nodeType) !== 1 && nodeType !== 9) {\n\t          return [];\n\t        }\n\t        if (documentIsHTML && !seed) {\n\t          if ((match = rquickExpr.exec(selector))) {\n\t            if ((m = match[1])) {\n\t              if (nodeType === 9) {\n\t                elem = context.getElementById(m);\n\t                if (elem && elem.parentNode) {\n\t                  if (elem.id === m) {\n\t                    results.push(elem);\n\t                    return results;\n\t                  }\n\t                } else {\n\t                  return results;\n\t                }\n\t              } else {\n\t                if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) {\n\t                  results.push(elem);\n\t                  return results;\n\t                }\n\t              }\n\t            } else if (match[2]) {\n\t              push.apply(results, context.getElementsByTagName(selector));\n\t              return results;\n\t            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n\t              push.apply(results, context.getElementsByClassName(m));\n\t              return results;\n\t            }\n\t          }\n\t          if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n\t            nid = old = expando;\n\t            newContext = context;\n\t            newSelector = nodeType === 9 && selector;\n\t            if (nodeType === 1 && context.nodeName.toLowerCase() !== \"object\") {\n\t              groups = tokenize(selector);\n\t              if ((old = context.getAttribute(\"id\"))) {\n\t                nid = old.replace(rescape, \"\\\\$&\");\n\t              } else {\n\t                context.setAttribute(\"id\", nid);\n\t              }\n\t              nid = \"[id='\" + nid + \"'] \";\n\t              i = groups.length;\n\t              while (i--) {\n\t                groups[i] = nid + toSelector(groups[i]);\n\t              }\n\t              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n\t              newSelector = groups.join(\",\");\n\t            }\n\t            if (newSelector) {\n\t              try {\n\t                push.apply(results, newContext.querySelectorAll(newSelector));\n\t                return results;\n\t              } catch (qsaError) {} finally {\n\t                if (!old) {\n\t                  context.removeAttribute(\"id\");\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n\t      }\n\t      function createCache() {\n\t        var keys = [];\n\t        function cache(key, value) {\n\t          if (keys.push(key + \" \") > Expr.cacheLength) {\n\t            delete cache[keys.shift()];\n\t          }\n\t          return (cache[key + \" \"] = value);\n\t        }\n\t        return cache;\n\t      }\n\t      function markFunction(fn) {\n\t        fn[expando] = true;\n\t        return fn;\n\t      }\n\t      function assert(fn) {\n\t        var div = document.createElement(\"div\");\n\t        try {\n\t          return !!fn(div);\n\t        } catch (e) {\n\t          return false;\n\t        } finally {\n\t          if (div.parentNode) {\n\t            div.parentNode.removeChild(div);\n\t          }\n\t          div = null;\n\t        }\n\t      }\n\t      function addHandle(attrs, handler) {\n\t        var arr = attrs.split(\"|\"),\n\t            i = attrs.length;\n\t        while (i--) {\n\t          Expr.attrHandle[arr[i]] = handler;\n\t        }\n\t      }\n\t      function siblingCheck(a, b) {\n\t        var cur = b && a,\n\t            diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);\n\t        if (diff) {\n\t          return diff;\n\t        }\n\t        if (cur) {\n\t          while ((cur = cur.nextSibling)) {\n\t            if (cur === b) {\n\t              return -1;\n\t            }\n\t          }\n\t        }\n\t        return a ? 1 : -1;\n\t      }\n\t      function createInputPseudo(type) {\n\t        return function(elem) {\n\t          var name = elem.nodeName.toLowerCase();\n\t          return name === \"input\" && elem.type === type;\n\t        };\n\t      }\n\t      function createButtonPseudo(type) {\n\t        return function(elem) {\n\t          var name = elem.nodeName.toLowerCase();\n\t          return (name === \"input\" || name === \"button\") && elem.type === type;\n\t        };\n\t      }\n\t      function createPositionalPseudo(fn) {\n\t        return markFunction(function(argument) {\n\t          argument = +argument;\n\t          return markFunction(function(seed, matches) {\n\t            var j,\n\t                matchIndexes = fn([], seed.length, argument),\n\t                i = matchIndexes.length;\n\t            while (i--) {\n\t              if (seed[(j = matchIndexes[i])]) {\n\t                seed[j] = !(matches[j] = seed[j]);\n\t              }\n\t            }\n\t          });\n\t        });\n\t      }\n\t      function testContext(context) {\n\t        return context && typeof context.getElementsByTagName !== strundefined && context;\n\t      }\n\t      support = Sizzle.support = {};\n\t      isXML = Sizzle.isXML = function(elem) {\n\t        var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\t        return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n\t      };\n\t      setDocument = Sizzle.setDocument = function(node) {\n\t        var hasCompare,\n\t            doc = node ? node.ownerDocument || node : preferredDoc,\n\t            parent = doc.defaultView;\n\t        if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n\t          return document;\n\t        }\n\t        document = doc;\n\t        docElem = doc.documentElement;\n\t        documentIsHTML = !isXML(doc);\n\t        if (parent && parent !== parent.top) {\n\t          if (parent.addEventListener) {\n\t            parent.addEventListener(\"unload\", function() {\n\t              setDocument();\n\t            }, false);\n\t          } else if (parent.attachEvent) {\n\t            parent.attachEvent(\"onunload\", function() {\n\t              setDocument();\n\t            });\n\t          }\n\t        }\n\t        support.attributes = assert(function(div) {\n\t          div.className = \"i\";\n\t          return !div.getAttribute(\"className\");\n\t        });\n\t        support.getElementsByTagName = assert(function(div) {\n\t          div.appendChild(doc.createComment(\"\"));\n\t          return !div.getElementsByTagName(\"*\").length;\n\t        });\n\t        support.getElementsByClassName = rnative.test(doc.getElementsByClassName) && assert(function(div) {\n\t          div.innerHTML = \"<div class='a'></div><div class='a i'></div>\";\n\t          div.firstChild.className = \"i\";\n\t          return div.getElementsByClassName(\"i\").length === 2;\n\t        });\n\t        support.getById = assert(function(div) {\n\t          docElem.appendChild(div).id = expando;\n\t          return !doc.getElementsByName || !doc.getElementsByName(expando).length;\n\t        });\n\t        if (support.getById) {\n\t          Expr.find[\"ID\"] = function(id, context) {\n\t            if (typeof context.getElementById !== strundefined && documentIsHTML) {\n\t              var m = context.getElementById(id);\n\t              return m && m.parentNode ? [m] : [];\n\t            }\n\t          };\n\t          Expr.filter[\"ID\"] = function(id) {\n\t            var attrId = id.replace(runescape, funescape);\n\t            return function(elem) {\n\t              return elem.getAttribute(\"id\") === attrId;\n\t            };\n\t          };\n\t        } else {\n\t          delete Expr.find[\"ID\"];\n\t          Expr.filter[\"ID\"] = function(id) {\n\t            var attrId = id.replace(runescape, funescape);\n\t            return function(elem) {\n\t              var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n\t              return node && node.value === attrId;\n\t            };\n\t          };\n\t        }\n\t        Expr.find[\"TAG\"] = support.getElementsByTagName ? function(tag, context) {\n\t          if (typeof context.getElementsByTagName !== strundefined) {\n\t            return context.getElementsByTagName(tag);\n\t          }\n\t        } : function(tag, context) {\n\t          var elem,\n\t              tmp = [],\n\t              i = 0,\n\t              results = context.getElementsByTagName(tag);\n\t          if (tag === \"*\") {\n\t            while ((elem = results[i++])) {\n\t              if (elem.nodeType === 1) {\n\t                tmp.push(elem);\n\t              }\n\t            }\n\t            return tmp;\n\t          }\n\t          return results;\n\t        };\n\t        Expr.find[\"CLASS\"] = support.getElementsByClassName && function(className, context) {\n\t          if (typeof context.getElementsByClassName !== strundefined && documentIsHTML) {\n\t            return context.getElementsByClassName(className);\n\t          }\n\t        };\n\t        rbuggyMatches = [];\n\t        rbuggyQSA = [];\n\t        if ((support.qsa = rnative.test(doc.querySelectorAll))) {\n\t          assert(function(div) {\n\t            div.innerHTML = \"<select msallowclip=''><option selected=''></option></select>\";\n\t            if (div.querySelectorAll(\"[msallowclip^='']\").length) {\n\t              rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n\t            }\n\t            if (!div.querySelectorAll(\"[selected]\").length) {\n\t              rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n\t            }\n\t            if (!div.querySelectorAll(\":checked\").length) {\n\t              rbuggyQSA.push(\":checked\");\n\t            }\n\t          });\n\t          assert(function(div) {\n\t            var input = doc.createElement(\"input\");\n\t            input.setAttribute(\"type\", \"hidden\");\n\t            div.appendChild(input).setAttribute(\"name\", \"D\");\n\t            if (div.querySelectorAll(\"[name=d]\").length) {\n\t              rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n\t            }\n\t            if (!div.querySelectorAll(\":enabled\").length) {\n\t              rbuggyQSA.push(\":enabled\", \":disabled\");\n\t            }\n\t            div.querySelectorAll(\"*,:x\");\n\t            rbuggyQSA.push(\",.*:\");\n\t          });\n\t        }\n\t        if ((support.matchesSelector = rnative.test((matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)))) {\n\t          assert(function(div) {\n\t            support.disconnectedMatch = matches.call(div, \"div\");\n\t            matches.call(div, \"[s!='']:x\");\n\t            rbuggyMatches.push(\"!=\", pseudos);\n\t          });\n\t        }\n\t        rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n\t        rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n\t        hasCompare = rnative.test(docElem.compareDocumentPosition);\n\t        contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {\n\t          var adown = a.nodeType === 9 ? a.documentElement : a,\n\t              bup = b && b.parentNode;\n\t          return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n\t        } : function(a, b) {\n\t          if (b) {\n\t            while ((b = b.parentNode)) {\n\t              if (b === a) {\n\t                return true;\n\t              }\n\t            }\n\t          }\n\t          return false;\n\t        };\n\t        sortOrder = hasCompare ? function(a, b) {\n\t          if (a === b) {\n\t            hasDuplicate = true;\n\t            return 0;\n\t          }\n\t          var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t          if (compare) {\n\t            return compare;\n\t          }\n\t          compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;\n\t          if (compare & 1 || (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {\n\t            if (a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n\t              return -1;\n\t            }\n\t            if (b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n\t              return 1;\n\t            }\n\t            return sortInput ? (indexOf.call(sortInput, a) - indexOf.call(sortInput, b)) : 0;\n\t          }\n\t          return compare & 4 ? -1 : 1;\n\t        } : function(a, b) {\n\t          if (a === b) {\n\t            hasDuplicate = true;\n\t            return 0;\n\t          }\n\t          var cur,\n\t              i = 0,\n\t              aup = a.parentNode,\n\t              bup = b.parentNode,\n\t              ap = [a],\n\t              bp = [b];\n\t          if (!aup || !bup) {\n\t            return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? (indexOf.call(sortInput, a) - indexOf.call(sortInput, b)) : 0;\n\t          } else if (aup === bup) {\n\t            return siblingCheck(a, b);\n\t          }\n\t          cur = a;\n\t          while ((cur = cur.parentNode)) {\n\t            ap.unshift(cur);\n\t          }\n\t          cur = b;\n\t          while ((cur = cur.parentNode)) {\n\t            bp.unshift(cur);\n\t          }\n\t          while (ap[i] === bp[i]) {\n\t            i++;\n\t          }\n\t          return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n\t        };\n\t        return doc;\n\t      };\n\t      Sizzle.matches = function(expr, elements) {\n\t        return Sizzle(expr, null, null, elements);\n\t      };\n\t      Sizzle.matchesSelector = function(elem, expr) {\n\t        if ((elem.ownerDocument || elem) !== document) {\n\t          setDocument(elem);\n\t        }\n\t        expr = expr.replace(rattributeQuotes, \"='$1']\");\n\t        if (support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n\t          try {\n\t            var ret = matches.call(elem, expr);\n\t            if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {\n\t              return ret;\n\t            }\n\t          } catch (e) {}\n\t        }\n\t        return Sizzle(expr, document, null, [elem]).length > 0;\n\t      };\n\t      Sizzle.contains = function(context, elem) {\n\t        if ((context.ownerDocument || context) !== document) {\n\t          setDocument(context);\n\t        }\n\t        return contains(context, elem);\n\t      };\n\t      Sizzle.attr = function(elem, name) {\n\t        if ((elem.ownerDocument || elem) !== document) {\n\t          setDocument(elem);\n\t        }\n\t        var fn = Expr.attrHandle[name.toLowerCase()],\n\t            val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n\t        return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n\t      };\n\t      Sizzle.error = function(msg) {\n\t        throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n\t      };\n\t      Sizzle.uniqueSort = function(results) {\n\t        var elem,\n\t            duplicates = [],\n\t            j = 0,\n\t            i = 0;\n\t        hasDuplicate = !support.detectDuplicates;\n\t        sortInput = !support.sortStable && results.slice(0);\n\t        results.sort(sortOrder);\n\t        if (hasDuplicate) {\n\t          while ((elem = results[i++])) {\n\t            if (elem === results[i]) {\n\t              j = duplicates.push(i);\n\t            }\n\t          }\n\t          while (j--) {\n\t            results.splice(duplicates[j], 1);\n\t          }\n\t        }\n\t        sortInput = null;\n\t        return results;\n\t      };\n\t      getText = Sizzle.getText = function(elem) {\n\t        var node,\n\t            ret = \"\",\n\t            i = 0,\n\t            nodeType = elem.nodeType;\n\t        if (!nodeType) {\n\t          while ((node = elem[i++])) {\n\t            ret += getText(node);\n\t          }\n\t        } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n\t          if (typeof elem.textContent === \"string\") {\n\t            return elem.textContent;\n\t          } else {\n\t            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n\t              ret += getText(elem);\n\t            }\n\t          }\n\t        } else if (nodeType === 3 || nodeType === 4) {\n\t          return elem.nodeValue;\n\t        }\n\t        return ret;\n\t      };\n\t      Expr = Sizzle.selectors = {\n\t        cacheLength: 50,\n\t        createPseudo: markFunction,\n\t        match: matchExpr,\n\t        attrHandle: {},\n\t        find: {},\n\t        relative: {\n\t          \">\": {\n\t            dir: \"parentNode\",\n\t            first: true\n\t          },\n\t          \" \": {dir: \"parentNode\"},\n\t          \"+\": {\n\t            dir: \"previousSibling\",\n\t            first: true\n\t          },\n\t          \"~\": {dir: \"previousSibling\"}\n\t        },\n\t        preFilter: {\n\t          \"ATTR\": function(match) {\n\t            match[1] = match[1].replace(runescape, funescape);\n\t            match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\t            if (match[2] === \"~=\") {\n\t              match[3] = \" \" + match[3] + \" \";\n\t            }\n\t            return match.slice(0, 4);\n\t          },\n\t          \"CHILD\": function(match) {\n\t            match[1] = match[1].toLowerCase();\n\t            if (match[1].slice(0, 3) === \"nth\") {\n\t              if (!match[3]) {\n\t                Sizzle.error(match[0]);\n\t              }\n\t              match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n\t              match[5] = +((match[7] + match[8]) || match[3] === \"odd\");\n\t            } else if (match[3]) {\n\t              Sizzle.error(match[0]);\n\t            }\n\t            return match;\n\t          },\n\t          \"PSEUDO\": function(match) {\n\t            var excess,\n\t                unquoted = !match[6] && match[2];\n\t            if (matchExpr[\"CHILD\"].test(match[0])) {\n\t              return null;\n\t            }\n\t            if (match[3]) {\n\t              match[2] = match[4] || match[5] || \"\";\n\t            } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n\t              match[0] = match[0].slice(0, excess);\n\t              match[2] = unquoted.slice(0, excess);\n\t            }\n\t            return match.slice(0, 3);\n\t          }\n\t        },\n\t        filter: {\n\t          \"TAG\": function(nodeNameSelector) {\n\t            var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n\t            return nodeNameSelector === \"*\" ? function() {\n\t              return true;\n\t            } : function(elem) {\n\t              return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t            };\n\t          },\n\t          \"CLASS\": function(className) {\n\t            var pattern = classCache[className + \" \"];\n\t            return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function(elem) {\n\t              return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\") || \"\");\n\t            });\n\t          },\n\t          \"ATTR\": function(name, operator, check) {\n\t            return function(elem) {\n\t              var result = Sizzle.attr(elem, name);\n\t              if (result == null) {\n\t                return operator === \"!=\";\n\t              }\n\t              if (!operator) {\n\t                return true;\n\t              }\n\t              result += \"\";\n\t              return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n\t            };\n\t          },\n\t          \"CHILD\": function(type, what, argument, first, last) {\n\t            var simple = type.slice(0, 3) !== \"nth\",\n\t                forward = type.slice(-4) !== \"last\",\n\t                ofType = what === \"of-type\";\n\t            return first === 1 && last === 0 ? function(elem) {\n\t              return !!elem.parentNode;\n\t            } : function(elem, context, xml) {\n\t              var cache,\n\t                  outerCache,\n\t                  node,\n\t                  diff,\n\t                  nodeIndex,\n\t                  start,\n\t                  dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t                  parent = elem.parentNode,\n\t                  name = ofType && elem.nodeName.toLowerCase(),\n\t                  useCache = !xml && !ofType;\n\t              if (parent) {\n\t                if (simple) {\n\t                  while (dir) {\n\t                    node = elem;\n\t                    while ((node = node[dir])) {\n\t                      if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n\t                        return false;\n\t                      }\n\t                    }\n\t                    start = dir = type === \"only\" && !start && \"nextSibling\";\n\t                  }\n\t                  return true;\n\t                }\n\t                start = [forward ? parent.firstChild : parent.lastChild];\n\t                if (forward && useCache) {\n\t                  outerCache = parent[expando] || (parent[expando] = {});\n\t                  cache = outerCache[type] || [];\n\t                  nodeIndex = cache[0] === dirruns && cache[1];\n\t                  diff = cache[0] === dirruns && cache[2];\n\t                  node = nodeIndex && parent.childNodes[nodeIndex];\n\t                  while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {\n\t                    if (node.nodeType === 1 && ++diff && node === elem) {\n\t                      outerCache[type] = [dirruns, nodeIndex, diff];\n\t                      break;\n\t                    }\n\t                  }\n\t                } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) {\n\t                  diff = cache[1];\n\t                } else {\n\t                  while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {\n\t                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n\t                      if (useCache) {\n\t                        (node[expando] || (node[expando] = {}))[type] = [dirruns, diff];\n\t                      }\n\t                      if (node === elem) {\n\t                        break;\n\t                      }\n\t                    }\n\t                  }\n\t                }\n\t                diff -= last;\n\t                return diff === first || (diff % first === 0 && diff / first >= 0);\n\t              }\n\t            };\n\t          },\n\t          \"PSEUDO\": function(pseudo, argument) {\n\t            var args,\n\t                fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo);\n\t            if (fn[expando]) {\n\t              return fn(argument);\n\t            }\n\t            if (fn.length > 1) {\n\t              args = [pseudo, pseudo, \"\", argument];\n\t              return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {\n\t                var idx,\n\t                    matched = fn(seed, argument),\n\t                    i = matched.length;\n\t                while (i--) {\n\t                  idx = indexOf.call(seed, matched[i]);\n\t                  seed[idx] = !(matches[idx] = matched[i]);\n\t                }\n\t              }) : function(elem) {\n\t                return fn(elem, 0, args);\n\t              };\n\t            }\n\t            return fn;\n\t          }\n\t        },\n\t        pseudos: {\n\t          \"not\": markFunction(function(selector) {\n\t            var input = [],\n\t                results = [],\n\t                matcher = compile(selector.replace(rtrim, \"$1\"));\n\t            return matcher[expando] ? markFunction(function(seed, matches, context, xml) {\n\t              var elem,\n\t                  unmatched = matcher(seed, null, xml, []),\n\t                  i = seed.length;\n\t              while (i--) {\n\t                if ((elem = unmatched[i])) {\n\t                  seed[i] = !(matches[i] = elem);\n\t                }\n\t              }\n\t            }) : function(elem, context, xml) {\n\t              input[0] = elem;\n\t              matcher(input, null, xml, results);\n\t              return !results.pop();\n\t            };\n\t          }),\n\t          \"has\": markFunction(function(selector) {\n\t            return function(elem) {\n\t              return Sizzle(selector, elem).length > 0;\n\t            };\n\t          }),\n\t          \"contains\": markFunction(function(text) {\n\t            return function(elem) {\n\t              return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n\t            };\n\t          }),\n\t          \"lang\": markFunction(function(lang) {\n\t            if (!ridentifier.test(lang || \"\")) {\n\t              Sizzle.error(\"unsupported lang: \" + lang);\n\t            }\n\t            lang = lang.replace(runescape, funescape).toLowerCase();\n\t            return function(elem) {\n\t              var elemLang;\n\t              do {\n\t                if ((elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\"))) {\n\t                  elemLang = elemLang.toLowerCase();\n\t                  return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n\t                }\n\t              } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\t              return false;\n\t            };\n\t          }),\n\t          \"target\": function(elem) {\n\t            var hash = window.location && window.location.hash;\n\t            return hash && hash.slice(1) === elem.id;\n\t          },\n\t          \"root\": function(elem) {\n\t            return elem === docElem;\n\t          },\n\t          \"focus\": function(elem) {\n\t            return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t          },\n\t          \"enabled\": function(elem) {\n\t            return elem.disabled === false;\n\t          },\n\t          \"disabled\": function(elem) {\n\t            return elem.disabled === true;\n\t          },\n\t          \"checked\": function(elem) {\n\t            var nodeName = elem.nodeName.toLowerCase();\n\t            return (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t          },\n\t          \"selected\": function(elem) {\n\t            if (elem.parentNode) {\n\t              elem.parentNode.selectedIndex;\n\t            }\n\t            return elem.selected === true;\n\t          },\n\t          \"empty\": function(elem) {\n\t            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n\t              if (elem.nodeType < 6) {\n\t                return false;\n\t              }\n\t            }\n\t            return true;\n\t          },\n\t          \"parent\": function(elem) {\n\t            return !Expr.pseudos[\"empty\"](elem);\n\t          },\n\t          \"header\": function(elem) {\n\t            return rheader.test(elem.nodeName);\n\t          },\n\t          \"input\": function(elem) {\n\t            return rinputs.test(elem.nodeName);\n\t          },\n\t          \"button\": function(elem) {\n\t            var name = elem.nodeName.toLowerCase();\n\t            return name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t          },\n\t          \"text\": function(elem) {\n\t            var attr;\n\t            return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ((attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n\t          },\n\t          \"first\": createPositionalPseudo(function() {\n\t            return [0];\n\t          }),\n\t          \"last\": createPositionalPseudo(function(matchIndexes, length) {\n\t            return [length - 1];\n\t          }),\n\t          \"eq\": createPositionalPseudo(function(matchIndexes, length, argument) {\n\t            return [argument < 0 ? argument + length : argument];\n\t          }),\n\t          \"even\": createPositionalPseudo(function(matchIndexes, length) {\n\t            var i = 0;\n\t            for (; i < length; i += 2) {\n\t              matchIndexes.push(i);\n\t            }\n\t            return matchIndexes;\n\t          }),\n\t          \"odd\": createPositionalPseudo(function(matchIndexes, length) {\n\t            var i = 1;\n\t            for (; i < length; i += 2) {\n\t              matchIndexes.push(i);\n\t            }\n\t            return matchIndexes;\n\t          }),\n\t          \"lt\": createPositionalPseudo(function(matchIndexes, length, argument) {\n\t            var i = argument < 0 ? argument + length : argument;\n\t            for (; --i >= 0; ) {\n\t              matchIndexes.push(i);\n\t            }\n\t            return matchIndexes;\n\t          }),\n\t          \"gt\": createPositionalPseudo(function(matchIndexes, length, argument) {\n\t            var i = argument < 0 ? argument + length : argument;\n\t            for (; ++i < length; ) {\n\t              matchIndexes.push(i);\n\t            }\n\t            return matchIndexes;\n\t          })\n\t        }\n\t      };\n\t      Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\t      for (i in {\n\t        radio: true,\n\t        checkbox: true,\n\t        file: true,\n\t        password: true,\n\t        image: true\n\t      }) {\n\t        Expr.pseudos[i] = createInputPseudo(i);\n\t      }\n\t      for (i in {\n\t        submit: true,\n\t        reset: true\n\t      }) {\n\t        Expr.pseudos[i] = createButtonPseudo(i);\n\t      }\n\t      function setFilters() {}\n\t      setFilters.prototype = Expr.filters = Expr.pseudos;\n\t      Expr.setFilters = new setFilters();\n\t      tokenize = Sizzle.tokenize = function(selector, parseOnly) {\n\t        var matched,\n\t            match,\n\t            tokens,\n\t            type,\n\t            soFar,\n\t            groups,\n\t            preFilters,\n\t            cached = tokenCache[selector + \" \"];\n\t        if (cached) {\n\t          return parseOnly ? 0 : cached.slice(0);\n\t        }\n\t        soFar = selector;\n\t        groups = [];\n\t        preFilters = Expr.preFilter;\n\t        while (soFar) {\n\t          if (!matched || (match = rcomma.exec(soFar))) {\n\t            if (match) {\n\t              soFar = soFar.slice(match[0].length) || soFar;\n\t            }\n\t            groups.push((tokens = []));\n\t          }\n\t          matched = false;\n\t          if ((match = rcombinators.exec(soFar))) {\n\t            matched = match.shift();\n\t            tokens.push({\n\t              value: matched,\n\t              type: match[0].replace(rtrim, \" \")\n\t            });\n\t            soFar = soFar.slice(matched.length);\n\t          }\n\t          for (type in Expr.filter) {\n\t            if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n\t              matched = match.shift();\n\t              tokens.push({\n\t                value: matched,\n\t                type: type,\n\t                matches: match\n\t              });\n\t              soFar = soFar.slice(matched.length);\n\t            }\n\t          }\n\t          if (!matched) {\n\t            break;\n\t          }\n\t        }\n\t        return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);\n\t      };\n\t      function toSelector(tokens) {\n\t        var i = 0,\n\t            len = tokens.length,\n\t            selector = \"\";\n\t        for (; i < len; i++) {\n\t          selector += tokens[i].value;\n\t        }\n\t        return selector;\n\t      }\n\t      function addCombinator(matcher, combinator, base) {\n\t        var dir = combinator.dir,\n\t            checkNonElements = base && dir === \"parentNode\",\n\t            doneName = done++;\n\t        return combinator.first ? function(elem, context, xml) {\n\t          while ((elem = elem[dir])) {\n\t            if (elem.nodeType === 1 || checkNonElements) {\n\t              return matcher(elem, context, xml);\n\t            }\n\t          }\n\t        } : function(elem, context, xml) {\n\t          var oldCache,\n\t              outerCache,\n\t              newCache = [dirruns, doneName];\n\t          if (xml) {\n\t            while ((elem = elem[dir])) {\n\t              if (elem.nodeType === 1 || checkNonElements) {\n\t                if (matcher(elem, context, xml)) {\n\t                  return true;\n\t                }\n\t              }\n\t            }\n\t          } else {\n\t            while ((elem = elem[dir])) {\n\t              if (elem.nodeType === 1 || checkNonElements) {\n\t                outerCache = elem[expando] || (elem[expando] = {});\n\t                if ((oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n\t                  return (newCache[2] = oldCache[2]);\n\t                } else {\n\t                  outerCache[dir] = newCache;\n\t                  if ((newCache[2] = matcher(elem, context, xml))) {\n\t                    return true;\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        };\n\t      }\n\t      function elementMatcher(matchers) {\n\t        return matchers.length > 1 ? function(elem, context, xml) {\n\t          var i = matchers.length;\n\t          while (i--) {\n\t            if (!matchers[i](elem, context, xml)) {\n\t              return false;\n\t            }\n\t          }\n\t          return true;\n\t        } : matchers[0];\n\t      }\n\t      function multipleContexts(selector, contexts, results) {\n\t        var i = 0,\n\t            len = contexts.length;\n\t        for (; i < len; i++) {\n\t          Sizzle(selector, contexts[i], results);\n\t        }\n\t        return results;\n\t      }\n\t      function condense(unmatched, map, filter, context, xml) {\n\t        var elem,\n\t            newUnmatched = [],\n\t            i = 0,\n\t            len = unmatched.length,\n\t            mapped = map != null;\n\t        for (; i < len; i++) {\n\t          if ((elem = unmatched[i])) {\n\t            if (!filter || filter(elem, context, xml)) {\n\t              newUnmatched.push(elem);\n\t              if (mapped) {\n\t                map.push(i);\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return newUnmatched;\n\t      }\n\t      function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n\t        if (postFilter && !postFilter[expando]) {\n\t          postFilter = setMatcher(postFilter);\n\t        }\n\t        if (postFinder && !postFinder[expando]) {\n\t          postFinder = setMatcher(postFinder, postSelector);\n\t        }\n\t        return markFunction(function(seed, results, context, xml) {\n\t          var temp,\n\t              i,\n\t              elem,\n\t              preMap = [],\n\t              postMap = [],\n\t              preexisting = results.length,\n\t              elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n\t              matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n\t              matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;\n\t          if (matcher) {\n\t            matcher(matcherIn, matcherOut, context, xml);\n\t          }\n\t          if (postFilter) {\n\t            temp = condense(matcherOut, postMap);\n\t            postFilter(temp, [], context, xml);\n\t            i = temp.length;\n\t            while (i--) {\n\t              if ((elem = temp[i])) {\n\t                matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n\t              }\n\t            }\n\t          }\n\t          if (seed) {\n\t            if (postFinder || preFilter) {\n\t              if (postFinder) {\n\t                temp = [];\n\t                i = matcherOut.length;\n\t                while (i--) {\n\t                  if ((elem = matcherOut[i])) {\n\t                    temp.push((matcherIn[i] = elem));\n\t                  }\n\t                }\n\t                postFinder(null, (matcherOut = []), temp, xml);\n\t              }\n\t              i = matcherOut.length;\n\t              while (i--) {\n\t                if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1) {\n\t                  seed[temp] = !(results[temp] = elem);\n\t                }\n\t              }\n\t            }\n\t          } else {\n\t            matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\t            if (postFinder) {\n\t              postFinder(null, results, matcherOut, xml);\n\t            } else {\n\t              push.apply(results, matcherOut);\n\t            }\n\t          }\n\t        });\n\t      }\n\t      function matcherFromTokens(tokens) {\n\t        var checkContext,\n\t            matcher,\n\t            j,\n\t            len = tokens.length,\n\t            leadingRelative = Expr.relative[tokens[0].type],\n\t            implicitRelative = leadingRelative || Expr.relative[\" \"],\n\t            i = leadingRelative ? 1 : 0,\n\t            matchContext = addCombinator(function(elem) {\n\t              return elem === checkContext;\n\t            }, implicitRelative, true),\n\t            matchAnyContext = addCombinator(function(elem) {\n\t              return indexOf.call(checkContext, elem) > -1;\n\t            }, implicitRelative, true),\n\t            matchers = [function(elem, context, xml) {\n\t              return (!leadingRelative && (xml || context !== outermostContext)) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n\t            }];\n\t        for (; i < len; i++) {\n\t          if ((matcher = Expr.relative[tokens[i].type])) {\n\t            matchers = [addCombinator(elementMatcher(matchers), matcher)];\n\t          } else {\n\t            matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\n\t            if (matcher[expando]) {\n\t              j = ++i;\n\t              for (; j < len; j++) {\n\t                if (Expr.relative[tokens[j].type]) {\n\t                  break;\n\t                }\n\t              }\n\t              return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({value: tokens[i - 2].type === \" \" ? \"*\" : \"\"})).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens((tokens = tokens.slice(j))), j < len && toSelector(tokens));\n\t            }\n\t            matchers.push(matcher);\n\t          }\n\t        }\n\t        return elementMatcher(matchers);\n\t      }\n\t      function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n\t        var bySet = setMatchers.length > 0,\n\t            byElement = elementMatchers.length > 0,\n\t            superMatcher = function(seed, context, xml, results, outermost) {\n\t              var elem,\n\t                  j,\n\t                  matcher,\n\t                  matchedCount = 0,\n\t                  i = \"0\",\n\t                  unmatched = seed && [],\n\t                  setMatched = [],\n\t                  contextBackup = outermostContext,\n\t                  elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n\t                  dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t                  len = elems.length;\n\t              if (outermost) {\n\t                outermostContext = context !== document && context;\n\t              }\n\t              for (; i !== len && (elem = elems[i]) != null; i++) {\n\t                if (byElement && elem) {\n\t                  j = 0;\n\t                  while ((matcher = elementMatchers[j++])) {\n\t                    if (matcher(elem, context, xml)) {\n\t                      results.push(elem);\n\t                      break;\n\t                    }\n\t                  }\n\t                  if (outermost) {\n\t                    dirruns = dirrunsUnique;\n\t                  }\n\t                }\n\t                if (bySet) {\n\t                  if ((elem = !matcher && elem)) {\n\t                    matchedCount--;\n\t                  }\n\t                  if (seed) {\n\t                    unmatched.push(elem);\n\t                  }\n\t                }\n\t              }\n\t              matchedCount += i;\n\t              if (bySet && i !== matchedCount) {\n\t                j = 0;\n\t                while ((matcher = setMatchers[j++])) {\n\t                  matcher(unmatched, setMatched, context, xml);\n\t                }\n\t                if (seed) {\n\t                  if (matchedCount > 0) {\n\t                    while (i--) {\n\t                      if (!(unmatched[i] || setMatched[i])) {\n\t                        setMatched[i] = pop.call(results);\n\t                      }\n\t                    }\n\t                  }\n\t                  setMatched = condense(setMatched);\n\t                }\n\t                push.apply(results, setMatched);\n\t                if (outermost && !seed && setMatched.length > 0 && (matchedCount + setMatchers.length) > 1) {\n\t                  Sizzle.uniqueSort(results);\n\t                }\n\t              }\n\t              if (outermost) {\n\t                dirruns = dirrunsUnique;\n\t                outermostContext = contextBackup;\n\t              }\n\t              return unmatched;\n\t            };\n\t        return bySet ? markFunction(superMatcher) : superMatcher;\n\t      }\n\t      compile = Sizzle.compile = function(selector, match) {\n\t        var i,\n\t            setMatchers = [],\n\t            elementMatchers = [],\n\t            cached = compilerCache[selector + \" \"];\n\t        if (!cached) {\n\t          if (!match) {\n\t            match = tokenize(selector);\n\t          }\n\t          i = match.length;\n\t          while (i--) {\n\t            cached = matcherFromTokens(match[i]);\n\t            if (cached[expando]) {\n\t              setMatchers.push(cached);\n\t            } else {\n\t              elementMatchers.push(cached);\n\t            }\n\t          }\n\t          cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n\t          cached.selector = selector;\n\t        }\n\t        return cached;\n\t      };\n\t      select = Sizzle.select = function(selector, context, results, seed) {\n\t        var i,\n\t            tokens,\n\t            token,\n\t            type,\n\t            find,\n\t            compiled = typeof selector === \"function\" && selector,\n\t            match = !seed && tokenize((selector = compiled.selector || selector));\n\t        results = results || [];\n\t        if (match.length === 1) {\n\t          tokens = match[0] = match[0].slice(0);\n\t          if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n\t            context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\t            if (!context) {\n\t              return results;\n\t            } else if (compiled) {\n\t              context = context.parentNode;\n\t            }\n\t            selector = selector.slice(tokens.shift().value.length);\n\t          }\n\t          i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\t          while (i--) {\n\t            token = tokens[i];\n\t            if (Expr.relative[(type = token.type)]) {\n\t              break;\n\t            }\n\t            if ((find = Expr.find[type])) {\n\t              if ((seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {\n\t                tokens.splice(i, 1);\n\t                selector = seed.length && toSelector(tokens);\n\t                if (!selector) {\n\t                  push.apply(results, seed);\n\t                  return results;\n\t                }\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, rsibling.test(selector) && testContext(context.parentNode) || context);\n\t        return results;\n\t      };\n\t      support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando;\n\t      support.detectDuplicates = !!hasDuplicate;\n\t      setDocument();\n\t      support.sortDetached = assert(function(div1) {\n\t        return div1.compareDocumentPosition(document.createElement(\"div\")) & 1;\n\t      });\n\t      if (!assert(function(div) {\n\t        div.innerHTML = \"<a href='#'></a>\";\n\t        return div.firstChild.getAttribute(\"href\") === \"#\";\n\t      })) {\n\t        addHandle(\"type|href|height|width\", function(elem, name, isXML) {\n\t          if (!isXML) {\n\t            return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n\t          }\n\t        });\n\t      }\n\t      if (!support.attributes || !assert(function(div) {\n\t        div.innerHTML = \"<input/>\";\n\t        div.firstChild.setAttribute(\"value\", \"\");\n\t        return div.firstChild.getAttribute(\"value\") === \"\";\n\t      })) {\n\t        addHandle(\"value\", function(elem, name, isXML) {\n\t          if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n\t            return elem.defaultValue;\n\t          }\n\t        });\n\t      }\n\t      if (!assert(function(div) {\n\t        return div.getAttribute(\"disabled\") == null;\n\t      })) {\n\t        addHandle(booleans, function(elem, name, isXML) {\n\t          var val;\n\t          if (!isXML) {\n\t            return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n\t          }\n\t        });\n\t      }\n\t      return Sizzle;\n\t    })(window);\n\t    jQuery.find = Sizzle;\n\t    jQuery.expr = Sizzle.selectors;\n\t    jQuery.expr[\":\"] = jQuery.expr.pseudos;\n\t    jQuery.unique = Sizzle.uniqueSort;\n\t    jQuery.text = Sizzle.getText;\n\t    jQuery.isXMLDoc = Sizzle.isXML;\n\t    jQuery.contains = Sizzle.contains;\n\t    var rneedsContext = jQuery.expr.match.needsContext;\n\t    var rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n\t    var risSimple = /^.[^:#\\[\\.,]*$/;\n\t    function winnow(elements, qualifier, not) {\n\t      if (jQuery.isFunction(qualifier)) {\n\t        return jQuery.grep(elements, function(elem, i) {\n\t          return !!qualifier.call(elem, i, elem) !== not;\n\t        });\n\t      }\n\t      if (qualifier.nodeType) {\n\t        return jQuery.grep(elements, function(elem) {\n\t          return (elem === qualifier) !== not;\n\t        });\n\t      }\n\t      if (typeof qualifier === \"string\") {\n\t        if (risSimple.test(qualifier)) {\n\t          return jQuery.filter(qualifier, elements, not);\n\t        }\n\t        qualifier = jQuery.filter(qualifier, elements);\n\t      }\n\t      return jQuery.grep(elements, function(elem) {\n\t        return (indexOf.call(qualifier, elem) >= 0) !== not;\n\t      });\n\t    }\n\t    jQuery.filter = function(expr, elems, not) {\n\t      var elem = elems[0];\n\t      if (not) {\n\t        expr = \":not(\" + expr + \")\";\n\t      }\n\t      return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {\n\t        return elem.nodeType === 1;\n\t      }));\n\t    };\n\t    jQuery.fn.extend({\n\t      find: function(selector) {\n\t        var i,\n\t            len = this.length,\n\t            ret = [],\n\t            self = this;\n\t        if (typeof selector !== \"string\") {\n\t          return this.pushStack(jQuery(selector).filter(function() {\n\t            for (i = 0; i < len; i++) {\n\t              if (jQuery.contains(self[i], this)) {\n\t                return true;\n\t              }\n\t            }\n\t          }));\n\t        }\n\t        for (i = 0; i < len; i++) {\n\t          jQuery.find(selector, self[i], ret);\n\t        }\n\t        ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);\n\t        ret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t        return ret;\n\t      },\n\t      filter: function(selector) {\n\t        return this.pushStack(winnow(this, selector || [], false));\n\t      },\n\t      not: function(selector) {\n\t        return this.pushStack(winnow(this, selector || [], true));\n\t      },\n\t      is: function(selector) {\n\t        return !!winnow(this, typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n\t      }\n\t    });\n\t    var rootjQuery,\n\t        rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\t        init = jQuery.fn.init = function(selector, context) {\n\t          var match,\n\t              elem;\n\t          if (!selector) {\n\t            return this;\n\t          }\n\t          if (typeof selector === \"string\") {\n\t            if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n\t              match = [null, selector, null];\n\t            } else {\n\t              match = rquickExpr.exec(selector);\n\t            }\n\t            if (match && (match[1] || !context)) {\n\t              if (match[1]) {\n\t                context = context instanceof jQuery ? context[0] : context;\n\t                jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n\t                if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n\t                  for (match in context) {\n\t                    if (jQuery.isFunction(this[match])) {\n\t                      this[match](context[match]);\n\t                    } else {\n\t                      this.attr(match, context[match]);\n\t                    }\n\t                  }\n\t                }\n\t                return this;\n\t              } else {\n\t                elem = document.getElementById(match[2]);\n\t                if (elem && elem.parentNode) {\n\t                  this.length = 1;\n\t                  this[0] = elem;\n\t                }\n\t                this.context = document;\n\t                this.selector = selector;\n\t                return this;\n\t              }\n\t            } else if (!context || context.jquery) {\n\t              return (context || rootjQuery).find(selector);\n\t            } else {\n\t              return this.constructor(context).find(selector);\n\t            }\n\t          } else if (selector.nodeType) {\n\t            this.context = this[0] = selector;\n\t            this.length = 1;\n\t            return this;\n\t          } else if (jQuery.isFunction(selector)) {\n\t            return typeof rootjQuery.ready !== \"undefined\" ? rootjQuery.ready(selector) : selector(jQuery);\n\t          }\n\t          if (selector.selector !== undefined) {\n\t            this.selector = selector.selector;\n\t            this.context = selector.context;\n\t          }\n\t          return jQuery.makeArray(selector, this);\n\t        };\n\t    init.prototype = jQuery.fn;\n\t    rootjQuery = jQuery(document);\n\t    var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t        guaranteedUnique = {\n\t          children: true,\n\t          contents: true,\n\t          next: true,\n\t          prev: true\n\t        };\n\t    jQuery.extend({\n\t      dir: function(elem, dir, until) {\n\t        var matched = [],\n\t            truncate = until !== undefined;\n\t        while ((elem = elem[dir]) && elem.nodeType !== 9) {\n\t          if (elem.nodeType === 1) {\n\t            if (truncate && jQuery(elem).is(until)) {\n\t              break;\n\t            }\n\t            matched.push(elem);\n\t          }\n\t        }\n\t        return matched;\n\t      },\n\t      sibling: function(n, elem) {\n\t        var matched = [];\n\t        for (; n; n = n.nextSibling) {\n\t          if (n.nodeType === 1 && n !== elem) {\n\t            matched.push(n);\n\t          }\n\t        }\n\t        return matched;\n\t      }\n\t    });\n\t    jQuery.fn.extend({\n\t      has: function(target) {\n\t        var targets = jQuery(target, this),\n\t            l = targets.length;\n\t        return this.filter(function() {\n\t          var i = 0;\n\t          for (; i < l; i++) {\n\t            if (jQuery.contains(this, targets[i])) {\n\t              return true;\n\t            }\n\t          }\n\t        });\n\t      },\n\t      closest: function(selectors, context) {\n\t        var cur,\n\t            i = 0,\n\t            l = this.length,\n\t            matched = [],\n\t            pos = rneedsContext.test(selectors) || typeof selectors !== \"string\" ? jQuery(selectors, context || this.context) : 0;\n\t        for (; i < l; i++) {\n\t          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n\t            if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n\t              matched.push(cur);\n\t              break;\n\t            }\n\t          }\n\t        }\n\t        return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched);\n\t      },\n\t      index: function(elem) {\n\t        if (!elem) {\n\t          return (this[0] && this[0].parentNode) ? this.first().prevAll().length : -1;\n\t        }\n\t        if (typeof elem === \"string\") {\n\t          return indexOf.call(jQuery(elem), this[0]);\n\t        }\n\t        return indexOf.call(this, elem.jquery ? elem[0] : elem);\n\t      },\n\t      add: function(selector, context) {\n\t        return this.pushStack(jQuery.unique(jQuery.merge(this.get(), jQuery(selector, context))));\n\t      },\n\t      addBack: function(selector) {\n\t        return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n\t      }\n\t    });\n\t    function sibling(cur, dir) {\n\t      while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\t      return cur;\n\t    }\n\t    jQuery.each({\n\t      parent: function(elem) {\n\t        var parent = elem.parentNode;\n\t        return parent && parent.nodeType !== 11 ? parent : null;\n\t      },\n\t      parents: function(elem) {\n\t        return jQuery.dir(elem, \"parentNode\");\n\t      },\n\t      parentsUntil: function(elem, i, until) {\n\t        return jQuery.dir(elem, \"parentNode\", until);\n\t      },\n\t      next: function(elem) {\n\t        return sibling(elem, \"nextSibling\");\n\t      },\n\t      prev: function(elem) {\n\t        return sibling(elem, \"previousSibling\");\n\t      },\n\t      nextAll: function(elem) {\n\t        return jQuery.dir(elem, \"nextSibling\");\n\t      },\n\t      prevAll: function(elem) {\n\t        return jQuery.dir(elem, \"previousSibling\");\n\t      },\n\t      nextUntil: function(elem, i, until) {\n\t        return jQuery.dir(elem, \"nextSibling\", until);\n\t      },\n\t      prevUntil: function(elem, i, until) {\n\t        return jQuery.dir(elem, \"previousSibling\", until);\n\t      },\n\t      siblings: function(elem) {\n\t        return jQuery.sibling((elem.parentNode || {}).firstChild, elem);\n\t      },\n\t      children: function(elem) {\n\t        return jQuery.sibling(elem.firstChild);\n\t      },\n\t      contents: function(elem) {\n\t        return elem.contentDocument || jQuery.merge([], elem.childNodes);\n\t      }\n\t    }, function(name, fn) {\n\t      jQuery.fn[name] = function(until, selector) {\n\t        var matched = jQuery.map(this, fn, until);\n\t        if (name.slice(-5) !== \"Until\") {\n\t          selector = until;\n\t        }\n\t        if (selector && typeof selector === \"string\") {\n\t          matched = jQuery.filter(selector, matched);\n\t        }\n\t        if (this.length > 1) {\n\t          if (!guaranteedUnique[name]) {\n\t            jQuery.unique(matched);\n\t          }\n\t          if (rparentsprev.test(name)) {\n\t            matched.reverse();\n\t          }\n\t        }\n\t        return this.pushStack(matched);\n\t      };\n\t    });\n\t    var rnotwhite = (/\\S+/g);\n\t    var optionsCache = {};\n\t    function createOptions(options) {\n\t      var object = optionsCache[options] = {};\n\t      jQuery.each(options.match(rnotwhite) || [], function(_, flag) {\n\t        object[flag] = true;\n\t      });\n\t      return object;\n\t    }\n\t    jQuery.Callbacks = function(options) {\n\t      options = typeof options === \"string\" ? (optionsCache[options] || createOptions(options)) : jQuery.extend({}, options);\n\t      var memory,\n\t          fired,\n\t          firing,\n\t          firingStart,\n\t          firingLength,\n\t          firingIndex,\n\t          list = [],\n\t          stack = !options.once && [],\n\t          fire = function(data) {\n\t            memory = options.memory && data;\n\t            fired = true;\n\t            firingIndex = firingStart || 0;\n\t            firingStart = 0;\n\t            firingLength = list.length;\n\t            firing = true;\n\t            for (; list && firingIndex < firingLength; firingIndex++) {\n\t              if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\n\t                memory = false;\n\t                break;\n\t              }\n\t            }\n\t            firing = false;\n\t            if (list) {\n\t              if (stack) {\n\t                if (stack.length) {\n\t                  fire(stack.shift());\n\t                }\n\t              } else if (memory) {\n\t                list = [];\n\t              } else {\n\t                self.disable();\n\t              }\n\t            }\n\t          },\n\t          self = {\n\t            add: function() {\n\t              if (list) {\n\t                var start = list.length;\n\t                (function add(args) {\n\t                  jQuery.each(args, function(_, arg) {\n\t                    var type = jQuery.type(arg);\n\t                    if (type === \"function\") {\n\t                      if (!options.unique || !self.has(arg)) {\n\t                        list.push(arg);\n\t                      }\n\t                    } else if (arg && arg.length && type !== \"string\") {\n\t                      add(arg);\n\t                    }\n\t                  });\n\t                })(arguments);\n\t                if (firing) {\n\t                  firingLength = list.length;\n\t                } else if (memory) {\n\t                  firingStart = start;\n\t                  fire(memory);\n\t                }\n\t              }\n\t              return this;\n\t            },\n\t            remove: function() {\n\t              if (list) {\n\t                jQuery.each(arguments, function(_, arg) {\n\t                  var index;\n\t                  while ((index = jQuery.inArray(arg, list, index)) > -1) {\n\t                    list.splice(index, 1);\n\t                    if (firing) {\n\t                      if (index <= firingLength) {\n\t                        firingLength--;\n\t                      }\n\t                      if (index <= firingIndex) {\n\t                        firingIndex--;\n\t                      }\n\t                    }\n\t                  }\n\t                });\n\t              }\n\t              return this;\n\t            },\n\t            has: function(fn) {\n\t              return fn ? jQuery.inArray(fn, list) > -1 : !!(list && list.length);\n\t            },\n\t            empty: function() {\n\t              list = [];\n\t              firingLength = 0;\n\t              return this;\n\t            },\n\t            disable: function() {\n\t              list = stack = memory = undefined;\n\t              return this;\n\t            },\n\t            disabled: function() {\n\t              return !list;\n\t            },\n\t            lock: function() {\n\t              stack = undefined;\n\t              if (!memory) {\n\t                self.disable();\n\t              }\n\t              return this;\n\t            },\n\t            locked: function() {\n\t              return !stack;\n\t            },\n\t            fireWith: function(context, args) {\n\t              if (list && (!fired || stack)) {\n\t                args = args || [];\n\t                args = [context, args.slice ? args.slice() : args];\n\t                if (firing) {\n\t                  stack.push(args);\n\t                } else {\n\t                  fire(args);\n\t                }\n\t              }\n\t              return this;\n\t            },\n\t            fire: function() {\n\t              self.fireWith(this, arguments);\n\t              return this;\n\t            },\n\t            fired: function() {\n\t              return !!fired;\n\t            }\n\t          };\n\t      return self;\n\t    };\n\t    jQuery.extend({\n\t      Deferred: function(func) {\n\t        var tuples = [[\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\"], [\"notify\", \"progress\", jQuery.Callbacks(\"memory\")]],\n\t            state = \"pending\",\n\t            promise = {\n\t              state: function() {\n\t                return state;\n\t              },\n\t              always: function() {\n\t                deferred.done(arguments).fail(arguments);\n\t                return this;\n\t              },\n\t              then: function() {\n\t                var fns = arguments;\n\t                return jQuery.Deferred(function(newDefer) {\n\t                  jQuery.each(tuples, function(i, tuple) {\n\t                    var fn = jQuery.isFunction(fns[i]) && fns[i];\n\t                    deferred[tuple[1]](function() {\n\t                      var returned = fn && fn.apply(this, arguments);\n\t                      if (returned && jQuery.isFunction(returned.promise)) {\n\t                        returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n\t                      } else {\n\t                        newDefer[tuple[0] + \"With\"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n\t                      }\n\t                    });\n\t                  });\n\t                  fns = null;\n\t                }).promise();\n\t              },\n\t              promise: function(obj) {\n\t                return obj != null ? jQuery.extend(obj, promise) : promise;\n\t              }\n\t            },\n\t            deferred = {};\n\t        promise.pipe = promise.then;\n\t        jQuery.each(tuples, function(i, tuple) {\n\t          var list = tuple[2],\n\t              stateString = tuple[3];\n\t          promise[tuple[1]] = list.add;\n\t          if (stateString) {\n\t            list.add(function() {\n\t              state = stateString;\n\t            }, tuples[i ^ 1][2].disable, tuples[2][2].lock);\n\t          }\n\t          deferred[tuple[0]] = function() {\n\t            deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments);\n\t            return this;\n\t          };\n\t          deferred[tuple[0] + \"With\"] = list.fireWith;\n\t        });\n\t        promise.promise(deferred);\n\t        if (func) {\n\t          func.call(deferred, deferred);\n\t        }\n\t        return deferred;\n\t      },\n\t      when: function(subordinate) {\n\t        var i = 0,\n\t            resolveValues = slice.call(arguments),\n\t            length = resolveValues.length,\n\t            remaining = length !== 1 || (subordinate && jQuery.isFunction(subordinate.promise)) ? length : 0,\n\t            deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\t            updateFunc = function(i, contexts, values) {\n\t              return function(value) {\n\t                contexts[i] = this;\n\t                values[i] = arguments.length > 1 ? slice.call(arguments) : value;\n\t                if (values === progressValues) {\n\t                  deferred.notifyWith(contexts, values);\n\t                } else if (!(--remaining)) {\n\t                  deferred.resolveWith(contexts, values);\n\t                }\n\t              };\n\t            },\n\t            progressValues,\n\t            progressContexts,\n\t            resolveContexts;\n\t        if (length > 1) {\n\t          progressValues = new Array(length);\n\t          progressContexts = new Array(length);\n\t          resolveContexts = new Array(length);\n\t          for (; i < length; i++) {\n\t            if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {\n\t              resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues));\n\t            } else {\n\t              --remaining;\n\t            }\n\t          }\n\t        }\n\t        if (!remaining) {\n\t          deferred.resolveWith(resolveContexts, resolveValues);\n\t        }\n\t        return deferred.promise();\n\t      }\n\t    });\n\t    var readyList;\n\t    jQuery.fn.ready = function(fn) {\n\t      jQuery.ready.promise().done(fn);\n\t      return this;\n\t    };\n\t    jQuery.extend({\n\t      isReady: false,\n\t      readyWait: 1,\n\t      holdReady: function(hold) {\n\t        if (hold) {\n\t          jQuery.readyWait++;\n\t        } else {\n\t          jQuery.ready(true);\n\t        }\n\t      },\n\t      ready: function(wait) {\n\t        if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n\t          return;\n\t        }\n\t        jQuery.isReady = true;\n\t        if (wait !== true && --jQuery.readyWait > 0) {\n\t          return;\n\t        }\n\t        readyList.resolveWith(document, [jQuery]);\n\t        if (jQuery.fn.triggerHandler) {\n\t          jQuery(document).triggerHandler(\"ready\");\n\t          jQuery(document).off(\"ready\");\n\t        }\n\t      }\n\t    });\n\t    function completed() {\n\t      document.removeEventListener(\"DOMContentLoaded\", completed, false);\n\t      window.removeEventListener(\"load\", completed, false);\n\t      jQuery.ready();\n\t    }\n\t    jQuery.ready.promise = function(obj) {\n\t      if (!readyList) {\n\t        readyList = jQuery.Deferred();\n\t        if (document.readyState === \"complete\") {\n\t          setTimeout(jQuery.ready);\n\t        } else {\n\t          document.addEventListener(\"DOMContentLoaded\", completed, false);\n\t          window.addEventListener(\"load\", completed, false);\n\t        }\n\t      }\n\t      return readyList.promise(obj);\n\t    };\n\t    jQuery.ready.promise();\n\t    var access = jQuery.access = function(elems, fn, key, value, chainable, emptyGet, raw) {\n\t      var i = 0,\n\t          len = elems.length,\n\t          bulk = key == null;\n\t      if (jQuery.type(key) === \"object\") {\n\t        chainable = true;\n\t        for (i in key) {\n\t          jQuery.access(elems, fn, i, key[i], true, emptyGet, raw);\n\t        }\n\t      } else if (value !== undefined) {\n\t        chainable = true;\n\t        if (!jQuery.isFunction(value)) {\n\t          raw = true;\n\t        }\n\t        if (bulk) {\n\t          if (raw) {\n\t            fn.call(elems, value);\n\t            fn = null;\n\t          } else {\n\t            bulk = fn;\n\t            fn = function(elem, key, value) {\n\t              return bulk.call(jQuery(elem), value);\n\t            };\n\t          }\n\t        }\n\t        if (fn) {\n\t          for (; i < len; i++) {\n\t            fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n\t          }\n\t        }\n\t      }\n\t      return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;\n\t    };\n\t    jQuery.acceptData = function(owner) {\n\t      return owner.nodeType === 1 || owner.nodeType === 9 || !(+owner.nodeType);\n\t    };\n\t    function Data() {\n\t      Object.defineProperty(this.cache = {}, 0, {get: function() {\n\t          return {};\n\t        }});\n\t      this.expando = jQuery.expando + Math.random();\n\t    }\n\t    Data.uid = 1;\n\t    Data.accepts = jQuery.acceptData;\n\t    Data.prototype = {\n\t      key: function(owner) {\n\t        if (!Data.accepts(owner)) {\n\t          return 0;\n\t        }\n\t        var descriptor = {},\n\t            unlock = owner[this.expando];\n\t        if (!unlock) {\n\t          unlock = Data.uid++;\n\t          try {\n\t            descriptor[this.expando] = {value: unlock};\n\t            Object.defineProperties(owner, descriptor);\n\t          } catch (e) {\n\t            descriptor[this.expando] = unlock;\n\t            jQuery.extend(owner, descriptor);\n\t          }\n\t        }\n\t        if (!this.cache[unlock]) {\n\t          this.cache[unlock] = {};\n\t        }\n\t        return unlock;\n\t      },\n\t      set: function(owner, data, value) {\n\t        var prop,\n\t            unlock = this.key(owner),\n\t            cache = this.cache[unlock];\n\t        if (typeof data === \"string\") {\n\t          cache[data] = value;\n\t        } else {\n\t          if (jQuery.isEmptyObject(cache)) {\n\t            jQuery.extend(this.cache[unlock], data);\n\t          } else {\n\t            for (prop in data) {\n\t              cache[prop] = data[prop];\n\t            }\n\t          }\n\t        }\n\t        return cache;\n\t      },\n\t      get: function(owner, key) {\n\t        var cache = this.cache[this.key(owner)];\n\t        return key === undefined ? cache : cache[key];\n\t      },\n\t      access: function(owner, key, value) {\n\t        var stored;\n\t        if (key === undefined || ((key && typeof key === \"string\") && value === undefined)) {\n\t          stored = this.get(owner, key);\n\t          return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key));\n\t        }\n\t        this.set(owner, key, value);\n\t        return value !== undefined ? value : key;\n\t      },\n\t      remove: function(owner, key) {\n\t        var i,\n\t            name,\n\t            camel,\n\t            unlock = this.key(owner),\n\t            cache = this.cache[unlock];\n\t        if (key === undefined) {\n\t          this.cache[unlock] = {};\n\t        } else {\n\t          if (jQuery.isArray(key)) {\n\t            name = key.concat(key.map(jQuery.camelCase));\n\t          } else {\n\t            camel = jQuery.camelCase(key);\n\t            if (key in cache) {\n\t              name = [key, camel];\n\t            } else {\n\t              name = camel;\n\t              name = name in cache ? [name] : (name.match(rnotwhite) || []);\n\t            }\n\t          }\n\t          i = name.length;\n\t          while (i--) {\n\t            delete cache[name[i]];\n\t          }\n\t        }\n\t      },\n\t      hasData: function(owner) {\n\t        return !jQuery.isEmptyObject(this.cache[owner[this.expando]] || {});\n\t      },\n\t      discard: function(owner) {\n\t        if (owner[this.expando]) {\n\t          delete this.cache[owner[this.expando]];\n\t        }\n\t      }\n\t    };\n\t    var data_priv = new Data();\n\t    var data_user = new Data();\n\t    var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\t        rmultiDash = /([A-Z])/g;\n\t    function dataAttr(elem, key, data) {\n\t      var name;\n\t      if (data === undefined && elem.nodeType === 1) {\n\t        name = \"data-\" + key.replace(rmultiDash, \"-$1\").toLowerCase();\n\t        data = elem.getAttribute(name);\n\t        if (typeof data === \"string\") {\n\t          try {\n\t            data = data === \"true\" ? true : data === \"false\" ? false : data === \"null\" ? null : +data + \"\" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;\n\t          } catch (e) {}\n\t          data_user.set(elem, key, data);\n\t        } else {\n\t          data = undefined;\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    jQuery.extend({\n\t      hasData: function(elem) {\n\t        return data_user.hasData(elem) || data_priv.hasData(elem);\n\t      },\n\t      data: function(elem, name, data) {\n\t        return data_user.access(elem, name, data);\n\t      },\n\t      removeData: function(elem, name) {\n\t        data_user.remove(elem, name);\n\t      },\n\t      _data: function(elem, name, data) {\n\t        return data_priv.access(elem, name, data);\n\t      },\n\t      _removeData: function(elem, name) {\n\t        data_priv.remove(elem, name);\n\t      }\n\t    });\n\t    jQuery.fn.extend({\n\t      data: function(key, value) {\n\t        var i,\n\t            name,\n\t            data,\n\t            elem = this[0],\n\t            attrs = elem && elem.attributes;\n\t        if (key === undefined) {\n\t          if (this.length) {\n\t            data = data_user.get(elem);\n\t            if (elem.nodeType === 1 && !data_priv.get(elem, \"hasDataAttrs\")) {\n\t              i = attrs.length;\n\t              while (i--) {\n\t                if (attrs[i]) {\n\t                  name = attrs[i].name;\n\t                  if (name.indexOf(\"data-\") === 0) {\n\t                    name = jQuery.camelCase(name.slice(5));\n\t                    dataAttr(elem, name, data[name]);\n\t                  }\n\t                }\n\t              }\n\t              data_priv.set(elem, \"hasDataAttrs\", true);\n\t            }\n\t          }\n\t          return data;\n\t        }\n\t        if (typeof key === \"object\") {\n\t          return this.each(function() {\n\t            data_user.set(this, key);\n\t          });\n\t        }\n\t        return access(this, function(value) {\n\t          var data,\n\t              camelKey = jQuery.camelCase(key);\n\t          if (elem && value === undefined) {\n\t            data = data_user.get(elem, key);\n\t            if (data !== undefined) {\n\t              return data;\n\t            }\n\t            data = data_user.get(elem, camelKey);\n\t            if (data !== undefined) {\n\t              return data;\n\t            }\n\t            data = dataAttr(elem, camelKey, undefined);\n\t            if (data !== undefined) {\n\t              return data;\n\t            }\n\t            return;\n\t          }\n\t          this.each(function() {\n\t            var data = data_user.get(this, camelKey);\n\t            data_user.set(this, camelKey, value);\n\t            if (key.indexOf(\"-\") !== -1 && data !== undefined) {\n\t              data_user.set(this, key, value);\n\t            }\n\t          });\n\t        }, null, value, arguments.length > 1, null, true);\n\t      },\n\t      removeData: function(key) {\n\t        return this.each(function() {\n\t          data_user.remove(this, key);\n\t        });\n\t      }\n\t    });\n\t    jQuery.extend({\n\t      queue: function(elem, type, data) {\n\t        var queue;\n\t        if (elem) {\n\t          type = (type || \"fx\") + \"queue\";\n\t          queue = data_priv.get(elem, type);\n\t          if (data) {\n\t            if (!queue || jQuery.isArray(data)) {\n\t              queue = data_priv.access(elem, type, jQuery.makeArray(data));\n\t            } else {\n\t              queue.push(data);\n\t            }\n\t          }\n\t          return queue || [];\n\t        }\n\t      },\n\t      dequeue: function(elem, type) {\n\t        type = type || \"fx\";\n\t        var queue = jQuery.queue(elem, type),\n\t            startLength = queue.length,\n\t            fn = queue.shift(),\n\t            hooks = jQuery._queueHooks(elem, type),\n\t            next = function() {\n\t              jQuery.dequeue(elem, type);\n\t            };\n\t        if (fn === \"inprogress\") {\n\t          fn = queue.shift();\n\t          startLength--;\n\t        }\n\t        if (fn) {\n\t          if (type === \"fx\") {\n\t            queue.unshift(\"inprogress\");\n\t          }\n\t          delete hooks.stop;\n\t          fn.call(elem, next, hooks);\n\t        }\n\t        if (!startLength && hooks) {\n\t          hooks.empty.fire();\n\t        }\n\t      },\n\t      _queueHooks: function(elem, type) {\n\t        var key = type + \"queueHooks\";\n\t        return data_priv.get(elem, key) || data_priv.access(elem, key, {empty: jQuery.Callbacks(\"once memory\").add(function() {\n\t            data_priv.remove(elem, [type + \"queue\", key]);\n\t          })});\n\t      }\n\t    });\n\t    jQuery.fn.extend({\n\t      queue: function(type, data) {\n\t        var setter = 2;\n\t        if (typeof type !== \"string\") {\n\t          data = type;\n\t          type = \"fx\";\n\t          setter--;\n\t        }\n\t        if (arguments.length < setter) {\n\t          return jQuery.queue(this[0], type);\n\t        }\n\t        return data === undefined ? this : this.each(function() {\n\t          var queue = jQuery.queue(this, type, data);\n\t          jQuery._queueHooks(this, type);\n\t          if (type === \"fx\" && queue[0] !== \"inprogress\") {\n\t            jQuery.dequeue(this, type);\n\t          }\n\t        });\n\t      },\n\t      dequeue: function(type) {\n\t        return this.each(function() {\n\t          jQuery.dequeue(this, type);\n\t        });\n\t      },\n\t      clearQueue: function(type) {\n\t        return this.queue(type || \"fx\", []);\n\t      },\n\t      promise: function(type, obj) {\n\t        var tmp,\n\t            count = 1,\n\t            defer = jQuery.Deferred(),\n\t            elements = this,\n\t            i = this.length,\n\t            resolve = function() {\n\t              if (!(--count)) {\n\t                defer.resolveWith(elements, [elements]);\n\t              }\n\t            };\n\t        if (typeof type !== \"string\") {\n\t          obj = type;\n\t          type = undefined;\n\t        }\n\t        type = type || \"fx\";\n\t        while (i--) {\n\t          tmp = data_priv.get(elements[i], type + \"queueHooks\");\n\t          if (tmp && tmp.empty) {\n\t            count++;\n\t            tmp.empty.add(resolve);\n\t          }\n\t        }\n\t        resolve();\n\t        return defer.promise(obj);\n\t      }\n\t    });\n\t    var pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n\t    var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n\t    var isHidden = function(elem, el) {\n\t      elem = el || elem;\n\t      return jQuery.css(elem, \"display\") === \"none\" || !jQuery.contains(elem.ownerDocument, elem);\n\t    };\n\t    var rcheckableType = (/^(?:checkbox|radio)$/i);\n\t    (function() {\n\t      var fragment = document.createDocumentFragment(),\n\t          div = fragment.appendChild(document.createElement(\"div\")),\n\t          input = document.createElement(\"input\");\n\t      input.setAttribute(\"type\", \"radio\");\n\t      input.setAttribute(\"checked\", \"checked\");\n\t      input.setAttribute(\"name\", \"t\");\n\t      div.appendChild(input);\n\t      support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n\t      div.innerHTML = \"<textarea>x</textarea>\";\n\t      support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n\t    })();\n\t    var strundefined = typeof undefined;\n\t    support.focusinBubbles = \"onfocusin\" in window;\n\t    var rkeyEvent = /^key/,\n\t        rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n\t        rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\t        rtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\t    function returnTrue() {\n\t      return true;\n\t    }\n\t    function returnFalse() {\n\t      return false;\n\t    }\n\t    function safeActiveElement() {\n\t      try {\n\t        return document.activeElement;\n\t      } catch (err) {}\n\t    }\n\t    jQuery.event = {\n\t      global: {},\n\t      add: function(elem, types, handler, data, selector) {\n\t        var handleObjIn,\n\t            eventHandle,\n\t            tmp,\n\t            events,\n\t            t,\n\t            handleObj,\n\t            special,\n\t            handlers,\n\t            type,\n\t            namespaces,\n\t            origType,\n\t            elemData = data_priv.get(elem);\n\t        if (!elemData) {\n\t          return;\n\t        }\n\t        if (handler.handler) {\n\t          handleObjIn = handler;\n\t          handler = handleObjIn.handler;\n\t          selector = handleObjIn.selector;\n\t        }\n\t        if (!handler.guid) {\n\t          handler.guid = jQuery.guid++;\n\t        }\n\t        if (!(events = elemData.events)) {\n\t          events = elemData.events = {};\n\t        }\n\t        if (!(eventHandle = elemData.handle)) {\n\t          eventHandle = elemData.handle = function(e) {\n\t            return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n\t          };\n\t        }\n\t        types = (types || \"\").match(rnotwhite) || [\"\"];\n\t        t = types.length;\n\t        while (t--) {\n\t          tmp = rtypenamespace.exec(types[t]) || [];\n\t          type = origType = tmp[1];\n\t          namespaces = (tmp[2] || \"\").split(\".\").sort();\n\t          if (!type) {\n\t            continue;\n\t          }\n\t          special = jQuery.event.special[type] || {};\n\t          type = (selector ? special.delegateType : special.bindType) || type;\n\t          special = jQuery.event.special[type] || {};\n\t          handleObj = jQuery.extend({\n\t            type: type,\n\t            origType: origType,\n\t            data: data,\n\t            handler: handler,\n\t            guid: handler.guid,\n\t            selector: selector,\n\t            needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n\t            namespace: namespaces.join(\".\")\n\t          }, handleObjIn);\n\t          if (!(handlers = events[type])) {\n\t            handlers = events[type] = [];\n\t            handlers.delegateCount = 0;\n\t            if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n\t              if (elem.addEventListener) {\n\t                elem.addEventListener(type, eventHandle, false);\n\t              }\n\t            }\n\t          }\n\t          if (special.add) {\n\t            special.add.call(elem, handleObj);\n\t            if (!handleObj.handler.guid) {\n\t              handleObj.handler.guid = handler.guid;\n\t            }\n\t          }\n\t          if (selector) {\n\t            handlers.splice(handlers.delegateCount++, 0, handleObj);\n\t          } else {\n\t            handlers.push(handleObj);\n\t          }\n\t          jQuery.event.global[type] = true;\n\t        }\n\t      },\n\t      remove: function(elem, types, handler, selector, mappedTypes) {\n\t        var j,\n\t            origCount,\n\t            tmp,\n\t            events,\n\t            t,\n\t            handleObj,\n\t            special,\n\t            handlers,\n\t            type,\n\t            namespaces,\n\t            origType,\n\t            elemData = data_priv.hasData(elem) && data_priv.get(elem);\n\t        if (!elemData || !(events = elemData.events)) {\n\t          return;\n\t        }\n\t        types = (types || \"\").match(rnotwhite) || [\"\"];\n\t        t = types.length;\n\t        while (t--) {\n\t          tmp = rtypenamespace.exec(types[t]) || [];\n\t          type = origType = tmp[1];\n\t          namespaces = (tmp[2] || \"\").split(\".\").sort();\n\t          if (!type) {\n\t            for (type in events) {\n\t              jQuery.event.remove(elem, type + types[t], handler, selector, true);\n\t            }\n\t            continue;\n\t          }\n\t          special = jQuery.event.special[type] || {};\n\t          type = (selector ? special.delegateType : special.bindType) || type;\n\t          handlers = events[type] || [];\n\t          tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\");\n\t          origCount = j = handlers.length;\n\t          while (j--) {\n\t            handleObj = handlers[j];\n\t            if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n\t              handlers.splice(j, 1);\n\t              if (handleObj.selector) {\n\t                handlers.delegateCount--;\n\t              }\n\t              if (special.remove) {\n\t                special.remove.call(elem, handleObj);\n\t              }\n\t            }\n\t          }\n\t          if (origCount && !handlers.length) {\n\t            if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n\t              jQuery.removeEvent(elem, type, elemData.handle);\n\t            }\n\t            delete events[type];\n\t          }\n\t        }\n\t        if (jQuery.isEmptyObject(events)) {\n\t          delete elemData.handle;\n\t          data_priv.remove(elem, \"events\");\n\t        }\n\t      },\n\t      trigger: function(event, data, elem, onlyHandlers) {\n\t        var i,\n\t            cur,\n\t            tmp,\n\t            bubbleType,\n\t            ontype,\n\t            handle,\n\t            special,\n\t            eventPath = [elem || document],\n\t            type = hasOwn.call(event, \"type\") ? event.type : event,\n\t            namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n\t        cur = tmp = elem = elem || document;\n\t        if (elem.nodeType === 3 || elem.nodeType === 8) {\n\t          return;\n\t        }\n\t        if (rfocusMorph.test(type + jQuery.event.triggered)) {\n\t          return;\n\t        }\n\t        if (type.indexOf(\".\") >= 0) {\n\t          namespaces = type.split(\".\");\n\t          type = namespaces.shift();\n\t          namespaces.sort();\n\t        }\n\t        ontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\t        event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event);\n\t        event.isTrigger = onlyHandlers ? 2 : 3;\n\t        event.namespace = namespaces.join(\".\");\n\t        event.namespace_re = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\n\t        event.result = undefined;\n\t        if (!event.target) {\n\t          event.target = elem;\n\t        }\n\t        data = data == null ? [event] : jQuery.makeArray(data, [event]);\n\t        special = jQuery.event.special[type] || {};\n\t        if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n\t          return;\n\t        }\n\t        if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n\t          bubbleType = special.delegateType || type;\n\t          if (!rfocusMorph.test(bubbleType + type)) {\n\t            cur = cur.parentNode;\n\t          }\n\t          for (; cur; cur = cur.parentNode) {\n\t            eventPath.push(cur);\n\t            tmp = cur;\n\t          }\n\t          if (tmp === (elem.ownerDocument || document)) {\n\t            eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n\t          }\n\t        }\n\t        i = 0;\n\t        while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n\t          event.type = i > 1 ? bubbleType : special.bindType || type;\n\t          handle = (data_priv.get(cur, \"events\") || {})[event.type] && data_priv.get(cur, \"handle\");\n\t          if (handle) {\n\t            handle.apply(cur, data);\n\t          }\n\t          handle = ontype && cur[ontype];\n\t          if (handle && handle.apply && jQuery.acceptData(cur)) {\n\t            event.result = handle.apply(cur, data);\n\t            if (event.result === false) {\n\t              event.preventDefault();\n\t            }\n\t          }\n\t        }\n\t        event.type = type;\n\t        if (!onlyHandlers && !event.isDefaultPrevented()) {\n\t          if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && jQuery.acceptData(elem)) {\n\t            if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {\n\t              tmp = elem[ontype];\n\t              if (tmp) {\n\t                elem[ontype] = null;\n\t              }\n\t              jQuery.event.triggered = type;\n\t              elem[type]();\n\t              jQuery.event.triggered = undefined;\n\t              if (tmp) {\n\t                elem[ontype] = tmp;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return event.result;\n\t      },\n\t      dispatch: function(event) {\n\t        event = jQuery.event.fix(event);\n\t        var i,\n\t            j,\n\t            ret,\n\t            matched,\n\t            handleObj,\n\t            handlerQueue = [],\n\t            args = slice.call(arguments),\n\t            handlers = (data_priv.get(this, \"events\") || {})[event.type] || [],\n\t            special = jQuery.event.special[event.type] || {};\n\t        args[0] = event;\n\t        event.delegateTarget = this;\n\t        if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n\t          return;\n\t        }\n\t        handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n\t        i = 0;\n\t        while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n\t          event.currentTarget = matched.elem;\n\t          j = 0;\n\t          while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n\t            if (!event.namespace_re || event.namespace_re.test(handleObj.namespace)) {\n\t              event.handleObj = handleObj;\n\t              event.data = handleObj.data;\n\t              ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\t              if (ret !== undefined) {\n\t                if ((event.result = ret) === false) {\n\t                  event.preventDefault();\n\t                  event.stopPropagation();\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (special.postDispatch) {\n\t          special.postDispatch.call(this, event);\n\t        }\n\t        return event.result;\n\t      },\n\t      handlers: function(event, handlers) {\n\t        var i,\n\t            matches,\n\t            sel,\n\t            handleObj,\n\t            handlerQueue = [],\n\t            delegateCount = handlers.delegateCount,\n\t            cur = event.target;\n\t        if (delegateCount && cur.nodeType && (!event.button || event.type !== \"click\")) {\n\t          for (; cur !== this; cur = cur.parentNode || this) {\n\t            if (cur.disabled !== true || event.type !== \"click\") {\n\t              matches = [];\n\t              for (i = 0; i < delegateCount; i++) {\n\t                handleObj = handlers[i];\n\t                sel = handleObj.selector + \" \";\n\t                if (matches[sel] === undefined) {\n\t                  matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length;\n\t                }\n\t                if (matches[sel]) {\n\t                  matches.push(handleObj);\n\t                }\n\t              }\n\t              if (matches.length) {\n\t                handlerQueue.push({\n\t                  elem: cur,\n\t                  handlers: matches\n\t                });\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (delegateCount < handlers.length) {\n\t          handlerQueue.push({\n\t            elem: this,\n\t            handlers: handlers.slice(delegateCount)\n\t          });\n\t        }\n\t        return handlerQueue;\n\t      },\n\t      props: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\t      fixHooks: {},\n\t      keyHooks: {\n\t        props: \"char charCode key keyCode\".split(\" \"),\n\t        filter: function(event, original) {\n\t          if (event.which == null) {\n\t            event.which = original.charCode != null ? original.charCode : original.keyCode;\n\t          }\n\t          return event;\n\t        }\n\t      },\n\t      mouseHooks: {\n\t        props: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t        filter: function(event, original) {\n\t          var eventDoc,\n\t              doc,\n\t              body,\n\t              button = original.button;\n\t          if (event.pageX == null && original.clientX != null) {\n\t            eventDoc = event.target.ownerDocument || document;\n\t            doc = eventDoc.documentElement;\n\t            body = eventDoc.body;\n\t            event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n\t            event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n\t          }\n\t          if (!event.which && button !== undefined) {\n\t            event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n\t          }\n\t          return event;\n\t        }\n\t      },\n\t      fix: function(event) {\n\t        if (event[jQuery.expando]) {\n\t          return event;\n\t        }\n\t        var i,\n\t            prop,\n\t            copy,\n\t            type = event.type,\n\t            originalEvent = event,\n\t            fixHook = this.fixHooks[type];\n\t        if (!fixHook) {\n\t          this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};\n\t        }\n\t        copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;\n\t        event = new jQuery.Event(originalEvent);\n\t        i = copy.length;\n\t        while (i--) {\n\t          prop = copy[i];\n\t          event[prop] = originalEvent[prop];\n\t        }\n\t        if (!event.target) {\n\t          event.target = document;\n\t        }\n\t        if (event.target.nodeType === 3) {\n\t          event.target = event.target.parentNode;\n\t        }\n\t        return fixHook.filter ? fixHook.filter(event, originalEvent) : event;\n\t      },\n\t      special: {\n\t        load: {noBubble: true},\n\t        focus: {\n\t          trigger: function() {\n\t            if (this !== safeActiveElement() && this.focus) {\n\t              this.focus();\n\t              return false;\n\t            }\n\t          },\n\t          delegateType: \"focusin\"\n\t        },\n\t        blur: {\n\t          trigger: function() {\n\t            if (this === safeActiveElement() && this.blur) {\n\t              this.blur();\n\t              return false;\n\t            }\n\t          },\n\t          delegateType: \"focusout\"\n\t        },\n\t        click: {\n\t          trigger: function() {\n\t            if (this.type === \"checkbox\" && this.click && jQuery.nodeName(this, \"input\")) {\n\t              this.click();\n\t              return false;\n\t            }\n\t          },\n\t          _default: function(event) {\n\t            return jQuery.nodeName(event.target, \"a\");\n\t          }\n\t        },\n\t        beforeunload: {postDispatch: function(event) {\n\t            if (event.result !== undefined && event.originalEvent) {\n\t              event.originalEvent.returnValue = event.result;\n\t            }\n\t          }}\n\t      },\n\t      simulate: function(type, elem, event, bubble) {\n\t        var e = jQuery.extend(new jQuery.Event(), event, {\n\t          type: type,\n\t          isSimulated: true,\n\t          originalEvent: {}\n\t        });\n\t        if (bubble) {\n\t          jQuery.event.trigger(e, null, elem);\n\t        } else {\n\t          jQuery.event.dispatch.call(elem, e);\n\t        }\n\t        if (e.isDefaultPrevented()) {\n\t          event.preventDefault();\n\t        }\n\t      }\n\t    };\n\t    jQuery.removeEvent = function(elem, type, handle) {\n\t      if (elem.removeEventListener) {\n\t        elem.removeEventListener(type, handle, false);\n\t      }\n\t    };\n\t    jQuery.Event = function(src, props) {\n\t      if (!(this instanceof jQuery.Event)) {\n\t        return new jQuery.Event(src, props);\n\t      }\n\t      if (src && src.type) {\n\t        this.originalEvent = src;\n\t        this.type = src.type;\n\t        this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;\n\t      } else {\n\t        this.type = src;\n\t      }\n\t      if (props) {\n\t        jQuery.extend(this, props);\n\t      }\n\t      this.timeStamp = src && src.timeStamp || jQuery.now();\n\t      this[jQuery.expando] = true;\n\t    };\n\t    jQuery.Event.prototype = {\n\t      isDefaultPrevented: returnFalse,\n\t      isPropagationStopped: returnFalse,\n\t      isImmediatePropagationStopped: returnFalse,\n\t      preventDefault: function() {\n\t        var e = this.originalEvent;\n\t        this.isDefaultPrevented = returnTrue;\n\t        if (e && e.preventDefault) {\n\t          e.preventDefault();\n\t        }\n\t      },\n\t      stopPropagation: function() {\n\t        var e = this.originalEvent;\n\t        this.isPropagationStopped = returnTrue;\n\t        if (e && e.stopPropagation) {\n\t          e.stopPropagation();\n\t        }\n\t      },\n\t      stopImmediatePropagation: function() {\n\t        var e = this.originalEvent;\n\t        this.isImmediatePropagationStopped = returnTrue;\n\t        if (e && e.stopImmediatePropagation) {\n\t          e.stopImmediatePropagation();\n\t        }\n\t        this.stopPropagation();\n\t      }\n\t    };\n\t    jQuery.each({\n\t      mouseenter: \"mouseover\",\n\t      mouseleave: \"mouseout\",\n\t      pointerenter: \"pointerover\",\n\t      pointerleave: \"pointerout\"\n\t    }, function(orig, fix) {\n\t      jQuery.event.special[orig] = {\n\t        delegateType: fix,\n\t        bindType: fix,\n\t        handle: function(event) {\n\t          var ret,\n\t              target = this,\n\t              related = event.relatedTarget,\n\t              handleObj = event.handleObj;\n\t          if (!related || (related !== target && !jQuery.contains(target, related))) {\n\t            event.type = handleObj.origType;\n\t            ret = handleObj.handler.apply(this, arguments);\n\t            event.type = fix;\n\t          }\n\t          return ret;\n\t        }\n\t      };\n\t    });\n\t    if (!support.focusinBubbles) {\n\t      jQuery.each({\n\t        focus: \"focusin\",\n\t        blur: \"focusout\"\n\t      }, function(orig, fix) {\n\t        var handler = function(event) {\n\t          jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);\n\t        };\n\t        jQuery.event.special[fix] = {\n\t          setup: function() {\n\t            var doc = this.ownerDocument || this,\n\t                attaches = data_priv.access(doc, fix);\n\t            if (!attaches) {\n\t              doc.addEventListener(orig, handler, true);\n\t            }\n\t            data_priv.access(doc, fix, (attaches || 0) + 1);\n\t          },\n\t          teardown: function() {\n\t            var doc = this.ownerDocument || this,\n\t                attaches = data_priv.access(doc, fix) - 1;\n\t            if (!attaches) {\n\t              doc.removeEventListener(orig, handler, true);\n\t              data_priv.remove(doc, fix);\n\t            } else {\n\t              data_priv.access(doc, fix, attaches);\n\t            }\n\t          }\n\t        };\n\t      });\n\t    }\n\t    jQuery.fn.extend({\n\t      on: function(types, selector, data, fn, one) {\n\t        var origFn,\n\t            type;\n\t        if (typeof types === \"object\") {\n\t          if (typeof selector !== \"string\") {\n\t            data = data || selector;\n\t            selector = undefined;\n\t          }\n\t          for (type in types) {\n\t            this.on(type, selector, data, types[type], one);\n\t          }\n\t          return this;\n\t        }\n\t        if (data == null && fn == null) {\n\t          fn = selector;\n\t          data = selector = undefined;\n\t        } else if (fn == null) {\n\t          if (typeof selector === \"string\") {\n\t            fn = data;\n\t            data = undefined;\n\t          } else {\n\t            fn = data;\n\t            data = selector;\n\t            selector = undefined;\n\t          }\n\t        }\n\t        if (fn === false) {\n\t          fn = returnFalse;\n\t        } else if (!fn) {\n\t          return this;\n\t        }\n\t        if (one === 1) {\n\t          origFn = fn;\n\t          fn = function(event) {\n\t            jQuery().off(event);\n\t            return origFn.apply(this, arguments);\n\t          };\n\t          fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n\t        }\n\t        return this.each(function() {\n\t          jQuery.event.add(this, types, fn, data, selector);\n\t        });\n\t      },\n\t      one: function(types, selector, data, fn) {\n\t        return this.on(types, selector, data, fn, 1);\n\t      },\n\t      off: function(types, selector, fn) {\n\t        var handleObj,\n\t            type;\n\t        if (types && types.preventDefault && types.handleObj) {\n\t          handleObj = types.handleObj;\n\t          jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n\t          return this;\n\t        }\n\t        if (typeof types === \"object\") {\n\t          for (type in types) {\n\t            this.off(type, selector, types[type]);\n\t          }\n\t          return this;\n\t        }\n\t        if (selector === false || typeof selector === \"function\") {\n\t          fn = selector;\n\t          selector = undefined;\n\t        }\n\t        if (fn === false) {\n\t          fn = returnFalse;\n\t        }\n\t        return this.each(function() {\n\t          jQuery.event.remove(this, types, fn, selector);\n\t        });\n\t      },\n\t      trigger: function(type, data) {\n\t        return this.each(function() {\n\t          jQuery.event.trigger(type, data, this);\n\t        });\n\t      },\n\t      triggerHandler: function(type, data) {\n\t        var elem = this[0];\n\t        if (elem) {\n\t          return jQuery.event.trigger(type, data, elem, true);\n\t        }\n\t      }\n\t    });\n\t    var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\t        rtagName = /<([\\w:]+)/,\n\t        rhtml = /<|&#?\\w+;/,\n\t        rnoInnerhtml = /<(?:script|style|link)/i,\n\t        rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\t        rscriptType = /^$|\\/(?:java|ecma)script/i,\n\t        rscriptTypeMasked = /^true\\/(.*)/,\n\t        rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\t        wrapMap = {\n\t          option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n\t          thead: [1, \"<table>\", \"</table>\"],\n\t          col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n\t          tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n\t          td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n\t          _default: [0, \"\", \"\"]\n\t        };\n\t    wrapMap.optgroup = wrapMap.option;\n\t    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n\t    wrapMap.th = wrapMap.td;\n\t    function manipulationTarget(elem, content) {\n\t      return jQuery.nodeName(elem, \"table\") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\") ? elem.getElementsByTagName(\"tbody\")[0] || elem.appendChild(elem.ownerDocument.createElement(\"tbody\")) : elem;\n\t    }\n\t    function disableScript(elem) {\n\t      elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\t      return elem;\n\t    }\n\t    function restoreScript(elem) {\n\t      var match = rscriptTypeMasked.exec(elem.type);\n\t      if (match) {\n\t        elem.type = match[1];\n\t      } else {\n\t        elem.removeAttribute(\"type\");\n\t      }\n\t      return elem;\n\t    }\n\t    function setGlobalEval(elems, refElements) {\n\t      var i = 0,\n\t          l = elems.length;\n\t      for (; i < l; i++) {\n\t        data_priv.set(elems[i], \"globalEval\", !refElements || data_priv.get(refElements[i], \"globalEval\"));\n\t      }\n\t    }\n\t    function cloneCopyEvent(src, dest) {\n\t      var i,\n\t          l,\n\t          type,\n\t          pdataOld,\n\t          pdataCur,\n\t          udataOld,\n\t          udataCur,\n\t          events;\n\t      if (dest.nodeType !== 1) {\n\t        return;\n\t      }\n\t      if (data_priv.hasData(src)) {\n\t        pdataOld = data_priv.access(src);\n\t        pdataCur = data_priv.set(dest, pdataOld);\n\t        events = pdataOld.events;\n\t        if (events) {\n\t          delete pdataCur.handle;\n\t          pdataCur.events = {};\n\t          for (type in events) {\n\t            for (i = 0, l = events[type].length; i < l; i++) {\n\t              jQuery.event.add(dest, type, events[type][i]);\n\t            }\n\t          }\n\t        }\n\t      }\n\t      if (data_user.hasData(src)) {\n\t        udataOld = data_user.access(src);\n\t        udataCur = jQuery.extend({}, udataOld);\n\t        data_user.set(dest, udataCur);\n\t      }\n\t    }\n\t    function getAll(context, tag) {\n\t      var ret = context.getElementsByTagName ? context.getElementsByTagName(tag || \"*\") : context.querySelectorAll ? context.querySelectorAll(tag || \"*\") : [];\n\t      return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret;\n\t    }\n\t    function fixInput(src, dest) {\n\t      var nodeName = dest.nodeName.toLowerCase();\n\t      if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n\t        dest.checked = src.checked;\n\t      } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n\t        dest.defaultValue = src.defaultValue;\n\t      }\n\t    }\n\t    jQuery.extend({\n\t      clone: function(elem, dataAndEvents, deepDataAndEvents) {\n\t        var i,\n\t            l,\n\t            srcElements,\n\t            destElements,\n\t            clone = elem.cloneNode(true),\n\t            inPage = jQuery.contains(elem.ownerDocument, elem);\n\t        if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n\t          destElements = getAll(clone);\n\t          srcElements = getAll(elem);\n\t          for (i = 0, l = srcElements.length; i < l; i++) {\n\t            fixInput(srcElements[i], destElements[i]);\n\t          }\n\t        }\n\t        if (dataAndEvents) {\n\t          if (deepDataAndEvents) {\n\t            srcElements = srcElements || getAll(elem);\n\t            destElements = destElements || getAll(clone);\n\t            for (i = 0, l = srcElements.length; i < l; i++) {\n\t              cloneCopyEvent(srcElements[i], destElements[i]);\n\t            }\n\t          } else {\n\t            cloneCopyEvent(elem, clone);\n\t          }\n\t        }\n\t        destElements = getAll(clone, \"script\");\n\t        if (destElements.length > 0) {\n\t          setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n\t        }\n\t        return clone;\n\t      },\n\t      buildFragment: function(elems, context, scripts, selection) {\n\t        var elem,\n\t            tmp,\n\t            tag,\n\t            wrap,\n\t            contains,\n\t            j,\n\t            fragment = context.createDocumentFragment(),\n\t            nodes = [],\n\t            i = 0,\n\t            l = elems.length;\n\t        for (; i < l; i++) {\n\t          elem = elems[i];\n\t          if (elem || elem === 0) {\n\t            if (jQuery.type(elem) === \"object\") {\n\t              jQuery.merge(nodes, elem.nodeType ? [elem] : elem);\n\t            } else if (!rhtml.test(elem)) {\n\t              nodes.push(context.createTextNode(elem));\n\t            } else {\n\t              tmp = tmp || fragment.appendChild(context.createElement(\"div\"));\n\t              tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n\t              wrap = wrapMap[tag] || wrapMap._default;\n\t              tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, \"<$1></$2>\") + wrap[2];\n\t              j = wrap[0];\n\t              while (j--) {\n\t                tmp = tmp.lastChild;\n\t              }\n\t              jQuery.merge(nodes, tmp.childNodes);\n\t              tmp = fragment.firstChild;\n\t              tmp.textContent = \"\";\n\t            }\n\t          }\n\t        }\n\t        fragment.textContent = \"\";\n\t        i = 0;\n\t        while ((elem = nodes[i++])) {\n\t          if (selection && jQuery.inArray(elem, selection) !== -1) {\n\t            continue;\n\t          }\n\t          contains = jQuery.contains(elem.ownerDocument, elem);\n\t          tmp = getAll(fragment.appendChild(elem), \"script\");\n\t          if (contains) {\n\t            setGlobalEval(tmp);\n\t          }\n\t          if (scripts) {\n\t            j = 0;\n\t            while ((elem = tmp[j++])) {\n\t              if (rscriptType.test(elem.type || \"\")) {\n\t                scripts.push(elem);\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return fragment;\n\t      },\n\t      cleanData: function(elems) {\n\t        var data,\n\t            elem,\n\t            type,\n\t            key,\n\t            special = jQuery.event.special,\n\t            i = 0;\n\t        for (; (elem = elems[i]) !== undefined; i++) {\n\t          if (jQuery.acceptData(elem)) {\n\t            key = elem[data_priv.expando];\n\t            if (key && (data = data_priv.cache[key])) {\n\t              if (data.events) {\n\t                for (type in data.events) {\n\t                  if (special[type]) {\n\t                    jQuery.event.remove(elem, type);\n\t                  } else {\n\t                    jQuery.removeEvent(elem, type, data.handle);\n\t                  }\n\t                }\n\t              }\n\t              if (data_priv.cache[key]) {\n\t                delete data_priv.cache[key];\n\t              }\n\t            }\n\t          }\n\t          delete data_user.cache[elem[data_user.expando]];\n\t        }\n\t      }\n\t    });\n\t    jQuery.fn.extend({\n\t      text: function(value) {\n\t        return access(this, function(value) {\n\t          return value === undefined ? jQuery.text(this) : this.empty().each(function() {\n\t            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n\t              this.textContent = value;\n\t            }\n\t          });\n\t        }, null, value, arguments.length);\n\t      },\n\t      append: function() {\n\t        return this.domManip(arguments, function(elem) {\n\t          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n\t            var target = manipulationTarget(this, elem);\n\t            target.appendChild(elem);\n\t          }\n\t        });\n\t      },\n\t      prepend: function() {\n\t        return this.domManip(arguments, function(elem) {\n\t          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n\t            var target = manipulationTarget(this, elem);\n\t            target.insertBefore(elem, target.firstChild);\n\t          }\n\t        });\n\t      },\n\t      before: function() {\n\t        return this.domManip(arguments, function(elem) {\n\t          if (this.parentNode) {\n\t            this.parentNode.insertBefore(elem, this);\n\t          }\n\t        });\n\t      },\n\t      after: function() {\n\t        return this.domManip(arguments, function(elem) {\n\t          if (this.parentNode) {\n\t            this.parentNode.insertBefore(elem, this.nextSibling);\n\t          }\n\t        });\n\t      },\n\t      remove: function(selector, keepData) {\n\t        var elem,\n\t            elems = selector ? jQuery.filter(selector, this) : this,\n\t            i = 0;\n\t        for (; (elem = elems[i]) != null; i++) {\n\t          if (!keepData && elem.nodeType === 1) {\n\t            jQuery.cleanData(getAll(elem));\n\t          }\n\t          if (elem.parentNode) {\n\t            if (keepData && jQuery.contains(elem.ownerDocument, elem)) {\n\t              setGlobalEval(getAll(elem, \"script\"));\n\t            }\n\t            elem.parentNode.removeChild(elem);\n\t          }\n\t        }\n\t        return this;\n\t      },\n\t      empty: function() {\n\t        var elem,\n\t            i = 0;\n\t        for (; (elem = this[i]) != null; i++) {\n\t          if (elem.nodeType === 1) {\n\t            jQuery.cleanData(getAll(elem, false));\n\t            elem.textContent = \"\";\n\t          }\n\t        }\n\t        return this;\n\t      },\n\t      clone: function(dataAndEvents, deepDataAndEvents) {\n\t        dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t        deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\t        return this.map(function() {\n\t          return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n\t        });\n\t      },\n\t      html: function(value) {\n\t        return access(this, function(value) {\n\t          var elem = this[0] || {},\n\t              i = 0,\n\t              l = this.length;\n\t          if (value === undefined && elem.nodeType === 1) {\n\t            return elem.innerHTML;\n\t          }\n\t          if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n\t            value = value.replace(rxhtmlTag, \"<$1></$2>\");\n\t            try {\n\t              for (; i < l; i++) {\n\t                elem = this[i] || {};\n\t                if (elem.nodeType === 1) {\n\t                  jQuery.cleanData(getAll(elem, false));\n\t                  elem.innerHTML = value;\n\t                }\n\t              }\n\t              elem = 0;\n\t            } catch (e) {}\n\t          }\n\t          if (elem) {\n\t            this.empty().append(value);\n\t          }\n\t        }, null, value, arguments.length);\n\t      },\n\t      replaceWith: function() {\n\t        var arg = arguments[0];\n\t        this.domManip(arguments, function(elem) {\n\t          arg = this.parentNode;\n\t          jQuery.cleanData(getAll(this));\n\t          if (arg) {\n\t            arg.replaceChild(elem, this);\n\t          }\n\t        });\n\t        return arg && (arg.length || arg.nodeType) ? this : this.remove();\n\t      },\n\t      detach: function(selector) {\n\t        return this.remove(selector, true);\n\t      },\n\t      domManip: function(args, callback) {\n\t        args = concat.apply([], args);\n\t        var fragment,\n\t            first,\n\t            scripts,\n\t            hasScripts,\n\t            node,\n\t            doc,\n\t            i = 0,\n\t            l = this.length,\n\t            set = this,\n\t            iNoClone = l - 1,\n\t            value = args[0],\n\t            isFunction = jQuery.isFunction(value);\n\t        if (isFunction || (l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value))) {\n\t          return this.each(function(index) {\n\t            var self = set.eq(index);\n\t            if (isFunction) {\n\t              args[0] = value.call(this, index, self.html());\n\t            }\n\t            self.domManip(args, callback);\n\t          });\n\t        }\n\t        if (l) {\n\t          fragment = jQuery.buildFragment(args, this[0].ownerDocument, false, this);\n\t          first = fragment.firstChild;\n\t          if (fragment.childNodes.length === 1) {\n\t            fragment = first;\n\t          }\n\t          if (first) {\n\t            scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n\t            hasScripts = scripts.length;\n\t            for (; i < l; i++) {\n\t              node = fragment;\n\t              if (i !== iNoClone) {\n\t                node = jQuery.clone(node, true, true);\n\t                if (hasScripts) {\n\t                  jQuery.merge(scripts, getAll(node, \"script\"));\n\t                }\n\t              }\n\t              callback.call(this[i], node, i);\n\t            }\n\t            if (hasScripts) {\n\t              doc = scripts[scripts.length - 1].ownerDocument;\n\t              jQuery.map(scripts, restoreScript);\n\t              for (i = 0; i < hasScripts; i++) {\n\t                node = scripts[i];\n\t                if (rscriptType.test(node.type || \"\") && !data_priv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n\t                  if (node.src) {\n\t                    if (jQuery._evalUrl) {\n\t                      jQuery._evalUrl(node.src);\n\t                    }\n\t                  } else {\n\t                    jQuery.globalEval(node.textContent.replace(rcleanScript, \"\"));\n\t                  }\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return this;\n\t      }\n\t    });\n\t    jQuery.each({\n\t      appendTo: \"append\",\n\t      prependTo: \"prepend\",\n\t      insertBefore: \"before\",\n\t      insertAfter: \"after\",\n\t      replaceAll: \"replaceWith\"\n\t    }, function(name, original) {\n\t      jQuery.fn[name] = function(selector) {\n\t        var elems,\n\t            ret = [],\n\t            insert = jQuery(selector),\n\t            last = insert.length - 1,\n\t            i = 0;\n\t        for (; i <= last; i++) {\n\t          elems = i === last ? this : this.clone(true);\n\t          jQuery(insert[i])[original](elems);\n\t          push.apply(ret, elems.get());\n\t        }\n\t        return this.pushStack(ret);\n\t      };\n\t    });\n\t    var iframe,\n\t        elemdisplay = {};\n\t    function actualDisplay(name, doc) {\n\t      var style,\n\t          elem = jQuery(doc.createElement(name)).appendTo(doc.body),\n\t          display = window.getDefaultComputedStyle && (style = window.getDefaultComputedStyle(elem[0])) ? style.display : jQuery.css(elem[0], \"display\");\n\t      elem.detach();\n\t      return display;\n\t    }\n\t    function defaultDisplay(nodeName) {\n\t      var doc = document,\n\t          display = elemdisplay[nodeName];\n\t      if (!display) {\n\t        display = actualDisplay(nodeName, doc);\n\t        if (display === \"none\" || !display) {\n\t          iframe = (iframe || jQuery(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(doc.documentElement);\n\t          doc = iframe[0].contentDocument;\n\t          doc.write();\n\t          doc.close();\n\t          display = actualDisplay(nodeName, doc);\n\t          iframe.detach();\n\t        }\n\t        elemdisplay[nodeName] = display;\n\t      }\n\t      return display;\n\t    }\n\t    var rmargin = (/^margin/);\n\t    var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\t    var getStyles = function(elem) {\n\t      return elem.ownerDocument.defaultView.getComputedStyle(elem, null);\n\t    };\n\t    function curCSS(elem, name, computed) {\n\t      var width,\n\t          minWidth,\n\t          maxWidth,\n\t          ret,\n\t          style = elem.style;\n\t      computed = computed || getStyles(elem);\n\t      if (computed) {\n\t        ret = computed.getPropertyValue(name) || computed[name];\n\t      }\n\t      if (computed) {\n\t        if (ret === \"\" && !jQuery.contains(elem.ownerDocument, elem)) {\n\t          ret = jQuery.style(elem, name);\n\t        }\n\t        if (rnumnonpx.test(ret) && rmargin.test(name)) {\n\t          width = style.width;\n\t          minWidth = style.minWidth;\n\t          maxWidth = style.maxWidth;\n\t          style.minWidth = style.maxWidth = style.width = ret;\n\t          ret = computed.width;\n\t          style.width = width;\n\t          style.minWidth = minWidth;\n\t          style.maxWidth = maxWidth;\n\t        }\n\t      }\n\t      return ret !== undefined ? ret + \"\" : ret;\n\t    }\n\t    function addGetHookIf(conditionFn, hookFn) {\n\t      return {get: function() {\n\t          if (conditionFn()) {\n\t            delete this.get;\n\t            return;\n\t          }\n\t          return (this.get = hookFn).apply(this, arguments);\n\t        }};\n\t    }\n\t    (function() {\n\t      var pixelPositionVal,\n\t          boxSizingReliableVal,\n\t          docElem = document.documentElement,\n\t          container = document.createElement(\"div\"),\n\t          div = document.createElement(\"div\");\n\t      if (!div.style) {\n\t        return;\n\t      }\n\t      div.style.backgroundClip = \"content-box\";\n\t      div.cloneNode(true).style.backgroundClip = \"\";\n\t      support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\t      container.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" + \"position:absolute\";\n\t      container.appendChild(div);\n\t      function computePixelPositionAndBoxSizingReliable() {\n\t        div.style.cssText = \"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" + \"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" + \"border:1px;padding:1px;width:4px;position:absolute\";\n\t        div.innerHTML = \"\";\n\t        docElem.appendChild(container);\n\t        var divStyle = window.getComputedStyle(div, null);\n\t        pixelPositionVal = divStyle.top !== \"1%\";\n\t        boxSizingReliableVal = divStyle.width === \"4px\";\n\t        docElem.removeChild(container);\n\t      }\n\t      if (window.getComputedStyle) {\n\t        jQuery.extend(support, {\n\t          pixelPosition: function() {\n\t            computePixelPositionAndBoxSizingReliable();\n\t            return pixelPositionVal;\n\t          },\n\t          boxSizingReliable: function() {\n\t            if (boxSizingReliableVal == null) {\n\t              computePixelPositionAndBoxSizingReliable();\n\t            }\n\t            return boxSizingReliableVal;\n\t          },\n\t          reliableMarginRight: function() {\n\t            var ret,\n\t                marginDiv = div.appendChild(document.createElement(\"div\"));\n\t            marginDiv.style.cssText = div.style.cssText = \"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" + \"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n\t            marginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t            div.style.width = \"1px\";\n\t            docElem.appendChild(container);\n\t            ret = !parseFloat(window.getComputedStyle(marginDiv, null).marginRight);\n\t            docElem.removeChild(container);\n\t            return ret;\n\t          }\n\t        });\n\t      }\n\t    })();\n\t    jQuery.swap = function(elem, options, callback, args) {\n\t      var ret,\n\t          name,\n\t          old = {};\n\t      for (name in options) {\n\t        old[name] = elem.style[name];\n\t        elem.style[name] = options[name];\n\t      }\n\t      ret = callback.apply(elem, args || []);\n\t      for (name in options) {\n\t        elem.style[name] = old[name];\n\t      }\n\t      return ret;\n\t    };\n\t    var rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\t        rnumsplit = new RegExp(\"^(\" + pnum + \")(.*)$\", \"i\"),\n\t        rrelNum = new RegExp(\"^([+-])=(\" + pnum + \")\", \"i\"),\n\t        cssShow = {\n\t          position: \"absolute\",\n\t          visibility: \"hidden\",\n\t          display: \"block\"\n\t        },\n\t        cssNormalTransform = {\n\t          letterSpacing: \"0\",\n\t          fontWeight: \"400\"\n\t        },\n\t        cssPrefixes = [\"Webkit\", \"O\", \"Moz\", \"ms\"];\n\t    function vendorPropName(style, name) {\n\t      if (name in style) {\n\t        return name;\n\t      }\n\t      var capName = name[0].toUpperCase() + name.slice(1),\n\t          origName = name,\n\t          i = cssPrefixes.length;\n\t      while (i--) {\n\t        name = cssPrefixes[i] + capName;\n\t        if (name in style) {\n\t          return name;\n\t        }\n\t      }\n\t      return origName;\n\t    }\n\t    function setPositiveNumber(elem, value, subtract) {\n\t      var matches = rnumsplit.exec(value);\n\t      return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || \"px\") : value;\n\t    }\n\t    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n\t      var i = extra === (isBorderBox ? \"border\" : \"content\") ? 4 : name === \"width\" ? 1 : 0,\n\t          val = 0;\n\t      for (; i < 4; i += 2) {\n\t        if (extra === \"margin\") {\n\t          val += jQuery.css(elem, extra + cssExpand[i], true, styles);\n\t        }\n\t        if (isBorderBox) {\n\t          if (extra === \"content\") {\n\t            val -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n\t          }\n\t          if (extra !== \"margin\") {\n\t            val -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n\t          }\n\t        } else {\n\t          val += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n\t          if (extra !== \"padding\") {\n\t            val += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n\t          }\n\t        }\n\t      }\n\t      return val;\n\t    }\n\t    function getWidthOrHeight(elem, name, extra) {\n\t      var valueIsBorderBox = true,\n\t          val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t          styles = getStyles(elem),\n\t          isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\";\n\t      if (val <= 0 || val == null) {\n\t        val = curCSS(elem, name, styles);\n\t        if (val < 0 || val == null) {\n\t          val = elem.style[name];\n\t        }\n\t        if (rnumnonpx.test(val)) {\n\t          return val;\n\t        }\n\t        valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);\n\t        val = parseFloat(val) || 0;\n\t      }\n\t      return (val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles)) + \"px\";\n\t    }\n\t    function showHide(elements, show) {\n\t      var display,\n\t          elem,\n\t          hidden,\n\t          values = [],\n\t          index = 0,\n\t          length = elements.length;\n\t      for (; index < length; index++) {\n\t        elem = elements[index];\n\t        if (!elem.style) {\n\t          continue;\n\t        }\n\t        values[index] = data_priv.get(elem, \"olddisplay\");\n\t        display = elem.style.display;\n\t        if (show) {\n\t          if (!values[index] && display === \"none\") {\n\t            elem.style.display = \"\";\n\t          }\n\t          if (elem.style.display === \"\" && isHidden(elem)) {\n\t            values[index] = data_priv.access(elem, \"olddisplay\", defaultDisplay(elem.nodeName));\n\t          }\n\t        } else {\n\t          hidden = isHidden(elem);\n\t          if (display !== \"none\" || !hidden) {\n\t            data_priv.set(elem, \"olddisplay\", hidden ? display : jQuery.css(elem, \"display\"));\n\t          }\n\t        }\n\t      }\n\t      for (index = 0; index < length; index++) {\n\t        elem = elements[index];\n\t        if (!elem.style) {\n\t          continue;\n\t        }\n\t        if (!show || elem.style.display === \"none\" || elem.style.display === \"\") {\n\t          elem.style.display = show ? values[index] || \"\" : \"none\";\n\t        }\n\t      }\n\t      return elements;\n\t    }\n\t    jQuery.extend({\n\t      cssHooks: {opacity: {get: function(elem, computed) {\n\t            if (computed) {\n\t              var ret = curCSS(elem, \"opacity\");\n\t              return ret === \"\" ? \"1\" : ret;\n\t            }\n\t          }}},\n\t      cssNumber: {\n\t        \"columnCount\": true,\n\t        \"fillOpacity\": true,\n\t        \"flexGrow\": true,\n\t        \"flexShrink\": true,\n\t        \"fontWeight\": true,\n\t        \"lineHeight\": true,\n\t        \"opacity\": true,\n\t        \"order\": true,\n\t        \"orphans\": true,\n\t        \"widows\": true,\n\t        \"zIndex\": true,\n\t        \"zoom\": true\n\t      },\n\t      cssProps: {\"float\": \"cssFloat\"},\n\t      style: function(elem, name, value, extra) {\n\t        if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n\t          return;\n\t        }\n\t        var ret,\n\t            type,\n\t            hooks,\n\t            origName = jQuery.camelCase(name),\n\t            style = elem.style;\n\t        name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName));\n\t        hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n\t        if (value !== undefined) {\n\t          type = typeof value;\n\t          if (type === \"string\" && (ret = rrelNum.exec(value))) {\n\t            value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name));\n\t            type = \"number\";\n\t          }\n\t          if (value == null || value !== value) {\n\t            return;\n\t          }\n\t          if (type === \"number\" && !jQuery.cssNumber[origName]) {\n\t            value += \"px\";\n\t          }\n\t          if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n\t            style[name] = \"inherit\";\n\t          }\n\t          if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n\t            style[name] = value;\n\t          }\n\t        } else {\n\t          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n\t            return ret;\n\t          }\n\t          return style[name];\n\t        }\n\t      },\n\t      css: function(elem, name, extra, styles) {\n\t        var val,\n\t            num,\n\t            hooks,\n\t            origName = jQuery.camelCase(name);\n\t        name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName));\n\t        hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n\t        if (hooks && \"get\" in hooks) {\n\t          val = hooks.get(elem, true, extra);\n\t        }\n\t        if (val === undefined) {\n\t          val = curCSS(elem, name, styles);\n\t        }\n\t        if (val === \"normal\" && name in cssNormalTransform) {\n\t          val = cssNormalTransform[name];\n\t        }\n\t        if (extra === \"\" || extra) {\n\t          num = parseFloat(val);\n\t          return extra === true || jQuery.isNumeric(num) ? num || 0 : val;\n\t        }\n\t        return val;\n\t      }\n\t    });\n\t    jQuery.each([\"height\", \"width\"], function(i, name) {\n\t      jQuery.cssHooks[name] = {\n\t        get: function(elem, computed, extra) {\n\t          if (computed) {\n\t            return rdisplayswap.test(jQuery.css(elem, \"display\")) && elem.offsetWidth === 0 ? jQuery.swap(elem, cssShow, function() {\n\t              return getWidthOrHeight(elem, name, extra);\n\t            }) : getWidthOrHeight(elem, name, extra);\n\t          }\n\t        },\n\t        set: function(elem, value, extra) {\n\t          var styles = extra && getStyles(elem);\n\t          return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\", styles) : 0);\n\t        }\n\t      };\n\t    });\n\t    jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {\n\t      if (computed) {\n\t        return jQuery.swap(elem, {\"display\": \"inline-block\"}, curCSS, [elem, \"marginRight\"]);\n\t      }\n\t    });\n\t    jQuery.each({\n\t      margin: \"\",\n\t      padding: \"\",\n\t      border: \"Width\"\n\t    }, function(prefix, suffix) {\n\t      jQuery.cssHooks[prefix + suffix] = {expand: function(value) {\n\t          var i = 0,\n\t              expanded = {},\n\t              parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\t          for (; i < 4; i++) {\n\t            expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n\t          }\n\t          return expanded;\n\t        }};\n\t      if (!rmargin.test(prefix)) {\n\t        jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n\t      }\n\t    });\n\t    jQuery.fn.extend({\n\t      css: function(name, value) {\n\t        return access(this, function(elem, name, value) {\n\t          var styles,\n\t              len,\n\t              map = {},\n\t              i = 0;\n\t          if (jQuery.isArray(name)) {\n\t            styles = getStyles(elem);\n\t            len = name.length;\n\t            for (; i < len; i++) {\n\t              map[name[i]] = jQuery.css(elem, name[i], false, styles);\n\t            }\n\t            return map;\n\t          }\n\t          return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n\t        }, name, value, arguments.length > 1);\n\t      },\n\t      show: function() {\n\t        return showHide(this, true);\n\t      },\n\t      hide: function() {\n\t        return showHide(this);\n\t      },\n\t      toggle: function(state) {\n\t        if (typeof state === \"boolean\") {\n\t          return state ? this.show() : this.hide();\n\t        }\n\t        return this.each(function() {\n\t          if (isHidden(this)) {\n\t            jQuery(this).show();\n\t          } else {\n\t            jQuery(this).hide();\n\t          }\n\t        });\n\t      }\n\t    });\n\t    function Tween(elem, options, prop, end, easing) {\n\t      return new Tween.prototype.init(elem, options, prop, end, easing);\n\t    }\n\t    jQuery.Tween = Tween;\n\t    Tween.prototype = {\n\t      constructor: Tween,\n\t      init: function(elem, options, prop, end, easing, unit) {\n\t        this.elem = elem;\n\t        this.prop = prop;\n\t        this.easing = easing || \"swing\";\n\t        this.options = options;\n\t        this.start = this.now = this.cur();\n\t        this.end = end;\n\t        this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n\t      },\n\t      cur: function() {\n\t        var hooks = Tween.propHooks[this.prop];\n\t        return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n\t      },\n\t      run: function(percent) {\n\t        var eased,\n\t            hooks = Tween.propHooks[this.prop];\n\t        if (this.options.duration) {\n\t          this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n\t        } else {\n\t          this.pos = eased = percent;\n\t        }\n\t        this.now = (this.end - this.start) * eased + this.start;\n\t        if (this.options.step) {\n\t          this.options.step.call(this.elem, this.now, this);\n\t        }\n\t        if (hooks && hooks.set) {\n\t          hooks.set(this);\n\t        } else {\n\t          Tween.propHooks._default.set(this);\n\t        }\n\t        return this;\n\t      }\n\t    };\n\t    Tween.prototype.init.prototype = Tween.prototype;\n\t    Tween.propHooks = {_default: {\n\t        get: function(tween) {\n\t          var result;\n\t          if (tween.elem[tween.prop] != null && (!tween.elem.style || tween.elem.style[tween.prop] == null)) {\n\t            return tween.elem[tween.prop];\n\t          }\n\t          result = jQuery.css(tween.elem, tween.prop, \"\");\n\t          return !result || result === \"auto\" ? 0 : result;\n\t        },\n\t        set: function(tween) {\n\t          if (jQuery.fx.step[tween.prop]) {\n\t            jQuery.fx.step[tween.prop](tween);\n\t          } else if (tween.elem.style && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n\t            jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n\t          } else {\n\t            tween.elem[tween.prop] = tween.now;\n\t          }\n\t        }\n\t      }};\n\t    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {set: function(tween) {\n\t        if (tween.elem.nodeType && tween.elem.parentNode) {\n\t          tween.elem[tween.prop] = tween.now;\n\t        }\n\t      }};\n\t    jQuery.easing = {\n\t      linear: function(p) {\n\t        return p;\n\t      },\n\t      swing: function(p) {\n\t        return 0.5 - Math.cos(p * Math.PI) / 2;\n\t      }\n\t    };\n\t    jQuery.fx = Tween.prototype.init;\n\t    jQuery.fx.step = {};\n\t    var fxNow,\n\t        timerId,\n\t        rfxtypes = /^(?:toggle|show|hide)$/,\n\t        rfxnum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\"),\n\t        rrun = /queueHooks$/,\n\t        animationPrefilters = [defaultPrefilter],\n\t        tweeners = {\"*\": [function(prop, value) {\n\t            var tween = this.createTween(prop, value),\n\t                target = tween.cur(),\n\t                parts = rfxnum.exec(value),\n\t                unit = parts && parts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n\t                start = (jQuery.cssNumber[prop] || unit !== \"px\" && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)),\n\t                scale = 1,\n\t                maxIterations = 20;\n\t            if (start && start[3] !== unit) {\n\t              unit = unit || start[3];\n\t              parts = parts || [];\n\t              start = +target || 1;\n\t              do {\n\t                scale = scale || \".5\";\n\t                start = start / scale;\n\t                jQuery.style(tween.elem, prop, start + unit);\n\t              } while (scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);\n\t            }\n\t            if (parts) {\n\t              start = tween.start = +start || +target || 0;\n\t              tween.unit = unit;\n\t              tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2];\n\t            }\n\t            return tween;\n\t          }]};\n\t    function createFxNow() {\n\t      setTimeout(function() {\n\t        fxNow = undefined;\n\t      });\n\t      return (fxNow = jQuery.now());\n\t    }\n\t    function genFx(type, includeWidth) {\n\t      var which,\n\t          i = 0,\n\t          attrs = {height: type};\n\t      includeWidth = includeWidth ? 1 : 0;\n\t      for (; i < 4; i += 2 - includeWidth) {\n\t        which = cssExpand[i];\n\t        attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n\t      }\n\t      if (includeWidth) {\n\t        attrs.opacity = attrs.width = type;\n\t      }\n\t      return attrs;\n\t    }\n\t    function createTween(value, prop, animation) {\n\t      var tween,\n\t          collection = (tweeners[prop] || []).concat(tweeners[\"*\"]),\n\t          index = 0,\n\t          length = collection.length;\n\t      for (; index < length; index++) {\n\t        if ((tween = collection[index].call(animation, prop, value))) {\n\t          return tween;\n\t        }\n\t      }\n\t    }\n\t    function defaultPrefilter(elem, props, opts) {\n\t      var prop,\n\t          value,\n\t          toggle,\n\t          tween,\n\t          hooks,\n\t          oldfire,\n\t          display,\n\t          checkDisplay,\n\t          anim = this,\n\t          orig = {},\n\t          style = elem.style,\n\t          hidden = elem.nodeType && isHidden(elem),\n\t          dataShow = data_priv.get(elem, \"fxshow\");\n\t      if (!opts.queue) {\n\t        hooks = jQuery._queueHooks(elem, \"fx\");\n\t        if (hooks.unqueued == null) {\n\t          hooks.unqueued = 0;\n\t          oldfire = hooks.empty.fire;\n\t          hooks.empty.fire = function() {\n\t            if (!hooks.unqueued) {\n\t              oldfire();\n\t            }\n\t          };\n\t        }\n\t        hooks.unqueued++;\n\t        anim.always(function() {\n\t          anim.always(function() {\n\t            hooks.unqueued--;\n\t            if (!jQuery.queue(elem, \"fx\").length) {\n\t              hooks.empty.fire();\n\t            }\n\t          });\n\t        });\n\t      }\n\t      if (elem.nodeType === 1 && (\"height\" in props || \"width\" in props)) {\n\t        opts.overflow = [style.overflow, style.overflowX, style.overflowY];\n\t        display = jQuery.css(elem, \"display\");\n\t        checkDisplay = display === \"none\" ? data_priv.get(elem, \"olddisplay\") || defaultDisplay(elem.nodeName) : display;\n\t        if (checkDisplay === \"inline\" && jQuery.css(elem, \"float\") === \"none\") {\n\t          style.display = \"inline-block\";\n\t        }\n\t      }\n\t      if (opts.overflow) {\n\t        style.overflow = \"hidden\";\n\t        anim.always(function() {\n\t          style.overflow = opts.overflow[0];\n\t          style.overflowX = opts.overflow[1];\n\t          style.overflowY = opts.overflow[2];\n\t        });\n\t      }\n\t      for (prop in props) {\n\t        value = props[prop];\n\t        if (rfxtypes.exec(value)) {\n\t          delete props[prop];\n\t          toggle = toggle || value === \"toggle\";\n\t          if (value === (hidden ? \"hide\" : \"show\")) {\n\t            if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n\t              hidden = true;\n\t            } else {\n\t              continue;\n\t            }\n\t          }\n\t          orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n\t        } else {\n\t          display = undefined;\n\t        }\n\t      }\n\t      if (!jQuery.isEmptyObject(orig)) {\n\t        if (dataShow) {\n\t          if (\"hidden\" in dataShow) {\n\t            hidden = dataShow.hidden;\n\t          }\n\t        } else {\n\t          dataShow = data_priv.access(elem, \"fxshow\", {});\n\t        }\n\t        if (toggle) {\n\t          dataShow.hidden = !hidden;\n\t        }\n\t        if (hidden) {\n\t          jQuery(elem).show();\n\t        } else {\n\t          anim.done(function() {\n\t            jQuery(elem).hide();\n\t          });\n\t        }\n\t        anim.done(function() {\n\t          var prop;\n\t          data_priv.remove(elem, \"fxshow\");\n\t          for (prop in orig) {\n\t            jQuery.style(elem, prop, orig[prop]);\n\t          }\n\t        });\n\t        for (prop in orig) {\n\t          tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\t          if (!(prop in dataShow)) {\n\t            dataShow[prop] = tween.start;\n\t            if (hidden) {\n\t              tween.end = tween.start;\n\t              tween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t            }\n\t          }\n\t        }\n\t      } else if ((display === \"none\" ? defaultDisplay(elem.nodeName) : display) === \"inline\") {\n\t        style.display = display;\n\t      }\n\t    }\n\t    function propFilter(props, specialEasing) {\n\t      var index,\n\t          name,\n\t          easing,\n\t          value,\n\t          hooks;\n\t      for (index in props) {\n\t        name = jQuery.camelCase(index);\n\t        easing = specialEasing[name];\n\t        value = props[index];\n\t        if (jQuery.isArray(value)) {\n\t          easing = value[1];\n\t          value = props[index] = value[0];\n\t        }\n\t        if (index !== name) {\n\t          props[name] = value;\n\t          delete props[index];\n\t        }\n\t        hooks = jQuery.cssHooks[name];\n\t        if (hooks && \"expand\" in hooks) {\n\t          value = hooks.expand(value);\n\t          delete props[name];\n\t          for (index in value) {\n\t            if (!(index in props)) {\n\t              props[index] = value[index];\n\t              specialEasing[index] = easing;\n\t            }\n\t          }\n\t        } else {\n\t          specialEasing[name] = easing;\n\t        }\n\t      }\n\t    }\n\t    function Animation(elem, properties, options) {\n\t      var result,\n\t          stopped,\n\t          index = 0,\n\t          length = animationPrefilters.length,\n\t          deferred = jQuery.Deferred().always(function() {\n\t            delete tick.elem;\n\t          }),\n\t          tick = function() {\n\t            if (stopped) {\n\t              return false;\n\t            }\n\t            var currentTime = fxNow || createFxNow(),\n\t                remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n\t                temp = remaining / animation.duration || 0,\n\t                percent = 1 - temp,\n\t                index = 0,\n\t                length = animation.tweens.length;\n\t            for (; index < length; index++) {\n\t              animation.tweens[index].run(percent);\n\t            }\n\t            deferred.notifyWith(elem, [animation, percent, remaining]);\n\t            if (percent < 1 && length) {\n\t              return remaining;\n\t            } else {\n\t              deferred.resolveWith(elem, [animation]);\n\t              return false;\n\t            }\n\t          },\n\t          animation = deferred.promise({\n\t            elem: elem,\n\t            props: jQuery.extend({}, properties),\n\t            opts: jQuery.extend(true, {specialEasing: {}}, options),\n\t            originalProperties: properties,\n\t            originalOptions: options,\n\t            startTime: fxNow || createFxNow(),\n\t            duration: options.duration,\n\t            tweens: [],\n\t            createTween: function(prop, end) {\n\t              var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n\t              animation.tweens.push(tween);\n\t              return tween;\n\t            },\n\t            stop: function(gotoEnd) {\n\t              var index = 0,\n\t                  length = gotoEnd ? animation.tweens.length : 0;\n\t              if (stopped) {\n\t                return this;\n\t              }\n\t              stopped = true;\n\t              for (; index < length; index++) {\n\t                animation.tweens[index].run(1);\n\t              }\n\t              if (gotoEnd) {\n\t                deferred.resolveWith(elem, [animation, gotoEnd]);\n\t              } else {\n\t                deferred.rejectWith(elem, [animation, gotoEnd]);\n\t              }\n\t              return this;\n\t            }\n\t          }),\n\t          props = animation.props;\n\t      propFilter(props, animation.opts.specialEasing);\n\t      for (; index < length; index++) {\n\t        result = animationPrefilters[index].call(animation, elem, props, animation.opts);\n\t        if (result) {\n\t          return result;\n\t        }\n\t      }\n\t      jQuery.map(props, createTween, animation);\n\t      if (jQuery.isFunction(animation.opts.start)) {\n\t        animation.opts.start.call(elem, animation);\n\t      }\n\t      jQuery.fx.timer(jQuery.extend(tick, {\n\t        elem: elem,\n\t        anim: animation,\n\t        queue: animation.opts.queue\n\t      }));\n\t      return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n\t    }\n\t    jQuery.Animation = jQuery.extend(Animation, {\n\t      tweener: function(props, callback) {\n\t        if (jQuery.isFunction(props)) {\n\t          callback = props;\n\t          props = [\"*\"];\n\t        } else {\n\t          props = props.split(\" \");\n\t        }\n\t        var prop,\n\t            index = 0,\n\t            length = props.length;\n\t        for (; index < length; index++) {\n\t          prop = props[index];\n\t          tweeners[prop] = tweeners[prop] || [];\n\t          tweeners[prop].unshift(callback);\n\t        }\n\t      },\n\t      prefilter: function(callback, prepend) {\n\t        if (prepend) {\n\t          animationPrefilters.unshift(callback);\n\t        } else {\n\t          animationPrefilters.push(callback);\n\t        }\n\t      }\n\t    });\n\t    jQuery.speed = function(speed, easing, fn) {\n\t      var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n\t        complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,\n\t        duration: speed,\n\t        easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n\t      };\n\t      opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;\n\t      if (opt.queue == null || opt.queue === true) {\n\t        opt.queue = \"fx\";\n\t      }\n\t      opt.old = opt.complete;\n\t      opt.complete = function() {\n\t        if (jQuery.isFunction(opt.old)) {\n\t          opt.old.call(this);\n\t        }\n\t        if (opt.queue) {\n\t          jQuery.dequeue(this, opt.queue);\n\t        }\n\t      };\n\t      return opt;\n\t    };\n\t    jQuery.fn.extend({\n\t      fadeTo: function(speed, to, easing, callback) {\n\t        return this.filter(isHidden).css(\"opacity\", 0).show().end().animate({opacity: to}, speed, easing, callback);\n\t      },\n\t      animate: function(prop, speed, easing, callback) {\n\t        var empty = jQuery.isEmptyObject(prop),\n\t            optall = jQuery.speed(speed, easing, callback),\n\t            doAnimation = function() {\n\t              var anim = Animation(this, jQuery.extend({}, prop), optall);\n\t              if (empty || data_priv.get(this, \"finish\")) {\n\t                anim.stop(true);\n\t              }\n\t            };\n\t        doAnimation.finish = doAnimation;\n\t        return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n\t      },\n\t      stop: function(type, clearQueue, gotoEnd) {\n\t        var stopQueue = function(hooks) {\n\t          var stop = hooks.stop;\n\t          delete hooks.stop;\n\t          stop(gotoEnd);\n\t        };\n\t        if (typeof type !== \"string\") {\n\t          gotoEnd = clearQueue;\n\t          clearQueue = type;\n\t          type = undefined;\n\t        }\n\t        if (clearQueue && type !== false) {\n\t          this.queue(type || \"fx\", []);\n\t        }\n\t        return this.each(function() {\n\t          var dequeue = true,\n\t              index = type != null && type + \"queueHooks\",\n\t              timers = jQuery.timers,\n\t              data = data_priv.get(this);\n\t          if (index) {\n\t            if (data[index] && data[index].stop) {\n\t              stopQueue(data[index]);\n\t            }\n\t          } else {\n\t            for (index in data) {\n\t              if (data[index] && data[index].stop && rrun.test(index)) {\n\t                stopQueue(data[index]);\n\t              }\n\t            }\n\t          }\n\t          for (index = timers.length; index--; ) {\n\t            if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n\t              timers[index].anim.stop(gotoEnd);\n\t              dequeue = false;\n\t              timers.splice(index, 1);\n\t            }\n\t          }\n\t          if (dequeue || !gotoEnd) {\n\t            jQuery.dequeue(this, type);\n\t          }\n\t        });\n\t      },\n\t      finish: function(type) {\n\t        if (type !== false) {\n\t          type = type || \"fx\";\n\t        }\n\t        return this.each(function() {\n\t          var index,\n\t              data = data_priv.get(this),\n\t              queue = data[type + \"queue\"],\n\t              hooks = data[type + \"queueHooks\"],\n\t              timers = jQuery.timers,\n\t              length = queue ? queue.length : 0;\n\t          data.finish = true;\n\t          jQuery.queue(this, type, []);\n\t          if (hooks && hooks.stop) {\n\t            hooks.stop.call(this, true);\n\t          }\n\t          for (index = timers.length; index--; ) {\n\t            if (timers[index].elem === this && timers[index].queue === type) {\n\t              timers[index].anim.stop(true);\n\t              timers.splice(index, 1);\n\t            }\n\t          }\n\t          for (index = 0; index < length; index++) {\n\t            if (queue[index] && queue[index].finish) {\n\t              queue[index].finish.call(this);\n\t            }\n\t          }\n\t          delete data.finish;\n\t        });\n\t      }\n\t    });\n\t    jQuery.each([\"toggle\", \"show\", \"hide\"], function(i, name) {\n\t      var cssFn = jQuery.fn[name];\n\t      jQuery.fn[name] = function(speed, easing, callback) {\n\t        return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n\t      };\n\t    });\n\t    jQuery.each({\n\t      slideDown: genFx(\"show\"),\n\t      slideUp: genFx(\"hide\"),\n\t      slideToggle: genFx(\"toggle\"),\n\t      fadeIn: {opacity: \"show\"},\n\t      fadeOut: {opacity: \"hide\"},\n\t      fadeToggle: {opacity: \"toggle\"}\n\t    }, function(name, props) {\n\t      jQuery.fn[name] = function(speed, easing, callback) {\n\t        return this.animate(props, speed, easing, callback);\n\t      };\n\t    });\n\t    jQuery.timers = [];\n\t    jQuery.fx.tick = function() {\n\t      var timer,\n\t          i = 0,\n\t          timers = jQuery.timers;\n\t      fxNow = jQuery.now();\n\t      for (; i < timers.length; i++) {\n\t        timer = timers[i];\n\t        if (!timer() && timers[i] === timer) {\n\t          timers.splice(i--, 1);\n\t        }\n\t      }\n\t      if (!timers.length) {\n\t        jQuery.fx.stop();\n\t      }\n\t      fxNow = undefined;\n\t    };\n\t    jQuery.fx.timer = function(timer) {\n\t      jQuery.timers.push(timer);\n\t      if (timer()) {\n\t        jQuery.fx.start();\n\t      } else {\n\t        jQuery.timers.pop();\n\t      }\n\t    };\n\t    jQuery.fx.interval = 13;\n\t    jQuery.fx.start = function() {\n\t      if (!timerId) {\n\t        timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval);\n\t      }\n\t    };\n\t    jQuery.fx.stop = function() {\n\t      clearInterval(timerId);\n\t      timerId = null;\n\t    };\n\t    jQuery.fx.speeds = {\n\t      slow: 600,\n\t      fast: 200,\n\t      _default: 400\n\t    };\n\t    jQuery.fn.delay = function(time, type) {\n\t      time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n\t      type = type || \"fx\";\n\t      return this.queue(type, function(next, hooks) {\n\t        var timeout = setTimeout(next, time);\n\t        hooks.stop = function() {\n\t          clearTimeout(timeout);\n\t        };\n\t      });\n\t    };\n\t    (function() {\n\t      var input = document.createElement(\"input\"),\n\t          select = document.createElement(\"select\"),\n\t          opt = select.appendChild(document.createElement(\"option\"));\n\t      input.type = \"checkbox\";\n\t      support.checkOn = input.value !== \"\";\n\t      support.optSelected = opt.selected;\n\t      select.disabled = true;\n\t      support.optDisabled = !opt.disabled;\n\t      input = document.createElement(\"input\");\n\t      input.value = \"t\";\n\t      input.type = \"radio\";\n\t      support.radioValue = input.value === \"t\";\n\t    })();\n\t    var nodeHook,\n\t        boolHook,\n\t        attrHandle = jQuery.expr.attrHandle;\n\t    jQuery.fn.extend({\n\t      attr: function(name, value) {\n\t        return access(this, jQuery.attr, name, value, arguments.length > 1);\n\t      },\n\t      removeAttr: function(name) {\n\t        return this.each(function() {\n\t          jQuery.removeAttr(this, name);\n\t        });\n\t      }\n\t    });\n\t    jQuery.extend({\n\t      attr: function(elem, name, value) {\n\t        var hooks,\n\t            ret,\n\t            nType = elem.nodeType;\n\t        if (!elem || nType === 3 || nType === 8 || nType === 2) {\n\t          return;\n\t        }\n\t        if (typeof elem.getAttribute === strundefined) {\n\t          return jQuery.prop(elem, name, value);\n\t        }\n\t        if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n\t          name = name.toLowerCase();\n\t          hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook);\n\t        }\n\t        if (value !== undefined) {\n\t          if (value === null) {\n\t            jQuery.removeAttr(elem, name);\n\t          } else if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n\t            return ret;\n\t          } else {\n\t            elem.setAttribute(name, value + \"\");\n\t            return value;\n\t          }\n\t        } else if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n\t          return ret;\n\t        } else {\n\t          ret = jQuery.find.attr(elem, name);\n\t          return ret == null ? undefined : ret;\n\t        }\n\t      },\n\t      removeAttr: function(elem, value) {\n\t        var name,\n\t            propName,\n\t            i = 0,\n\t            attrNames = value && value.match(rnotwhite);\n\t        if (attrNames && elem.nodeType === 1) {\n\t          while ((name = attrNames[i++])) {\n\t            propName = jQuery.propFix[name] || name;\n\t            if (jQuery.expr.match.bool.test(name)) {\n\t              elem[propName] = false;\n\t            }\n\t            elem.removeAttribute(name);\n\t          }\n\t        }\n\t      },\n\t      attrHooks: {type: {set: function(elem, value) {\n\t            if (!support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\")) {\n\t              var val = elem.value;\n\t              elem.setAttribute(\"type\", value);\n\t              if (val) {\n\t                elem.value = val;\n\t              }\n\t              return value;\n\t            }\n\t          }}}\n\t    });\n\t    boolHook = {set: function(elem, value, name) {\n\t        if (value === false) {\n\t          jQuery.removeAttr(elem, name);\n\t        } else {\n\t          elem.setAttribute(name, name);\n\t        }\n\t        return name;\n\t      }};\n\t    jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function(i, name) {\n\t      var getter = attrHandle[name] || jQuery.find.attr;\n\t      attrHandle[name] = function(elem, name, isXML) {\n\t        var ret,\n\t            handle;\n\t        if (!isXML) {\n\t          handle = attrHandle[name];\n\t          attrHandle[name] = ret;\n\t          ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;\n\t          attrHandle[name] = handle;\n\t        }\n\t        return ret;\n\t      };\n\t    });\n\t    var rfocusable = /^(?:input|select|textarea|button)$/i;\n\t    jQuery.fn.extend({\n\t      prop: function(name, value) {\n\t        return access(this, jQuery.prop, name, value, arguments.length > 1);\n\t      },\n\t      removeProp: function(name) {\n\t        return this.each(function() {\n\t          delete this[jQuery.propFix[name] || name];\n\t        });\n\t      }\n\t    });\n\t    jQuery.extend({\n\t      propFix: {\n\t        \"for\": \"htmlFor\",\n\t        \"class\": \"className\"\n\t      },\n\t      prop: function(elem, name, value) {\n\t        var ret,\n\t            hooks,\n\t            notxml,\n\t            nType = elem.nodeType;\n\t        if (!elem || nType === 3 || nType === 8 || nType === 2) {\n\t          return;\n\t        }\n\t        notxml = nType !== 1 || !jQuery.isXMLDoc(elem);\n\t        if (notxml) {\n\t          name = jQuery.propFix[name] || name;\n\t          hooks = jQuery.propHooks[name];\n\t        }\n\t        if (value !== undefined) {\n\t          return hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined ? ret : (elem[name] = value);\n\t        } else {\n\t          return hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null ? ret : elem[name];\n\t        }\n\t      },\n\t      propHooks: {tabIndex: {get: function(elem) {\n\t            return elem.hasAttribute(\"tabindex\") || rfocusable.test(elem.nodeName) || elem.href ? elem.tabIndex : -1;\n\t          }}}\n\t    });\n\t    if (!support.optSelected) {\n\t      jQuery.propHooks.selected = {get: function(elem) {\n\t          var parent = elem.parentNode;\n\t          if (parent && parent.parentNode) {\n\t            parent.parentNode.selectedIndex;\n\t          }\n\t          return null;\n\t        }};\n\t    }\n\t    jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function() {\n\t      jQuery.propFix[this.toLowerCase()] = this;\n\t    });\n\t    var rclass = /[\\t\\r\\n\\f]/g;\n\t    jQuery.fn.extend({\n\t      addClass: function(value) {\n\t        var classes,\n\t            elem,\n\t            cur,\n\t            clazz,\n\t            j,\n\t            finalValue,\n\t            proceed = typeof value === \"string\" && value,\n\t            i = 0,\n\t            len = this.length;\n\t        if (jQuery.isFunction(value)) {\n\t          return this.each(function(j) {\n\t            jQuery(this).addClass(value.call(this, j, this.className));\n\t          });\n\t        }\n\t        if (proceed) {\n\t          classes = (value || \"\").match(rnotwhite) || [];\n\t          for (; i < len; i++) {\n\t            elem = this[i];\n\t            cur = elem.nodeType === 1 && (elem.className ? (\" \" + elem.className + \" \").replace(rclass, \" \") : \" \");\n\t            if (cur) {\n\t              j = 0;\n\t              while ((clazz = classes[j++])) {\n\t                if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n\t                  cur += clazz + \" \";\n\t                }\n\t              }\n\t              finalValue = jQuery.trim(cur);\n\t              if (elem.className !== finalValue) {\n\t                elem.className = finalValue;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return this;\n\t      },\n\t      removeClass: function(value) {\n\t        var classes,\n\t            elem,\n\t            cur,\n\t            clazz,\n\t            j,\n\t            finalValue,\n\t            proceed = arguments.length === 0 || typeof value === \"string\" && value,\n\t            i = 0,\n\t            len = this.length;\n\t        if (jQuery.isFunction(value)) {\n\t          return this.each(function(j) {\n\t            jQuery(this).removeClass(value.call(this, j, this.className));\n\t          });\n\t        }\n\t        if (proceed) {\n\t          classes = (value || \"\").match(rnotwhite) || [];\n\t          for (; i < len; i++) {\n\t            elem = this[i];\n\t            cur = elem.nodeType === 1 && (elem.className ? (\" \" + elem.className + \" \").replace(rclass, \" \") : \"\");\n\t            if (cur) {\n\t              j = 0;\n\t              while ((clazz = classes[j++])) {\n\t                while (cur.indexOf(\" \" + clazz + \" \") >= 0) {\n\t                  cur = cur.replace(\" \" + clazz + \" \", \" \");\n\t                }\n\t              }\n\t              finalValue = value ? jQuery.trim(cur) : \"\";\n\t              if (elem.className !== finalValue) {\n\t                elem.className = finalValue;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        return this;\n\t      },\n\t      toggleClass: function(value, stateVal) {\n\t        var type = typeof value;\n\t        if (typeof stateVal === \"boolean\" && type === \"string\") {\n\t          return stateVal ? this.addClass(value) : this.removeClass(value);\n\t        }\n\t        if (jQuery.isFunction(value)) {\n\t          return this.each(function(i) {\n\t            jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\n\t          });\n\t        }\n\t        return this.each(function() {\n\t          if (type === \"string\") {\n\t            var className,\n\t                i = 0,\n\t                self = jQuery(this),\n\t                classNames = value.match(rnotwhite) || [];\n\t            while ((className = classNames[i++])) {\n\t              if (self.hasClass(className)) {\n\t                self.removeClass(className);\n\t              } else {\n\t                self.addClass(className);\n\t              }\n\t            }\n\t          } else if (type === strundefined || type === \"boolean\") {\n\t            if (this.className) {\n\t              data_priv.set(this, \"__className__\", this.className);\n\t            }\n\t            this.className = this.className || value === false ? \"\" : data_priv.get(this, \"__className__\") || \"\";\n\t          }\n\t        });\n\t      },\n\t      hasClass: function(selector) {\n\t        var className = \" \" + selector + \" \",\n\t            i = 0,\n\t            l = this.length;\n\t        for (; i < l; i++) {\n\t          if (this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf(className) >= 0) {\n\t            return true;\n\t          }\n\t        }\n\t        return false;\n\t      }\n\t    });\n\t    var rreturn = /\\r/g;\n\t    jQuery.fn.extend({val: function(value) {\n\t        var hooks,\n\t            ret,\n\t            isFunction,\n\t            elem = this[0];\n\t        if (!arguments.length) {\n\t          if (elem) {\n\t            hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\t            if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n\t              return ret;\n\t            }\n\t            ret = elem.value;\n\t            return typeof ret === \"string\" ? ret.replace(rreturn, \"\") : ret == null ? \"\" : ret;\n\t          }\n\t          return;\n\t        }\n\t        isFunction = jQuery.isFunction(value);\n\t        return this.each(function(i) {\n\t          var val;\n\t          if (this.nodeType !== 1) {\n\t            return;\n\t          }\n\t          if (isFunction) {\n\t            val = value.call(this, i, jQuery(this).val());\n\t          } else {\n\t            val = value;\n\t          }\n\t          if (val == null) {\n\t            val = \"\";\n\t          } else if (typeof val === \"number\") {\n\t            val += \"\";\n\t          } else if (jQuery.isArray(val)) {\n\t            val = jQuery.map(val, function(value) {\n\t              return value == null ? \"\" : value + \"\";\n\t            });\n\t          }\n\t          hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n\t          if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n\t            this.value = val;\n\t          }\n\t        });\n\t      }});\n\t    jQuery.extend({valHooks: {\n\t        option: {get: function(elem) {\n\t            var val = jQuery.find.attr(elem, \"value\");\n\t            return val != null ? val : jQuery.trim(jQuery.text(elem));\n\t          }},\n\t        select: {\n\t          get: function(elem) {\n\t            var value,\n\t                option,\n\t                options = elem.options,\n\t                index = elem.selectedIndex,\n\t                one = elem.type === \"select-one\" || index < 0,\n\t                values = one ? null : [],\n\t                max = one ? index + 1 : options.length,\n\t                i = index < 0 ? max : one ? index : 0;\n\t            for (; i < max; i++) {\n\t              option = options[i];\n\t              if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, \"optgroup\"))) {\n\t                value = jQuery(option).val();\n\t                if (one) {\n\t                  return value;\n\t                }\n\t                values.push(value);\n\t              }\n\t            }\n\t            return values;\n\t          },\n\t          set: function(elem, value) {\n\t            var optionSet,\n\t                option,\n\t                options = elem.options,\n\t                values = jQuery.makeArray(value),\n\t                i = options.length;\n\t            while (i--) {\n\t              option = options[i];\n\t              if ((option.selected = jQuery.inArray(option.value, values) >= 0)) {\n\t                optionSet = true;\n\t              }\n\t            }\n\t            if (!optionSet) {\n\t              elem.selectedIndex = -1;\n\t            }\n\t            return values;\n\t          }\n\t        }\n\t      }});\n\t    jQuery.each([\"radio\", \"checkbox\"], function() {\n\t      jQuery.valHooks[this] = {set: function(elem, value) {\n\t          if (jQuery.isArray(value)) {\n\t            return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0);\n\t          }\n\t        }};\n\t      if (!support.checkOn) {\n\t        jQuery.valHooks[this].get = function(elem) {\n\t          return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t        };\n\t      }\n\t    });\n\t    jQuery.each((\"blur focus focusin focusout load resize scroll unload click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function(i, name) {\n\t      jQuery.fn[name] = function(data, fn) {\n\t        return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n\t      };\n\t    });\n\t    jQuery.fn.extend({\n\t      hover: function(fnOver, fnOut) {\n\t        return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n\t      },\n\t      bind: function(types, data, fn) {\n\t        return this.on(types, null, data, fn);\n\t      },\n\t      unbind: function(types, fn) {\n\t        return this.off(types, null, fn);\n\t      },\n\t      delegate: function(selector, types, data, fn) {\n\t        return this.on(types, selector, data, fn);\n\t      },\n\t      undelegate: function(selector, types, fn) {\n\t        return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n\t      }\n\t    });\n\t    var nonce = jQuery.now();\n\t    var rquery = (/\\?/);\n\t    jQuery.parseJSON = function(data) {\n\t      return JSON.parse(data + \"\");\n\t    };\n\t    jQuery.parseXML = function(data) {\n\t      var xml,\n\t          tmp;\n\t      if (!data || typeof data !== \"string\") {\n\t        return null;\n\t      }\n\t      try {\n\t        tmp = new DOMParser();\n\t        xml = tmp.parseFromString(data, \"text/xml\");\n\t      } catch (e) {\n\t        xml = undefined;\n\t      }\n\t      if (!xml || xml.getElementsByTagName(\"parsererror\").length) {\n\t        jQuery.error(\"Invalid XML: \" + data);\n\t      }\n\t      return xml;\n\t    };\n\t    var ajaxLocParts,\n\t        ajaxLocation,\n\t        rhash = /#.*$/,\n\t        rts = /([?&])_=[^&]*/,\n\t        rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t        rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\t        rnoContent = /^(?:GET|HEAD)$/,\n\t        rprotocol = /^\\/\\//,\n\t        rurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\t        prefilters = {},\n\t        transports = {},\n\t        allTypes = \"*/\".concat(\"*\");\n\t    try {\n\t      ajaxLocation = location.href;\n\t    } catch (e) {\n\t      ajaxLocation = document.createElement(\"a\");\n\t      ajaxLocation.href = \"\";\n\t      ajaxLocation = ajaxLocation.href;\n\t    }\n\t    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];\n\t    function addToPrefiltersOrTransports(structure) {\n\t      return function(dataTypeExpression, func) {\n\t        if (typeof dataTypeExpression !== \"string\") {\n\t          func = dataTypeExpression;\n\t          dataTypeExpression = \"*\";\n\t        }\n\t        var dataType,\n\t            i = 0,\n\t            dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\n\t        if (jQuery.isFunction(func)) {\n\t          while ((dataType = dataTypes[i++])) {\n\t            if (dataType[0] === \"+\") {\n\t              dataType = dataType.slice(1) || \"*\";\n\t              (structure[dataType] = structure[dataType] || []).unshift(func);\n\t            } else {\n\t              (structure[dataType] = structure[dataType] || []).push(func);\n\t            }\n\t          }\n\t        }\n\t      };\n\t    }\n\t    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n\t      var inspected = {},\n\t          seekingTransport = (structure === transports);\n\t      function inspect(dataType) {\n\t        var selected;\n\t        inspected[dataType] = true;\n\t        jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\n\t          var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\t          if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n\t            options.dataTypes.unshift(dataTypeOrTransport);\n\t            inspect(dataTypeOrTransport);\n\t            return false;\n\t          } else if (seekingTransport) {\n\t            return !(selected = dataTypeOrTransport);\n\t          }\n\t        });\n\t        return selected;\n\t      }\n\t      return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n\t    }\n\t    function ajaxExtend(target, src) {\n\t      var key,\n\t          deep,\n\t          flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\t      for (key in src) {\n\t        if (src[key] !== undefined) {\n\t          (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\n\t        }\n\t      }\n\t      if (deep) {\n\t        jQuery.extend(true, target, deep);\n\t      }\n\t      return target;\n\t    }\n\t    function ajaxHandleResponses(s, jqXHR, responses) {\n\t      var ct,\n\t          type,\n\t          finalDataType,\n\t          firstDataType,\n\t          contents = s.contents,\n\t          dataTypes = s.dataTypes;\n\t      while (dataTypes[0] === \"*\") {\n\t        dataTypes.shift();\n\t        if (ct === undefined) {\n\t          ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t        }\n\t      }\n\t      if (ct) {\n\t        for (type in contents) {\n\t          if (contents[type] && contents[type].test(ct)) {\n\t            dataTypes.unshift(type);\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      if (dataTypes[0] in responses) {\n\t        finalDataType = dataTypes[0];\n\t      } else {\n\t        for (type in responses) {\n\t          if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n\t            finalDataType = type;\n\t            break;\n\t          }\n\t          if (!firstDataType) {\n\t            firstDataType = type;\n\t          }\n\t        }\n\t        finalDataType = finalDataType || firstDataType;\n\t      }\n\t      if (finalDataType) {\n\t        if (finalDataType !== dataTypes[0]) {\n\t          dataTypes.unshift(finalDataType);\n\t        }\n\t        return responses[finalDataType];\n\t      }\n\t    }\n\t    function ajaxConvert(s, response, jqXHR, isSuccess) {\n\t      var conv2,\n\t          current,\n\t          conv,\n\t          tmp,\n\t          prev,\n\t          converters = {},\n\t          dataTypes = s.dataTypes.slice();\n\t      if (dataTypes[1]) {\n\t        for (conv in s.converters) {\n\t          converters[conv.toLowerCase()] = s.converters[conv];\n\t        }\n\t      }\n\t      current = dataTypes.shift();\n\t      while (current) {\n\t        if (s.responseFields[current]) {\n\t          jqXHR[s.responseFields[current]] = response;\n\t        }\n\t        if (!prev && isSuccess && s.dataFilter) {\n\t          response = s.dataFilter(response, s.dataType);\n\t        }\n\t        prev = current;\n\t        current = dataTypes.shift();\n\t        if (current) {\n\t          if (current === \"*\") {\n\t            current = prev;\n\t          } else if (prev !== \"*\" && prev !== current) {\n\t            conv = converters[prev + \" \" + current] || converters[\"* \" + current];\n\t            if (!conv) {\n\t              for (conv2 in converters) {\n\t                tmp = conv2.split(\" \");\n\t                if (tmp[1] === current) {\n\t                  conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n\t                  if (conv) {\n\t                    if (conv === true) {\n\t                      conv = converters[conv2];\n\t                    } else if (converters[conv2] !== true) {\n\t                      current = tmp[0];\n\t                      dataTypes.unshift(tmp[1]);\n\t                    }\n\t                    break;\n\t                  }\n\t                }\n\t              }\n\t            }\n\t            if (conv !== true) {\n\t              if (conv && s[\"throws\"]) {\n\t                response = conv(response);\n\t              } else {\n\t                try {\n\t                  response = conv(response);\n\t                } catch (e) {\n\t                  return {\n\t                    state: \"parsererror\",\n\t                    error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t                  };\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return {\n\t        state: \"success\",\n\t        data: response\n\t      };\n\t    }\n\t    jQuery.extend({\n\t      active: 0,\n\t      lastModified: {},\n\t      etag: {},\n\t      ajaxSettings: {\n\t        url: ajaxLocation,\n\t        type: \"GET\",\n\t        isLocal: rlocalProtocol.test(ajaxLocParts[1]),\n\t        global: true,\n\t        processData: true,\n\t        async: true,\n\t        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t        accepts: {\n\t          \"*\": allTypes,\n\t          text: \"text/plain\",\n\t          html: \"text/html\",\n\t          xml: \"application/xml, text/xml\",\n\t          json: \"application/json, text/javascript\"\n\t        },\n\t        contents: {\n\t          xml: /xml/,\n\t          html: /html/,\n\t          json: /json/\n\t        },\n\t        responseFields: {\n\t          xml: \"responseXML\",\n\t          text: \"responseText\",\n\t          json: \"responseJSON\"\n\t        },\n\t        converters: {\n\t          \"* text\": String,\n\t          \"text html\": true,\n\t          \"text json\": jQuery.parseJSON,\n\t          \"text xml\": jQuery.parseXML\n\t        },\n\t        flatOptions: {\n\t          url: true,\n\t          context: true\n\t        }\n\t      },\n\t      ajaxSetup: function(target, settings) {\n\t        return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);\n\t      },\n\t      ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n\t      ajaxTransport: addToPrefiltersOrTransports(transports),\n\t      ajax: function(url, options) {\n\t        if (typeof url === \"object\") {\n\t          options = url;\n\t          url = undefined;\n\t        }\n\t        options = options || {};\n\t        var transport,\n\t            cacheURL,\n\t            responseHeadersString,\n\t            responseHeaders,\n\t            timeoutTimer,\n\t            parts,\n\t            fireGlobals,\n\t            i,\n\t            s = jQuery.ajaxSetup({}, options),\n\t            callbackContext = s.context || s,\n\t            globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n\t            deferred = jQuery.Deferred(),\n\t            completeDeferred = jQuery.Callbacks(\"once memory\"),\n\t            statusCode = s.statusCode || {},\n\t            requestHeaders = {},\n\t            requestHeadersNames = {},\n\t            state = 0,\n\t            strAbort = \"canceled\",\n\t            jqXHR = {\n\t              readyState: 0,\n\t              getResponseHeader: function(key) {\n\t                var match;\n\t                if (state === 2) {\n\t                  if (!responseHeaders) {\n\t                    responseHeaders = {};\n\t                    while ((match = rheaders.exec(responseHeadersString))) {\n\t                      responseHeaders[match[1].toLowerCase()] = match[2];\n\t                    }\n\t                  }\n\t                  match = responseHeaders[key.toLowerCase()];\n\t                }\n\t                return match == null ? null : match;\n\t              },\n\t              getAllResponseHeaders: function() {\n\t                return state === 2 ? responseHeadersString : null;\n\t              },\n\t              setRequestHeader: function(name, value) {\n\t                var lname = name.toLowerCase();\n\t                if (!state) {\n\t                  name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;\n\t                  requestHeaders[name] = value;\n\t                }\n\t                return this;\n\t              },\n\t              overrideMimeType: function(type) {\n\t                if (!state) {\n\t                  s.mimeType = type;\n\t                }\n\t                return this;\n\t              },\n\t              statusCode: function(map) {\n\t                var code;\n\t                if (map) {\n\t                  if (state < 2) {\n\t                    for (code in map) {\n\t                      statusCode[code] = [statusCode[code], map[code]];\n\t                    }\n\t                  } else {\n\t                    jqXHR.always(map[jqXHR.status]);\n\t                  }\n\t                }\n\t                return this;\n\t              },\n\t              abort: function(statusText) {\n\t                var finalText = statusText || strAbort;\n\t                if (transport) {\n\t                  transport.abort(finalText);\n\t                }\n\t                done(0, finalText);\n\t                return this;\n\t              }\n\t            };\n\t        deferred.promise(jqXHR).complete = completeDeferred.add;\n\t        jqXHR.success = jqXHR.done;\n\t        jqXHR.error = jqXHR.fail;\n\t        s.url = ((url || s.url || ajaxLocation) + \"\").replace(rhash, \"\").replace(rprotocol, ajaxLocParts[1] + \"//\");\n\t        s.type = options.method || options.type || s.method || s.type;\n\t        s.dataTypes = jQuery.trim(s.dataType || \"*\").toLowerCase().match(rnotwhite) || [\"\"];\n\t        if (s.crossDomain == null) {\n\t          parts = rurl.exec(s.url.toLowerCase());\n\t          s.crossDomain = !!(parts && (parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] || (parts[3] || (parts[1] === \"http:\" ? \"80\" : \"443\")) !== (ajaxLocParts[3] || (ajaxLocParts[1] === \"http:\" ? \"80\" : \"443\"))));\n\t        }\n\t        if (s.data && s.processData && typeof s.data !== \"string\") {\n\t          s.data = jQuery.param(s.data, s.traditional);\n\t        }\n\t        inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n\t        if (state === 2) {\n\t          return jqXHR;\n\t        }\n\t        fireGlobals = s.global;\n\t        if (fireGlobals && jQuery.active++ === 0) {\n\t          jQuery.event.trigger(\"ajaxStart\");\n\t        }\n\t        s.type = s.type.toUpperCase();\n\t        s.hasContent = !rnoContent.test(s.type);\n\t        cacheURL = s.url;\n\t        if (!s.hasContent) {\n\t          if (s.data) {\n\t            cacheURL = (s.url += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data);\n\t            delete s.data;\n\t          }\n\t          if (s.cache === false) {\n\t            s.url = rts.test(cacheURL) ? cacheURL.replace(rts, \"$1_=\" + nonce++) : cacheURL + (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce++;\n\t          }\n\t        }\n\t        if (s.ifModified) {\n\t          if (jQuery.lastModified[cacheURL]) {\n\t            jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n\t          }\n\t          if (jQuery.etag[cacheURL]) {\n\t            jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n\t          }\n\t        }\n\t        if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n\t          jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n\t        }\n\t        jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]);\n\t        for (i in s.headers) {\n\t          jqXHR.setRequestHeader(i, s.headers[i]);\n\t        }\n\t        if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {\n\t          return jqXHR.abort();\n\t        }\n\t        strAbort = \"abort\";\n\t        for (i in {\n\t          success: 1,\n\t          error: 1,\n\t          complete: 1\n\t        }) {\n\t          jqXHR[i](s[i]);\n\t        }\n\t        transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n\t        if (!transport) {\n\t          done(-1, \"No Transport\");\n\t        } else {\n\t          jqXHR.readyState = 1;\n\t          if (fireGlobals) {\n\t            globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n\t          }\n\t          if (s.async && s.timeout > 0) {\n\t            timeoutTimer = setTimeout(function() {\n\t              jqXHR.abort(\"timeout\");\n\t            }, s.timeout);\n\t          }\n\t          try {\n\t            state = 1;\n\t            transport.send(requestHeaders, done);\n\t          } catch (e) {\n\t            if (state < 2) {\n\t              done(-1, e);\n\t            } else {\n\t              throw e;\n\t            }\n\t          }\n\t        }\n\t        function done(status, nativeStatusText, responses, headers) {\n\t          var isSuccess,\n\t              success,\n\t              error,\n\t              response,\n\t              modified,\n\t              statusText = nativeStatusText;\n\t          if (state === 2) {\n\t            return;\n\t          }\n\t          state = 2;\n\t          if (timeoutTimer) {\n\t            clearTimeout(timeoutTimer);\n\t          }\n\t          transport = undefined;\n\t          responseHeadersString = headers || \"\";\n\t          jqXHR.readyState = status > 0 ? 4 : 0;\n\t          isSuccess = status >= 200 && status < 300 || status === 304;\n\t          if (responses) {\n\t            response = ajaxHandleResponses(s, jqXHR, responses);\n\t          }\n\t          response = ajaxConvert(s, response, jqXHR, isSuccess);\n\t          if (isSuccess) {\n\t            if (s.ifModified) {\n\t              modified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t              if (modified) {\n\t                jQuery.lastModified[cacheURL] = modified;\n\t              }\n\t              modified = jqXHR.getResponseHeader(\"etag\");\n\t              if (modified) {\n\t                jQuery.etag[cacheURL] = modified;\n\t              }\n\t            }\n\t            if (status === 204 || s.type === \"HEAD\") {\n\t              statusText = \"nocontent\";\n\t            } else if (status === 304) {\n\t              statusText = \"notmodified\";\n\t            } else {\n\t              statusText = response.state;\n\t              success = response.data;\n\t              error = response.error;\n\t              isSuccess = !error;\n\t            }\n\t          } else {\n\t            error = statusText;\n\t            if (status || !statusText) {\n\t              statusText = \"error\";\n\t              if (status < 0) {\n\t                status = 0;\n\t              }\n\t            }\n\t          }\n\t          jqXHR.status = status;\n\t          jqXHR.statusText = (nativeStatusText || statusText) + \"\";\n\t          if (isSuccess) {\n\t            deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n\t          } else {\n\t            deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n\t          }\n\t          jqXHR.statusCode(statusCode);\n\t          statusCode = undefined;\n\t          if (fireGlobals) {\n\t            globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n\t          }\n\t          completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\t          if (fireGlobals) {\n\t            globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]);\n\t            if (!(--jQuery.active)) {\n\t              jQuery.event.trigger(\"ajaxStop\");\n\t            }\n\t          }\n\t        }\n\t        return jqXHR;\n\t      },\n\t      getJSON: function(url, data, callback) {\n\t        return jQuery.get(url, data, callback, \"json\");\n\t      },\n\t      getScript: function(url, callback) {\n\t        return jQuery.get(url, undefined, callback, \"script\");\n\t      }\n\t    });\n\t    jQuery.each([\"get\", \"post\"], function(i, method) {\n\t      jQuery[method] = function(url, data, callback, type) {\n\t        if (jQuery.isFunction(data)) {\n\t          type = type || callback;\n\t          callback = data;\n\t          data = undefined;\n\t        }\n\t        return jQuery.ajax({\n\t          url: url,\n\t          type: method,\n\t          dataType: type,\n\t          data: data,\n\t          success: callback\n\t        });\n\t      };\n\t    });\n\t    jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function(i, type) {\n\t      jQuery.fn[type] = function(fn) {\n\t        return this.on(type, fn);\n\t      };\n\t    });\n\t    jQuery._evalUrl = function(url) {\n\t      return jQuery.ajax({\n\t        url: url,\n\t        type: \"GET\",\n\t        dataType: \"script\",\n\t        async: false,\n\t        global: false,\n\t        \"throws\": true\n\t      });\n\t    };\n\t    jQuery.fn.extend({\n\t      wrapAll: function(html) {\n\t        var wrap;\n\t        if (jQuery.isFunction(html)) {\n\t          return this.each(function(i) {\n\t            jQuery(this).wrapAll(html.call(this, i));\n\t          });\n\t        }\n\t        if (this[0]) {\n\t          wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\t          if (this[0].parentNode) {\n\t            wrap.insertBefore(this[0]);\n\t          }\n\t          wrap.map(function() {\n\t            var elem = this;\n\t            while (elem.firstElementChild) {\n\t              elem = elem.firstElementChild;\n\t            }\n\t            return elem;\n\t          }).append(this);\n\t        }\n\t        return this;\n\t      },\n\t      wrapInner: function(html) {\n\t        if (jQuery.isFunction(html)) {\n\t          return this.each(function(i) {\n\t            jQuery(this).wrapInner(html.call(this, i));\n\t          });\n\t        }\n\t        return this.each(function() {\n\t          var self = jQuery(this),\n\t              contents = self.contents();\n\t          if (contents.length) {\n\t            contents.wrapAll(html);\n\t          } else {\n\t            self.append(html);\n\t          }\n\t        });\n\t      },\n\t      wrap: function(html) {\n\t        var isFunction = jQuery.isFunction(html);\n\t        return this.each(function(i) {\n\t          jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n\t        });\n\t      },\n\t      unwrap: function() {\n\t        return this.parent().each(function() {\n\t          if (!jQuery.nodeName(this, \"body\")) {\n\t            jQuery(this).replaceWith(this.childNodes);\n\t          }\n\t        }).end();\n\t      }\n\t    });\n\t    jQuery.expr.filters.hidden = function(elem) {\n\t      return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n\t    };\n\t    jQuery.expr.filters.visible = function(elem) {\n\t      return !jQuery.expr.filters.hidden(elem);\n\t    };\n\t    var r20 = /%20/g,\n\t        rbracket = /\\[\\]$/,\n\t        rCRLF = /\\r?\\n/g,\n\t        rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\t        rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\t    function buildParams(prefix, obj, traditional, add) {\n\t      var name;\n\t      if (jQuery.isArray(obj)) {\n\t        jQuery.each(obj, function(i, v) {\n\t          if (traditional || rbracket.test(prefix)) {\n\t            add(prefix, v);\n\t          } else {\n\t            buildParams(prefix + \"[\" + (typeof v === \"object\" ? i : \"\") + \"]\", v, traditional, add);\n\t          }\n\t        });\n\t      } else if (!traditional && jQuery.type(obj) === \"object\") {\n\t        for (name in obj) {\n\t          buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n\t        }\n\t      } else {\n\t        add(prefix, obj);\n\t      }\n\t    }\n\t    jQuery.param = function(a, traditional) {\n\t      var prefix,\n\t          s = [],\n\t          add = function(key, value) {\n\t            value = jQuery.isFunction(value) ? value() : (value == null ? \"\" : value);\n\t            s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n\t          };\n\t      if (traditional === undefined) {\n\t        traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t      }\n\t      if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {\n\t        jQuery.each(a, function() {\n\t          add(this.name, this.value);\n\t        });\n\t      } else {\n\t        for (prefix in a) {\n\t          buildParams(prefix, a[prefix], traditional, add);\n\t        }\n\t      }\n\t      return s.join(\"&\").replace(r20, \"+\");\n\t    };\n\t    jQuery.fn.extend({\n\t      serialize: function() {\n\t        return jQuery.param(this.serializeArray());\n\t      },\n\t      serializeArray: function() {\n\t        return this.map(function() {\n\t          var elements = jQuery.prop(this, \"elements\");\n\t          return elements ? jQuery.makeArray(elements) : this;\n\t        }).filter(function() {\n\t          var type = this.type;\n\t          return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n\t        }).map(function(i, elem) {\n\t          var val = jQuery(this).val();\n\t          return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {\n\t            return {\n\t              name: elem.name,\n\t              value: val.replace(rCRLF, \"\\r\\n\")\n\t            };\n\t          }) : {\n\t            name: elem.name,\n\t            value: val.replace(rCRLF, \"\\r\\n\")\n\t          };\n\t        }).get();\n\t      }\n\t    });\n\t    jQuery.ajaxSettings.xhr = function() {\n\t      try {\n\t        return new XMLHttpRequest();\n\t      } catch (e) {}\n\t    };\n\t    var xhrId = 0,\n\t        xhrCallbacks = {},\n\t        xhrSuccessStatus = {\n\t          0: 200,\n\t          1223: 204\n\t        },\n\t        xhrSupported = jQuery.ajaxSettings.xhr();\n\t    if (window.ActiveXObject) {\n\t      jQuery(window).on(\"unload\", function() {\n\t        for (var key in xhrCallbacks) {\n\t          xhrCallbacks[key]();\n\t        }\n\t      });\n\t    }\n\t    support.cors = !!xhrSupported && (\"withCredentials\" in xhrSupported);\n\t    support.ajax = xhrSupported = !!xhrSupported;\n\t    jQuery.ajaxTransport(function(options) {\n\t      var callback;\n\t      if (support.cors || xhrSupported && !options.crossDomain) {\n\t        return {\n\t          send: function(headers, complete) {\n\t            var i,\n\t                xhr = options.xhr(),\n\t                id = ++xhrId;\n\t            xhr.open(options.type, options.url, options.async, options.username, options.password);\n\t            if (options.xhrFields) {\n\t              for (i in options.xhrFields) {\n\t                xhr[i] = options.xhrFields[i];\n\t              }\n\t            }\n\t            if (options.mimeType && xhr.overrideMimeType) {\n\t              xhr.overrideMimeType(options.mimeType);\n\t            }\n\t            if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n\t              headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t            }\n\t            for (i in headers) {\n\t              xhr.setRequestHeader(i, headers[i]);\n\t            }\n\t            callback = function(type) {\n\t              return function() {\n\t                if (callback) {\n\t                  delete xhrCallbacks[id];\n\t                  callback = xhr.onload = xhr.onerror = null;\n\t                  if (type === \"abort\") {\n\t                    xhr.abort();\n\t                  } else if (type === \"error\") {\n\t                    complete(xhr.status, xhr.statusText);\n\t                  } else {\n\t                    complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, typeof xhr.responseText === \"string\" ? {text: xhr.responseText} : undefined, xhr.getAllResponseHeaders());\n\t                  }\n\t                }\n\t              };\n\t            };\n\t            xhr.onload = callback();\n\t            xhr.onerror = callback(\"error\");\n\t            callback = xhrCallbacks[id] = callback(\"abort\");\n\t            try {\n\t              xhr.send(options.hasContent && options.data || null);\n\t            } catch (e) {\n\t              if (callback) {\n\t                throw e;\n\t              }\n\t            }\n\t          },\n\t          abort: function() {\n\t            if (callback) {\n\t              callback();\n\t            }\n\t          }\n\t        };\n\t      }\n\t    });\n\t    jQuery.ajaxSetup({\n\t      accepts: {script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},\n\t      contents: {script: /(?:java|ecma)script/},\n\t      converters: {\"text script\": function(text) {\n\t          jQuery.globalEval(text);\n\t          return text;\n\t        }}\n\t    });\n\t    jQuery.ajaxPrefilter(\"script\", function(s) {\n\t      if (s.cache === undefined) {\n\t        s.cache = false;\n\t      }\n\t      if (s.crossDomain) {\n\t        s.type = \"GET\";\n\t      }\n\t    });\n\t    jQuery.ajaxTransport(\"script\", function(s) {\n\t      if (s.crossDomain) {\n\t        var script,\n\t            callback;\n\t        return {\n\t          send: function(_, complete) {\n\t            script = jQuery(\"<script>\").prop({\n\t              async: true,\n\t              charset: s.scriptCharset,\n\t              src: s.url\n\t            }).on(\"load error\", callback = function(evt) {\n\t              script.remove();\n\t              callback = null;\n\t              if (evt) {\n\t                complete(evt.type === \"error\" ? 404 : 200, evt.type);\n\t              }\n\t            });\n\t            document.head.appendChild(script[0]);\n\t          },\n\t          abort: function() {\n\t            if (callback) {\n\t              callback();\n\t            }\n\t          }\n\t        };\n\t      }\n\t    });\n\t    var oldCallbacks = [],\n\t        rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\t    jQuery.ajaxSetup({\n\t      jsonp: \"callback\",\n\t      jsonpCallback: function() {\n\t        var callback = oldCallbacks.pop() || (jQuery.expando + \"_\" + (nonce++));\n\t        this[callback] = true;\n\t        return callback;\n\t      }\n\t    });\n\t    jQuery.ajaxPrefilter(\"json jsonp\", function(s, originalSettings, jqXHR) {\n\t      var callbackName,\n\t          overwritten,\n\t          responseContainer,\n\t          jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && !(s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test(s.data) && \"data\");\n\t      if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n\t        callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n\t        if (jsonProp) {\n\t          s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n\t        } else if (s.jsonp !== false) {\n\t          s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n\t        }\n\t        s.converters[\"script json\"] = function() {\n\t          if (!responseContainer) {\n\t            jQuery.error(callbackName + \" was not called\");\n\t          }\n\t          return responseContainer[0];\n\t        };\n\t        s.dataTypes[0] = \"json\";\n\t        overwritten = window[callbackName];\n\t        window[callbackName] = function() {\n\t          responseContainer = arguments;\n\t        };\n\t        jqXHR.always(function() {\n\t          window[callbackName] = overwritten;\n\t          if (s[callbackName]) {\n\t            s.jsonpCallback = originalSettings.jsonpCallback;\n\t            oldCallbacks.push(callbackName);\n\t          }\n\t          if (responseContainer && jQuery.isFunction(overwritten)) {\n\t            overwritten(responseContainer[0]);\n\t          }\n\t          responseContainer = overwritten = undefined;\n\t        });\n\t        return \"script\";\n\t      }\n\t    });\n\t    jQuery.parseHTML = function(data, context, keepScripts) {\n\t      if (!data || typeof data !== \"string\") {\n\t        return null;\n\t      }\n\t      if (typeof context === \"boolean\") {\n\t        keepScripts = context;\n\t        context = false;\n\t      }\n\t      context = context || document;\n\t      var parsed = rsingleTag.exec(data),\n\t          scripts = !keepScripts && [];\n\t      if (parsed) {\n\t        return [context.createElement(parsed[1])];\n\t      }\n\t      parsed = jQuery.buildFragment([data], context, scripts);\n\t      if (scripts && scripts.length) {\n\t        jQuery(scripts).remove();\n\t      }\n\t      return jQuery.merge([], parsed.childNodes);\n\t    };\n\t    var _load = jQuery.fn.load;\n\t    jQuery.fn.load = function(url, params, callback) {\n\t      if (typeof url !== \"string\" && _load) {\n\t        return _load.apply(this, arguments);\n\t      }\n\t      var selector,\n\t          type,\n\t          response,\n\t          self = this,\n\t          off = url.indexOf(\" \");\n\t      if (off >= 0) {\n\t        selector = jQuery.trim(url.slice(off));\n\t        url = url.slice(0, off);\n\t      }\n\t      if (jQuery.isFunction(params)) {\n\t        callback = params;\n\t        params = undefined;\n\t      } else if (params && typeof params === \"object\") {\n\t        type = \"POST\";\n\t      }\n\t      if (self.length > 0) {\n\t        jQuery.ajax({\n\t          url: url,\n\t          type: type,\n\t          dataType: \"html\",\n\t          data: params\n\t        }).done(function(responseText) {\n\t          response = arguments;\n\t          self.html(selector ? jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : responseText);\n\t        }).complete(callback && function(jqXHR, status) {\n\t          self.each(callback, response || [jqXHR.responseText, status, jqXHR]);\n\t        });\n\t      }\n\t      return this;\n\t    };\n\t    jQuery.expr.filters.animated = function(elem) {\n\t      return jQuery.grep(jQuery.timers, function(fn) {\n\t        return elem === fn.elem;\n\t      }).length;\n\t    };\n\t    var docElem = window.document.documentElement;\n\t    function getWindow(elem) {\n\t      return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;\n\t    }\n\t    jQuery.offset = {setOffset: function(elem, options, i) {\n\t        var curPosition,\n\t            curLeft,\n\t            curCSSTop,\n\t            curTop,\n\t            curOffset,\n\t            curCSSLeft,\n\t            calculatePosition,\n\t            position = jQuery.css(elem, \"position\"),\n\t            curElem = jQuery(elem),\n\t            props = {};\n\t        if (position === \"static\") {\n\t          elem.style.position = \"relative\";\n\t        }\n\t        curOffset = curElem.offset();\n\t        curCSSTop = jQuery.css(elem, \"top\");\n\t        curCSSLeft = jQuery.css(elem, \"left\");\n\t        calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1;\n\t        if (calculatePosition) {\n\t          curPosition = curElem.position();\n\t          curTop = curPosition.top;\n\t          curLeft = curPosition.left;\n\t        } else {\n\t          curTop = parseFloat(curCSSTop) || 0;\n\t          curLeft = parseFloat(curCSSLeft) || 0;\n\t        }\n\t        if (jQuery.isFunction(options)) {\n\t          options = options.call(elem, i, curOffset);\n\t        }\n\t        if (options.top != null) {\n\t          props.top = (options.top - curOffset.top) + curTop;\n\t        }\n\t        if (options.left != null) {\n\t          props.left = (options.left - curOffset.left) + curLeft;\n\t        }\n\t        if (\"using\" in options) {\n\t          options.using.call(elem, props);\n\t        } else {\n\t          curElem.css(props);\n\t        }\n\t      }};\n\t    jQuery.fn.extend({\n\t      offset: function(options) {\n\t        if (arguments.length) {\n\t          return options === undefined ? this : this.each(function(i) {\n\t            jQuery.offset.setOffset(this, options, i);\n\t          });\n\t        }\n\t        var docElem,\n\t            win,\n\t            elem = this[0],\n\t            box = {\n\t              top: 0,\n\t              left: 0\n\t            },\n\t            doc = elem && elem.ownerDocument;\n\t        if (!doc) {\n\t          return;\n\t        }\n\t        docElem = doc.documentElement;\n\t        if (!jQuery.contains(docElem, elem)) {\n\t          return box;\n\t        }\n\t        if (typeof elem.getBoundingClientRect !== strundefined) {\n\t          box = elem.getBoundingClientRect();\n\t        }\n\t        win = getWindow(doc);\n\t        return {\n\t          top: box.top + win.pageYOffset - docElem.clientTop,\n\t          left: box.left + win.pageXOffset - docElem.clientLeft\n\t        };\n\t      },\n\t      position: function() {\n\t        if (!this[0]) {\n\t          return;\n\t        }\n\t        var offsetParent,\n\t            offset,\n\t            elem = this[0],\n\t            parentOffset = {\n\t              top: 0,\n\t              left: 0\n\t            };\n\t        if (jQuery.css(elem, \"position\") === \"fixed\") {\n\t          offset = elem.getBoundingClientRect();\n\t        } else {\n\t          offsetParent = this.offsetParent();\n\t          offset = this.offset();\n\t          if (!jQuery.nodeName(offsetParent[0], \"html\")) {\n\t            parentOffset = offsetParent.offset();\n\t          }\n\t          parentOffset.top += jQuery.css(offsetParent[0], \"borderTopWidth\", true);\n\t          parentOffset.left += jQuery.css(offsetParent[0], \"borderLeftWidth\", true);\n\t        }\n\t        return {\n\t          top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n\t          left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n\t        };\n\t      },\n\t      offsetParent: function() {\n\t        return this.map(function() {\n\t          var offsetParent = this.offsetParent || docElem;\n\t          while (offsetParent && (!jQuery.nodeName(offsetParent, \"html\") && jQuery.css(offsetParent, \"position\") === \"static\")) {\n\t            offsetParent = offsetParent.offsetParent;\n\t          }\n\t          return offsetParent || docElem;\n\t        });\n\t      }\n\t    });\n\t    jQuery.each({\n\t      scrollLeft: \"pageXOffset\",\n\t      scrollTop: \"pageYOffset\"\n\t    }, function(method, prop) {\n\t      var top = \"pageYOffset\" === prop;\n\t      jQuery.fn[method] = function(val) {\n\t        return access(this, function(elem, method, val) {\n\t          var win = getWindow(elem);\n\t          if (val === undefined) {\n\t            return win ? win[prop] : elem[method];\n\t          }\n\t          if (win) {\n\t            win.scrollTo(!top ? val : window.pageXOffset, top ? val : window.pageYOffset);\n\t          } else {\n\t            elem[method] = val;\n\t          }\n\t        }, method, val, arguments.length, null);\n\t      };\n\t    });\n\t    jQuery.each([\"top\", \"left\"], function(i, prop) {\n\t      jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {\n\t        if (computed) {\n\t          computed = curCSS(elem, prop);\n\t          return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n\t        }\n\t      });\n\t    });\n\t    jQuery.each({\n\t      Height: \"height\",\n\t      Width: \"width\"\n\t    }, function(name, type) {\n\t      jQuery.each({\n\t        padding: \"inner\" + name,\n\t        content: type,\n\t        \"\": \"outer\" + name\n\t      }, function(defaultExtra, funcName) {\n\t        jQuery.fn[funcName] = function(margin, value) {\n\t          var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n\t              extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n\t          return access(this, function(elem, type, value) {\n\t            var doc;\n\t            if (jQuery.isWindow(elem)) {\n\t              return elem.document.documentElement[\"client\" + name];\n\t            }\n\t            if (elem.nodeType === 9) {\n\t              doc = elem.documentElement;\n\t              return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n\t            }\n\t            return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);\n\t          }, type, chainable ? margin : undefined, chainable, null);\n\t        };\n\t      });\n\t    });\n\t    jQuery.fn.size = function() {\n\t      return this.length;\n\t    };\n\t    jQuery.fn.andSelf = jQuery.fn.addBack;\n\t    if (typeof define === \"function\" && define.amd) {\n\t      define(\"jquery\", [], function() {\n\t        return jQuery;\n\t      });\n\t    }\n\t    var _jQuery = window.jQuery,\n\t        _$ = window.$;\n\t    jQuery.noConflict = function(deep) {\n\t      if (window.$ === jQuery) {\n\t        window.$ = _$;\n\t      }\n\t      if (deep && window.jQuery === jQuery) {\n\t        window.jQuery = _jQuery;\n\t      }\n\t      return jQuery;\n\t    };\n\t    if (typeof noGlobal === strundefined) {\n\t      window.jQuery = window.$ = jQuery;\n\t    }\n\t    return jQuery;\n\t  }));\n\t  return {};\n\t}.call(typeof global !== 'undefined' ? global : this);\n\t\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/node_lists\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(7), __webpack_require__(31)], __WEBPACK_AMD_DEFINE_RESULT__ = (function(can) {\n\t  var canExpando = true;\n\t  try {\n\t    document.createTextNode('')._ = 0;\n\t  } catch (ex) {\n\t    canExpando = false;\n\t  }\n\t  var nodeMap = {},\n\t      textNodeMap = {},\n\t      expando = 'ejs_' + Math.random(),\n\t      _id = 0,\n\t      id = function(node) {\n\t        if (canExpando || node.nodeType !== 3) {\n\t          if (node[expando]) {\n\t            return node[expando];\n\t          } else {\n\t            ++_id;\n\t            return node[expando] = (node.nodeName ? 'element_' : 'obj_') + _id;\n\t          }\n\t        } else {\n\t          for (var textNodeID in textNodeMap) {\n\t            if (textNodeMap[textNodeID] === node) {\n\t              return textNodeID;\n\t            }\n\t          }\n\t          ++_id;\n\t          textNodeMap['text_' + _id] = node;\n\t          return 'text_' + _id;\n\t        }\n\t      },\n\t      splice = [].splice,\n\t      push = [].push,\n\t      itemsInChildListTree = function(list) {\n\t        var count = 0;\n\t        for (var i = 0,\n\t            len = list.length; i < len; i++) {\n\t          var item = list[i];\n\t          if (item.nodeType) {\n\t            count++;\n\t          } else {\n\t            count += itemsInChildListTree(item);\n\t          }\n\t        }\n\t        return count;\n\t      };\n\t  var nodeLists = {\n\t    id: id,\n\t    update: function(nodeList, newNodes) {\n\t      var oldNodes = nodeLists.unregisterChildren(nodeList);\n\t      newNodes = can.makeArray(newNodes);\n\t      var oldListLength = nodeList.length;\n\t      splice.apply(nodeList, [0, oldListLength].concat(newNodes));\n\t      nodeLists.nestList(nodeList);\n\t      return oldNodes;\n\t    },\n\t    nestList: function(list) {\n\t      var index = 0;\n\t      while (index < list.length) {\n\t        var node = list[index],\n\t            childNodeList = nodeMap[id(node)];\n\t        if (childNodeList) {\n\t          if (childNodeList !== list) {\n\t            list.splice(index, itemsInChildListTree(childNodeList), childNodeList);\n\t          }\n\t        } else {\n\t          nodeMap[id(node)] = list;\n\t        }\n\t        index++;\n\t      }\n\t    },\n\t    last: function(nodeList) {\n\t      var last = nodeList[nodeList.length - 1];\n\t      if (last.nodeType) {\n\t        return last;\n\t      } else {\n\t        return nodeLists.last(last);\n\t      }\n\t    },\n\t    first: function(nodeList) {\n\t      var first = nodeList[0];\n\t      if (first.nodeType) {\n\t        return first;\n\t      } else {\n\t        return nodeLists.first(first);\n\t      }\n\t    },\n\t    register: function(nodeList, unregistered, parent) {\n\t      nodeList.unregistered = unregistered;\n\t      nodeLists.nestList(nodeList);\n\t      return nodeList;\n\t    },\n\t    unregisterChildren: function(nodeList) {\n\t      var nodes = [];\n\t      can.each(nodeList, function(node) {\n\t        if (node.nodeType) {\n\t          delete nodeMap[id(node)];\n\t          nodes.push(node);\n\t        } else {\n\t          push.apply(nodes, nodeLists.unregister(node));\n\t        }\n\t      });\n\t      return nodes;\n\t    },\n\t    unregister: function(nodeList) {\n\t      var nodes = nodeLists.unregisterChildren(nodeList);\n\t      if (nodeList.unregistered) {\n\t        var unregisteredCallback = nodeList.unregistered;\n\t        delete nodeList.unregistered;\n\t        unregisteredCallback();\n\t      }\n\t      return nodes;\n\t    },\n\t    nodeMap: nodeMap\n\t  };\n\t  can.view.nodeLists = nodeLists;\n\t  return nodeLists;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\"use strict\";\n\tvar __moduleName = \"bower_components/canjs/amd/can/view/parser\";\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(21)], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t  function makeMap(str) {\n\t    var obj = {},\n\t        items = str.split(\",\");\n\t    for (var i = 0; i < items.length; i++) {\n\t      obj[items[i]] = true;\n\t    }\n\t    return obj;\n\t  }\n\t  var alphaNumericHU = \"-A-Za-z0-9_\",\n\t      attributeNames = \"[a-zA-Z_:][\" + alphaNumericHU + \":.]+\",\n\t      spaceEQspace = \"\\\\s*=\\\\s*\",\n\t      dblQuote2dblQuote = \"\\\"((?:\\\\\\\\.|[^\\\"])*)\\\"\",\n\t      quote2quote = \"'((?:\\\\\\\\.|[^'])*)'\",\n\t      attributeEqAndValue = \"(?:\" + spaceEQspace + \"(?:\" + \"(?:\\\"[^\\\"]*\\\")|(?:'[^']*')|[^>\\\\s]+))?\",\n\t      matchStash = \"\\\\{\\\\{[^\\\\}]*\\\\}\\\\}\\\\}?\",\n\t      stash = \"\\\\{\\\\{([^\\\\}]*)\\\\}\\\\}\\\\}?\",\n\t      startTag = new RegExp(\"^<([\" + alphaNumericHU + \"]+)\" + \"(\" + \"(?:\\\\s*\" + \"(?:(?:\" + \"(?:\" + attributeNames + \")?\" + attributeEqAndValue + \")|\" + \"(?:\" + matchStash + \")+)\" + \")*\" + \")\\\\s*(\\\\/?)>\"),\n\t      endTag = new RegExp(\"^<\\\\/([\" + alphaNumericHU + \"]+)[^>]*>\"),\n\t      attr = new RegExp(\"(?:\" + \"(?:(\" + attributeNames + \")|\" + stash + \")\" + \"(?:\" + spaceEQspace + \"(?:\" + \"(?:\" + dblQuote2dblQuote + \")|(?:\" + quote2quote + \")|([^>\\\\s]+)\" + \")\" + \")?)\", \"g\"),\n\t      mustache = new RegExp(stash, \"g\"),\n\t      txtBreak = /<|\\{\\{/;\n\t  var empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\");\n\t  var block = makeMap(\"address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video\");\n\t  var inline = makeMap(\"a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var\");\n\t  var closeSelf = makeMap(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr\");\n\t  var fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\");\n\t  var special = makeMap(\"script,style\");\n\t  var HTMLParser = function(html, handler) {\n\t    function parseStartTag(tag, tagName, rest, unary) {\n\t      tagName = tagName.toLowerCase();\n\t      if (block[tagName]) {\n\t        while (stack.last() && inline[stack.last()]) {\n\t          parseEndTag(\"\", stack.last());\n\t        }\n\t      }\n\t      if (closeSelf[tagName] && stack.last() === tagName) {\n\t        parseEndTag(\"\", tagName);\n\t      }\n\t      unary = empty[tagName] || !!unary;\n\t      handler.start(tagName, unary);\n\t      if (!unary) {\n\t        stack.push(tagName);\n\t      }\n\t      HTMLParser.parseAttrs(rest, handler);\n\t      handler.end(tagName, unary);\n\t    }\n\t    function parseEndTag(tag, tagName) {\n\t      var pos;\n\t      if (!tagName) {\n\t        pos = 0;\n\t      } else {\n\t        for (pos = stack.length - 1; pos >= 0; pos--) {\n\t          if (stack[pos] === tagName) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      if (pos >= 0) {\n\t        for (var i = stack.length - 1; i >= pos; i--) {\n\t          if (handler.close) {\n\t            handler.close(stack[i]);\n\t          }\n\t        }\n\t        stack.length = pos;\n\t      }\n\t    }\n\t    function parseMustache(mustache, inside) {\n\t      if (handler.special) {\n\t        handler.special(inside);\n\t      }\n\t    }\n\t    var index,\n\t        chars,\n\t        match,\n\t        stack = [],\n\t        last = html;\n\t    stack.last = function() {\n\t      return this[this.length - 1];\n\t    };\n\t    while (html) {\n\t      chars = true;\n\t      if (!stack.last() || !special[stack.last()]) {\n\t        if (html.indexOf(\"<!--\") === 0) {\n\t          index = html.indexOf(\"-->\");\n\t          if (index >= 0) {\n\t            if (handler.comment) {\n\t              handler.comment(html.substring(4, index));\n\t            }\n\t            html = html.substring(index + 3);\n\t            chars = false;\n\t          }\n\t        } else if (html.indexOf(\"</\") === 0) {\n\t          match = html.match(endTag);\n\t          if (match) {\n\t            html = html.substring(match[0].length);\n\t            match[0].replace(endTag, parseEndTag);\n\t            chars = false;\n\t          }\n\t        } else if (html.indexOf(\"<\") === 0) {\n\t          match = html.match(startTag);\n\t          if (match) {\n\t            html = html.substring(match[0].length);\n\t            match[0].replace(startTag, parseStartTag);\n\t            chars = false;\n\t          }\n\t        } else if (html.indexOf(\"{{\") === 0) {\n\t          match = html.match(mustache);\n\t          if (match) {\n\t            html = html.substring(match[0].length);\n\t            match[0].replace(mustache, parseMustache);\n\t          }\n\t        }\n\t        if (chars) {\n\t          index = html.search(txtBreak);\n\t          var text = index < 0 ? html : html.substring(0, index);\n\t          html = index < 0 ? \"\" : html.substring(index);\n\t          if (handler.chars && text) {\n\t            handler.chars(text);\n\t          }\n\t        }\n\t      } else {\n\t        html = html.replace(new RegExp(\"([\\\\s\\\\S]*?)<\\/\" + stack.last() + \"[^>]*>\"), function(all, text) {\n\t          text = text.replace(/<!--([\\s\\S]*?)-->|<!\\[CDATA\\[([\\s\\S]*?)]]>/g, \"$1$2\");\n\t          if (handler.chars) {\n\t            handler.chars(text);\n\t          }\n\t          return \"\";\n\t        });\n\t        parseEndTag(\"\", stack.last());\n\t      }\n\t      if (html === last) {\n\t        throw \"Parse Error: \" + html;\n\t      }\n\t      last = html;\n\t    }\n\t    parseEndTag();\n\t    handler.done();\n\t  };\n\t  HTMLParser.parseAttrs = function(rest, handler) {\n\t    (rest != null ? rest : \"\").replace(attr, function(text, name, special, dblQuote, singleQuote, val) {\n\t      if (special) {\n\t        handler.special(special);\n\t      }\n\t      if (name || dblQuote || singleQuote || val) {\n\t        var value = arguments[3] ? arguments[3] : arguments[4] ? arguments[4] : arguments[5] ? arguments[5] : fillAttrs[name.toLowerCase()] ? name : \"\";\n\t        handler.attrStart(name || \"\");\n\t        var last = mustache.lastIndex = 0,\n\t            res = mustache.exec(value),\n\t            chars;\n\t        while (res) {\n\t          chars = value.substring(last, mustache.lastIndex - res[0].length);\n\t          if (chars.length) {\n\t            handler.attrValue(chars);\n\t          }\n\t          handler.special(res[1]);\n\t          last = mustache.lastIndex;\n\t          res = mustache.exec(value);\n\t        }\n\t        chars = value.substr(last, value.length);\n\t        if (chars) {\n\t          handler.attrValue(chars);\n\t        }\n\t        handler.attrEnd(name || \"\");\n\t      }\n\t    });\n\t  };\n\t  can.view.parser = HTMLParser;\n\t  return HTMLParser;\n\t}.apply(null, __WEBPACK_AMD_DEFINE_ARRAY__)), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\n\n/***/ }\n/******/ ])\n})\n","\n// The module cache\nvar installedModules = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(installedModules[moduleId])\n\t\treturn installedModules[moduleId].exports;\n\t\n\t// Create a new module (and put it into the cache)\n\tvar module = installedModules[moduleId] = {\n\t\texports: {},\n\t\tid: moduleId,\n\t\tloaded: false\n\t};\n\t\n\t// Execute the module function\n\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\t\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = modules;\n\n// expose the module cache\n__webpack_require__.c = installedModules;\n\n// __webpack_public_path__\n__webpack_require__.p = \"\";\n\n\n// Load entry module and return exports\nreturn __webpack_require__(0);","import \"./can\";\nimport \"./bacon\";\n","\"use strict\";\nvar __moduleName = \"src/index\";\nrequire(\"./can\");\nrequire(\"./bacon\");\n\n","module bacon from \"bacon\";\nmodule can from \"can\";\n\nvar oldBind = can.bind;\n/**\n * @function can.bind\n *\n * Extends `can.bind()` such that if it's called with only one argument (the\n * event name), or without any arguments, a `Bacon.EventStream` object is\n * created, instead of binding a callback to the event.\n *\n * The actual event values sent into the `EventStream` will vary depending on\n * the observed value.\n *\n * See http://canjs.com/docs/can.bind.html for documentation on the default\n * behavior.\n *\n * @param {Any} this - The object to bind events on. If this object is a\n *                     `Bacon.Observable`, `can.bind` is a no-op, returning\n *                     `this` immediately.\n * @param {String} [event=\"change\"] - Name of event to hook up to\n * @param {Function} [callback] - Callback to invoke when event fires. If this\n *                                parameter is provided, the method will revert\n *                                to its default (non-`can.bacon`) behavior.\n *\n * @returns EventStream | Any\n *\n * @example\n * can.bind.call(new can.Map(), \"change\").map(\".value\").log();\n *\n */\ncan.bind = function(ev, cb) {\n  if (this instanceof bacon.Observable) {\n    return this;\n  } else if (cb) {\n    return oldBind.apply(this, arguments);\n  } else {\n    return toBaconObservable(this, ev);\n  }\n};\n\nvar oldDelegate = can.delegate;\n/**\n * @function can.delegate\n *\n * Extends `can.delegate()` such that if it's called with only one or two\n * arguments (the selector, and the event name), a `Bacon.EventStream` object is\n * created, instead of binding a callback to the event.\n *\n * The actual event values sent into the `EventStream` will vary depending on\n * the observed value.\n *\n * See http://canjs.com/docs/can.delegate.html for documentation on the default\n * behavior.\n *\n * @param {Any} this - The object to bind events on. If this object is a\n *                     `Bacon.Observable`, `can.bind` is a no-op, returning\n *                     `this` immediately.\n * @param {Any} selector - The selector to delegate to.\n * @param {String} [event=\"change\"] - Name of event to hook up to.\n * @param {Function} [callback] - Callback to invoke when event fires. If this\n *                                parameter is provided, the method will revert\n *                                to its default (non-`can.bacon`) behavior.\n *\n * @returns EventStream | Any\n *\n * @example\n * can.delegate.call(window, \"a\", \"click\").doAction(\".preventDefault\").log();\n *\n */\ncan.delegate = function(selector, ev, cb) {\n  if (this instanceof bacon.Observable) {\n    return this;\n  } else if (cb) {\n    return oldDelegate.apply(this, arguments);\n  } else {\n    return toBaconObservable(this, ev, selector);\n  }\n};\n\n/**\n * @function can.compute#bind\n *\n * Replaces the default CanJS behavior of the `can.compute#bind()` method with\n * one that returns an `EventStream` of new `can.compute` values, if no\n * `callback` is provided to the `.bind()` call. If the `callback` is present,\n * this method reverts to the standard behavior of binding an event listener\n * directly.\n *\n * @param {String} [event=\"change\"] - Name of event to hook up to\n * @param {Function} [callback] - Callback to invoke when event fires. If this\n *                                parameter is provided, the method will revert\n *                                to its default (non-`can.bacon`) behavior.\n *\n * @returns EventStream | Computed\n *\n * @example\n * var compute = can.compute(1);\n * compute.bind().log(\"compute changed\");\n * compute(2);\n * // compute changed 2\n */\n\n\nvar oldBindAndSetup = can.bindAndSetup;\n// Mostly internal, but used to replace the `.bind()` behavior for all\n// Observables in Can.\ncan.bindAndSetup = function(ev, cb) {\n  return cb ?\n    oldBindAndSetup.apply(this, arguments) :\n    toBaconObservable(this, ev);\n};\n\nvar oldControlOn = can.Control.prototype.on;\n/**\n * @function can.Control#on\n *\n * Enhances `can.Control#on` (and by extension, `can.Component#events#on`) so it\n * can be used to listen to event streams in a memory-safe way, according to the\n * control/component's lifecycle. Also allows returning event streams from\n * regular event bindings.\n *\n * See http://canjs.com/docs/can.Control.prototype.on.html\n *\n *\n * @param {Any} [context=this.element] - The object to listen for events on. If\n *                                       this object is a `Bacon.Observable`,\n *                                       this method will immediately return a\n *                                       stream that ends automatically if the\n *                                       `this` (the Control or Component) is\n *                                       destroyed.\n * @param {String} [selector] - If provided, the selector to delegate to.\n * @param {String} [event=\"change\"] - The name of the event to listen to.\n * @param {Function} [callback] - Callback to invoke when event fires. If this\n *                                parameter is provided, the method will revert\n *                                to its default (non-`can.bacon`) behavior.\n *\n * @returns EventStream | Observable | Number\n *\n * @example\n * ...\n * events: {\n *   inserted: function() {\n *     this.on(GlobalStreams.specialEvent).log(\"special event:\");\n *   }\n * }\n * ...\n * $(\"mycomponent\").remove() // logs 'special event: \\<end\\>'\n * GlobalStreams.specialEvent.push(\"whatever\"); // Nothing happens\n *\n * // The following are also equivalent:\n * this.on(scope, \"change\").log(\"Scope changed\")\n * this.on(scope).log(\"Scope changed\")\n *\n */\ncan.Control.prototype.on = function(ctx, selector, eventName, func) {\n  if (!ctx) {\n    return oldControlOn.apply(this, arguments);\n  }\n  if (ctx instanceof bacon.Observable) {\n    return ctx.takeUntil(can.bind.call(this, \"destroyed\"));\n  }\n  if (typeof ctx === \"string\") {\n    func = eventName;\n    eventName = selector;\n    selector = ctx;\n    ctx = this.element;\n  }\n  if (func == null) {\n    func = eventName;\n    eventName = selector;\n    selector = null;\n  }\n  if (func == null) {\n    return toBaconObservable(ctx, eventName, selector)\n      .takeUntil(can.bind.call(this, \"destroyed\"));\n  } else {\n    return oldControlOn.apply(this, arguments);\n  }\n};\n\n/**\n * @function can.Map#bind\n *\n * Replaces the default CanJS behavior of the `can.Map#bind()` method with one\n * that returns an `EventStream` of event objects or values if the `callback`\n * argument is not provided.\n *\n * The values in `EventStream` vary depending on the event being listened to.\n *\n * For named property events, the new value of the property is returned, as-is.\n *\n * For `\"change\"` events, `MapChangeEvent` objects are returned, with the\n * following properties:\n *\n * {\n *   event: Object // The CanJS event object.\n *   which: String // They attr/key affected by the event,\n *   how: \"add\"|\"remove\"|\"set\" // The type of operation,\n *   value: Any // For \"add\"/\"set\" events, the new value. For \"remove\" events,\n *                 the removed value.\n * }\n *\n * Note that this object fits the API required for `Bacon.toCanMap`, so the\n * `EventStream` returned by this function can be piped into a different\n * `can.Map` to partially or fully synchronise both maps.\n *\n * Additionally, The events from that `Map` changing can then be piped back into\n * the original `Map` without causing circularity issues, achieving two-way\n * binding between both objects. See example.\n *\n * @param {String} [event=\"change\"] - Name of event to hook up to\n * @param {Function} [callback] - Callback to invoke when event fires. If this\n *                                parameter is provided, the method will revert\n *                                to its default (non-`can.bacon`) behavior.\n *\n * @returns EventStream | `this`\n *\n * @example\n * // Binding\n * var map = new can.Map({x:1});\n * map.bind().log(\"map changed:\");\n * map.bind(\"x\").log(\"x property changed:\");\n * map.attr(\"x\", 2);\n * // map changed: {event: Object, which: \"x\", \"how\": \"set\", value: 2}\n * // x property changed: 2\n *\n * // Piping into a different Map\n * var map1 = new can.Map();\n * var map2 = map1.bind().toCanMap(new can.Map());\n * map1.bind().log(\"map1 changed:\");\n * map2.bind().log(\"map2 changed:\");\n *\n * map1.attr(\"x\", 1);\n * // map2 changed: {event: Object, which: \"x\", \"how\": \"add\", value:1}\n * // map1 changed: {event: Object, which: \"x\", \"how\": \"add\", value:1}\n * map2.attr(\"x\", 2);\n * // map1 changed: {event: Object, which: \"x\", \"how\": \"set\", value:2}\n * // map2 changed: {event: Object, which: \"x\", \"how\": \"set\", value:2}\n * console.log(map1.attr(), map2.attr());\n * // {x:2}, {x:2}\n */\ncan.Map.prototype.bind = can.bindAndSetup;\ncan.Map.prototype.getEventValueForBacon = function(args) {\n  switch (args[0] && args[0].type) {\n  case \"change\":\n    return new MapChangeEvent(args);\n  default:\n    var target = args[0].target;\n    if (target._data && target._data.hasOwnProperty(args[0].type)) {\n      // We found a named property change event, not a generic custom event\n      // (maybe, probably)\n      return args[1];\n    } else {\n      // If we don't know what the event is, return the arguments as-is\n      return args;\n    }\n  }\n};\n\nfunction MapChangeEvent(args) {\n  this.event = args[0];\n  this.which = args[1];\n  this.how = args[2];\n  this.value = args[3];\n  // This isn't documented because I want to pretend it doesn't exist :)\n  this.oldValue = args[4];\n}\n\n/**\n * @function can.List#bind\n *\n * Replaces the default CanJS behavior of the `can.List#bind()` method with one\n * that returns an `EventStream` of event objects or values if the `callback`\n * argument is not provided.\n *\n * The values in `EventStream` vary depending on the event being listened to.\n *\n * For named property events, the new value of the property is returned,\n * as-is. Both numerical properties (indices) and regular Map attrs can be\n * bound to.\n *\n * For the `\"length\"` events, the new length of the array is returned as-is.\n *\n * The rest of the events, namely `\"change\"`, `\"add\"`, `\"remove\"`, and `\"set\"`,\n * either `ListChangeEvent` or `MapChangeEvent` objects are returned from the\n * stream, depending on whether the modification involves a numerical key.\n\n * For events on numerical properties, `ListChangeEvent` objects are returned,\n * with the following properties:\n *\n * {\n *   event: Object // The CanJS event object.\n *   index: Integer // They initial index of the change.\n *   how: \"add\"|\"remove\"|\"set\" // The type of operation,\n *   value: Array | Any // For \"add\" events, an array of added items.\n *                         For \"remove\" events, an array of removed items.\n *                         For \"set\", the single new value.\n * }\n *\n * For events on non-numerical properties, `MapChangeEvent` objects are\n * returned, using the same structure as `can.Map#bind()`:\n *\n * {\n *   event: Object // The CanJS event object.\n *   which: String // They attr/key affected by the event,\n *   how: \"add\"|\"remove\"|\"set\" // The type of operation,\n *   value: Any // For \"add\"/\"set\" events, the new value. For \"remove\" events,\n *                 the removed value.\n * }\n *\n * Note that these objects conform to the API required for `Bacon.toCanList` and\n * `Bacon.toCanMap` respectively, so the `EventStream` returned by this function\n * can be piped into a different `can.List` or `can.Map` to synchronise both.\n *\n * Unlike the stream returned by `can.Map#bind()`, this one cannot be used for\n * two-way binding out of the box, since `add` events will bounce back and forth\n * infinitely and cause an overflow. One-way binding works fine, though, and can\n * easily handle lists of different lengths.\n *\n * @param {String} [event=\"change\"] - Name of event to hook up to\n * @param {Function} [callback] - Callback to invoke when event fires. If this\n *                                parameter is provided, the method will revert\n *                                to its default (non-`can.bacon`) behavior.\n *\n * @returns EventStream | `this`\n *\n */\ncan.List.prototype.getEventValueForBacon = function(args) {\n  switch (args[0] && args[0].type) {\n  case \"change\":\n  case \"set\":\n  case \"add\":\n  case \"remove\":\n    return new ListChangeEvent(args);\n  case \"length\":\n    return args[1];\n  default:\n    // This is different from the can.Map version because can.Lists don't have\n    // the _data property.\n    var target = args[0].target;\n    var _type = args[0].type;\n    if (target.hasOwnProperty(args[0].type)) {\n      // We found a named property change event, not a generic custom event\n      // (maybe, probably).\n      // TODO - change the semantics here to check for integers. Floats should\n      // be treated as string keys.\n      return isNaN(_type) ? args[1] : args[1][0];\n    } else {\n      // If we don't know what the event is, return the arguments as-is\n      return args;\n    }\n  }\n};\n\nfunction ListChangeEvent(args) {\n  this.event = args[0];\n  switch (this.event.type) {\n  case \"change\":\n    // NOTE: This gets a string as the index for all change events.\n    this.index = isNaN(args[1])?args[1]:+args[1];\n    this.how = args[2];\n    // We take the liberty of changing these semantics for remove events. Aside\n    // from it being generally more convenient for filtering, this means that,\n    // aside from `this.oldValue` being weird, binding to \"change\" and filtering\n    // on `how` will give exactly equivalent results to just binding directly on\n    // the specific event type.\n    //\n    // NOTE: when you `can.List#pop()` on an empty array, you get\n    // `[undefined]` as the value, whereas splicing an empty array gets you\n    // `[]` as the value.\n    // See https://github.com/bitovi/canjs/issues/998\n    this.value = this.how === \"remove\" ? args[4] : args[3];\n    // This is only ever of interest for set events (we never spit out\n    // ListChangeEvent for length events)\n    this.oldValue = args[4];\n    break;\n  case \"set\":\n  case \"add\":\n  case \"remove\":\n    this.index = args[2];\n    this.how = this.event.type;\n    // NOTE: The docs say that this can be either one, or many things. I can\n    // only seem to get arrays out of this event, though.\n    this.value = args[1];\n    // NOTE: These events do not include oldValue.\n    this.oldValue = null;\n    break;\n  default:\n    throw new Error(\"Unexpected can.List event: \"+this.event.type);\n  }\n}\n\nfunction toBaconObservable(ctx, ev, selector) {\n  ev = ev == null ? \"change\" : ev;\n  var stream = bacon.fromBinder(function(sink) {\n    function cb() {\n      sink(new bacon.Next(chooseEventData(ctx, arguments)));\n    }\n    selector ?\n      can.delegate.call(ctx, selector, ev, cb) :\n      can.bind.call(ctx, ev, cb);\n    return ()=>selector ?\n      can.undelegate.call(ctx, selector, ev, cb) :\n      can.unbind.call(ctx, ev, cb);\n  });\n  if (ctx.isComputed) {\n    // Computes are a special case in the sense that it's fairly involved to set\n    // up a property, and we almost always want to bind computes as properties\n    // -- so in this specific case we return a property instead of a stream, to\n    // help sanity.\n    return stream.toProperty(ctx());\n  } else {\n    return stream;\n  }\n};\n\nfunction chooseEventData(ctx, eventArgs, evName) {\n  if (ctx.isComputed) {\n    return eventArgs[1];\n  } else if (ctx.getEventValueForBacon) {\n    return ctx.getEventValueForBacon(eventArgs, evName);\n  } else {\n    return eventArgs[0];\n  }\n}\n","\"use strict\";\nvar __moduleName = \"src/can\";\nvar bacon = require(\"bacon\");\nvar can = require(\"can\");\nvar oldBind = can.bind;\ncan.bind = function(ev, cb) {\n  if (this instanceof bacon.Observable) {\n    return this;\n  } else if (cb) {\n    return oldBind.apply(this, arguments);\n  } else {\n    return toBaconObservable(this, ev);\n  }\n};\nvar oldDelegate = can.delegate;\ncan.delegate = function(selector, ev, cb) {\n  if (this instanceof bacon.Observable) {\n    return this;\n  } else if (cb) {\n    return oldDelegate.apply(this, arguments);\n  } else {\n    return toBaconObservable(this, ev, selector);\n  }\n};\nvar oldBindAndSetup = can.bindAndSetup;\ncan.bindAndSetup = function(ev, cb) {\n  return cb ? oldBindAndSetup.apply(this, arguments) : toBaconObservable(this, ev);\n};\nvar oldControlOn = can.Control.prototype.on;\ncan.Control.prototype.on = function(ctx, selector, eventName, func) {\n  if (!ctx) {\n    return oldControlOn.apply(this, arguments);\n  }\n  if (ctx instanceof bacon.Observable) {\n    return ctx.takeUntil(can.bind.call(this, \"destroyed\"));\n  }\n  if (typeof ctx === \"string\") {\n    func = eventName;\n    eventName = selector;\n    selector = ctx;\n    ctx = this.element;\n  }\n  if (func == null) {\n    func = eventName;\n    eventName = selector;\n    selector = null;\n  }\n  if (func == null) {\n    return toBaconObservable(ctx, eventName, selector).takeUntil(can.bind.call(this, \"destroyed\"));\n  } else {\n    return oldControlOn.apply(this, arguments);\n  }\n};\ncan.Map.prototype.bind = can.bindAndSetup;\ncan.Map.prototype.getEventValueForBacon = function(args) {\n  switch (args[0] && args[0].type) {\n    case \"change\":\n      return new MapChangeEvent(args);\n    default:\n      var target = args[0].target;\n      if (target._data && target._data.hasOwnProperty(args[0].type)) {\n        return args[1];\n      } else {\n        return args;\n      }\n  }\n};\nfunction MapChangeEvent(args) {\n  this.event = args[0];\n  this.which = args[1];\n  this.how = args[2];\n  this.value = args[3];\n  this.oldValue = args[4];\n}\ncan.List.prototype.getEventValueForBacon = function(args) {\n  switch (args[0] && args[0].type) {\n    case \"change\":\n    case \"set\":\n    case \"add\":\n    case \"remove\":\n      return new ListChangeEvent(args);\n    case \"length\":\n      return args[1];\n    default:\n      var target = args[0].target;\n      var _type = args[0].type;\n      if (target.hasOwnProperty(args[0].type)) {\n        return isNaN(_type) ? args[1] : args[1][0];\n      } else {\n        return args;\n      }\n  }\n};\nfunction ListChangeEvent(args) {\n  this.event = args[0];\n  switch (this.event.type) {\n    case \"change\":\n      this.index = isNaN(args[1]) ? args[1] : +args[1];\n      this.how = args[2];\n      this.value = this.how === \"remove\" ? args[4] : args[3];\n      this.oldValue = args[4];\n      break;\n    case \"set\":\n    case \"add\":\n    case \"remove\":\n      this.index = args[2];\n      this.how = this.event.type;\n      this.value = args[1];\n      this.oldValue = null;\n      break;\n    default:\n      throw new Error(\"Unexpected can.List event: \" + this.event.type);\n  }\n}\nfunction toBaconObservable(ctx, ev, selector) {\n  ev = ev == null ? \"change\" : ev;\n  var stream = bacon.fromBinder(function(sink) {\n    function cb() {\n      sink(new bacon.Next(chooseEventData(ctx, arguments)));\n    }\n    selector ? can.delegate.call(ctx, selector, ev, cb) : can.bind.call(ctx, ev, cb);\n    return (function() {\n      return selector ? can.undelegate.call(ctx, selector, ev, cb) : can.unbind.call(ctx, ev, cb);\n    });\n  });\n  if (ctx.isComputed) {\n    return stream.toProperty(ctx());\n  } else {\n    return stream;\n  }\n}\n;\nfunction chooseEventData(ctx, eventArgs, evName) {\n  if (ctx.isComputed) {\n    return eventArgs[1];\n  } else if (ctx.getEventValueForBacon) {\n    return ctx.getEventValueForBacon(eventArgs, evName);\n  } else {\n    return eventArgs[0];\n  }\n}\n\n","module bacon from \"bacon\";\nmodule can from \"can\";\n\n/**\n * Returns a `can.compute` whose value changes whenever `observable`'s value\n * changes. If a compute is provided, it will be used instead of creating a new\n * one.\n */\nbacon.Observable.prototype.toCanCompute = function(compute=can.compute()) {\n  this.onValue(compute);\n  return compute;\n};\n\n/**\n * Returns a `can.Map` whose value is managed by a stream of incoming map change\n * events.\n *\n * If `map` is provided, it *must* be a `can.Map` instance, which will be used\n * instead of creating a new empty `can.Map`.\n *\n * Two kinds of event objects are accepted:\n *\n * @example\n * // Modification event. Modifies a single key.\n * {\n *   how: \"set\"|\"add\"|\"remove\", // The type of operation.\n *   which: String, // The key to modify.\n *   value: Any, // The value to set. Optional for `remove`.\n * }\n *\n * // Replacement event. Uses `.attr()` to replace multiple keys.\n * {\n *   how: \"replace\", // Must be this string.\n *   value: Object, // Object to replace with.\n *   removeOthers: Boolean // Passed to `.attr()`. See http://canjs.com/docs/can.Map.prototype.attr.html#sig_map_attr_obj__removeOthers__\n * }\n */\nbacon.Observable.prototype.toCanMap = function(map=new can.Map()) {\n  this.onValue((val)=>syncAsMap(map, val));\n  return map;\n};\n\nfunction syncAsMap(map, val) {\n  var key = val.hasOwnProperty(\"which\") ? val.which : val.index;\n  switch (val.how) {\n  case \"set\":\n    map.attr(key, val.value);\n    break;\n  case \"add\":\n    map.attr(key, val.value);\n    break;\n  case \"remove\":\n    map.removeAttr(key);\n    break;\n  case \"replace\":\n    map.attr(val.value, val.removeOthers);\n    break;\n  case undefined:\n    console.warn(\"Missing event type on change event: \", val);\n    map.attr(val);\n    break;\n  default:\n    console.warn(\"Unexpected event type: \", val.how);\n    // idk you're giving it to me so I'll shove it in. It's your own fault\n    // if it breaks. You voided the warranty. Be thankful for the log :)\n    map.attr(val);\n  }\n}\n\n/**\n * Returns a `can.List` whose value is managed by a stream of incoming list\n * and/or map change events.\n *\n * If `list` is provided, it *must* be a `can.List` instance, which will be used\n * instead of creating a new empty instance.\n *\n * Three kinds of event objects are accepted:\n *\n * @example\n * // Modification event. Modifies a single index or key.\n * {\n *   how: \"set\"|\"add\"|\"remove\", // The type of operation.\n *   which: String|Integer, // The key to modify.\n *   value: Any, // The value to set. For \"add\" on an Integer index, must be an\n *                  Array-like. Optional for `remove`.\n * }\n *\n * // Replacement event. Calls `.replace()`\n * {\n *   how: \"replace\", // Must be this string.\n *   value: Array-like, // Array-like to replace contents with.\n *   removeOthers: Boolean=true (optional) // Whether to keep trailing elements\n *                                            after value has been applied. If\n *                                            this argument is provided, the\n *                                            list will be replaced using\n *                                            `.attr()`. Otherwise, `.replace()`\n *                                            will be used. See:\n *                                            http://canjs.com/docs/can.List.prototype.attr.html#sig_list_attr_elements__replaceCompletely__\n * }\n */\nbacon.Observable.prototype.toCanList = function(list=new can.List()) {\n  this.onValue((val)=>syncAsList(list, val));\n  return list;\n};\n\nfunction syncAsList(list, val) {\n  var isMapEvent = val.hasOwnProperty(\"which\") || isNaN(val.index);\n  if (isMapEvent && val.how !== \"replace\") {\n    syncAsMap(list, val);\n  } else {\n    switch (val.how) {\n    case \"set\":\n      list.attr(val.index, val.value);\n      break;\n    case \"add\":\n      // TODO - tag lists and/or events with some magical number (like.. a\n      // batchnum-style thing) to prevent circular additions when two-way\n      // binding. Please name it: \"___PRAISE_THE_SUN___\"\n      list.splice.apply(list, [val.index, 0].concat(val.value));\n      break;\n    case \"remove\":\n      list.splice(Math.min(val.index, !list.length?0:list.length-1),\n                  val.value ? val.value.length : 1);\n      break;\n    case \"replace\":\n      if (val.hasOwnProperty(\"removeOthers\")) {\n        list.attr(val.value, val.removeOthers);\n      } else {\n        list.replace(val.value);\n      }\n      break;\n    case undefined:\n      console.warn(\"Missing event type on change event: \", val);\n      list.replace(val.value);\n      break;\n    default:\n      console.warn(\"Unexpected event type: \", val.how);\n      // idk you're giving it to me so I'll shove it in. It's your own fault\n      // if it breaks. You voided the warranty. Be thankful for the log :)\n      list.replace(val.value);\n    }\n  }\n}\n","\"use strict\";\nvar __moduleName = \"src/bacon\";\nvar bacon = require(\"bacon\");\nvar can = require(\"can\");\nbacon.Observable.prototype.toCanCompute = function() {\n  var compute = arguments[0] !== (void 0) ? arguments[0] : can.compute();\n  this.onValue(compute);\n  return compute;\n};\nbacon.Observable.prototype.toCanMap = function() {\n  var map = arguments[0] !== (void 0) ? arguments[0] : new can.Map();\n  this.onValue((function(val) {\n    return syncAsMap(map, val);\n  }));\n  return map;\n};\nfunction syncAsMap(map, val) {\n  var key = val.hasOwnProperty(\"which\") ? val.which : val.index;\n  switch (val.how) {\n    case \"set\":\n      map.attr(key, val.value);\n      break;\n    case \"add\":\n      map.attr(key, val.value);\n      break;\n    case \"remove\":\n      map.removeAttr(key);\n      break;\n    case \"replace\":\n      map.attr(val.value, val.removeOthers);\n      break;\n    case undefined:\n      console.warn(\"Missing event type on change event: \", val);\n      map.attr(val);\n      break;\n    default:\n      console.warn(\"Unexpected event type: \", val.how);\n      map.attr(val);\n  }\n}\nbacon.Observable.prototype.toCanList = function() {\n  var list = arguments[0] !== (void 0) ? arguments[0] : new can.List();\n  this.onValue((function(val) {\n    return syncAsList(list, val);\n  }));\n  return list;\n};\nfunction syncAsList(list, val) {\n  var isMapEvent = val.hasOwnProperty(\"which\") || isNaN(val.index);\n  if (isMapEvent && val.how !== \"replace\") {\n    syncAsMap(list, val);\n  } else {\n    switch (val.how) {\n      case \"set\":\n        list.attr(val.index, val.value);\n        break;\n      case \"add\":\n        list.splice.apply(list, [val.index, 0].concat(val.value));\n        break;\n      case \"remove\":\n        list.splice(Math.min(val.index, !list.length ? 0 : list.length - 1), val.value ? val.value.length : 1);\n        break;\n      case \"replace\":\n        if (val.hasOwnProperty(\"removeOthers\")) {\n          list.attr(val.value, val.removeOthers);\n        } else {\n          list.replace(val.value);\n        }\n        break;\n      case undefined:\n        console.warn(\"Missing event type on change event: \", val);\n        list.replace(val.value);\n        break;\n      default:\n        console.warn(\"Unexpected event type: \", val.how);\n        list.replace(val.value);\n    }\n  }\n}\n\n","module.exports = function() {\n  \"use strict\";\n  var __moduleName = \"bower_components/bacon/dist/Bacon\";\n  (function() {\n    var Bacon,\n        BufferingSource,\n        Bus,\n        CompositeUnsubscribe,\n        ConsumingSource,\n        Desc,\n        Dispatcher,\n        End,\n        Error,\n        Event,\n        EventStream,\n        Initial,\n        Next,\n        None,\n        Observable,\n        Property,\n        PropertyDispatcher,\n        Some,\n        Source,\n        UpdateBarrier,\n        addPropertyInitValueToStream,\n        assert,\n        assertArray,\n        assertEventStream,\n        assertFunction,\n        assertNoArguments,\n        assertString,\n        cloneArray,\n        compositeUnsubscribe,\n        containsDuplicateDeps,\n        convertArgsToFunction,\n        describe,\n        end,\n        eventIdCounter,\n        flatMap_,\n        former,\n        idCounter,\n        initial,\n        isArray,\n        isFieldKey,\n        isFunction,\n        isObservable,\n        latterF,\n        liftCallback,\n        makeFunction,\n        makeFunctionArgs,\n        makeFunction_,\n        makeObservable,\n        makeSpawner,\n        next,\n        nop,\n        partiallyApplied,\n        recursionDepth,\n        registerObs,\n        spys,\n        toCombinator,\n        toEvent,\n        toFieldExtractor,\n        toFieldKey,\n        toOption,\n        toSimpleExtractor,\n        withDescription,\n        withMethodCallSupport,\n        _,\n        _ref,\n        __slice = [].slice,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function(child, parent) {\n          for (var key in parent) {\n            if (__hasProp.call(parent, key))\n              child[key] = parent[key];\n          }\n          function ctor() {\n            this.constructor = child;\n          }\n          ctor.prototype = parent.prototype;\n          child.prototype = new ctor();\n          child.__super__ = parent.prototype;\n          return child;\n        },\n        __bind = function(fn, me) {\n          return function() {\n            return fn.apply(me, arguments);\n          };\n        };\n    Bacon = {toString: function() {\n        return \"Bacon\";\n      }};\n    Bacon.version = '0.7.11';\n    Bacon.fromBinder = function(binder, eventTransformer) {\n      if (eventTransformer == null) {\n        eventTransformer = _.id;\n      }\n      return new EventStream(describe(Bacon, \"fromBinder\", binder, eventTransformer), function(sink) {\n        var unbinder;\n        return unbinder = binder(function() {\n          var args,\n              event,\n              reply,\n              value,\n              _i,\n              _len;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          value = eventTransformer.apply(null, args);\n          if (!(isArray(value) && _.last(value) instanceof Event)) {\n            value = [value];\n          }\n          reply = Bacon.more;\n          for (_i = 0, _len = value.length; _i < _len; _i++) {\n            event = value[_i];\n            reply = sink(event = toEvent(event));\n            if (reply === Bacon.noMore || event.isEnd()) {\n              if (unbinder != null) {\n                unbinder();\n              } else {\n                Bacon.scheduler.setTimeout((function() {\n                  return unbinder();\n                }), 0);\n              }\n              return reply;\n            }\n          }\n          return reply;\n        });\n      });\n    };\n    Bacon.$ = {asEventStream: function(eventName, selector, eventTransformer) {\n        var _ref;\n        if (isFunction(selector)) {\n          _ref = [selector, null], eventTransformer = _ref[0], selector = _ref[1];\n        }\n        return withDescription(this.selector || this, \"asEventStream\", eventName, Bacon.fromBinder((function(_this) {\n          return function(handler) {\n            _this.on(eventName, selector, handler);\n            return function() {\n              return _this.off(eventName, selector, handler);\n            };\n          };\n        })(this), eventTransformer));\n      }};\n    if ((_ref = typeof jQuery !== \"undefined\" && jQuery !== null ? jQuery : typeof Zepto !== \"undefined\" && Zepto !== null ? Zepto : null) != null) {\n      _ref.fn.asEventStream = Bacon.$.asEventStream;\n    }\n    Bacon.fromEventTarget = function(target, eventName, eventTransformer) {\n      var sub,\n          unsub,\n          _ref1,\n          _ref2,\n          _ref3,\n          _ref4;\n      sub = (_ref1 = target.addEventListener) != null ? _ref1 : (_ref2 = target.addListener) != null ? _ref2 : target.bind;\n      unsub = (_ref3 = target.removeEventListener) != null ? _ref3 : (_ref4 = target.removeListener) != null ? _ref4 : target.unbind;\n      return withDescription(Bacon, \"fromEventTarget\", target, eventName, Bacon.fromBinder(function(handler) {\n        sub.call(target, eventName, handler);\n        return function() {\n          return unsub.call(target, eventName, handler);\n        };\n      }, eventTransformer));\n    };\n    Bacon.fromPromise = function(promise, abort) {\n      return withDescription(Bacon, \"fromPromise\", promise, Bacon.fromBinder(function(handler) {\n        promise.then(handler, function(e) {\n          return handler(new Error(e));\n        });\n        return function() {\n          if (abort) {\n            return typeof promise.abort === \"function\" ? promise.abort() : void 0;\n          }\n        };\n      }, (function(value) {\n        return [value, end()];\n      })));\n    };\n    Bacon.noMore = [\"<no-more>\"];\n    Bacon.more = [\"<more>\"];\n    Bacon.later = function(delay, value) {\n      return withDescription(Bacon, \"later\", delay, value, Bacon.sequentially(delay, [value]));\n    };\n    Bacon.sequentially = function(delay, values) {\n      var index;\n      index = 0;\n      return withDescription(Bacon, \"sequentially\", delay, values, Bacon.fromPoll(delay, function() {\n        var value;\n        value = values[index++];\n        if (index < values.length) {\n          return value;\n        } else if (index === values.length) {\n          return [value, end()];\n        } else {\n          return end();\n        }\n      }));\n    };\n    Bacon.repeatedly = function(delay, values) {\n      var index;\n      index = 0;\n      return withDescription(Bacon, \"repeatedly\", delay, values, Bacon.fromPoll(delay, function() {\n        return values[index++ % values.length];\n      }));\n    };\n    Bacon.spy = function(spy) {\n      return spys.push(spy);\n    };\n    spys = [];\n    registerObs = function(obs) {\n      var spy,\n          _i,\n          _len,\n          _results;\n      if (spys.length) {\n        if (!registerObs.running) {\n          try {\n            registerObs.running = true;\n            _results = [];\n            for (_i = 0, _len = spys.length; _i < _len; _i++) {\n              spy = spys[_i];\n              _results.push(spy(obs));\n            }\n            return _results;\n          } finally {\n            delete registerObs.running;\n          }\n        }\n      }\n    };\n    withMethodCallSupport = function(wrapped) {\n      return function() {\n        var args,\n            context,\n            f,\n            methodName;\n        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        if (typeof f === \"object\" && args.length) {\n          context = f;\n          methodName = args[0];\n          f = function() {\n            return context[methodName].apply(context, arguments);\n          };\n          args = args.slice(1);\n        }\n        return wrapped.apply(null, [f].concat(__slice.call(args)));\n      };\n    };\n    liftCallback = function(desc, wrapped) {\n      return withMethodCallSupport(function() {\n        var args,\n            f,\n            stream;\n        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        stream = partiallyApplied(wrapped, [function(values, callback) {\n          return f.apply(null, __slice.call(values).concat([callback]));\n        }]);\n        return withDescription.apply(null, [Bacon, desc, f].concat(__slice.call(args), [Bacon.combineAsArray(args).flatMap(stream)]));\n      });\n    };\n    Bacon.fromCallback = liftCallback(\"fromCallback\", function() {\n      var args,\n          f;\n      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      return Bacon.fromBinder(function(handler) {\n        makeFunction(f, args)(handler);\n        return nop;\n      }, (function(value) {\n        return [value, end()];\n      }));\n    });\n    Bacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function() {\n      var args,\n          f;\n      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      return Bacon.fromBinder(function(handler) {\n        makeFunction(f, args)(handler);\n        return nop;\n      }, function(error, value) {\n        if (error) {\n          return [new Error(error), end()];\n        }\n        return [value, end()];\n      });\n    });\n    Bacon.fromPoll = function(delay, poll) {\n      return withDescription(Bacon, \"fromPoll\", delay, poll, Bacon.fromBinder((function(handler) {\n        var id;\n        id = Bacon.scheduler.setInterval(handler, delay);\n        return function() {\n          return Bacon.scheduler.clearInterval(id);\n        };\n      }), poll));\n    };\n    Bacon.interval = function(delay, value) {\n      if (value == null) {\n        value = {};\n      }\n      return withDescription(Bacon, \"interval\", delay, value, Bacon.fromPoll(delay, function() {\n        return next(value);\n      }));\n    };\n    Bacon.constant = function(value) {\n      return new Property(describe(Bacon, \"constant\", value), function(sink) {\n        sink(initial(value));\n        sink(end());\n        return nop;\n      });\n    };\n    Bacon.never = function() {\n      return withDescription(Bacon, \"never\", Bacon.fromArray([]));\n    };\n    Bacon.once = function(value) {\n      return withDescription(Bacon, \"once\", value, Bacon.fromArray([value]));\n    };\n    Bacon.fromArray = function(values) {\n      assertArray(values);\n      values = cloneArray(values);\n      return new EventStream(describe(Bacon, \"fromArray\", values), function(sink) {\n        var send,\n            unsubd;\n        unsubd = false;\n        send = function() {\n          var reply,\n              value;\n          if (_.empty(values)) {\n            return sink(end());\n          } else {\n            value = values.splice(0, 1)[0];\n            reply = sink(toEvent(value));\n            if ((reply !== Bacon.noMore) && !unsubd) {\n              return send();\n            }\n          }\n        };\n        send();\n        return function() {\n          return unsubd = true;\n        };\n      });\n    };\n    Bacon.mergeAll = function() {\n      var streams;\n      streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      if (isArray(streams[0])) {\n        streams = streams[0];\n      }\n      return withDescription.apply(null, [Bacon, \"mergeAll\"].concat(__slice.call(streams), [_.fold(streams, Bacon.never(), (function(a, b) {\n        return a.merge(b);\n      }))]));\n    };\n    Bacon.zipAsArray = function() {\n      var streams;\n      streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      if (isArray(streams[0])) {\n        streams = streams[0];\n      }\n      return withDescription.apply(null, [Bacon, \"zipAsArray\"].concat(__slice.call(streams), [Bacon.zipWith(streams, function() {\n        var xs;\n        xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return xs;\n      })]));\n    };\n    Bacon.zipWith = function() {\n      var f,\n          streams,\n          _ref1;\n      f = arguments[0], streams = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (!isFunction(f)) {\n        _ref1 = [f, streams[0]], streams = _ref1[0], f = _ref1[1];\n      }\n      streams = _.map((function(s) {\n        return s.toEventStream();\n      }), streams);\n      return withDescription.apply(null, [Bacon, \"zipWith\", f].concat(__slice.call(streams), [Bacon.when(streams, f)]));\n    };\n    Bacon.groupSimultaneous = function() {\n      var s,\n          sources,\n          streams;\n      streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      if (streams.length === 1 && isArray(streams[0])) {\n        streams = streams[0];\n      }\n      sources = (function() {\n        var _i,\n            _len,\n            _results;\n        _results = [];\n        for (_i = 0, _len = streams.length; _i < _len; _i++) {\n          s = streams[_i];\n          _results.push(new BufferingSource(s));\n        }\n        return _results;\n      })();\n      return withDescription.apply(null, [Bacon, \"groupSimultaneous\"].concat(__slice.call(streams), [Bacon.when(sources, (function() {\n        var xs;\n        xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return xs;\n      }))]));\n    };\n    Bacon.combineAsArray = function() {\n      var index,\n          s,\n          sources,\n          stream,\n          streams,\n          _i,\n          _len;\n      streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      if (streams.length === 1 && isArray(streams[0])) {\n        streams = streams[0];\n      }\n      for (index = _i = 0, _len = streams.length; _i < _len; index = ++_i) {\n        stream = streams[index];\n        if (!(isObservable(stream))) {\n          streams[index] = Bacon.constant(stream);\n        }\n      }\n      if (streams.length) {\n        sources = (function() {\n          var _j,\n              _len1,\n              _results;\n          _results = [];\n          for (_j = 0, _len1 = streams.length; _j < _len1; _j++) {\n            s = streams[_j];\n            _results.push(new Source(s, true, s.subscribeInternal));\n          }\n          return _results;\n        })();\n        return withDescription.apply(null, [Bacon, \"combineAsArray\"].concat(__slice.call(streams), [Bacon.when(sources, (function() {\n          var xs;\n          xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          return xs;\n        })).toProperty()]));\n      } else {\n        return Bacon.constant([]);\n      }\n    };\n    Bacon.onValues = function() {\n      var f,\n          streams,\n          _i;\n      streams = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), f = arguments[_i++];\n      return Bacon.combineAsArray(streams).onValues(f);\n    };\n    Bacon.combineWith = function() {\n      var f,\n          streams;\n      f = arguments[0], streams = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      return withDescription.apply(null, [Bacon, \"combineWith\", f].concat(__slice.call(streams), [Bacon.combineAsArray(streams).map(function(values) {\n        return f.apply(null, values);\n      })]));\n    };\n    Bacon.combineTemplate = function(template) {\n      var applyStreamValue,\n          combinator,\n          compile,\n          compileTemplate,\n          constantValue,\n          current,\n          funcs,\n          mkContext,\n          setValue,\n          streams;\n      funcs = [];\n      streams = [];\n      current = function(ctxStack) {\n        return ctxStack[ctxStack.length - 1];\n      };\n      setValue = function(ctxStack, key, value) {\n        return current(ctxStack)[key] = value;\n      };\n      applyStreamValue = function(key, index) {\n        return function(ctxStack, values) {\n          return setValue(ctxStack, key, values[index]);\n        };\n      };\n      constantValue = function(key, value) {\n        return function(ctxStack) {\n          return setValue(ctxStack, key, value);\n        };\n      };\n      mkContext = function(template) {\n        if (isArray(template)) {\n          return [];\n        } else {\n          return {};\n        }\n      };\n      compile = function(key, value) {\n        var popContext,\n            pushContext;\n        if (isObservable(value)) {\n          streams.push(value);\n          return funcs.push(applyStreamValue(key, streams.length - 1));\n        } else if (value === Object(value) && typeof value !== \"function\" && !(value instanceof RegExp) && !(value instanceof Date)) {\n          pushContext = function(key) {\n            return function(ctxStack) {\n              var newContext;\n              newContext = mkContext(value);\n              setValue(ctxStack, key, newContext);\n              return ctxStack.push(newContext);\n            };\n          };\n          popContext = function(ctxStack) {\n            return ctxStack.pop();\n          };\n          funcs.push(pushContext(key));\n          compileTemplate(value);\n          return funcs.push(popContext);\n        } else {\n          return funcs.push(constantValue(key, value));\n        }\n      };\n      compileTemplate = function(template) {\n        return _.each(template, compile);\n      };\n      compileTemplate(template);\n      combinator = function(values) {\n        var ctxStack,\n            f,\n            rootContext,\n            _i,\n            _len;\n        rootContext = mkContext(template);\n        ctxStack = [rootContext];\n        for (_i = 0, _len = funcs.length; _i < _len; _i++) {\n          f = funcs[_i];\n          f(ctxStack, values);\n        }\n        return rootContext;\n      };\n      return withDescription(Bacon, \"combineTemplate\", template, Bacon.combineAsArray(streams).map(combinator));\n    };\n    eventIdCounter = 0;\n    Event = (function() {\n      function Event() {\n        this.id = ++eventIdCounter;\n      }\n      Event.prototype.isEvent = function() {\n        return true;\n      };\n      Event.prototype.isEnd = function() {\n        return false;\n      };\n      Event.prototype.isInitial = function() {\n        return false;\n      };\n      Event.prototype.isNext = function() {\n        return false;\n      };\n      Event.prototype.isError = function() {\n        return false;\n      };\n      Event.prototype.hasValue = function() {\n        return false;\n      };\n      Event.prototype.filter = function() {\n        return true;\n      };\n      Event.prototype.inspect = function() {\n        return this.toString();\n      };\n      Event.prototype.log = function() {\n        return this.toString();\n      };\n      return Event;\n    })();\n    Next = (function(_super) {\n      __extends(Next, _super);\n      function Next(valueF) {\n        Next.__super__.constructor.call(this);\n        if (isFunction(valueF)) {\n          this.value = _.cached(valueF);\n        } else {\n          this.value = _.always(valueF);\n        }\n      }\n      Next.prototype.isNext = function() {\n        return true;\n      };\n      Next.prototype.hasValue = function() {\n        return true;\n      };\n      Next.prototype.fmap = function(f) {\n        var value;\n        value = this.value;\n        return this.apply(function() {\n          return f(value());\n        });\n      };\n      Next.prototype.apply = function(value) {\n        return new Next(value);\n      };\n      Next.prototype.filter = function(f) {\n        return f(this.value());\n      };\n      Next.prototype.toString = function() {\n        return _.toString(this.value());\n      };\n      Next.prototype.log = function() {\n        return this.value();\n      };\n      return Next;\n    })(Event);\n    Initial = (function(_super) {\n      __extends(Initial, _super);\n      function Initial() {\n        return Initial.__super__.constructor.apply(this, arguments);\n      }\n      Initial.prototype.isInitial = function() {\n        return true;\n      };\n      Initial.prototype.isNext = function() {\n        return false;\n      };\n      Initial.prototype.apply = function(value) {\n        return new Initial(value);\n      };\n      Initial.prototype.toNext = function() {\n        return new Next(this.value);\n      };\n      return Initial;\n    })(Next);\n    End = (function(_super) {\n      __extends(End, _super);\n      function End() {\n        return End.__super__.constructor.apply(this, arguments);\n      }\n      End.prototype.isEnd = function() {\n        return true;\n      };\n      End.prototype.fmap = function() {\n        return this;\n      };\n      End.prototype.apply = function() {\n        return this;\n      };\n      End.prototype.toString = function() {\n        return \"<end>\";\n      };\n      return End;\n    })(Event);\n    Error = (function(_super) {\n      __extends(Error, _super);\n      function Error(error) {\n        this.error = error;\n      }\n      Error.prototype.isError = function() {\n        return true;\n      };\n      Error.prototype.fmap = function() {\n        return this;\n      };\n      Error.prototype.apply = function() {\n        return this;\n      };\n      Error.prototype.toString = function() {\n        return \"<error> \" + _.toString(this.error);\n      };\n      return Error;\n    })(Event);\n    idCounter = 0;\n    Observable = (function() {\n      function Observable(desc) {\n        this.id = ++idCounter;\n        withDescription(desc, this);\n      }\n      Observable.prototype.onValue = function() {\n        var f;\n        f = makeFunctionArgs(arguments);\n        return this.subscribe(function(event) {\n          if (event.hasValue()) {\n            return f(event.value());\n          }\n        });\n      };\n      Observable.prototype.onValues = function(f) {\n        return this.onValue(function(args) {\n          return f.apply(null, args);\n        });\n      };\n      Observable.prototype.onError = function() {\n        var f;\n        f = makeFunctionArgs(arguments);\n        return this.subscribe(function(event) {\n          if (event.isError()) {\n            return f(event.error);\n          }\n        });\n      };\n      Observable.prototype.onEnd = function() {\n        var f;\n        f = makeFunctionArgs(arguments);\n        return this.subscribe(function(event) {\n          if (event.isEnd()) {\n            return f();\n          }\n        });\n      };\n      Observable.prototype.errors = function() {\n        return withDescription(this, \"errors\", this.filter(function() {\n          return false;\n        }));\n      };\n      Observable.prototype.filter = function() {\n        var args,\n            f;\n        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        return convertArgsToFunction(this, f, args, function(f) {\n          return withDescription(this, \"filter\", f, this.withHandler(function(event) {\n            if (event.filter(f)) {\n              return this.push(event);\n            } else {\n              return Bacon.more;\n            }\n          }));\n        });\n      };\n      Observable.prototype.takeWhile = function() {\n        var args,\n            f;\n        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        return convertArgsToFunction(this, f, args, function(f) {\n          return withDescription(this, \"takeWhile\", f, this.withHandler(function(event) {\n            if (event.filter(f)) {\n              return this.push(event);\n            } else {\n              this.push(end());\n              return Bacon.noMore;\n            }\n          }));\n        });\n      };\n      Observable.prototype.endOnError = function() {\n        var args,\n            f;\n        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        if (f == null) {\n          f = true;\n        }\n        return convertArgsToFunction(this, f, args, function(f) {\n          return withDescription(this, \"endOnError\", this.withHandler(function(event) {\n            if (event.isError() && f(event.error)) {\n              this.push(event);\n              return this.push(end());\n            } else {\n              return this.push(event);\n            }\n          }));\n        });\n      };\n      Observable.prototype.take = function(count) {\n        if (count <= 0) {\n          return Bacon.never();\n        }\n        return withDescription(this, \"take\", count, this.withHandler(function(event) {\n          if (!event.hasValue()) {\n            return this.push(event);\n          } else {\n            count--;\n            if (count > 0) {\n              return this.push(event);\n            } else {\n              if (count === 0) {\n                this.push(event);\n              }\n              this.push(end());\n              return Bacon.noMore;\n            }\n          }\n        }));\n      };\n      Observable.prototype.map = function() {\n        var args,\n            p;\n        p = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        if (p instanceof Property) {\n          return p.sampledBy(this, former);\n        } else {\n          return convertArgsToFunction(this, p, args, function(f) {\n            return withDescription(this, \"map\", f, this.withHandler(function(event) {\n              return this.push(event.fmap(f));\n            }));\n          });\n        }\n      };\n      Observable.prototype.mapError = function() {\n        var f;\n        f = makeFunctionArgs(arguments);\n        return withDescription(this, \"mapError\", f, this.withHandler(function(event) {\n          if (event.isError()) {\n            return this.push(next(f(event.error)));\n          } else {\n            return this.push(event);\n          }\n        }));\n      };\n      Observable.prototype.mapEnd = function() {\n        var f;\n        f = makeFunctionArgs(arguments);\n        return withDescription(this, \"mapEnd\", f, this.withHandler(function(event) {\n          if (event.isEnd()) {\n            this.push(next(f(event)));\n            this.push(end());\n            return Bacon.noMore;\n          } else {\n            return this.push(event);\n          }\n        }));\n      };\n      Observable.prototype.doAction = function() {\n        var f;\n        f = makeFunctionArgs(arguments);\n        return withDescription(this, \"doAction\", f, this.withHandler(function(event) {\n          if (event.hasValue()) {\n            f(event.value());\n          }\n          return this.push(event);\n        }));\n      };\n      Observable.prototype.skip = function(count) {\n        return withDescription(this, \"skip\", count, this.withHandler(function(event) {\n          if (!event.hasValue()) {\n            return this.push(event);\n          } else if (count > 0) {\n            count--;\n            return Bacon.more;\n          } else {\n            return this.push(event);\n          }\n        }));\n      };\n      Observable.prototype.skipDuplicates = function(isEqual) {\n        if (isEqual == null) {\n          isEqual = function(a, b) {\n            return a === b;\n          };\n        }\n        return withDescription(this, \"skipDuplicates\", this.withStateMachine(None, function(prev, event) {\n          if (!event.hasValue()) {\n            return [prev, [event]];\n          } else if (event.isInitial() || prev === None || !isEqual(prev.get(), event.value())) {\n            return [new Some(event.value()), [event]];\n          } else {\n            return [prev, []];\n          }\n        }));\n      };\n      Observable.prototype.skipErrors = function() {\n        return withDescription(this, \"skipErrors\", this.withHandler(function(event) {\n          if (event.isError()) {\n            return Bacon.more;\n          } else {\n            return this.push(event);\n          }\n        }));\n      };\n      Observable.prototype.withStateMachine = function(initState, f) {\n        var state;\n        state = initState;\n        return withDescription(this, \"withStateMachine\", initState, f, this.withHandler(function(event) {\n          var fromF,\n              newState,\n              output,\n              outputs,\n              reply,\n              _i,\n              _len;\n          fromF = f(state, event);\n          newState = fromF[0], outputs = fromF[1];\n          state = newState;\n          reply = Bacon.more;\n          for (_i = 0, _len = outputs.length; _i < _len; _i++) {\n            output = outputs[_i];\n            reply = this.push(output);\n            if (reply === Bacon.noMore) {\n              return reply;\n            }\n          }\n          return reply;\n        }));\n      };\n      Observable.prototype.scan = function(seed, f, lazyF) {\n        var acc,\n            f_,\n            resultProperty,\n            subscribe;\n        f_ = toCombinator(f);\n        f = lazyF ? f_ : function(x, y) {\n          return f_(x(), y());\n        };\n        acc = toOption(seed).map(function(x) {\n          return _.always(x);\n        });\n        subscribe = (function(_this) {\n          return function(sink) {\n            var initSent,\n                reply,\n                sendInit,\n                unsub;\n            initSent = false;\n            unsub = nop;\n            reply = Bacon.more;\n            sendInit = function() {\n              if (!initSent) {\n                return acc.forEach(function(valueF) {\n                  initSent = true;\n                  reply = sink(new Initial(valueF));\n                  if (reply === Bacon.noMore) {\n                    unsub();\n                    return unsub = nop;\n                  }\n                });\n              }\n            };\n            unsub = _this.subscribeInternal(function(event) {\n              var next,\n                  prev;\n              if (event.hasValue()) {\n                if (initSent && event.isInitial()) {\n                  return Bacon.more;\n                } else {\n                  if (!event.isInitial()) {\n                    sendInit();\n                  }\n                  initSent = true;\n                  prev = acc.getOrElse(function() {\n                    return void 0;\n                  });\n                  next = _.cached(function() {\n                    return f(prev, event.value);\n                  });\n                  acc = new Some(next);\n                  return sink(event.apply(next));\n                }\n              } else {\n                if (event.isEnd()) {\n                  reply = sendInit();\n                }\n                if (reply !== Bacon.noMore) {\n                  return sink(event);\n                }\n              }\n            });\n            UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n            return unsub;\n          };\n        })(this);\n        return resultProperty = new Property(describe(this, \"scan\", seed, f), subscribe);\n      };\n      Observable.prototype.fold = function(seed, f) {\n        return withDescription(this, \"fold\", seed, f, this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n      };\n      Observable.prototype.zip = function(other, f) {\n        if (f == null) {\n          f = Array;\n        }\n        return withDescription(this, \"zip\", other, Bacon.zipWith([this, other], f));\n      };\n      Observable.prototype.diff = function(start, f) {\n        f = toCombinator(f);\n        return withDescription(this, \"diff\", start, f, this.scan([start], function(prevTuple, next) {\n          return [next, f(prevTuple[0], next)];\n        }).filter(function(tuple) {\n          return tuple.length === 2;\n        }).map(function(tuple) {\n          return tuple[1];\n        }));\n      };\n      Observable.prototype.flatMap = function() {\n        return flatMap_(this, makeSpawner(arguments));\n      };\n      Observable.prototype.flatMapFirst = function() {\n        return flatMap_(this, makeSpawner(arguments), true);\n      };\n      Observable.prototype.flatMapLatest = function() {\n        var f,\n            stream;\n        f = makeSpawner(arguments);\n        stream = this.toEventStream();\n        return withDescription(this, \"flatMapLatest\", f, stream.flatMap(function(value) {\n          return makeObservable(f(value)).takeUntil(stream);\n        }));\n      };\n      Observable.prototype.not = function() {\n        return withDescription(this, \"not\", this.map(function(x) {\n          return !x;\n        }));\n      };\n      Observable.prototype.log = function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        this.subscribe(function(event) {\n          return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log.apply(console, __slice.call(args).concat([event.log()])) : void 0 : void 0;\n        });\n        return this;\n      };\n      Observable.prototype.slidingWindow = function(n, minValues) {\n        if (minValues == null) {\n          minValues = 0;\n        }\n        return withDescription(this, \"slidingWindow\", n, minValues, this.scan([], (function(window, value) {\n          return window.concat([value]).slice(-n);\n        })).filter((function(values) {\n          return values.length >= minValues;\n        })));\n      };\n      Observable.prototype.combine = function(other, f) {\n        var combinator;\n        combinator = toCombinator(f);\n        return withDescription(this, \"combine\", other, f, Bacon.combineAsArray(this, other).map(function(values) {\n          return combinator(values[0], values[1]);\n        }));\n      };\n      Observable.prototype.decode = function(cases) {\n        return withDescription(this, \"decode\", cases, this.combine(Bacon.combineTemplate(cases), function(key, values) {\n          return values[key];\n        }));\n      };\n      Observable.prototype.awaiting = function(other) {\n        return withDescription(this, \"awaiting\", other, Bacon.groupSimultaneous(this, other).map(function(_arg) {\n          var myValues,\n              otherValues;\n          myValues = _arg[0], otherValues = _arg[1];\n          return otherValues.length === 0;\n        }).toProperty(false).skipDuplicates());\n      };\n      Observable.prototype.name = function(name) {\n        this.toString = function() {\n          return name;\n        };\n        return this;\n      };\n      Observable.prototype.withDescription = function() {\n        return describe.apply(null, arguments).apply(this);\n      };\n      return Observable;\n    })();\n    Observable.prototype.reduce = Observable.prototype.fold;\n    Observable.prototype.assign = Observable.prototype.onValue;\n    flatMap_ = function(root, f, firstOnly) {\n      return new EventStream(describe(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), f), function(sink) {\n        var checkEnd,\n            composite;\n        composite = new CompositeUnsubscribe();\n        checkEnd = function(unsub) {\n          unsub();\n          if (composite.empty()) {\n            return sink(end());\n          }\n        };\n        composite.add(function(__, unsubRoot) {\n          return root.subscribeInternal(function(event) {\n            var child;\n            if (event.isEnd()) {\n              return checkEnd(unsubRoot);\n            } else if (event.isError()) {\n              return sink(event);\n            } else if (firstOnly && composite.count() > 1) {\n              return Bacon.more;\n            } else {\n              if (composite.unsubscribed) {\n                return Bacon.noMore;\n              }\n              child = makeObservable(f(event.value()));\n              return composite.add(function(unsubAll, unsubMe) {\n                return child.subscribeInternal(function(event) {\n                  var reply;\n                  if (event.isEnd()) {\n                    checkEnd(unsubMe);\n                    return Bacon.noMore;\n                  } else {\n                    if (event instanceof Initial) {\n                      event = event.toNext();\n                    }\n                    reply = sink(event);\n                    if (reply === Bacon.noMore) {\n                      unsubAll();\n                    }\n                    return reply;\n                  }\n                });\n              });\n            }\n          });\n        });\n        return composite.unsubscribe;\n      });\n    };\n    EventStream = (function(_super) {\n      __extends(EventStream, _super);\n      function EventStream(desc, subscribe) {\n        var dispatcher;\n        if (isFunction(desc)) {\n          subscribe = desc;\n          desc = [];\n        }\n        EventStream.__super__.constructor.call(this, desc);\n        assertFunction(subscribe);\n        dispatcher = new Dispatcher(subscribe);\n        this.subscribeInternal = dispatcher.subscribe;\n        this.subscribe = UpdateBarrier.wrappedSubscribe(this);\n        this.hasSubscribers = dispatcher.hasSubscribers;\n        registerObs(this);\n      }\n      EventStream.prototype.delay = function(delay) {\n        return withDescription(this, \"delay\", delay, this.flatMap(function(value) {\n          return Bacon.later(delay, value);\n        }));\n      };\n      EventStream.prototype.debounce = function(delay) {\n        return withDescription(this, \"debounce\", delay, this.flatMapLatest(function(value) {\n          return Bacon.later(delay, value);\n        }));\n      };\n      EventStream.prototype.debounceImmediate = function(delay) {\n        return withDescription(this, \"debounceImmediate\", delay, this.flatMapFirst(function(value) {\n          return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n        }));\n      };\n      EventStream.prototype.throttle = function(delay) {\n        return withDescription(this, \"throttle\", delay, this.bufferWithTime(delay).map(function(values) {\n          return values[values.length - 1];\n        }));\n      };\n      EventStream.prototype.bufferWithTime = function(delay) {\n        return withDescription(this, \"bufferWithTime\", delay, this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n      };\n      EventStream.prototype.bufferWithCount = function(count) {\n        return withDescription(this, \"bufferWithCount\", count, this.bufferWithTimeOrCount(void 0, count));\n      };\n      EventStream.prototype.bufferWithTimeOrCount = function(delay, count) {\n        var flushOrSchedule;\n        flushOrSchedule = function(buffer) {\n          if (buffer.values.length === count) {\n            return buffer.flush();\n          } else if (delay !== void 0) {\n            return buffer.schedule();\n          }\n        };\n        return withDescription(this, \"bufferWithTimeOrCount\", delay, count, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n      };\n      EventStream.prototype.buffer = function(delay, onInput, onFlush) {\n        var buffer,\n            delayMs,\n            reply;\n        if (onInput == null) {\n          onInput = (function() {});\n        }\n        if (onFlush == null) {\n          onFlush = (function() {});\n        }\n        buffer = {\n          scheduled: false,\n          end: null,\n          values: [],\n          flush: function() {\n            var reply;\n            this.scheduled = false;\n            if (this.values.length > 0) {\n              reply = this.push(next(this.values));\n              this.values = [];\n              if (this.end != null) {\n                return this.push(this.end);\n              } else if (reply !== Bacon.noMore) {\n                return onFlush(this);\n              }\n            } else {\n              if (this.end != null) {\n                return this.push(this.end);\n              }\n            }\n          },\n          schedule: function() {\n            if (!this.scheduled) {\n              this.scheduled = true;\n              return delay((function(_this) {\n                return function() {\n                  return _this.flush();\n                };\n              })(this));\n            }\n          }\n        };\n        reply = Bacon.more;\n        if (!isFunction(delay)) {\n          delayMs = delay;\n          delay = function(f) {\n            return Bacon.scheduler.setTimeout(f, delayMs);\n          };\n        }\n        return withDescription(this, \"buffer\", this.withHandler(function(event) {\n          buffer.push = this.push;\n          if (event.isError()) {\n            reply = this.push(event);\n          } else if (event.isEnd()) {\n            buffer.end = event;\n            if (!buffer.scheduled) {\n              buffer.flush();\n            }\n          } else {\n            buffer.values.push(event.value());\n            onInput(buffer);\n          }\n          return reply;\n        }));\n      };\n      EventStream.prototype.merge = function(right) {\n        var left;\n        assertEventStream(right);\n        left = this;\n        return new EventStream(describe(left, \"merge\", right), function(sink) {\n          var ends,\n              smartSink;\n          ends = 0;\n          smartSink = function(obs) {\n            return function(unsubBoth) {\n              return obs.subscribeInternal(function(event) {\n                var reply;\n                if (event.isEnd()) {\n                  ends++;\n                  if (ends === 2) {\n                    return sink(end());\n                  } else {\n                    return Bacon.more;\n                  }\n                } else {\n                  reply = sink(event);\n                  if (reply === Bacon.noMore) {\n                    unsubBoth();\n                  }\n                  return reply;\n                }\n              });\n            };\n          };\n          return compositeUnsubscribe(smartSink(left), smartSink(right));\n        });\n      };\n      EventStream.prototype.toProperty = function(initValue) {\n        if (arguments.length === 0) {\n          initValue = None;\n        }\n        return withDescription(this, \"toProperty\", initValue, this.scan(initValue, latterF, true));\n      };\n      EventStream.prototype.toEventStream = function() {\n        return this;\n      };\n      EventStream.prototype.sampledBy = function(sampler, combinator) {\n        return withDescription(this, \"sampledBy\", sampler, combinator, this.toProperty().sampledBy(sampler, combinator));\n      };\n      EventStream.prototype.concat = function(right) {\n        var left;\n        left = this;\n        return new EventStream(describe(left, \"concat\", right), function(sink) {\n          var unsubLeft,\n              unsubRight;\n          unsubRight = nop;\n          unsubLeft = left.subscribeInternal(function(e) {\n            if (e.isEnd()) {\n              return unsubRight = right.subscribeInternal(sink);\n            } else {\n              return sink(e);\n            }\n          });\n          return function() {\n            unsubLeft();\n            return unsubRight();\n          };\n        });\n      };\n      EventStream.prototype.takeUntil = function(stopper) {\n        var endMarker;\n        endMarker = {};\n        return withDescription(this, \"takeUntil\", stopper, Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function(event) {\n          var data,\n              reply,\n              value,\n              _i,\n              _len,\n              _ref1;\n          if (!event.hasValue()) {\n            return this.push(event);\n          } else {\n            _ref1 = event.value(), data = _ref1[0], stopper = _ref1[1];\n            if (stopper.length) {\n              return this.push(end());\n            } else {\n              reply = Bacon.more;\n              for (_i = 0, _len = data.length; _i < _len; _i++) {\n                value = data[_i];\n                if (value === endMarker) {\n                  reply = this.push(end());\n                } else {\n                  reply = this.push(next(value));\n                }\n              }\n              return reply;\n            }\n          }\n        }));\n      };\n      EventStream.prototype.skipUntil = function(starter) {\n        var started;\n        started = starter.take(1).map(true).toProperty(false);\n        return withDescription(this, \"skipUntil\", starter, this.filter(started));\n      };\n      EventStream.prototype.skipWhile = function() {\n        var args,\n            f,\n            ok;\n        f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n        ok = false;\n        return convertArgsToFunction(this, f, args, function(f) {\n          return withDescription(this, \"skipWhile\", f, this.withHandler(function(event) {\n            if (ok || !event.hasValue() || !f(event.value())) {\n              if (event.hasValue()) {\n                ok = true;\n              }\n              return this.push(event);\n            } else {\n              return Bacon.more;\n            }\n          }));\n        });\n      };\n      EventStream.prototype.startWith = function(seed) {\n        return withDescription(this, \"startWith\", seed, Bacon.once(seed).concat(this));\n      };\n      EventStream.prototype.withHandler = function(handler) {\n        var dispatcher;\n        dispatcher = new Dispatcher(this.subscribeInternal, handler);\n        return new EventStream(describe(this, \"withHandler\", handler), dispatcher.subscribe);\n      };\n      return EventStream;\n    })(Observable);\n    Property = (function(_super) {\n      __extends(Property, _super);\n      function Property(desc, subscribe, handler) {\n        if (isFunction(desc)) {\n          handler = subscribe;\n          subscribe = desc;\n          desc = [];\n        }\n        Property.__super__.constructor.call(this, desc);\n        assertFunction(subscribe);\n        if (handler === true) {\n          this.subscribeInternal = subscribe;\n        } else {\n          this.subscribeInternal = new PropertyDispatcher(this, subscribe, handler).subscribe;\n        }\n        this.subscribe = UpdateBarrier.wrappedSubscribe(this);\n        registerObs(this);\n      }\n      Property.prototype.sampledBy = function(sampler, combinator) {\n        var lazy,\n            result,\n            samplerSource,\n            stream,\n            thisSource;\n        if (combinator != null) {\n          combinator = toCombinator(combinator);\n        } else {\n          lazy = true;\n          combinator = function(f) {\n            return f();\n          };\n        }\n        thisSource = new Source(this, false, this.subscribeInternal, lazy);\n        samplerSource = new Source(sampler, true, sampler.subscribeInternal, lazy);\n        stream = Bacon.when([thisSource, samplerSource], combinator);\n        result = sampler instanceof Property ? stream.toProperty() : stream;\n        return withDescription(this, \"sampledBy\", sampler, combinator, result);\n      };\n      Property.prototype.sample = function(interval) {\n        return withDescription(this, \"sample\", interval, this.sampledBy(Bacon.interval(interval, {})));\n      };\n      Property.prototype.changes = function() {\n        return new EventStream(describe(this, \"changes\"), (function(_this) {\n          return function(sink) {\n            return _this.subscribeInternal(function(event) {\n              if (!event.isInitial()) {\n                return sink(event);\n              }\n            });\n          };\n        })(this));\n      };\n      Property.prototype.withHandler = function(handler) {\n        return new Property(describe(this, \"withHandler\", handler), this.subscribeInternal, handler);\n      };\n      Property.prototype.toProperty = function() {\n        assertNoArguments(arguments);\n        return this;\n      };\n      Property.prototype.toEventStream = function() {\n        return new EventStream(describe(this, \"toEventStream\"), (function(_this) {\n          return function(sink) {\n            return _this.subscribeInternal(function(event) {\n              if (event.isInitial()) {\n                event = event.toNext();\n              }\n              return sink(event);\n            });\n          };\n        })(this));\n      };\n      Property.prototype.and = function(other) {\n        return withDescription(this, \"and\", other, this.combine(other, function(x, y) {\n          return x && y;\n        }));\n      };\n      Property.prototype.or = function(other) {\n        return withDescription(this, \"or\", other, this.combine(other, function(x, y) {\n          return x || y;\n        }));\n      };\n      Property.prototype.delay = function(delay) {\n        return this.delayChanges(\"delay\", delay, function(changes) {\n          return changes.delay(delay);\n        });\n      };\n      Property.prototype.debounce = function(delay) {\n        return this.delayChanges(\"debounce\", delay, function(changes) {\n          return changes.debounce(delay);\n        });\n      };\n      Property.prototype.throttle = function(delay) {\n        return this.delayChanges(\"throttle\", delay, function(changes) {\n          return changes.throttle(delay);\n        });\n      };\n      Property.prototype.delayChanges = function() {\n        var desc,\n            f,\n            _i;\n        desc = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), f = arguments[_i++];\n        return withDescription.apply(null, [this].concat(__slice.call(desc), [addPropertyInitValueToStream(this, f(this.changes()))]));\n      };\n      Property.prototype.takeUntil = function(stopper) {\n        var changes;\n        changes = this.changes().takeUntil(stopper);\n        return withDescription(this, \"takeUntil\", stopper, addPropertyInitValueToStream(this, changes));\n      };\n      Property.prototype.startWith = function(value) {\n        return withDescription(this, \"startWith\", value, this.scan(value, function(prev, next) {\n          return next;\n        }));\n      };\n      return Property;\n    })(Observable);\n    convertArgsToFunction = function(obs, f, args, method) {\n      var sampled;\n      if (f instanceof Property) {\n        sampled = f.sampledBy(obs, function(p, s) {\n          return [p, s];\n        });\n        return method.apply(sampled, [function(_arg) {\n          var p,\n              s;\n          p = _arg[0], s = _arg[1];\n          return p;\n        }]).map(function(_arg) {\n          var p,\n              s;\n          p = _arg[0], s = _arg[1];\n          return s;\n        });\n      } else {\n        f = makeFunction(f, args);\n        return method.apply(obs, [f]);\n      }\n    };\n    addPropertyInitValueToStream = function(property, stream) {\n      var justInitValue;\n      justInitValue = new EventStream(describe(property, \"justInitValue\"), function(sink) {\n        var unsub,\n            value;\n        value = null;\n        unsub = property.subscribeInternal(function(event) {\n          if (event.hasValue()) {\n            value = event;\n          }\n          return Bacon.noMore;\n        });\n        UpdateBarrier.whenDoneWith(justInitValue, function() {\n          if (value != null) {\n            sink(value);\n          }\n          return sink(end());\n        });\n        return unsub;\n      });\n      return justInitValue.concat(stream).toProperty();\n    };\n    Dispatcher = (function() {\n      function Dispatcher(subscribe, handleEvent) {\n        var done,\n            ended,\n            prevError,\n            pushIt,\n            pushing,\n            queue,\n            removeSub,\n            subscriptions,\n            unsubscribeFromSource,\n            waiters;\n        if (subscribe == null) {\n          subscribe = function() {\n            return nop;\n          };\n        }\n        subscriptions = [];\n        queue = [];\n        pushing = false;\n        ended = false;\n        this.hasSubscribers = function() {\n          return subscriptions.length > 0;\n        };\n        prevError = null;\n        unsubscribeFromSource = nop;\n        removeSub = function(subscription) {\n          return subscriptions = _.without(subscription, subscriptions);\n        };\n        waiters = null;\n        done = function() {\n          var w,\n              ws,\n              _i,\n              _len,\n              _results;\n          if (waiters != null) {\n            ws = waiters;\n            waiters = null;\n            _results = [];\n            for (_i = 0, _len = ws.length; _i < _len; _i++) {\n              w = ws[_i];\n              _results.push(w());\n            }\n            return _results;\n          }\n        };\n        pushIt = function(event) {\n          var reply,\n              sub,\n              success,\n              tmp,\n              _i,\n              _len;\n          if (!pushing) {\n            if (event === prevError) {\n              return;\n            }\n            if (event.isError()) {\n              prevError = event;\n            }\n            success = false;\n            try {\n              pushing = true;\n              tmp = subscriptions;\n              for (_i = 0, _len = tmp.length; _i < _len; _i++) {\n                sub = tmp[_i];\n                reply = sub.sink(event);\n                if (reply === Bacon.noMore || event.isEnd()) {\n                  removeSub(sub);\n                }\n              }\n              success = true;\n            } finally {\n              pushing = false;\n              if (!success) {\n                queue = [];\n              }\n            }\n            success = true;\n            while (queue.length) {\n              event = queue.shift();\n              this.push(event);\n            }\n            done(event);\n            if (this.hasSubscribers()) {\n              return Bacon.more;\n            } else {\n              unsubscribeFromSource();\n              return Bacon.noMore;\n            }\n          } else {\n            queue.push(event);\n            return Bacon.more;\n          }\n        };\n        this.push = (function(_this) {\n          return function(event) {\n            return UpdateBarrier.inTransaction(event, _this, pushIt, [event]);\n          };\n        })(this);\n        if (handleEvent == null) {\n          handleEvent = function(event) {\n            return this.push(event);\n          };\n        }\n        this.handleEvent = (function(_this) {\n          return function(event) {\n            if (event.isEnd()) {\n              ended = true;\n            }\n            return handleEvent.apply(_this, [event]);\n          };\n        })(this);\n        this.subscribe = (function(_this) {\n          return function(sink) {\n            var subscription,\n                unsubSrc;\n            if (ended) {\n              sink(end());\n              return nop;\n            } else {\n              assertFunction(sink);\n              subscription = {sink: sink};\n              subscriptions.push(subscription);\n              if (subscriptions.length === 1) {\n                unsubSrc = subscribe(_this.handleEvent);\n                unsubscribeFromSource = function() {\n                  unsubSrc();\n                  return unsubscribeFromSource = nop;\n                };\n              }\n              assertFunction(unsubscribeFromSource);\n              return function() {\n                removeSub(subscription);\n                if (!_this.hasSubscribers()) {\n                  return unsubscribeFromSource();\n                }\n              };\n            }\n          };\n        })(this);\n      }\n      return Dispatcher;\n    })();\n    PropertyDispatcher = (function(_super) {\n      __extends(PropertyDispatcher, _super);\n      function PropertyDispatcher(p, subscribe, handleEvent) {\n        var current,\n            currentValueRootId,\n            ended,\n            push;\n        PropertyDispatcher.__super__.constructor.call(this, subscribe, handleEvent);\n        current = None;\n        currentValueRootId = void 0;\n        push = this.push;\n        subscribe = this.subscribe;\n        ended = false;\n        this.push = (function(_this) {\n          return function(event) {\n            if (event.isEnd()) {\n              ended = true;\n            }\n            if (event.hasValue()) {\n              current = new Some(event);\n              currentValueRootId = UpdateBarrier.currentEventId();\n            }\n            return push.apply(_this, [event]);\n          };\n        })(this);\n        this.subscribe = (function(_this) {\n          return function(sink) {\n            var dispatchingId,\n                initSent,\n                maybeSubSource,\n                reply,\n                valId;\n            initSent = false;\n            reply = Bacon.more;\n            maybeSubSource = function() {\n              if (reply === Bacon.noMore) {\n                return nop;\n              } else if (ended) {\n                sink(end());\n                return nop;\n              } else {\n                return subscribe.apply(this, [sink]);\n              }\n            };\n            if (current.isDefined && (_this.hasSubscribers() || ended)) {\n              dispatchingId = UpdateBarrier.currentEventId();\n              valId = currentValueRootId;\n              if (!ended && valId && dispatchingId && dispatchingId !== valId) {\n                UpdateBarrier.whenDoneWith(p, function() {\n                  if (currentValueRootId === valId) {\n                    return sink(initial(current.get().value()));\n                  }\n                });\n                return maybeSubSource();\n              } else {\n                UpdateBarrier.inTransaction(void 0, _this, (function() {\n                  return reply = sink(initial(current.get().value()));\n                }), []);\n                return maybeSubSource();\n              }\n            } else {\n              return maybeSubSource();\n            }\n          };\n        })(this);\n      }\n      return PropertyDispatcher;\n    })(Dispatcher);\n    Bus = (function(_super) {\n      __extends(Bus, _super);\n      function Bus() {\n        var ended,\n            guardedSink,\n            sink,\n            subscribeAll,\n            subscribeInput,\n            subscriptions,\n            unsubAll,\n            unsubscribeInput;\n        sink = void 0;\n        subscriptions = [];\n        ended = false;\n        guardedSink = (function(_this) {\n          return function(input) {\n            return function(event) {\n              if (event.isEnd()) {\n                unsubscribeInput(input);\n                return Bacon.noMore;\n              } else {\n                return sink(event);\n              }\n            };\n          };\n        })(this);\n        unsubAll = function() {\n          var sub,\n              _i,\n              _len,\n              _results;\n          _results = [];\n          for (_i = 0, _len = subscriptions.length; _i < _len; _i++) {\n            sub = subscriptions[_i];\n            _results.push(typeof sub.unsub === \"function\" ? sub.unsub() : void 0);\n          }\n          return _results;\n        };\n        subscribeInput = function(subscription) {\n          return subscription.unsub = subscription.input.subscribeInternal(guardedSink(subscription.input));\n        };\n        unsubscribeInput = function(input) {\n          var i,\n              sub,\n              _i,\n              _len;\n          for (i = _i = 0, _len = subscriptions.length; _i < _len; i = ++_i) {\n            sub = subscriptions[i];\n            if (sub.input === input) {\n              if (typeof sub.unsub === \"function\") {\n                sub.unsub();\n              }\n              subscriptions.splice(i, 1);\n              return;\n            }\n          }\n        };\n        subscribeAll = (function(_this) {\n          return function(newSink) {\n            var subscription,\n                _i,\n                _len,\n                _ref1;\n            sink = newSink;\n            _ref1 = cloneArray(subscriptions);\n            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n              subscription = _ref1[_i];\n              subscribeInput(subscription);\n            }\n            return unsubAll;\n          };\n        })(this);\n        Bus.__super__.constructor.call(this, describe(Bacon, \"Bus\"), subscribeAll);\n        this.plug = (function(_this) {\n          return function(input) {\n            var sub;\n            if (ended) {\n              return;\n            }\n            sub = {input: input};\n            subscriptions.push(sub);\n            if ((sink != null)) {\n              subscribeInput(sub);\n            }\n            return function() {\n              return unsubscribeInput(input);\n            };\n          };\n        })(this);\n        this.push = (function(_this) {\n          return function(value) {\n            return typeof sink === \"function\" ? sink(next(value)) : void 0;\n          };\n        })(this);\n        this.error = (function(_this) {\n          return function(error) {\n            return typeof sink === \"function\" ? sink(new Error(error)) : void 0;\n          };\n        })(this);\n        this.end = (function(_this) {\n          return function() {\n            ended = true;\n            unsubAll();\n            return typeof sink === \"function\" ? sink(end()) : void 0;\n          };\n        })(this);\n      }\n      return Bus;\n    })(EventStream);\n    Source = (function() {\n      function Source(obs, sync, subscribe, lazy) {\n        this.obs = obs;\n        this.sync = sync;\n        this.subscribe = subscribe;\n        this.lazy = lazy != null ? lazy : false;\n        this.queue = [];\n        if (this.subscribe == null) {\n          this.subscribe = this.obs.subscribeInternal;\n        }\n        this.toString = this.obs.toString;\n      }\n      Source.prototype.markEnded = function() {\n        return this.ended = true;\n      };\n      Source.prototype.consume = function() {\n        if (this.lazy) {\n          return _.always(this.queue[0]);\n        } else {\n          return this.queue[0];\n        }\n      };\n      Source.prototype.push = function(x) {\n        return this.queue = [x];\n      };\n      Source.prototype.mayHave = function() {\n        return true;\n      };\n      Source.prototype.hasAtLeast = function() {\n        return this.queue.length;\n      };\n      Source.prototype.flatten = true;\n      return Source;\n    })();\n    ConsumingSource = (function(_super) {\n      __extends(ConsumingSource, _super);\n      function ConsumingSource() {\n        return ConsumingSource.__super__.constructor.apply(this, arguments);\n      }\n      ConsumingSource.prototype.consume = function() {\n        return this.queue.shift();\n      };\n      ConsumingSource.prototype.push = function(x) {\n        return this.queue.push(x);\n      };\n      ConsumingSource.prototype.mayHave = function(c) {\n        return !this.ended || this.queue.length >= c;\n      };\n      ConsumingSource.prototype.hasAtLeast = function(c) {\n        return this.queue.length >= c;\n      };\n      ConsumingSource.prototype.flatten = false;\n      return ConsumingSource;\n    })(Source);\n    BufferingSource = (function(_super) {\n      __extends(BufferingSource, _super);\n      function BufferingSource(obs) {\n        this.obs = obs;\n        BufferingSource.__super__.constructor.call(this, this.obs, true, this.obs.subscribeInternal);\n      }\n      BufferingSource.prototype.consume = function() {\n        var values;\n        values = this.queue;\n        this.queue = [];\n        return function() {\n          return values;\n        };\n      };\n      BufferingSource.prototype.push = function(x) {\n        return this.queue.push(x());\n      };\n      BufferingSource.prototype.hasAtLeast = function() {\n        return true;\n      };\n      return BufferingSource;\n    })(Source);\n    Source.fromObservable = function(s) {\n      if (s instanceof Source) {\n        return s;\n      } else if (s instanceof Property) {\n        return new Source(s, false);\n      } else {\n        return new ConsumingSource(s, true);\n      }\n    };\n    describe = function() {\n      var args,\n          context,\n          method;\n      context = arguments[0], method = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];\n      if ((context || method) instanceof Desc) {\n        return context || method;\n      } else {\n        return new Desc(context, method, args);\n      }\n    };\n    Desc = (function() {\n      function Desc(context, method, args) {\n        var collectDeps,\n            dependsOn,\n            findDeps,\n            flatDeps;\n        findDeps = function(x) {\n          if (isArray(x)) {\n            return _.flatMap(findDeps, x);\n          } else if (isObservable(x)) {\n            return [x];\n          } else if (x instanceof Source) {\n            return [x.obs];\n          } else {\n            return [];\n          }\n        };\n        flatDeps = null;\n        collectDeps = function(o) {\n          var dep,\n              deps,\n              _i,\n              _len,\n              _results;\n          deps = o.internalDeps();\n          _results = [];\n          for (_i = 0, _len = deps.length; _i < _len; _i++) {\n            dep = deps[_i];\n            flatDeps[dep.id] = true;\n            _results.push(collectDeps(dep));\n          }\n          return _results;\n        };\n        dependsOn = function(b) {\n          if (flatDeps == null) {\n            flatDeps = {};\n            collectDeps(this);\n          }\n          return flatDeps[b.id];\n        };\n        this.apply = function(obs) {\n          var deps;\n          deps = _.cached((function() {\n            return findDeps([context].concat(args));\n          }));\n          obs.internalDeps = obs.internalDeps || deps;\n          obs.dependsOn = dependsOn;\n          obs.deps = deps;\n          obs.toString = function() {\n            return _.toString(context) + \".\" + _.toString(method) + \"(\" + _.map(_.toString, args) + \")\";\n          };\n          obs.inspect = function() {\n            return obs.toString();\n          };\n          obs.desc = function() {\n            return {\n              context: context,\n              method: method,\n              args: args\n            };\n          };\n          return obs;\n        };\n      }\n      return Desc;\n    })();\n    withDescription = function() {\n      var desc,\n          obs,\n          _i;\n      desc = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), obs = arguments[_i++];\n      return describe.apply(null, desc).apply(obs);\n    };\n    Bacon.when = function() {\n      var f,\n          i,\n          index,\n          ix,\n          len,\n          needsBarrier,\n          pat,\n          patSources,\n          pats,\n          patterns,\n          resultStream,\n          s,\n          sources,\n          usage,\n          _i,\n          _j,\n          _len,\n          _len1,\n          _ref1;\n      patterns = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      if (patterns.length === 0) {\n        return Bacon.never();\n      }\n      len = patterns.length;\n      usage = \"when: expecting arguments in the form (Observable+,function)+\";\n      assert(usage, len % 2 === 0);\n      sources = [];\n      pats = [];\n      i = 0;\n      while (i < len) {\n        patSources = _.toArray(patterns[i]);\n        f = patterns[i + 1];\n        pat = {\n          f: (isFunction(f) ? f : (function() {\n            return f;\n          })),\n          ixs: []\n        };\n        for (_i = 0, _len = patSources.length; _i < _len; _i++) {\n          s = patSources[_i];\n          assert(isObservable(s), usage);\n          index = _.indexOf(sources, s);\n          if (index < 0) {\n            sources.push(s);\n            index = sources.length - 1;\n          }\n          _ref1 = pat.ixs;\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            ix = _ref1[_j];\n            if (ix.index === index) {\n              ix.count++;\n            }\n          }\n          pat.ixs.push({\n            index: index,\n            count: 1\n          });\n        }\n        if (patSources.length > 0) {\n          pats.push(pat);\n        }\n        i = i + 2;\n      }\n      if (!sources.length) {\n        return Bacon.never();\n      }\n      sources = _.map(Source.fromObservable, sources);\n      needsBarrier = (_.any(sources, function(s) {\n        return s.flatten;\n      })) && (containsDuplicateDeps(_.map((function(s) {\n        return s.obs;\n      }), sources)));\n      return resultStream = new EventStream(describe.apply(null, [Bacon, \"when\"].concat(__slice.call(patterns))), function(sink) {\n        var cannotMatch,\n            cannotSync,\n            ends,\n            match,\n            nonFlattened,\n            part,\n            triggers;\n        triggers = [];\n        ends = false;\n        match = function(p) {\n          var _k,\n              _len2,\n              _ref2;\n          _ref2 = p.ixs;\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            i = _ref2[_k];\n            if (!sources[i.index].hasAtLeast(i.count)) {\n              return false;\n            }\n          }\n          return true;\n        };\n        cannotSync = function(source) {\n          return !source.sync || source.ended;\n        };\n        cannotMatch = function(p) {\n          var _k,\n              _len2,\n              _ref2;\n          _ref2 = p.ixs;\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            i = _ref2[_k];\n            if (!sources[i.index].mayHave(i.count)) {\n              return true;\n            }\n          }\n        };\n        nonFlattened = function(trigger) {\n          return !trigger.source.flatten;\n        };\n        part = function(source) {\n          return function(unsubAll) {\n            var flush,\n                flushLater,\n                flushWhileTriggers;\n            flushLater = function() {\n              return UpdateBarrier.whenDoneWith(resultStream, flush);\n            };\n            flushWhileTriggers = function() {\n              var functions,\n                  p,\n                  reply,\n                  trigger,\n                  _k,\n                  _len2;\n              if (triggers.length > 0) {\n                reply = Bacon.more;\n                trigger = triggers.pop();\n                for (_k = 0, _len2 = pats.length; _k < _len2; _k++) {\n                  p = pats[_k];\n                  if (match(p)) {\n                    functions = (function() {\n                      var _l,\n                          _len3,\n                          _ref2,\n                          _results;\n                      _ref2 = p.ixs;\n                      _results = [];\n                      for (_l = 0, _len3 = _ref2.length; _l < _len3; _l++) {\n                        i = _ref2[_l];\n                        _results.push(sources[i.index].consume());\n                      }\n                      return _results;\n                    })();\n                    reply = sink(trigger.e.apply(function() {\n                      var fun,\n                          values;\n                      values = (function() {\n                        var _l,\n                            _len3,\n                            _results;\n                        _results = [];\n                        for (_l = 0, _len3 = functions.length; _l < _len3; _l++) {\n                          fun = functions[_l];\n                          _results.push(fun());\n                        }\n                        return _results;\n                      })();\n                      return p.f.apply(p, values);\n                    }));\n                    if (triggers.length && needsBarrier) {\n                      triggers = _.filter(nonFlattened, triggers);\n                    }\n                    if (reply === Bacon.noMore) {\n                      return reply;\n                    } else {\n                      return flushWhileTriggers();\n                    }\n                  }\n                }\n              } else {\n                return Bacon.more;\n              }\n            };\n            flush = function() {\n              var reply;\n              reply = flushWhileTriggers();\n              if (ends) {\n                ends = false;\n                if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n                  reply = Bacon.noMore;\n                  sink(end());\n                }\n              }\n              if (reply === Bacon.noMore) {\n                unsubAll();\n              }\n              return reply;\n            };\n            return source.subscribe(function(e) {\n              var reply;\n              if (e.isEnd()) {\n                ends = true;\n                source.markEnded();\n                flushLater();\n              } else if (e.isError()) {\n                reply = sink(e);\n              } else {\n                source.push(e.value);\n                if (source.sync) {\n                  triggers.push({\n                    source: source,\n                    e: e\n                  });\n                  if (needsBarrier) {\n                    flushLater();\n                  } else {\n                    flush();\n                  }\n                }\n              }\n              if (reply === Bacon.noMore) {\n                unsubAll();\n              }\n              return reply || Bacon.more;\n            });\n          };\n        };\n        return compositeUnsubscribe.apply(null, (function() {\n          var _k,\n              _len2,\n              _results;\n          _results = [];\n          for (_k = 0, _len2 = sources.length; _k < _len2; _k++) {\n            s = sources[_k];\n            _results.push(part(s));\n          }\n          return _results;\n        })());\n      });\n    };\n    containsDuplicateDeps = function(observables, state) {\n      var checkObservable;\n      if (state == null) {\n        state = [];\n      }\n      checkObservable = function(obs) {\n        var deps;\n        if (Bacon._.contains(state, obs)) {\n          return true;\n        } else {\n          deps = obs.internalDeps();\n          if (deps.length) {\n            state.push(obs);\n            return Bacon._.any(deps, checkObservable);\n          } else {\n            state.push(obs);\n            return false;\n          }\n        }\n      };\n      return Bacon._.any(observables, checkObservable);\n    };\n    Bacon.update = function() {\n      var i,\n          initial,\n          lateBindFirst,\n          patterns;\n      initial = arguments[0], patterns = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      lateBindFirst = function(f) {\n        return function() {\n          var args;\n          args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n          return function(i) {\n            return f.apply(null, [i].concat(args));\n          };\n        };\n      };\n      i = patterns.length - 1;\n      while (i > 0) {\n        if (!(patterns[i] instanceof Function)) {\n          patterns[i] = (function(x) {\n            return function() {\n              return x;\n            };\n          })(patterns[i]);\n        }\n        patterns[i] = lateBindFirst(patterns[i]);\n        i = i - 2;\n      }\n      return withDescription.apply(null, [Bacon, \"update\", initial].concat(__slice.call(patterns), [Bacon.when.apply(Bacon, patterns).scan(initial, (function(x, f) {\n        return f(x);\n      }))]));\n    };\n    compositeUnsubscribe = function() {\n      var ss;\n      ss = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return new CompositeUnsubscribe(ss).unsubscribe;\n    };\n    CompositeUnsubscribe = (function() {\n      function CompositeUnsubscribe(ss) {\n        var s,\n            _i,\n            _len;\n        if (ss == null) {\n          ss = [];\n        }\n        this.unsubscribe = __bind(this.unsubscribe, this);\n        this.unsubscribed = false;\n        this.subscriptions = [];\n        this.starting = [];\n        for (_i = 0, _len = ss.length; _i < _len; _i++) {\n          s = ss[_i];\n          this.add(s);\n        }\n      }\n      CompositeUnsubscribe.prototype.add = function(subscription) {\n        var ended,\n            unsub,\n            unsubMe;\n        if (this.unsubscribed) {\n          return;\n        }\n        ended = false;\n        unsub = nop;\n        this.starting.push(subscription);\n        unsubMe = (function(_this) {\n          return function() {\n            if (_this.unsubscribed) {\n              return;\n            }\n            ended = true;\n            _this.remove(unsub);\n            return _.remove(subscription, _this.starting);\n          };\n        })(this);\n        unsub = subscription(this.unsubscribe, unsubMe);\n        if (!(this.unsubscribed || ended)) {\n          this.subscriptions.push(unsub);\n        }\n        _.remove(subscription, this.starting);\n        return unsub;\n      };\n      CompositeUnsubscribe.prototype.remove = function(unsub) {\n        if (this.unsubscribed) {\n          return;\n        }\n        if ((_.remove(unsub, this.subscriptions)) !== void 0) {\n          return unsub();\n        }\n      };\n      CompositeUnsubscribe.prototype.unsubscribe = function() {\n        var s,\n            _i,\n            _len,\n            _ref1;\n        if (this.unsubscribed) {\n          return;\n        }\n        this.unsubscribed = true;\n        _ref1 = this.subscriptions;\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n          s = _ref1[_i];\n          s();\n        }\n        this.subscriptions = [];\n        return this.starting = [];\n      };\n      CompositeUnsubscribe.prototype.count = function() {\n        if (this.unsubscribed) {\n          return 0;\n        }\n        return this.subscriptions.length + this.starting.length;\n      };\n      CompositeUnsubscribe.prototype.empty = function() {\n        return this.count() === 0;\n      };\n      return CompositeUnsubscribe;\n    })();\n    Bacon.CompositeUnsubscribe = CompositeUnsubscribe;\n    Some = (function() {\n      function Some(value) {\n        this.value = value;\n      }\n      Some.prototype.getOrElse = function() {\n        return this.value;\n      };\n      Some.prototype.get = function() {\n        return this.value;\n      };\n      Some.prototype.filter = function(f) {\n        if (f(this.value)) {\n          return new Some(this.value);\n        } else {\n          return None;\n        }\n      };\n      Some.prototype.map = function(f) {\n        return new Some(f(this.value));\n      };\n      Some.prototype.forEach = function(f) {\n        return f(this.value);\n      };\n      Some.prototype.isDefined = true;\n      Some.prototype.toArray = function() {\n        return [this.value];\n      };\n      Some.prototype.inspect = function() {\n        return \"Some(\" + this.value + \")\";\n      };\n      Some.prototype.toString = function() {\n        return this.inspect();\n      };\n      return Some;\n    })();\n    None = {\n      getOrElse: function(value) {\n        return value;\n      },\n      filter: function() {\n        return None;\n      },\n      map: function() {\n        return None;\n      },\n      forEach: function() {},\n      isDefined: false,\n      toArray: function() {\n        return [];\n      },\n      inspect: function() {\n        return \"None\";\n      },\n      toString: function() {\n        return this.inspect();\n      }\n    };\n    UpdateBarrier = (function() {\n      var afterTransaction,\n          afters,\n          currentEventId,\n          findIndependent,\n          flush,\n          inTransaction,\n          independent,\n          rootEvent,\n          waiters,\n          whenDoneWith,\n          wrappedSubscribe;\n      rootEvent = void 0;\n      waiters = [];\n      afters = [];\n      afterTransaction = function(f) {\n        if (rootEvent) {\n          return afters.push(f);\n        } else {\n          return f();\n        }\n      };\n      independent = function(waiter) {\n        return !_.any(waiters, (function(other) {\n          return waiter.obs.dependsOn(other.obs);\n        }));\n      };\n      whenDoneWith = function(obs, f) {\n        if (rootEvent) {\n          return waiters.push({\n            obs: obs,\n            f: f\n          });\n        } else {\n          return f();\n        }\n      };\n      findIndependent = function() {\n        while (!independent(waiters[0])) {\n          waiters.push(waiters.splice(0, 1)[0]);\n        }\n        return waiters.splice(0, 1)[0];\n      };\n      flush = function() {\n        var _results;\n        _results = [];\n        while (waiters.length) {\n          _results.push(findIndependent().f());\n        }\n        return _results;\n      };\n      inTransaction = function(event, context, f, args) {\n        var result;\n        if (rootEvent) {\n          return f.apply(context, args);\n        } else {\n          rootEvent = event;\n          try {\n            result = f.apply(context, args);\n            flush();\n          } finally {\n            rootEvent = void 0;\n            while (afters.length) {\n              f = afters.splice(0, 1)[0];\n              f();\n            }\n          }\n          return result;\n        }\n      };\n      currentEventId = function() {\n        if (rootEvent) {\n          return rootEvent.id;\n        } else {\n          return void 0;\n        }\n      };\n      wrappedSubscribe = function(obs) {\n        return function(sink) {\n          var doUnsub,\n              unsub,\n              unsubd;\n          unsubd = false;\n          doUnsub = function() {};\n          unsub = function() {\n            unsubd = true;\n            return doUnsub();\n          };\n          if (!unsubd) {\n            doUnsub = obs.subscribeInternal(function(event) {\n              return afterTransaction(function() {\n                var reply;\n                if (!unsubd) {\n                  reply = sink(event);\n                  if (reply === Bacon.noMore) {\n                    return unsub();\n                  }\n                }\n              });\n            });\n          }\n          return unsub;\n        };\n      };\n      return {\n        whenDoneWith: whenDoneWith,\n        inTransaction: inTransaction,\n        currentEventId: currentEventId,\n        wrappedSubscribe: wrappedSubscribe\n      };\n    })();\n    Bacon.EventStream = EventStream;\n    Bacon.Property = Property;\n    Bacon.Observable = Observable;\n    Bacon.Bus = Bus;\n    Bacon.Initial = Initial;\n    Bacon.Next = Next;\n    Bacon.End = End;\n    Bacon.Error = Error;\n    nop = function() {};\n    latterF = function(_, x) {\n      return x();\n    };\n    former = function(x, _) {\n      return x;\n    };\n    initial = function(value) {\n      return new Initial(_.always(value));\n    };\n    next = function(value) {\n      return new Next(_.always(value));\n    };\n    end = function() {\n      return new End();\n    };\n    toEvent = function(x) {\n      if (x instanceof Event) {\n        return x;\n      } else {\n        return next(x);\n      }\n    };\n    cloneArray = function(xs) {\n      return xs.slice(0);\n    };\n    assert = function(message, condition) {\n      if (!condition) {\n        throw message;\n      }\n    };\n    assertEventStream = function(event) {\n      if (!(event instanceof EventStream)) {\n        throw \"not an EventStream : \" + event;\n      }\n    };\n    assertFunction = function(f) {\n      return assert(\"not a function : \" + f, isFunction(f));\n    };\n    isFunction = function(f) {\n      return typeof f === \"function\";\n    };\n    isArray = function(xs) {\n      return xs instanceof Array;\n    };\n    isObservable = function(x) {\n      return x instanceof Observable;\n    };\n    assertArray = function(xs) {\n      if (!isArray(xs)) {\n        throw \"not an array : \" + xs;\n      }\n    };\n    assertNoArguments = function(args) {\n      return assert(\"no arguments supported\", args.length === 0);\n    };\n    assertString = function(x) {\n      if (typeof x !== \"string\") {\n        throw \"not a string : \" + x;\n      }\n    };\n    partiallyApplied = function(f, applied) {\n      return function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return f.apply(null, applied.concat(args));\n      };\n    };\n    makeSpawner = function(args) {\n      if (args.length === 1 && isObservable(args[0])) {\n        return _.always(args[0]);\n      } else {\n        return makeFunctionArgs(args);\n      }\n    };\n    makeFunctionArgs = function(args) {\n      args = Array.prototype.slice.call(args);\n      return makeFunction_.apply(null, args);\n    };\n    makeFunction_ = withMethodCallSupport(function() {\n      var args,\n          f;\n      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (isFunction(f)) {\n        if (args.length) {\n          return partiallyApplied(f, args);\n        } else {\n          return f;\n        }\n      } else if (isFieldKey(f)) {\n        return toFieldExtractor(f, args);\n      } else {\n        return _.always(f);\n      }\n    });\n    makeFunction = function(f, args) {\n      return makeFunction_.apply(null, [f].concat(__slice.call(args)));\n    };\n    makeObservable = function(x) {\n      if (isObservable(x)) {\n        return x;\n      } else {\n        return Bacon.once(x);\n      }\n    };\n    isFieldKey = function(f) {\n      return (typeof f === \"string\") && f.length > 1 && f.charAt(0) === \".\";\n    };\n    Bacon.isFieldKey = isFieldKey;\n    toFieldExtractor = function(f, args) {\n      var partFuncs,\n          parts;\n      parts = f.slice(1).split(\".\");\n      partFuncs = _.map(toSimpleExtractor(args), parts);\n      return function(value) {\n        var _i,\n            _len;\n        for (_i = 0, _len = partFuncs.length; _i < _len; _i++) {\n          f = partFuncs[_i];\n          value = f(value);\n        }\n        return value;\n      };\n    };\n    toSimpleExtractor = function(args) {\n      return function(key) {\n        return function(value) {\n          var fieldValue;\n          if (value == null) {\n            return void 0;\n          } else {\n            fieldValue = value[key];\n            if (isFunction(fieldValue)) {\n              return fieldValue.apply(value, args);\n            } else {\n              return fieldValue;\n            }\n          }\n        };\n      };\n    };\n    toFieldKey = function(f) {\n      return f.slice(1);\n    };\n    toCombinator = function(f) {\n      var key;\n      if (isFunction(f)) {\n        return f;\n      } else if (isFieldKey(f)) {\n        key = toFieldKey(f);\n        return function(left, right) {\n          return left[key](right);\n        };\n      } else {\n        return assert(\"not a function or a field key: \" + f, false);\n      }\n    };\n    toOption = function(v) {\n      if (v instanceof Some || v === None) {\n        return v;\n      } else {\n        return new Some(v);\n      }\n    };\n    _ = {\n      indexOf: Array.prototype.indexOf ? function(xs, x) {\n        return xs.indexOf(x);\n      } : function(xs, x) {\n        var i,\n            y,\n            _i,\n            _len;\n        for (i = _i = 0, _len = xs.length; _i < _len; i = ++_i) {\n          y = xs[i];\n          if (x === y) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      indexWhere: function(xs, f) {\n        var i,\n            y,\n            _i,\n            _len;\n        for (i = _i = 0, _len = xs.length; _i < _len; i = ++_i) {\n          y = xs[i];\n          if (f(y)) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      head: function(xs) {\n        return xs[0];\n      },\n      always: function(x) {\n        return function() {\n          return x;\n        };\n      },\n      negate: function(f) {\n        return function(x) {\n          return !f(x);\n        };\n      },\n      empty: function(xs) {\n        return xs.length === 0;\n      },\n      tail: function(xs) {\n        return xs.slice(1, xs.length);\n      },\n      filter: function(f, xs) {\n        var filtered,\n            x,\n            _i,\n            _len;\n        filtered = [];\n        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n          x = xs[_i];\n          if (f(x)) {\n            filtered.push(x);\n          }\n        }\n        return filtered;\n      },\n      map: function(f, xs) {\n        var x,\n            _i,\n            _len,\n            _results;\n        _results = [];\n        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n          x = xs[_i];\n          _results.push(f(x));\n        }\n        return _results;\n      },\n      each: function(xs, f) {\n        var key,\n            value,\n            _results;\n        _results = [];\n        for (key in xs) {\n          value = xs[key];\n          _results.push(f(key, value));\n        }\n        return _results;\n      },\n      toArray: function(xs) {\n        if (isArray(xs)) {\n          return xs;\n        } else {\n          return [xs];\n        }\n      },\n      contains: function(xs, x) {\n        return _.indexOf(xs, x) !== -1;\n      },\n      id: function(x) {\n        return x;\n      },\n      last: function(xs) {\n        return xs[xs.length - 1];\n      },\n      all: function(xs, f) {\n        var x,\n            _i,\n            _len;\n        if (f == null) {\n          f = _.id;\n        }\n        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n          x = xs[_i];\n          if (!f(x)) {\n            return false;\n          }\n        }\n        return true;\n      },\n      any: function(xs, f) {\n        var x,\n            _i,\n            _len;\n        if (f == null) {\n          f = _.id;\n        }\n        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n          x = xs[_i];\n          if (f(x)) {\n            return true;\n          }\n        }\n        return false;\n      },\n      without: function(x, xs) {\n        return _.filter((function(y) {\n          return y !== x;\n        }), xs);\n      },\n      remove: function(x, xs) {\n        var i;\n        i = _.indexOf(xs, x);\n        if (i >= 0) {\n          return xs.splice(i, 1);\n        }\n      },\n      fold: function(xs, seed, f) {\n        var x,\n            _i,\n            _len;\n        for (_i = 0, _len = xs.length; _i < _len; _i++) {\n          x = xs[_i];\n          seed = f(seed, x);\n        }\n        return seed;\n      },\n      flatMap: function(f, xs) {\n        return _.fold(xs, [], (function(ys, x) {\n          return ys.concat(f(x));\n        }));\n      },\n      cached: function(f) {\n        var value;\n        value = None;\n        return function() {\n          if (value === None) {\n            value = f();\n            f = null;\n          }\n          return value;\n        };\n      },\n      toString: function(obj) {\n        var ex,\n            internals,\n            key,\n            value;\n        try {\n          recursionDepth++;\n          if (obj == null) {\n            return \"undefined\";\n          } else if (isFunction(obj)) {\n            return \"function\";\n          } else if (isArray(obj)) {\n            if (recursionDepth > 5) {\n              return \"[..]\";\n            }\n            return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n          } else if (((obj != null ? obj.toString : void 0) != null) && obj.toString !== Object.prototype.toString) {\n            return obj.toString();\n          } else if (typeof obj === \"object\") {\n            if (recursionDepth > 5) {\n              return \"{..}\";\n            }\n            internals = (function() {\n              var _results;\n              _results = [];\n              for (key in obj) {\n                if (!__hasProp.call(obj, key))\n                  continue;\n                value = (function() {\n                  try {\n                    return obj[key];\n                  } catch (_error) {\n                    ex = _error;\n                    return ex;\n                  }\n                })();\n                _results.push(_.toString(key) + \":\" + _.toString(value));\n              }\n              return _results;\n            })();\n            return \"{\" + internals + \"}\";\n          } else {\n            return obj;\n          }\n        } finally {\n          recursionDepth--;\n        }\n      }\n    };\n    recursionDepth = 0;\n    Bacon._ = _;\n    Bacon.scheduler = {\n      setTimeout: function(f, d) {\n        return setTimeout(f, d);\n      },\n      setInterval: function(f, i) {\n        return setInterval(f, i);\n      },\n      clearInterval: function(id) {\n        return clearInterval(id);\n      },\n      now: function() {\n        return new Date().getTime();\n      }\n    };\n    if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n      define([], function() {\n        return Bacon;\n      });\n      this.Bacon = Bacon;\n    } else if (typeof module !== \"undefined\" && module !== null) {\n      module.exports = Bacon;\n      Bacon.Bacon = Bacon;\n    } else {\n      this.Bacon = Bacon;\n    }\n  }).call(this);\n  return {};\n}.call(typeof global !== 'undefined' ? global : this);\n\n","(function() {\n  var Bacon, BufferingSource, Bus, CompositeUnsubscribe, ConsumingSource, Desc, Dispatcher, End, Error, Event, EventStream, Initial, Next, None, Observable, Property, PropertyDispatcher, Some, Source, UpdateBarrier, addPropertyInitValueToStream, assert, assertArray, assertEventStream, assertFunction, assertNoArguments, assertString, cloneArray, compositeUnsubscribe, containsDuplicateDeps, convertArgsToFunction, describe, end, eventIdCounter, flatMap_, former, idCounter, initial, isArray, isFieldKey, isFunction, isObservable, latterF, liftCallback, makeFunction, makeFunctionArgs, makeFunction_, makeObservable, makeSpawner, next, nop, partiallyApplied, recursionDepth, registerObs, spys, toCombinator, toEvent, toFieldExtractor, toFieldKey, toOption, toSimpleExtractor, withDescription, withMethodCallSupport, _, _ref,\n    __slice = [].slice,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  Bacon = {\n    toString: function() {\n      return \"Bacon\";\n    }\n  };\n\n  Bacon.version = '0.7.11';\n\n  Bacon.fromBinder = function(binder, eventTransformer) {\n    if (eventTransformer == null) {\n      eventTransformer = _.id;\n    }\n    return new EventStream(describe(Bacon, \"fromBinder\", binder, eventTransformer), function(sink) {\n      var unbinder;\n      return unbinder = binder(function() {\n        var args, event, reply, value, _i, _len;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        value = eventTransformer.apply(null, args);\n        if (!(isArray(value) && _.last(value) instanceof Event)) {\n          value = [value];\n        }\n        reply = Bacon.more;\n        for (_i = 0, _len = value.length; _i < _len; _i++) {\n          event = value[_i];\n          reply = sink(event = toEvent(event));\n          if (reply === Bacon.noMore || event.isEnd()) {\n            if (unbinder != null) {\n              unbinder();\n            } else {\n              Bacon.scheduler.setTimeout((function() {\n                return unbinder();\n              }), 0);\n            }\n            return reply;\n          }\n        }\n        return reply;\n      });\n    });\n  };\n\n  Bacon.$ = {\n    asEventStream: function(eventName, selector, eventTransformer) {\n      var _ref;\n      if (isFunction(selector)) {\n        _ref = [selector, null], eventTransformer = _ref[0], selector = _ref[1];\n      }\n      return withDescription(this.selector || this, \"asEventStream\", eventName, Bacon.fromBinder((function(_this) {\n        return function(handler) {\n          _this.on(eventName, selector, handler);\n          return function() {\n            return _this.off(eventName, selector, handler);\n          };\n        };\n      })(this), eventTransformer));\n    }\n  };\n\n  if ((_ref = typeof jQuery !== \"undefined\" && jQuery !== null ? jQuery : typeof Zepto !== \"undefined\" && Zepto !== null ? Zepto : null) != null) {\n    _ref.fn.asEventStream = Bacon.$.asEventStream;\n  }\n\n  Bacon.fromEventTarget = function(target, eventName, eventTransformer) {\n    var sub, unsub, _ref1, _ref2, _ref3, _ref4;\n    sub = (_ref1 = target.addEventListener) != null ? _ref1 : (_ref2 = target.addListener) != null ? _ref2 : target.bind;\n    unsub = (_ref3 = target.removeEventListener) != null ? _ref3 : (_ref4 = target.removeListener) != null ? _ref4 : target.unbind;\n    return withDescription(Bacon, \"fromEventTarget\", target, eventName, Bacon.fromBinder(function(handler) {\n      sub.call(target, eventName, handler);\n      return function() {\n        return unsub.call(target, eventName, handler);\n      };\n    }, eventTransformer));\n  };\n\n  Bacon.fromPromise = function(promise, abort) {\n    return withDescription(Bacon, \"fromPromise\", promise, Bacon.fromBinder(function(handler) {\n      promise.then(handler, function(e) {\n        return handler(new Error(e));\n      });\n      return function() {\n        if (abort) {\n          return typeof promise.abort === \"function\" ? promise.abort() : void 0;\n        }\n      };\n    }, (function(value) {\n      return [value, end()];\n    })));\n  };\n\n  Bacon.noMore = [\"<no-more>\"];\n\n  Bacon.more = [\"<more>\"];\n\n  Bacon.later = function(delay, value) {\n    return withDescription(Bacon, \"later\", delay, value, Bacon.sequentially(delay, [value]));\n  };\n\n  Bacon.sequentially = function(delay, values) {\n    var index;\n    index = 0;\n    return withDescription(Bacon, \"sequentially\", delay, values, Bacon.fromPoll(delay, function() {\n      var value;\n      value = values[index++];\n      if (index < values.length) {\n        return value;\n      } else if (index === values.length) {\n        return [value, end()];\n      } else {\n        return end();\n      }\n    }));\n  };\n\n  Bacon.repeatedly = function(delay, values) {\n    var index;\n    index = 0;\n    return withDescription(Bacon, \"repeatedly\", delay, values, Bacon.fromPoll(delay, function() {\n      return values[index++ % values.length];\n    }));\n  };\n\n  Bacon.spy = function(spy) {\n    return spys.push(spy);\n  };\n\n  spys = [];\n\n  registerObs = function(obs) {\n    var spy, _i, _len, _results;\n    if (spys.length) {\n      if (!registerObs.running) {\n        try {\n          registerObs.running = true;\n          _results = [];\n          for (_i = 0, _len = spys.length; _i < _len; _i++) {\n            spy = spys[_i];\n            _results.push(spy(obs));\n          }\n          return _results;\n        } finally {\n          delete registerObs.running;\n        }\n      }\n    }\n  };\n\n  withMethodCallSupport = function(wrapped) {\n    return function() {\n      var args, context, f, methodName;\n      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (typeof f === \"object\" && args.length) {\n        context = f;\n        methodName = args[0];\n        f = function() {\n          return context[methodName].apply(context, arguments);\n        };\n        args = args.slice(1);\n      }\n      return wrapped.apply(null, [f].concat(__slice.call(args)));\n    };\n  };\n\n  liftCallback = function(desc, wrapped) {\n    return withMethodCallSupport(function() {\n      var args, f, stream;\n      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      stream = partiallyApplied(wrapped, [\n        function(values, callback) {\n          return f.apply(null, __slice.call(values).concat([callback]));\n        }\n      ]);\n      return withDescription.apply(null, [Bacon, desc, f].concat(__slice.call(args), [Bacon.combineAsArray(args).flatMap(stream)]));\n    });\n  };\n\n  Bacon.fromCallback = liftCallback(\"fromCallback\", function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    return Bacon.fromBinder(function(handler) {\n      makeFunction(f, args)(handler);\n      return nop;\n    }, (function(value) {\n      return [value, end()];\n    }));\n  });\n\n  Bacon.fromNodeCallback = liftCallback(\"fromNodeCallback\", function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    return Bacon.fromBinder(function(handler) {\n      makeFunction(f, args)(handler);\n      return nop;\n    }, function(error, value) {\n      if (error) {\n        return [new Error(error), end()];\n      }\n      return [value, end()];\n    });\n  });\n\n  Bacon.fromPoll = function(delay, poll) {\n    return withDescription(Bacon, \"fromPoll\", delay, poll, Bacon.fromBinder((function(handler) {\n      var id;\n      id = Bacon.scheduler.setInterval(handler, delay);\n      return function() {\n        return Bacon.scheduler.clearInterval(id);\n      };\n    }), poll));\n  };\n\n  Bacon.interval = function(delay, value) {\n    if (value == null) {\n      value = {};\n    }\n    return withDescription(Bacon, \"interval\", delay, value, Bacon.fromPoll(delay, function() {\n      return next(value);\n    }));\n  };\n\n  Bacon.constant = function(value) {\n    return new Property(describe(Bacon, \"constant\", value), function(sink) {\n      sink(initial(value));\n      sink(end());\n      return nop;\n    });\n  };\n\n  Bacon.never = function() {\n    return withDescription(Bacon, \"never\", Bacon.fromArray([]));\n  };\n\n  Bacon.once = function(value) {\n    return withDescription(Bacon, \"once\", value, Bacon.fromArray([value]));\n  };\n\n  Bacon.fromArray = function(values) {\n    assertArray(values);\n    values = cloneArray(values);\n    return new EventStream(describe(Bacon, \"fromArray\", values), function(sink) {\n      var send, unsubd;\n      unsubd = false;\n      send = function() {\n        var reply, value;\n        if (_.empty(values)) {\n          return sink(end());\n        } else {\n          value = values.splice(0, 1)[0];\n          reply = sink(toEvent(value));\n          if ((reply !== Bacon.noMore) && !unsubd) {\n            return send();\n          }\n        }\n      };\n      send();\n      return function() {\n        return unsubd = true;\n      };\n    });\n  };\n\n  Bacon.mergeAll = function() {\n    var streams;\n    streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (isArray(streams[0])) {\n      streams = streams[0];\n    }\n    return withDescription.apply(null, [Bacon, \"mergeAll\"].concat(__slice.call(streams), [_.fold(streams, Bacon.never(), (function(a, b) {\n      return a.merge(b);\n    }))]));\n  };\n\n  Bacon.zipAsArray = function() {\n    var streams;\n    streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (isArray(streams[0])) {\n      streams = streams[0];\n    }\n    return withDescription.apply(null, [Bacon, \"zipAsArray\"].concat(__slice.call(streams), [Bacon.zipWith(streams, function() {\n      var xs;\n      xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return xs;\n    })]));\n  };\n\n  Bacon.zipWith = function() {\n    var f, streams, _ref1;\n    f = arguments[0], streams = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    if (!isFunction(f)) {\n      _ref1 = [f, streams[0]], streams = _ref1[0], f = _ref1[1];\n    }\n    streams = _.map((function(s) {\n      return s.toEventStream();\n    }), streams);\n    return withDescription.apply(null, [Bacon, \"zipWith\", f].concat(__slice.call(streams), [Bacon.when(streams, f)]));\n  };\n\n  Bacon.groupSimultaneous = function() {\n    var s, sources, streams;\n    streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (streams.length === 1 && isArray(streams[0])) {\n      streams = streams[0];\n    }\n    sources = (function() {\n      var _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = streams.length; _i < _len; _i++) {\n        s = streams[_i];\n        _results.push(new BufferingSource(s));\n      }\n      return _results;\n    })();\n    return withDescription.apply(null, [Bacon, \"groupSimultaneous\"].concat(__slice.call(streams), [Bacon.when(sources, (function() {\n      var xs;\n      xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return xs;\n    }))]));\n  };\n\n  Bacon.combineAsArray = function() {\n    var index, s, sources, stream, streams, _i, _len;\n    streams = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (streams.length === 1 && isArray(streams[0])) {\n      streams = streams[0];\n    }\n    for (index = _i = 0, _len = streams.length; _i < _len; index = ++_i) {\n      stream = streams[index];\n      if (!(isObservable(stream))) {\n        streams[index] = Bacon.constant(stream);\n      }\n    }\n    if (streams.length) {\n      sources = (function() {\n        var _j, _len1, _results;\n        _results = [];\n        for (_j = 0, _len1 = streams.length; _j < _len1; _j++) {\n          s = streams[_j];\n          _results.push(new Source(s, true, s.subscribeInternal));\n        }\n        return _results;\n      })();\n      return withDescription.apply(null, [Bacon, \"combineAsArray\"].concat(__slice.call(streams), [Bacon.when(sources, (function() {\n        var xs;\n        xs = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return xs;\n      })).toProperty()]));\n    } else {\n      return Bacon.constant([]);\n    }\n  };\n\n  Bacon.onValues = function() {\n    var f, streams, _i;\n    streams = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), f = arguments[_i++];\n    return Bacon.combineAsArray(streams).onValues(f);\n  };\n\n  Bacon.combineWith = function() {\n    var f, streams;\n    f = arguments[0], streams = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    return withDescription.apply(null, [Bacon, \"combineWith\", f].concat(__slice.call(streams), [Bacon.combineAsArray(streams).map(function(values) {\n      return f.apply(null, values);\n    })]));\n  };\n\n  Bacon.combineTemplate = function(template) {\n    var applyStreamValue, combinator, compile, compileTemplate, constantValue, current, funcs, mkContext, setValue, streams;\n    funcs = [];\n    streams = [];\n    current = function(ctxStack) {\n      return ctxStack[ctxStack.length - 1];\n    };\n    setValue = function(ctxStack, key, value) {\n      return current(ctxStack)[key] = value;\n    };\n    applyStreamValue = function(key, index) {\n      return function(ctxStack, values) {\n        return setValue(ctxStack, key, values[index]);\n      };\n    };\n    constantValue = function(key, value) {\n      return function(ctxStack) {\n        return setValue(ctxStack, key, value);\n      };\n    };\n    mkContext = function(template) {\n      if (isArray(template)) {\n        return [];\n      } else {\n        return {};\n      }\n    };\n    compile = function(key, value) {\n      var popContext, pushContext;\n      if (isObservable(value)) {\n        streams.push(value);\n        return funcs.push(applyStreamValue(key, streams.length - 1));\n      } else if (value === Object(value) && typeof value !== \"function\" && !(value instanceof RegExp) && !(value instanceof Date)) {\n        pushContext = function(key) {\n          return function(ctxStack) {\n            var newContext;\n            newContext = mkContext(value);\n            setValue(ctxStack, key, newContext);\n            return ctxStack.push(newContext);\n          };\n        };\n        popContext = function(ctxStack) {\n          return ctxStack.pop();\n        };\n        funcs.push(pushContext(key));\n        compileTemplate(value);\n        return funcs.push(popContext);\n      } else {\n        return funcs.push(constantValue(key, value));\n      }\n    };\n    compileTemplate = function(template) {\n      return _.each(template, compile);\n    };\n    compileTemplate(template);\n    combinator = function(values) {\n      var ctxStack, f, rootContext, _i, _len;\n      rootContext = mkContext(template);\n      ctxStack = [rootContext];\n      for (_i = 0, _len = funcs.length; _i < _len; _i++) {\n        f = funcs[_i];\n        f(ctxStack, values);\n      }\n      return rootContext;\n    };\n    return withDescription(Bacon, \"combineTemplate\", template, Bacon.combineAsArray(streams).map(combinator));\n  };\n\n  eventIdCounter = 0;\n\n  Event = (function() {\n    function Event() {\n      this.id = ++eventIdCounter;\n    }\n\n    Event.prototype.isEvent = function() {\n      return true;\n    };\n\n    Event.prototype.isEnd = function() {\n      return false;\n    };\n\n    Event.prototype.isInitial = function() {\n      return false;\n    };\n\n    Event.prototype.isNext = function() {\n      return false;\n    };\n\n    Event.prototype.isError = function() {\n      return false;\n    };\n\n    Event.prototype.hasValue = function() {\n      return false;\n    };\n\n    Event.prototype.filter = function() {\n      return true;\n    };\n\n    Event.prototype.inspect = function() {\n      return this.toString();\n    };\n\n    Event.prototype.log = function() {\n      return this.toString();\n    };\n\n    return Event;\n\n  })();\n\n  Next = (function(_super) {\n    __extends(Next, _super);\n\n    function Next(valueF) {\n      Next.__super__.constructor.call(this);\n      if (isFunction(valueF)) {\n        this.value = _.cached(valueF);\n      } else {\n        this.value = _.always(valueF);\n      }\n    }\n\n    Next.prototype.isNext = function() {\n      return true;\n    };\n\n    Next.prototype.hasValue = function() {\n      return true;\n    };\n\n    Next.prototype.fmap = function(f) {\n      var value;\n      value = this.value;\n      return this.apply(function() {\n        return f(value());\n      });\n    };\n\n    Next.prototype.apply = function(value) {\n      return new Next(value);\n    };\n\n    Next.prototype.filter = function(f) {\n      return f(this.value());\n    };\n\n    Next.prototype.toString = function() {\n      return _.toString(this.value());\n    };\n\n    Next.prototype.log = function() {\n      return this.value();\n    };\n\n    return Next;\n\n  })(Event);\n\n  Initial = (function(_super) {\n    __extends(Initial, _super);\n\n    function Initial() {\n      return Initial.__super__.constructor.apply(this, arguments);\n    }\n\n    Initial.prototype.isInitial = function() {\n      return true;\n    };\n\n    Initial.prototype.isNext = function() {\n      return false;\n    };\n\n    Initial.prototype.apply = function(value) {\n      return new Initial(value);\n    };\n\n    Initial.prototype.toNext = function() {\n      return new Next(this.value);\n    };\n\n    return Initial;\n\n  })(Next);\n\n  End = (function(_super) {\n    __extends(End, _super);\n\n    function End() {\n      return End.__super__.constructor.apply(this, arguments);\n    }\n\n    End.prototype.isEnd = function() {\n      return true;\n    };\n\n    End.prototype.fmap = function() {\n      return this;\n    };\n\n    End.prototype.apply = function() {\n      return this;\n    };\n\n    End.prototype.toString = function() {\n      return \"<end>\";\n    };\n\n    return End;\n\n  })(Event);\n\n  Error = (function(_super) {\n    __extends(Error, _super);\n\n    function Error(error) {\n      this.error = error;\n    }\n\n    Error.prototype.isError = function() {\n      return true;\n    };\n\n    Error.prototype.fmap = function() {\n      return this;\n    };\n\n    Error.prototype.apply = function() {\n      return this;\n    };\n\n    Error.prototype.toString = function() {\n      return \"<error> \" + _.toString(this.error);\n    };\n\n    return Error;\n\n  })(Event);\n\n  idCounter = 0;\n\n  Observable = (function() {\n    function Observable(desc) {\n      this.id = ++idCounter;\n      withDescription(desc, this);\n    }\n\n    Observable.prototype.onValue = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return this.subscribe(function(event) {\n        if (event.hasValue()) {\n          return f(event.value());\n        }\n      });\n    };\n\n    Observable.prototype.onValues = function(f) {\n      return this.onValue(function(args) {\n        return f.apply(null, args);\n      });\n    };\n\n    Observable.prototype.onError = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return this.subscribe(function(event) {\n        if (event.isError()) {\n          return f(event.error);\n        }\n      });\n    };\n\n    Observable.prototype.onEnd = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return this.subscribe(function(event) {\n        if (event.isEnd()) {\n          return f();\n        }\n      });\n    };\n\n    Observable.prototype.errors = function() {\n      return withDescription(this, \"errors\", this.filter(function() {\n        return false;\n      }));\n    };\n\n    Observable.prototype.filter = function() {\n      var args, f;\n      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      return convertArgsToFunction(this, f, args, function(f) {\n        return withDescription(this, \"filter\", f, this.withHandler(function(event) {\n          if (event.filter(f)) {\n            return this.push(event);\n          } else {\n            return Bacon.more;\n          }\n        }));\n      });\n    };\n\n    Observable.prototype.takeWhile = function() {\n      var args, f;\n      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      return convertArgsToFunction(this, f, args, function(f) {\n        return withDescription(this, \"takeWhile\", f, this.withHandler(function(event) {\n          if (event.filter(f)) {\n            return this.push(event);\n          } else {\n            this.push(end());\n            return Bacon.noMore;\n          }\n        }));\n      });\n    };\n\n    Observable.prototype.endOnError = function() {\n      var args, f;\n      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (f == null) {\n        f = true;\n      }\n      return convertArgsToFunction(this, f, args, function(f) {\n        return withDescription(this, \"endOnError\", this.withHandler(function(event) {\n          if (event.isError() && f(event.error)) {\n            this.push(event);\n            return this.push(end());\n          } else {\n            return this.push(event);\n          }\n        }));\n      });\n    };\n\n    Observable.prototype.take = function(count) {\n      if (count <= 0) {\n        return Bacon.never();\n      }\n      return withDescription(this, \"take\", count, this.withHandler(function(event) {\n        if (!event.hasValue()) {\n          return this.push(event);\n        } else {\n          count--;\n          if (count > 0) {\n            return this.push(event);\n          } else {\n            if (count === 0) {\n              this.push(event);\n            }\n            this.push(end());\n            return Bacon.noMore;\n          }\n        }\n      }));\n    };\n\n    Observable.prototype.map = function() {\n      var args, p;\n      p = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (p instanceof Property) {\n        return p.sampledBy(this, former);\n      } else {\n        return convertArgsToFunction(this, p, args, function(f) {\n          return withDescription(this, \"map\", f, this.withHandler(function(event) {\n            return this.push(event.fmap(f));\n          }));\n        });\n      }\n    };\n\n    Observable.prototype.mapError = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return withDescription(this, \"mapError\", f, this.withHandler(function(event) {\n        if (event.isError()) {\n          return this.push(next(f(event.error)));\n        } else {\n          return this.push(event);\n        }\n      }));\n    };\n\n    Observable.prototype.mapEnd = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return withDescription(this, \"mapEnd\", f, this.withHandler(function(event) {\n        if (event.isEnd()) {\n          this.push(next(f(event)));\n          this.push(end());\n          return Bacon.noMore;\n        } else {\n          return this.push(event);\n        }\n      }));\n    };\n\n    Observable.prototype.doAction = function() {\n      var f;\n      f = makeFunctionArgs(arguments);\n      return withDescription(this, \"doAction\", f, this.withHandler(function(event) {\n        if (event.hasValue()) {\n          f(event.value());\n        }\n        return this.push(event);\n      }));\n    };\n\n    Observable.prototype.skip = function(count) {\n      return withDescription(this, \"skip\", count, this.withHandler(function(event) {\n        if (!event.hasValue()) {\n          return this.push(event);\n        } else if (count > 0) {\n          count--;\n          return Bacon.more;\n        } else {\n          return this.push(event);\n        }\n      }));\n    };\n\n    Observable.prototype.skipDuplicates = function(isEqual) {\n      if (isEqual == null) {\n        isEqual = function(a, b) {\n          return a === b;\n        };\n      }\n      return withDescription(this, \"skipDuplicates\", this.withStateMachine(None, function(prev, event) {\n        if (!event.hasValue()) {\n          return [prev, [event]];\n        } else if (event.isInitial() || prev === None || !isEqual(prev.get(), event.value())) {\n          return [new Some(event.value()), [event]];\n        } else {\n          return [prev, []];\n        }\n      }));\n    };\n\n    Observable.prototype.skipErrors = function() {\n      return withDescription(this, \"skipErrors\", this.withHandler(function(event) {\n        if (event.isError()) {\n          return Bacon.more;\n        } else {\n          return this.push(event);\n        }\n      }));\n    };\n\n    Observable.prototype.withStateMachine = function(initState, f) {\n      var state;\n      state = initState;\n      return withDescription(this, \"withStateMachine\", initState, f, this.withHandler(function(event) {\n        var fromF, newState, output, outputs, reply, _i, _len;\n        fromF = f(state, event);\n        newState = fromF[0], outputs = fromF[1];\n        state = newState;\n        reply = Bacon.more;\n        for (_i = 0, _len = outputs.length; _i < _len; _i++) {\n          output = outputs[_i];\n          reply = this.push(output);\n          if (reply === Bacon.noMore) {\n            return reply;\n          }\n        }\n        return reply;\n      }));\n    };\n\n    Observable.prototype.scan = function(seed, f, lazyF) {\n      var acc, f_, resultProperty, subscribe;\n      f_ = toCombinator(f);\n      f = lazyF ? f_ : function(x, y) {\n        return f_(x(), y());\n      };\n      acc = toOption(seed).map(function(x) {\n        return _.always(x);\n      });\n      subscribe = (function(_this) {\n        return function(sink) {\n          var initSent, reply, sendInit, unsub;\n          initSent = false;\n          unsub = nop;\n          reply = Bacon.more;\n          sendInit = function() {\n            if (!initSent) {\n              return acc.forEach(function(valueF) {\n                initSent = true;\n                reply = sink(new Initial(valueF));\n                if (reply === Bacon.noMore) {\n                  unsub();\n                  return unsub = nop;\n                }\n              });\n            }\n          };\n          unsub = _this.subscribeInternal(function(event) {\n            var next, prev;\n            if (event.hasValue()) {\n              if (initSent && event.isInitial()) {\n                return Bacon.more;\n              } else {\n                if (!event.isInitial()) {\n                  sendInit();\n                }\n                initSent = true;\n                prev = acc.getOrElse(function() {\n                  return void 0;\n                });\n                next = _.cached(function() {\n                  return f(prev, event.value);\n                });\n                acc = new Some(next);\n                return sink(event.apply(next));\n              }\n            } else {\n              if (event.isEnd()) {\n                reply = sendInit();\n              }\n              if (reply !== Bacon.noMore) {\n                return sink(event);\n              }\n            }\n          });\n          UpdateBarrier.whenDoneWith(resultProperty, sendInit);\n          return unsub;\n        };\n      })(this);\n      return resultProperty = new Property(describe(this, \"scan\", seed, f), subscribe);\n    };\n\n    Observable.prototype.fold = function(seed, f) {\n      return withDescription(this, \"fold\", seed, f, this.scan(seed, f).sampledBy(this.filter(false).mapEnd().toProperty()));\n    };\n\n    Observable.prototype.zip = function(other, f) {\n      if (f == null) {\n        f = Array;\n      }\n      return withDescription(this, \"zip\", other, Bacon.zipWith([this, other], f));\n    };\n\n    Observable.prototype.diff = function(start, f) {\n      f = toCombinator(f);\n      return withDescription(this, \"diff\", start, f, this.scan([start], function(prevTuple, next) {\n        return [next, f(prevTuple[0], next)];\n      }).filter(function(tuple) {\n        return tuple.length === 2;\n      }).map(function(tuple) {\n        return tuple[1];\n      }));\n    };\n\n    Observable.prototype.flatMap = function() {\n      return flatMap_(this, makeSpawner(arguments));\n    };\n\n    Observable.prototype.flatMapFirst = function() {\n      return flatMap_(this, makeSpawner(arguments), true);\n    };\n\n    Observable.prototype.flatMapLatest = function() {\n      var f, stream;\n      f = makeSpawner(arguments);\n      stream = this.toEventStream();\n      return withDescription(this, \"flatMapLatest\", f, stream.flatMap(function(value) {\n        return makeObservable(f(value)).takeUntil(stream);\n      }));\n    };\n\n    Observable.prototype.not = function() {\n      return withDescription(this, \"not\", this.map(function(x) {\n        return !x;\n      }));\n    };\n\n    Observable.prototype.log = function() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      this.subscribe(function(event) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log.apply(console, __slice.call(args).concat([event.log()])) : void 0 : void 0;\n      });\n      return this;\n    };\n\n    Observable.prototype.slidingWindow = function(n, minValues) {\n      if (minValues == null) {\n        minValues = 0;\n      }\n      return withDescription(this, \"slidingWindow\", n, minValues, this.scan([], (function(window, value) {\n        return window.concat([value]).slice(-n);\n      })).filter((function(values) {\n        return values.length >= minValues;\n      })));\n    };\n\n    Observable.prototype.combine = function(other, f) {\n      var combinator;\n      combinator = toCombinator(f);\n      return withDescription(this, \"combine\", other, f, Bacon.combineAsArray(this, other).map(function(values) {\n        return combinator(values[0], values[1]);\n      }));\n    };\n\n    Observable.prototype.decode = function(cases) {\n      return withDescription(this, \"decode\", cases, this.combine(Bacon.combineTemplate(cases), function(key, values) {\n        return values[key];\n      }));\n    };\n\n    Observable.prototype.awaiting = function(other) {\n      return withDescription(this, \"awaiting\", other, Bacon.groupSimultaneous(this, other).map(function(_arg) {\n        var myValues, otherValues;\n        myValues = _arg[0], otherValues = _arg[1];\n        return otherValues.length === 0;\n      }).toProperty(false).skipDuplicates());\n    };\n\n    Observable.prototype.name = function(name) {\n      this.toString = function() {\n        return name;\n      };\n      return this;\n    };\n\n    Observable.prototype.withDescription = function() {\n      return describe.apply(null, arguments).apply(this);\n    };\n\n    return Observable;\n\n  })();\n\n  Observable.prototype.reduce = Observable.prototype.fold;\n\n  Observable.prototype.assign = Observable.prototype.onValue;\n\n  flatMap_ = function(root, f, firstOnly) {\n    return new EventStream(describe(root, \"flatMap\" + (firstOnly ? \"First\" : \"\"), f), function(sink) {\n      var checkEnd, composite;\n      composite = new CompositeUnsubscribe();\n      checkEnd = function(unsub) {\n        unsub();\n        if (composite.empty()) {\n          return sink(end());\n        }\n      };\n      composite.add(function(__, unsubRoot) {\n        return root.subscribeInternal(function(event) {\n          var child;\n          if (event.isEnd()) {\n            return checkEnd(unsubRoot);\n          } else if (event.isError()) {\n            return sink(event);\n          } else if (firstOnly && composite.count() > 1) {\n            return Bacon.more;\n          } else {\n            if (composite.unsubscribed) {\n              return Bacon.noMore;\n            }\n            child = makeObservable(f(event.value()));\n            return composite.add(function(unsubAll, unsubMe) {\n              return child.subscribeInternal(function(event) {\n                var reply;\n                if (event.isEnd()) {\n                  checkEnd(unsubMe);\n                  return Bacon.noMore;\n                } else {\n                  if (event instanceof Initial) {\n                    event = event.toNext();\n                  }\n                  reply = sink(event);\n                  if (reply === Bacon.noMore) {\n                    unsubAll();\n                  }\n                  return reply;\n                }\n              });\n            });\n          }\n        });\n      });\n      return composite.unsubscribe;\n    });\n  };\n\n  EventStream = (function(_super) {\n    __extends(EventStream, _super);\n\n    function EventStream(desc, subscribe) {\n      var dispatcher;\n      if (isFunction(desc)) {\n        subscribe = desc;\n        desc = [];\n      }\n      EventStream.__super__.constructor.call(this, desc);\n      assertFunction(subscribe);\n      dispatcher = new Dispatcher(subscribe);\n      this.subscribeInternal = dispatcher.subscribe;\n      this.subscribe = UpdateBarrier.wrappedSubscribe(this);\n      this.hasSubscribers = dispatcher.hasSubscribers;\n      registerObs(this);\n    }\n\n    EventStream.prototype.delay = function(delay) {\n      return withDescription(this, \"delay\", delay, this.flatMap(function(value) {\n        return Bacon.later(delay, value);\n      }));\n    };\n\n    EventStream.prototype.debounce = function(delay) {\n      return withDescription(this, \"debounce\", delay, this.flatMapLatest(function(value) {\n        return Bacon.later(delay, value);\n      }));\n    };\n\n    EventStream.prototype.debounceImmediate = function(delay) {\n      return withDescription(this, \"debounceImmediate\", delay, this.flatMapFirst(function(value) {\n        return Bacon.once(value).concat(Bacon.later(delay).filter(false));\n      }));\n    };\n\n    EventStream.prototype.throttle = function(delay) {\n      return withDescription(this, \"throttle\", delay, this.bufferWithTime(delay).map(function(values) {\n        return values[values.length - 1];\n      }));\n    };\n\n    EventStream.prototype.bufferWithTime = function(delay) {\n      return withDescription(this, \"bufferWithTime\", delay, this.bufferWithTimeOrCount(delay, Number.MAX_VALUE));\n    };\n\n    EventStream.prototype.bufferWithCount = function(count) {\n      return withDescription(this, \"bufferWithCount\", count, this.bufferWithTimeOrCount(void 0, count));\n    };\n\n    EventStream.prototype.bufferWithTimeOrCount = function(delay, count) {\n      var flushOrSchedule;\n      flushOrSchedule = function(buffer) {\n        if (buffer.values.length === count) {\n          return buffer.flush();\n        } else if (delay !== void 0) {\n          return buffer.schedule();\n        }\n      };\n      return withDescription(this, \"bufferWithTimeOrCount\", delay, count, this.buffer(delay, flushOrSchedule, flushOrSchedule));\n    };\n\n    EventStream.prototype.buffer = function(delay, onInput, onFlush) {\n      var buffer, delayMs, reply;\n      if (onInput == null) {\n        onInput = (function() {});\n      }\n      if (onFlush == null) {\n        onFlush = (function() {});\n      }\n      buffer = {\n        scheduled: false,\n        end: null,\n        values: [],\n        flush: function() {\n          var reply;\n          this.scheduled = false;\n          if (this.values.length > 0) {\n            reply = this.push(next(this.values));\n            this.values = [];\n            if (this.end != null) {\n              return this.push(this.end);\n            } else if (reply !== Bacon.noMore) {\n              return onFlush(this);\n            }\n          } else {\n            if (this.end != null) {\n              return this.push(this.end);\n            }\n          }\n        },\n        schedule: function() {\n          if (!this.scheduled) {\n            this.scheduled = true;\n            return delay((function(_this) {\n              return function() {\n                return _this.flush();\n              };\n            })(this));\n          }\n        }\n      };\n      reply = Bacon.more;\n      if (!isFunction(delay)) {\n        delayMs = delay;\n        delay = function(f) {\n          return Bacon.scheduler.setTimeout(f, delayMs);\n        };\n      }\n      return withDescription(this, \"buffer\", this.withHandler(function(event) {\n        buffer.push = this.push;\n        if (event.isError()) {\n          reply = this.push(event);\n        } else if (event.isEnd()) {\n          buffer.end = event;\n          if (!buffer.scheduled) {\n            buffer.flush();\n          }\n        } else {\n          buffer.values.push(event.value());\n          onInput(buffer);\n        }\n        return reply;\n      }));\n    };\n\n    EventStream.prototype.merge = function(right) {\n      var left;\n      assertEventStream(right);\n      left = this;\n      return new EventStream(describe(left, \"merge\", right), function(sink) {\n        var ends, smartSink;\n        ends = 0;\n        smartSink = function(obs) {\n          return function(unsubBoth) {\n            return obs.subscribeInternal(function(event) {\n              var reply;\n              if (event.isEnd()) {\n                ends++;\n                if (ends === 2) {\n                  return sink(end());\n                } else {\n                  return Bacon.more;\n                }\n              } else {\n                reply = sink(event);\n                if (reply === Bacon.noMore) {\n                  unsubBoth();\n                }\n                return reply;\n              }\n            });\n          };\n        };\n        return compositeUnsubscribe(smartSink(left), smartSink(right));\n      });\n    };\n\n    EventStream.prototype.toProperty = function(initValue) {\n      if (arguments.length === 0) {\n        initValue = None;\n      }\n      return withDescription(this, \"toProperty\", initValue, this.scan(initValue, latterF, true));\n    };\n\n    EventStream.prototype.toEventStream = function() {\n      return this;\n    };\n\n    EventStream.prototype.sampledBy = function(sampler, combinator) {\n      return withDescription(this, \"sampledBy\", sampler, combinator, this.toProperty().sampledBy(sampler, combinator));\n    };\n\n    EventStream.prototype.concat = function(right) {\n      var left;\n      left = this;\n      return new EventStream(describe(left, \"concat\", right), function(sink) {\n        var unsubLeft, unsubRight;\n        unsubRight = nop;\n        unsubLeft = left.subscribeInternal(function(e) {\n          if (e.isEnd()) {\n            return unsubRight = right.subscribeInternal(sink);\n          } else {\n            return sink(e);\n          }\n        });\n        return function() {\n          unsubLeft();\n          return unsubRight();\n        };\n      });\n    };\n\n    EventStream.prototype.takeUntil = function(stopper) {\n      var endMarker;\n      endMarker = {};\n      return withDescription(this, \"takeUntil\", stopper, Bacon.groupSimultaneous(this.mapEnd(endMarker), stopper.skipErrors()).withHandler(function(event) {\n        var data, reply, value, _i, _len, _ref1;\n        if (!event.hasValue()) {\n          return this.push(event);\n        } else {\n          _ref1 = event.value(), data = _ref1[0], stopper = _ref1[1];\n          if (stopper.length) {\n            return this.push(end());\n          } else {\n            reply = Bacon.more;\n            for (_i = 0, _len = data.length; _i < _len; _i++) {\n              value = data[_i];\n              if (value === endMarker) {\n                reply = this.push(end());\n              } else {\n                reply = this.push(next(value));\n              }\n            }\n            return reply;\n          }\n        }\n      }));\n    };\n\n    EventStream.prototype.skipUntil = function(starter) {\n      var started;\n      started = starter.take(1).map(true).toProperty(false);\n      return withDescription(this, \"skipUntil\", starter, this.filter(started));\n    };\n\n    EventStream.prototype.skipWhile = function() {\n      var args, f, ok;\n      f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      ok = false;\n      return convertArgsToFunction(this, f, args, function(f) {\n        return withDescription(this, \"skipWhile\", f, this.withHandler(function(event) {\n          if (ok || !event.hasValue() || !f(event.value())) {\n            if (event.hasValue()) {\n              ok = true;\n            }\n            return this.push(event);\n          } else {\n            return Bacon.more;\n          }\n        }));\n      });\n    };\n\n    EventStream.prototype.startWith = function(seed) {\n      return withDescription(this, \"startWith\", seed, Bacon.once(seed).concat(this));\n    };\n\n    EventStream.prototype.withHandler = function(handler) {\n      var dispatcher;\n      dispatcher = new Dispatcher(this.subscribeInternal, handler);\n      return new EventStream(describe(this, \"withHandler\", handler), dispatcher.subscribe);\n    };\n\n    return EventStream;\n\n  })(Observable);\n\n  Property = (function(_super) {\n    __extends(Property, _super);\n\n    function Property(desc, subscribe, handler) {\n      if (isFunction(desc)) {\n        handler = subscribe;\n        subscribe = desc;\n        desc = [];\n      }\n      Property.__super__.constructor.call(this, desc);\n      assertFunction(subscribe);\n      if (handler === true) {\n        this.subscribeInternal = subscribe;\n      } else {\n        this.subscribeInternal = new PropertyDispatcher(this, subscribe, handler).subscribe;\n      }\n      this.subscribe = UpdateBarrier.wrappedSubscribe(this);\n      registerObs(this);\n    }\n\n    Property.prototype.sampledBy = function(sampler, combinator) {\n      var lazy, result, samplerSource, stream, thisSource;\n      if (combinator != null) {\n        combinator = toCombinator(combinator);\n      } else {\n        lazy = true;\n        combinator = function(f) {\n          return f();\n        };\n      }\n      thisSource = new Source(this, false, this.subscribeInternal, lazy);\n      samplerSource = new Source(sampler, true, sampler.subscribeInternal, lazy);\n      stream = Bacon.when([thisSource, samplerSource], combinator);\n      result = sampler instanceof Property ? stream.toProperty() : stream;\n      return withDescription(this, \"sampledBy\", sampler, combinator, result);\n    };\n\n    Property.prototype.sample = function(interval) {\n      return withDescription(this, \"sample\", interval, this.sampledBy(Bacon.interval(interval, {})));\n    };\n\n    Property.prototype.changes = function() {\n      return new EventStream(describe(this, \"changes\"), (function(_this) {\n        return function(sink) {\n          return _this.subscribeInternal(function(event) {\n            if (!event.isInitial()) {\n              return sink(event);\n            }\n          });\n        };\n      })(this));\n    };\n\n    Property.prototype.withHandler = function(handler) {\n      return new Property(describe(this, \"withHandler\", handler), this.subscribeInternal, handler);\n    };\n\n    Property.prototype.toProperty = function() {\n      assertNoArguments(arguments);\n      return this;\n    };\n\n    Property.prototype.toEventStream = function() {\n      return new EventStream(describe(this, \"toEventStream\"), (function(_this) {\n        return function(sink) {\n          return _this.subscribeInternal(function(event) {\n            if (event.isInitial()) {\n              event = event.toNext();\n            }\n            return sink(event);\n          });\n        };\n      })(this));\n    };\n\n    Property.prototype.and = function(other) {\n      return withDescription(this, \"and\", other, this.combine(other, function(x, y) {\n        return x && y;\n      }));\n    };\n\n    Property.prototype.or = function(other) {\n      return withDescription(this, \"or\", other, this.combine(other, function(x, y) {\n        return x || y;\n      }));\n    };\n\n    Property.prototype.delay = function(delay) {\n      return this.delayChanges(\"delay\", delay, function(changes) {\n        return changes.delay(delay);\n      });\n    };\n\n    Property.prototype.debounce = function(delay) {\n      return this.delayChanges(\"debounce\", delay, function(changes) {\n        return changes.debounce(delay);\n      });\n    };\n\n    Property.prototype.throttle = function(delay) {\n      return this.delayChanges(\"throttle\", delay, function(changes) {\n        return changes.throttle(delay);\n      });\n    };\n\n    Property.prototype.delayChanges = function() {\n      var desc, f, _i;\n      desc = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), f = arguments[_i++];\n      return withDescription.apply(null, [this].concat(__slice.call(desc), [addPropertyInitValueToStream(this, f(this.changes()))]));\n    };\n\n    Property.prototype.takeUntil = function(stopper) {\n      var changes;\n      changes = this.changes().takeUntil(stopper);\n      return withDescription(this, \"takeUntil\", stopper, addPropertyInitValueToStream(this, changes));\n    };\n\n    Property.prototype.startWith = function(value) {\n      return withDescription(this, \"startWith\", value, this.scan(value, function(prev, next) {\n        return next;\n      }));\n    };\n\n    return Property;\n\n  })(Observable);\n\n  convertArgsToFunction = function(obs, f, args, method) {\n    var sampled;\n    if (f instanceof Property) {\n      sampled = f.sampledBy(obs, function(p, s) {\n        return [p, s];\n      });\n      return method.apply(sampled, [\n        function(_arg) {\n          var p, s;\n          p = _arg[0], s = _arg[1];\n          return p;\n        }\n      ]).map(function(_arg) {\n        var p, s;\n        p = _arg[0], s = _arg[1];\n        return s;\n      });\n    } else {\n      f = makeFunction(f, args);\n      return method.apply(obs, [f]);\n    }\n  };\n\n  addPropertyInitValueToStream = function(property, stream) {\n    var justInitValue;\n    justInitValue = new EventStream(describe(property, \"justInitValue\"), function(sink) {\n      var unsub, value;\n      value = null;\n      unsub = property.subscribeInternal(function(event) {\n        if (event.hasValue()) {\n          value = event;\n        }\n        return Bacon.noMore;\n      });\n      UpdateBarrier.whenDoneWith(justInitValue, function() {\n        if (value != null) {\n          sink(value);\n        }\n        return sink(end());\n      });\n      return unsub;\n    });\n    return justInitValue.concat(stream).toProperty();\n  };\n\n  Dispatcher = (function() {\n    function Dispatcher(subscribe, handleEvent) {\n      var done, ended, prevError, pushIt, pushing, queue, removeSub, subscriptions, unsubscribeFromSource, waiters;\n      if (subscribe == null) {\n        subscribe = function() {\n          return nop;\n        };\n      }\n      subscriptions = [];\n      queue = [];\n      pushing = false;\n      ended = false;\n      this.hasSubscribers = function() {\n        return subscriptions.length > 0;\n      };\n      prevError = null;\n      unsubscribeFromSource = nop;\n      removeSub = function(subscription) {\n        return subscriptions = _.without(subscription, subscriptions);\n      };\n      waiters = null;\n      done = function() {\n        var w, ws, _i, _len, _results;\n        if (waiters != null) {\n          ws = waiters;\n          waiters = null;\n          _results = [];\n          for (_i = 0, _len = ws.length; _i < _len; _i++) {\n            w = ws[_i];\n            _results.push(w());\n          }\n          return _results;\n        }\n      };\n      pushIt = function(event) {\n        var reply, sub, success, tmp, _i, _len;\n        if (!pushing) {\n          if (event === prevError) {\n            return;\n          }\n          if (event.isError()) {\n            prevError = event;\n          }\n          success = false;\n          try {\n            pushing = true;\n            tmp = subscriptions;\n            for (_i = 0, _len = tmp.length; _i < _len; _i++) {\n              sub = tmp[_i];\n              reply = sub.sink(event);\n              if (reply === Bacon.noMore || event.isEnd()) {\n                removeSub(sub);\n              }\n            }\n            success = true;\n          } finally {\n            pushing = false;\n            if (!success) {\n              queue = [];\n            }\n          }\n          success = true;\n          while (queue.length) {\n            event = queue.shift();\n            this.push(event);\n          }\n          done(event);\n          if (this.hasSubscribers()) {\n            return Bacon.more;\n          } else {\n            unsubscribeFromSource();\n            return Bacon.noMore;\n          }\n        } else {\n          queue.push(event);\n          return Bacon.more;\n        }\n      };\n      this.push = (function(_this) {\n        return function(event) {\n          return UpdateBarrier.inTransaction(event, _this, pushIt, [event]);\n        };\n      })(this);\n      if (handleEvent == null) {\n        handleEvent = function(event) {\n          return this.push(event);\n        };\n      }\n      this.handleEvent = (function(_this) {\n        return function(event) {\n          if (event.isEnd()) {\n            ended = true;\n          }\n          return handleEvent.apply(_this, [event]);\n        };\n      })(this);\n      this.subscribe = (function(_this) {\n        return function(sink) {\n          var subscription, unsubSrc;\n          if (ended) {\n            sink(end());\n            return nop;\n          } else {\n            assertFunction(sink);\n            subscription = {\n              sink: sink\n            };\n            subscriptions.push(subscription);\n            if (subscriptions.length === 1) {\n              unsubSrc = subscribe(_this.handleEvent);\n              unsubscribeFromSource = function() {\n                unsubSrc();\n                return unsubscribeFromSource = nop;\n              };\n            }\n            assertFunction(unsubscribeFromSource);\n            return function() {\n              removeSub(subscription);\n              if (!_this.hasSubscribers()) {\n                return unsubscribeFromSource();\n              }\n            };\n          }\n        };\n      })(this);\n    }\n\n    return Dispatcher;\n\n  })();\n\n  PropertyDispatcher = (function(_super) {\n    __extends(PropertyDispatcher, _super);\n\n    function PropertyDispatcher(p, subscribe, handleEvent) {\n      var current, currentValueRootId, ended, push;\n      PropertyDispatcher.__super__.constructor.call(this, subscribe, handleEvent);\n      current = None;\n      currentValueRootId = void 0;\n      push = this.push;\n      subscribe = this.subscribe;\n      ended = false;\n      this.push = (function(_this) {\n        return function(event) {\n          if (event.isEnd()) {\n            ended = true;\n          }\n          if (event.hasValue()) {\n            current = new Some(event);\n            currentValueRootId = UpdateBarrier.currentEventId();\n          }\n          return push.apply(_this, [event]);\n        };\n      })(this);\n      this.subscribe = (function(_this) {\n        return function(sink) {\n          var dispatchingId, initSent, maybeSubSource, reply, valId;\n          initSent = false;\n          reply = Bacon.more;\n          maybeSubSource = function() {\n            if (reply === Bacon.noMore) {\n              return nop;\n            } else if (ended) {\n              sink(end());\n              return nop;\n            } else {\n              return subscribe.apply(this, [sink]);\n            }\n          };\n          if (current.isDefined && (_this.hasSubscribers() || ended)) {\n            dispatchingId = UpdateBarrier.currentEventId();\n            valId = currentValueRootId;\n            if (!ended && valId && dispatchingId && dispatchingId !== valId) {\n              UpdateBarrier.whenDoneWith(p, function() {\n                if (currentValueRootId === valId) {\n                  return sink(initial(current.get().value()));\n                }\n              });\n              return maybeSubSource();\n            } else {\n              UpdateBarrier.inTransaction(void 0, _this, (function() {\n                return reply = sink(initial(current.get().value()));\n              }), []);\n              return maybeSubSource();\n            }\n          } else {\n            return maybeSubSource();\n          }\n        };\n      })(this);\n    }\n\n    return PropertyDispatcher;\n\n  })(Dispatcher);\n\n  Bus = (function(_super) {\n    __extends(Bus, _super);\n\n    function Bus() {\n      var ended, guardedSink, sink, subscribeAll, subscribeInput, subscriptions, unsubAll, unsubscribeInput;\n      sink = void 0;\n      subscriptions = [];\n      ended = false;\n      guardedSink = (function(_this) {\n        return function(input) {\n          return function(event) {\n            if (event.isEnd()) {\n              unsubscribeInput(input);\n              return Bacon.noMore;\n            } else {\n              return sink(event);\n            }\n          };\n        };\n      })(this);\n      unsubAll = function() {\n        var sub, _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = subscriptions.length; _i < _len; _i++) {\n          sub = subscriptions[_i];\n          _results.push(typeof sub.unsub === \"function\" ? sub.unsub() : void 0);\n        }\n        return _results;\n      };\n      subscribeInput = function(subscription) {\n        return subscription.unsub = subscription.input.subscribeInternal(guardedSink(subscription.input));\n      };\n      unsubscribeInput = function(input) {\n        var i, sub, _i, _len;\n        for (i = _i = 0, _len = subscriptions.length; _i < _len; i = ++_i) {\n          sub = subscriptions[i];\n          if (sub.input === input) {\n            if (typeof sub.unsub === \"function\") {\n              sub.unsub();\n            }\n            subscriptions.splice(i, 1);\n            return;\n          }\n        }\n      };\n      subscribeAll = (function(_this) {\n        return function(newSink) {\n          var subscription, _i, _len, _ref1;\n          sink = newSink;\n          _ref1 = cloneArray(subscriptions);\n          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n            subscription = _ref1[_i];\n            subscribeInput(subscription);\n          }\n          return unsubAll;\n        };\n      })(this);\n      Bus.__super__.constructor.call(this, describe(Bacon, \"Bus\"), subscribeAll);\n      this.plug = (function(_this) {\n        return function(input) {\n          var sub;\n          if (ended) {\n            return;\n          }\n          sub = {\n            input: input\n          };\n          subscriptions.push(sub);\n          if ((sink != null)) {\n            subscribeInput(sub);\n          }\n          return function() {\n            return unsubscribeInput(input);\n          };\n        };\n      })(this);\n      this.push = (function(_this) {\n        return function(value) {\n          return typeof sink === \"function\" ? sink(next(value)) : void 0;\n        };\n      })(this);\n      this.error = (function(_this) {\n        return function(error) {\n          return typeof sink === \"function\" ? sink(new Error(error)) : void 0;\n        };\n      })(this);\n      this.end = (function(_this) {\n        return function() {\n          ended = true;\n          unsubAll();\n          return typeof sink === \"function\" ? sink(end()) : void 0;\n        };\n      })(this);\n    }\n\n    return Bus;\n\n  })(EventStream);\n\n  Source = (function() {\n    function Source(obs, sync, subscribe, lazy) {\n      this.obs = obs;\n      this.sync = sync;\n      this.subscribe = subscribe;\n      this.lazy = lazy != null ? lazy : false;\n      this.queue = [];\n      if (this.subscribe == null) {\n        this.subscribe = this.obs.subscribeInternal;\n      }\n      this.toString = this.obs.toString;\n    }\n\n    Source.prototype.markEnded = function() {\n      return this.ended = true;\n    };\n\n    Source.prototype.consume = function() {\n      if (this.lazy) {\n        return _.always(this.queue[0]);\n      } else {\n        return this.queue[0];\n      }\n    };\n\n    Source.prototype.push = function(x) {\n      return this.queue = [x];\n    };\n\n    Source.prototype.mayHave = function() {\n      return true;\n    };\n\n    Source.prototype.hasAtLeast = function() {\n      return this.queue.length;\n    };\n\n    Source.prototype.flatten = true;\n\n    return Source;\n\n  })();\n\n  ConsumingSource = (function(_super) {\n    __extends(ConsumingSource, _super);\n\n    function ConsumingSource() {\n      return ConsumingSource.__super__.constructor.apply(this, arguments);\n    }\n\n    ConsumingSource.prototype.consume = function() {\n      return this.queue.shift();\n    };\n\n    ConsumingSource.prototype.push = function(x) {\n      return this.queue.push(x);\n    };\n\n    ConsumingSource.prototype.mayHave = function(c) {\n      return !this.ended || this.queue.length >= c;\n    };\n\n    ConsumingSource.prototype.hasAtLeast = function(c) {\n      return this.queue.length >= c;\n    };\n\n    ConsumingSource.prototype.flatten = false;\n\n    return ConsumingSource;\n\n  })(Source);\n\n  BufferingSource = (function(_super) {\n    __extends(BufferingSource, _super);\n\n    function BufferingSource(obs) {\n      this.obs = obs;\n      BufferingSource.__super__.constructor.call(this, this.obs, true, this.obs.subscribeInternal);\n    }\n\n    BufferingSource.prototype.consume = function() {\n      var values;\n      values = this.queue;\n      this.queue = [];\n      return function() {\n        return values;\n      };\n    };\n\n    BufferingSource.prototype.push = function(x) {\n      return this.queue.push(x());\n    };\n\n    BufferingSource.prototype.hasAtLeast = function() {\n      return true;\n    };\n\n    return BufferingSource;\n\n  })(Source);\n\n  Source.fromObservable = function(s) {\n    if (s instanceof Source) {\n      return s;\n    } else if (s instanceof Property) {\n      return new Source(s, false);\n    } else {\n      return new ConsumingSource(s, true);\n    }\n  };\n\n  describe = function() {\n    var args, context, method;\n    context = arguments[0], method = arguments[1], args = 3 <= arguments.length ? __slice.call(arguments, 2) : [];\n    if ((context || method) instanceof Desc) {\n      return context || method;\n    } else {\n      return new Desc(context, method, args);\n    }\n  };\n\n  Desc = (function() {\n    function Desc(context, method, args) {\n      var collectDeps, dependsOn, findDeps, flatDeps;\n      findDeps = function(x) {\n        if (isArray(x)) {\n          return _.flatMap(findDeps, x);\n        } else if (isObservable(x)) {\n          return [x];\n        } else if (x instanceof Source) {\n          return [x.obs];\n        } else {\n          return [];\n        }\n      };\n      flatDeps = null;\n      collectDeps = function(o) {\n        var dep, deps, _i, _len, _results;\n        deps = o.internalDeps();\n        _results = [];\n        for (_i = 0, _len = deps.length; _i < _len; _i++) {\n          dep = deps[_i];\n          flatDeps[dep.id] = true;\n          _results.push(collectDeps(dep));\n        }\n        return _results;\n      };\n      dependsOn = function(b) {\n        if (flatDeps == null) {\n          flatDeps = {};\n          collectDeps(this);\n        }\n        return flatDeps[b.id];\n      };\n      this.apply = function(obs) {\n        var deps;\n        deps = _.cached((function() {\n          return findDeps([context].concat(args));\n        }));\n        obs.internalDeps = obs.internalDeps || deps;\n        obs.dependsOn = dependsOn;\n        obs.deps = deps;\n        obs.toString = function() {\n          return _.toString(context) + \".\" + _.toString(method) + \"(\" + _.map(_.toString, args) + \")\";\n        };\n        obs.inspect = function() {\n          return obs.toString();\n        };\n        obs.desc = function() {\n          return {\n            context: context,\n            method: method,\n            args: args\n          };\n        };\n        return obs;\n      };\n    }\n\n    return Desc;\n\n  })();\n\n  withDescription = function() {\n    var desc, obs, _i;\n    desc = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), obs = arguments[_i++];\n    return describe.apply(null, desc).apply(obs);\n  };\n\n  Bacon.when = function() {\n    var f, i, index, ix, len, needsBarrier, pat, patSources, pats, patterns, resultStream, s, sources, usage, _i, _j, _len, _len1, _ref1;\n    patterns = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (patterns.length === 0) {\n      return Bacon.never();\n    }\n    len = patterns.length;\n    usage = \"when: expecting arguments in the form (Observable+,function)+\";\n    assert(usage, len % 2 === 0);\n    sources = [];\n    pats = [];\n    i = 0;\n    while (i < len) {\n      patSources = _.toArray(patterns[i]);\n      f = patterns[i + 1];\n      pat = {\n        f: (isFunction(f) ? f : (function() {\n          return f;\n        })),\n        ixs: []\n      };\n      for (_i = 0, _len = patSources.length; _i < _len; _i++) {\n        s = patSources[_i];\n        assert(isObservable(s), usage);\n        index = _.indexOf(sources, s);\n        if (index < 0) {\n          sources.push(s);\n          index = sources.length - 1;\n        }\n        _ref1 = pat.ixs;\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n          ix = _ref1[_j];\n          if (ix.index === index) {\n            ix.count++;\n          }\n        }\n        pat.ixs.push({\n          index: index,\n          count: 1\n        });\n      }\n      if (patSources.length > 0) {\n        pats.push(pat);\n      }\n      i = i + 2;\n    }\n    if (!sources.length) {\n      return Bacon.never();\n    }\n    sources = _.map(Source.fromObservable, sources);\n    needsBarrier = (_.any(sources, function(s) {\n      return s.flatten;\n    })) && (containsDuplicateDeps(_.map((function(s) {\n      return s.obs;\n    }), sources)));\n    return resultStream = new EventStream(describe.apply(null, [Bacon, \"when\"].concat(__slice.call(patterns))), function(sink) {\n      var cannotMatch, cannotSync, ends, match, nonFlattened, part, triggers;\n      triggers = [];\n      ends = false;\n      match = function(p) {\n        var _k, _len2, _ref2;\n        _ref2 = p.ixs;\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n          i = _ref2[_k];\n          if (!sources[i.index].hasAtLeast(i.count)) {\n            return false;\n          }\n        }\n        return true;\n      };\n      cannotSync = function(source) {\n        return !source.sync || source.ended;\n      };\n      cannotMatch = function(p) {\n        var _k, _len2, _ref2;\n        _ref2 = p.ixs;\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n          i = _ref2[_k];\n          if (!sources[i.index].mayHave(i.count)) {\n            return true;\n          }\n        }\n      };\n      nonFlattened = function(trigger) {\n        return !trigger.source.flatten;\n      };\n      part = function(source) {\n        return function(unsubAll) {\n          var flush, flushLater, flushWhileTriggers;\n          flushLater = function() {\n            return UpdateBarrier.whenDoneWith(resultStream, flush);\n          };\n          flushWhileTriggers = function() {\n            var functions, p, reply, trigger, _k, _len2;\n            if (triggers.length > 0) {\n              reply = Bacon.more;\n              trigger = triggers.pop();\n              for (_k = 0, _len2 = pats.length; _k < _len2; _k++) {\n                p = pats[_k];\n                if (match(p)) {\n                  functions = (function() {\n                    var _l, _len3, _ref2, _results;\n                    _ref2 = p.ixs;\n                    _results = [];\n                    for (_l = 0, _len3 = _ref2.length; _l < _len3; _l++) {\n                      i = _ref2[_l];\n                      _results.push(sources[i.index].consume());\n                    }\n                    return _results;\n                  })();\n                  reply = sink(trigger.e.apply(function() {\n                    var fun, values;\n                    values = (function() {\n                      var _l, _len3, _results;\n                      _results = [];\n                      for (_l = 0, _len3 = functions.length; _l < _len3; _l++) {\n                        fun = functions[_l];\n                        _results.push(fun());\n                      }\n                      return _results;\n                    })();\n                    return p.f.apply(p, values);\n                  }));\n                  if (triggers.length && needsBarrier) {\n                    triggers = _.filter(nonFlattened, triggers);\n                  }\n                  if (reply === Bacon.noMore) {\n                    return reply;\n                  } else {\n                    return flushWhileTriggers();\n                  }\n                }\n              }\n            } else {\n              return Bacon.more;\n            }\n          };\n          flush = function() {\n            var reply;\n            reply = flushWhileTriggers();\n            if (ends) {\n              ends = false;\n              if (_.all(sources, cannotSync) || _.all(pats, cannotMatch)) {\n                reply = Bacon.noMore;\n                sink(end());\n              }\n            }\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply;\n          };\n          return source.subscribe(function(e) {\n            var reply;\n            if (e.isEnd()) {\n              ends = true;\n              source.markEnded();\n              flushLater();\n            } else if (e.isError()) {\n              reply = sink(e);\n            } else {\n              source.push(e.value);\n              if (source.sync) {\n                triggers.push({\n                  source: source,\n                  e: e\n                });\n                if (needsBarrier) {\n                  flushLater();\n                } else {\n                  flush();\n                }\n              }\n            }\n            if (reply === Bacon.noMore) {\n              unsubAll();\n            }\n            return reply || Bacon.more;\n          });\n        };\n      };\n      return compositeUnsubscribe.apply(null, (function() {\n        var _k, _len2, _results;\n        _results = [];\n        for (_k = 0, _len2 = sources.length; _k < _len2; _k++) {\n          s = sources[_k];\n          _results.push(part(s));\n        }\n        return _results;\n      })());\n    });\n  };\n\n  containsDuplicateDeps = function(observables, state) {\n    var checkObservable;\n    if (state == null) {\n      state = [];\n    }\n    checkObservable = function(obs) {\n      var deps;\n      if (Bacon._.contains(state, obs)) {\n        return true;\n      } else {\n        deps = obs.internalDeps();\n        if (deps.length) {\n          state.push(obs);\n          return Bacon._.any(deps, checkObservable);\n        } else {\n          state.push(obs);\n          return false;\n        }\n      }\n    };\n    return Bacon._.any(observables, checkObservable);\n  };\n\n  Bacon.update = function() {\n    var i, initial, lateBindFirst, patterns;\n    initial = arguments[0], patterns = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    lateBindFirst = function(f) {\n      return function() {\n        var args;\n        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n        return function(i) {\n          return f.apply(null, [i].concat(args));\n        };\n      };\n    };\n    i = patterns.length - 1;\n    while (i > 0) {\n      if (!(patterns[i] instanceof Function)) {\n        patterns[i] = (function(x) {\n          return function() {\n            return x;\n          };\n        })(patterns[i]);\n      }\n      patterns[i] = lateBindFirst(patterns[i]);\n      i = i - 2;\n    }\n    return withDescription.apply(null, [Bacon, \"update\", initial].concat(__slice.call(patterns), [Bacon.when.apply(Bacon, patterns).scan(initial, (function(x, f) {\n      return f(x);\n    }))]));\n  };\n\n  compositeUnsubscribe = function() {\n    var ss;\n    ss = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    return new CompositeUnsubscribe(ss).unsubscribe;\n  };\n\n  CompositeUnsubscribe = (function() {\n    function CompositeUnsubscribe(ss) {\n      var s, _i, _len;\n      if (ss == null) {\n        ss = [];\n      }\n      this.unsubscribe = __bind(this.unsubscribe, this);\n      this.unsubscribed = false;\n      this.subscriptions = [];\n      this.starting = [];\n      for (_i = 0, _len = ss.length; _i < _len; _i++) {\n        s = ss[_i];\n        this.add(s);\n      }\n    }\n\n    CompositeUnsubscribe.prototype.add = function(subscription) {\n      var ended, unsub, unsubMe;\n      if (this.unsubscribed) {\n        return;\n      }\n      ended = false;\n      unsub = nop;\n      this.starting.push(subscription);\n      unsubMe = (function(_this) {\n        return function() {\n          if (_this.unsubscribed) {\n            return;\n          }\n          ended = true;\n          _this.remove(unsub);\n          return _.remove(subscription, _this.starting);\n        };\n      })(this);\n      unsub = subscription(this.unsubscribe, unsubMe);\n      if (!(this.unsubscribed || ended)) {\n        this.subscriptions.push(unsub);\n      }\n      _.remove(subscription, this.starting);\n      return unsub;\n    };\n\n    CompositeUnsubscribe.prototype.remove = function(unsub) {\n      if (this.unsubscribed) {\n        return;\n      }\n      if ((_.remove(unsub, this.subscriptions)) !== void 0) {\n        return unsub();\n      }\n    };\n\n    CompositeUnsubscribe.prototype.unsubscribe = function() {\n      var s, _i, _len, _ref1;\n      if (this.unsubscribed) {\n        return;\n      }\n      this.unsubscribed = true;\n      _ref1 = this.subscriptions;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        s = _ref1[_i];\n        s();\n      }\n      this.subscriptions = [];\n      return this.starting = [];\n    };\n\n    CompositeUnsubscribe.prototype.count = function() {\n      if (this.unsubscribed) {\n        return 0;\n      }\n      return this.subscriptions.length + this.starting.length;\n    };\n\n    CompositeUnsubscribe.prototype.empty = function() {\n      return this.count() === 0;\n    };\n\n    return CompositeUnsubscribe;\n\n  })();\n\n  Bacon.CompositeUnsubscribe = CompositeUnsubscribe;\n\n  Some = (function() {\n    function Some(value) {\n      this.value = value;\n    }\n\n    Some.prototype.getOrElse = function() {\n      return this.value;\n    };\n\n    Some.prototype.get = function() {\n      return this.value;\n    };\n\n    Some.prototype.filter = function(f) {\n      if (f(this.value)) {\n        return new Some(this.value);\n      } else {\n        return None;\n      }\n    };\n\n    Some.prototype.map = function(f) {\n      return new Some(f(this.value));\n    };\n\n    Some.prototype.forEach = function(f) {\n      return f(this.value);\n    };\n\n    Some.prototype.isDefined = true;\n\n    Some.prototype.toArray = function() {\n      return [this.value];\n    };\n\n    Some.prototype.inspect = function() {\n      return \"Some(\" + this.value + \")\";\n    };\n\n    Some.prototype.toString = function() {\n      return this.inspect();\n    };\n\n    return Some;\n\n  })();\n\n  None = {\n    getOrElse: function(value) {\n      return value;\n    },\n    filter: function() {\n      return None;\n    },\n    map: function() {\n      return None;\n    },\n    forEach: function() {},\n    isDefined: false,\n    toArray: function() {\n      return [];\n    },\n    inspect: function() {\n      return \"None\";\n    },\n    toString: function() {\n      return this.inspect();\n    }\n  };\n\n  UpdateBarrier = (function() {\n    var afterTransaction, afters, currentEventId, findIndependent, flush, inTransaction, independent, rootEvent, waiters, whenDoneWith, wrappedSubscribe;\n    rootEvent = void 0;\n    waiters = [];\n    afters = [];\n    afterTransaction = function(f) {\n      if (rootEvent) {\n        return afters.push(f);\n      } else {\n        return f();\n      }\n    };\n    independent = function(waiter) {\n      return !_.any(waiters, (function(other) {\n        return waiter.obs.dependsOn(other.obs);\n      }));\n    };\n    whenDoneWith = function(obs, f) {\n      if (rootEvent) {\n        return waiters.push({\n          obs: obs,\n          f: f\n        });\n      } else {\n        return f();\n      }\n    };\n    findIndependent = function() {\n      while (!independent(waiters[0])) {\n        waiters.push(waiters.splice(0, 1)[0]);\n      }\n      return waiters.splice(0, 1)[0];\n    };\n    flush = function() {\n      var _results;\n      _results = [];\n      while (waiters.length) {\n        _results.push(findIndependent().f());\n      }\n      return _results;\n    };\n    inTransaction = function(event, context, f, args) {\n      var result;\n      if (rootEvent) {\n        return f.apply(context, args);\n      } else {\n        rootEvent = event;\n        try {\n          result = f.apply(context, args);\n          flush();\n        } finally {\n          rootEvent = void 0;\n          while (afters.length) {\n            f = afters.splice(0, 1)[0];\n            f();\n          }\n        }\n        return result;\n      }\n    };\n    currentEventId = function() {\n      if (rootEvent) {\n        return rootEvent.id;\n      } else {\n        return void 0;\n      }\n    };\n    wrappedSubscribe = function(obs) {\n      return function(sink) {\n        var doUnsub, unsub, unsubd;\n        unsubd = false;\n        doUnsub = function() {};\n        unsub = function() {\n          unsubd = true;\n          return doUnsub();\n        };\n        if (!unsubd) {\n          doUnsub = obs.subscribeInternal(function(event) {\n            return afterTransaction(function() {\n              var reply;\n              if (!unsubd) {\n                reply = sink(event);\n                if (reply === Bacon.noMore) {\n                  return unsub();\n                }\n              }\n            });\n          });\n        }\n        return unsub;\n      };\n    };\n    return {\n      whenDoneWith: whenDoneWith,\n      inTransaction: inTransaction,\n      currentEventId: currentEventId,\n      wrappedSubscribe: wrappedSubscribe\n    };\n  })();\n\n  Bacon.EventStream = EventStream;\n\n  Bacon.Property = Property;\n\n  Bacon.Observable = Observable;\n\n  Bacon.Bus = Bus;\n\n  Bacon.Initial = Initial;\n\n  Bacon.Next = Next;\n\n  Bacon.End = End;\n\n  Bacon.Error = Error;\n\n  nop = function() {};\n\n  latterF = function(_, x) {\n    return x();\n  };\n\n  former = function(x, _) {\n    return x;\n  };\n\n  initial = function(value) {\n    return new Initial(_.always(value));\n  };\n\n  next = function(value) {\n    return new Next(_.always(value));\n  };\n\n  end = function() {\n    return new End();\n  };\n\n  toEvent = function(x) {\n    if (x instanceof Event) {\n      return x;\n    } else {\n      return next(x);\n    }\n  };\n\n  cloneArray = function(xs) {\n    return xs.slice(0);\n  };\n\n  assert = function(message, condition) {\n    if (!condition) {\n      throw message;\n    }\n  };\n\n  assertEventStream = function(event) {\n    if (!(event instanceof EventStream)) {\n      throw \"not an EventStream : \" + event;\n    }\n  };\n\n  assertFunction = function(f) {\n    return assert(\"not a function : \" + f, isFunction(f));\n  };\n\n  isFunction = function(f) {\n    return typeof f === \"function\";\n  };\n\n  isArray = function(xs) {\n    return xs instanceof Array;\n  };\n\n  isObservable = function(x) {\n    return x instanceof Observable;\n  };\n\n  assertArray = function(xs) {\n    if (!isArray(xs)) {\n      throw \"not an array : \" + xs;\n    }\n  };\n\n  assertNoArguments = function(args) {\n    return assert(\"no arguments supported\", args.length === 0);\n  };\n\n  assertString = function(x) {\n    if (typeof x !== \"string\") {\n      throw \"not a string : \" + x;\n    }\n  };\n\n  partiallyApplied = function(f, applied) {\n    return function() {\n      var args;\n      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      return f.apply(null, applied.concat(args));\n    };\n  };\n\n  makeSpawner = function(args) {\n    if (args.length === 1 && isObservable(args[0])) {\n      return _.always(args[0]);\n    } else {\n      return makeFunctionArgs(args);\n    }\n  };\n\n  makeFunctionArgs = function(args) {\n    args = Array.prototype.slice.call(args);\n    return makeFunction_.apply(null, args);\n  };\n\n  makeFunction_ = withMethodCallSupport(function() {\n    var args, f;\n    f = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n    if (isFunction(f)) {\n      if (args.length) {\n        return partiallyApplied(f, args);\n      } else {\n        return f;\n      }\n    } else if (isFieldKey(f)) {\n      return toFieldExtractor(f, args);\n    } else {\n      return _.always(f);\n    }\n  });\n\n  makeFunction = function(f, args) {\n    return makeFunction_.apply(null, [f].concat(__slice.call(args)));\n  };\n\n  makeObservable = function(x) {\n    if (isObservable(x)) {\n      return x;\n    } else {\n      return Bacon.once(x);\n    }\n  };\n\n  isFieldKey = function(f) {\n    return (typeof f === \"string\") && f.length > 1 && f.charAt(0) === \".\";\n  };\n\n  Bacon.isFieldKey = isFieldKey;\n\n  toFieldExtractor = function(f, args) {\n    var partFuncs, parts;\n    parts = f.slice(1).split(\".\");\n    partFuncs = _.map(toSimpleExtractor(args), parts);\n    return function(value) {\n      var _i, _len;\n      for (_i = 0, _len = partFuncs.length; _i < _len; _i++) {\n        f = partFuncs[_i];\n        value = f(value);\n      }\n      return value;\n    };\n  };\n\n  toSimpleExtractor = function(args) {\n    return function(key) {\n      return function(value) {\n        var fieldValue;\n        if (value == null) {\n          return void 0;\n        } else {\n          fieldValue = value[key];\n          if (isFunction(fieldValue)) {\n            return fieldValue.apply(value, args);\n          } else {\n            return fieldValue;\n          }\n        }\n      };\n    };\n  };\n\n  toFieldKey = function(f) {\n    return f.slice(1);\n  };\n\n  toCombinator = function(f) {\n    var key;\n    if (isFunction(f)) {\n      return f;\n    } else if (isFieldKey(f)) {\n      key = toFieldKey(f);\n      return function(left, right) {\n        return left[key](right);\n      };\n    } else {\n      return assert(\"not a function or a field key: \" + f, false);\n    }\n  };\n\n  toOption = function(v) {\n    if (v instanceof Some || v === None) {\n      return v;\n    } else {\n      return new Some(v);\n    }\n  };\n\n  _ = {\n    indexOf: Array.prototype.indexOf ? function(xs, x) {\n      return xs.indexOf(x);\n    } : function(xs, x) {\n      var i, y, _i, _len;\n      for (i = _i = 0, _len = xs.length; _i < _len; i = ++_i) {\n        y = xs[i];\n        if (x === y) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    indexWhere: function(xs, f) {\n      var i, y, _i, _len;\n      for (i = _i = 0, _len = xs.length; _i < _len; i = ++_i) {\n        y = xs[i];\n        if (f(y)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    head: function(xs) {\n      return xs[0];\n    },\n    always: function(x) {\n      return function() {\n        return x;\n      };\n    },\n    negate: function(f) {\n      return function(x) {\n        return !f(x);\n      };\n    },\n    empty: function(xs) {\n      return xs.length === 0;\n    },\n    tail: function(xs) {\n      return xs.slice(1, xs.length);\n    },\n    filter: function(f, xs) {\n      var filtered, x, _i, _len;\n      filtered = [];\n      for (_i = 0, _len = xs.length; _i < _len; _i++) {\n        x = xs[_i];\n        if (f(x)) {\n          filtered.push(x);\n        }\n      }\n      return filtered;\n    },\n    map: function(f, xs) {\n      var x, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = xs.length; _i < _len; _i++) {\n        x = xs[_i];\n        _results.push(f(x));\n      }\n      return _results;\n    },\n    each: function(xs, f) {\n      var key, value, _results;\n      _results = [];\n      for (key in xs) {\n        value = xs[key];\n        _results.push(f(key, value));\n      }\n      return _results;\n    },\n    toArray: function(xs) {\n      if (isArray(xs)) {\n        return xs;\n      } else {\n        return [xs];\n      }\n    },\n    contains: function(xs, x) {\n      return _.indexOf(xs, x) !== -1;\n    },\n    id: function(x) {\n      return x;\n    },\n    last: function(xs) {\n      return xs[xs.length - 1];\n    },\n    all: function(xs, f) {\n      var x, _i, _len;\n      if (f == null) {\n        f = _.id;\n      }\n      for (_i = 0, _len = xs.length; _i < _len; _i++) {\n        x = xs[_i];\n        if (!f(x)) {\n          return false;\n        }\n      }\n      return true;\n    },\n    any: function(xs, f) {\n      var x, _i, _len;\n      if (f == null) {\n        f = _.id;\n      }\n      for (_i = 0, _len = xs.length; _i < _len; _i++) {\n        x = xs[_i];\n        if (f(x)) {\n          return true;\n        }\n      }\n      return false;\n    },\n    without: function(x, xs) {\n      return _.filter((function(y) {\n        return y !== x;\n      }), xs);\n    },\n    remove: function(x, xs) {\n      var i;\n      i = _.indexOf(xs, x);\n      if (i >= 0) {\n        return xs.splice(i, 1);\n      }\n    },\n    fold: function(xs, seed, f) {\n      var x, _i, _len;\n      for (_i = 0, _len = xs.length; _i < _len; _i++) {\n        x = xs[_i];\n        seed = f(seed, x);\n      }\n      return seed;\n    },\n    flatMap: function(f, xs) {\n      return _.fold(xs, [], (function(ys, x) {\n        return ys.concat(f(x));\n      }));\n    },\n    cached: function(f) {\n      var value;\n      value = None;\n      return function() {\n        if (value === None) {\n          value = f();\n          f = null;\n        }\n        return value;\n      };\n    },\n    toString: function(obj) {\n      var ex, internals, key, value;\n      try {\n        recursionDepth++;\n        if (obj == null) {\n          return \"undefined\";\n        } else if (isFunction(obj)) {\n          return \"function\";\n        } else if (isArray(obj)) {\n          if (recursionDepth > 5) {\n            return \"[..]\";\n          }\n          return \"[\" + _.map(_.toString, obj).toString() + \"]\";\n        } else if (((obj != null ? obj.toString : void 0) != null) && obj.toString !== Object.prototype.toString) {\n          return obj.toString();\n        } else if (typeof obj === \"object\") {\n          if (recursionDepth > 5) {\n            return \"{..}\";\n          }\n          internals = (function() {\n            var _results;\n            _results = [];\n            for (key in obj) {\n              if (!__hasProp.call(obj, key)) continue;\n              value = (function() {\n                try {\n                  return obj[key];\n                } catch (_error) {\n                  ex = _error;\n                  return ex;\n                }\n              })();\n              _results.push(_.toString(key) + \":\" + _.toString(value));\n            }\n            return _results;\n          })();\n          return \"{\" + internals + \"}\";\n        } else {\n          return obj;\n        }\n      } finally {\n        recursionDepth--;\n      }\n    }\n  };\n\n  recursionDepth = 0;\n\n  Bacon._ = _;\n\n  Bacon.scheduler = {\n    setTimeout: function(f, d) {\n      return setTimeout(f, d);\n    },\n    setInterval: function(f, i) {\n      return setInterval(f, i);\n    },\n    clearInterval: function(id) {\n      return clearInterval(id);\n    },\n    now: function() {\n      return new Date().getTime();\n    }\n  };\n\n  if ((typeof define !== \"undefined\" && define !== null) && (define.amd != null)) {\n    define([], function() {\n      return Bacon;\n    });\n    this.Bacon = Bacon;\n  } else if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Bacon;\n    Bacon.Bacon = Bacon;\n  } else {\n    this.Bacon = Bacon;\n  }\n\n}).call(this);\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/control/route\", \"can/model\", \"can/view/mustache\", \"can/component\"], function(can) {\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can\";\ndefine([\"can/util/library\", \"can/control/route\", \"can/model\", \"can/view/mustache\", \"can/component\"], function(can) {\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/map\", \"can/list\"], function (can) {\n\n\t// ## model.js\n\t// (Don't steal this file directly in your code.)\n\n\t// ## pipe\n\t// `pipe` lets you pipe the results of a successful deferred\n\t// through a function before resolving the deferred.\n\t/**\n\t * @add can.Model\n\t */\n\tvar pipe = function (def, thisArg, func) {\n\t\t// The piped result will be available through a new Deferred.\n\t\tvar d = new can.Deferred();\n\t\tdef.then(function () {\n\t\t\tvar args = can.makeArray(arguments),\n\t\t\t\tsuccess = true;\n\n\t\t\ttry {\n\t\t\t\t// Pipe the results through the function.\n\t\t\t\targs[0] = func.apply(thisArg, args);\n\t\t\t} catch (e) {\n\t\t\t\tsuccess = false;\n\t\t\t\t// The function threw an error, so reject the Deferred.\n\t\t\t\td.rejectWith(d, [e].concat(args));\n\t\t\t}\n\t\t\tif (success) {\n\t\t\t\t// Resolve the new Deferred with the piped value.\n\t\t\t\td.resolveWith(d, args);\n\t\t\t}\n\t\t}, function () {\n\t\t\t// Pass on the rejection if the original Deferred never resolved.\n\t\t\td.rejectWith(this, arguments);\n\t\t});\n\n\t\t// `can.ajax` returns a Deferred with an abort method to halt the AJAX call.\n\t\tif (typeof def.abort === 'function') {\n\t\t\td.abort = function () {\n\t\t\t\treturn def.abort();\n\t\t\t};\n\t\t}\n\n\t\t// Return the new (piped) Deferred.\n\t\treturn d;\n\t},\n\n\t\t// ## modelNum\n\t\t// When new model constructors are set up without a full name,\n\t\t// `modelNum` lets us name them uniquely (to keep track of them).\n\t\tmodelNum = 0,\n\n\t\t// ## getId\n\t\tgetId = function (inst) {\n\t\t\t// `can.__reading` makes a note that `id` was just read.\n\t\t\tcan.__reading(inst, inst.constructor.id);\n\t\t\t// Use `__get` instead of `attr` for performance. (But that means we have to remember to call `can.__reading`.)\n\t\t\treturn inst.__get(inst.constructor.id);\n\t\t},\n\n\t\t// ## ajax\n\t\t// This helper method makes it easier to make an AJAX call from the configuration of the Model.\n\t\tajax = function (ajaxOb, data, type, dataType, success, error) {\n\n\t\t\tvar params = {};\n\n\t\t\t// A string here would be something like `\"GET /endpoint\"`.\n\t\t\tif (typeof ajaxOb === 'string') {\n\t\t\t\t// Split on spaces to separate the HTTP method and the URL.\n\t\t\t\tvar parts = ajaxOb.split(/\\s+/);\n\t\t\t\tparams.url = parts.pop();\n\t\t\t\tif (parts.length) {\n\t\t\t\t\tparams.type = parts.pop();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If the first argument is an object, just load it into `params`.\n\t\t\t\tcan.extend(params, ajaxOb);\n\t\t\t}\n\n\t\t\t// If the `data` argument is a plain object, copy it into `params`.\n\t\t\tparams.data = typeof data === \"object\" && !can.isArray(data) ?\n\t\t\t\tcan.extend(params.data || {}, data) : data;\n\n\t\t\t// Substitute in data for any templated parts of the URL.\n\t\t\tparams.url = can.sub(params.url, params.data, true);\n\n\t\t\treturn can.ajax(can.extend({\n\t\t\t\ttype: type || 'post',\n\t\t\t\tdataType: dataType || 'json',\n\t\t\t\tsuccess: success,\n\t\t\t\terror: error\n\t\t\t}, params));\n\t\t},\n\n\t\t// ## makeRequest\n\t\t// This function abstracts making the actual AJAX request away from the Model.\n\t\tmakeRequest = function (modelObj, type, success, error, method) {\n\t\t\tvar args;\n\n\t\t\t// If `modelObj` is an Array, it it means we are coming from\n\t\t\t// the queued request, and we're passing already-serialized data.\n\t\t\tif (can.isArray(modelObj)) {\n\t\t\t\t// In that case, modelObj's signature will be `[modelObj, serializedData]`, so we need to unpack it.\n\t\t\t\targs = modelObj[1];\n\t\t\t\tmodelObj = modelObj[0];\n\t\t\t} else {\n\t\t\t\t// If we aren't supplied with serialized data, we'll make our own.\n\t\t\t\targs = modelObj.serialize();\n\t\t\t}\n\t\t\targs = [args];\n\n\t\t\tvar deferred,\n\t\t\t\tmodel = modelObj.constructor,\n\t\t\t\tjqXHR;\n\n\t\t\t// When calling `update` and `destroy`, the current ID needs to be the first parameter in the AJAX call.\n\t\t\tif (type === 'update' || type === 'destroy') {\n\t\t\t\targs.unshift(getId(modelObj));\n\t\t\t}\n\t\t\tjqXHR = model[type].apply(model, args);\n\n\t\t\t// Make sure that can.Model can react to the request before anything else does.\n\t\t\tdeferred = pipe(jqXHR, modelObj, function (data) {\n\t\t\t\t// `method` is here because `\"destroyed\" !== \"destroy\" + \"d\"`.\n\t\t\t\t// TODO: Do something smarter/more consistent here?\n\t\t\t\tmodelObj[method || type + \"d\"](data, jqXHR);\n\t\t\t\treturn modelObj;\n\t\t\t});\n\n\t\t\t// Hook up `abort`\n\t\t\tif (jqXHR.abort) {\n\t\t\t\tdeferred.abort = function () {\n\t\t\t\t\tjqXHR.abort();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdeferred.then(success, error);\n\t\t\treturn deferred;\n\t\t},\n\n\t\tinitializers = {\n\t\t\t// ## models\n\t\t\t// Returns a function that, when handed a list of objects, makes them into models and returns a model list of them.\n\t\t\t// `prop` is the property on `instancesRawData` that has the array of objects in it (if it's not `data`).\n\t\t\tmodels: function (prop) {\n\t\t\t\treturn function (instancesRawData, oldList) {\n\t\t\t\t\t// Increment reqs counter so new instances will be added to the store.\n\t\t\t\t\t// (This is cleaned up at the end of the method.)\n\t\t\t\t\tcan.Model._reqs++;\n\n\t\t\t\t\t// If there is no data, we can't really do anything with it.\n\t\t\t\t\tif (!instancesRawData) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the \"raw\" data is already a List, it's not raw.\n\t\t\t\t\tif (instancesRawData instanceof this.List) {\n\t\t\t\t\t\treturn instancesRawData;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar self = this,\n\t\t\t\t\t\t// `tmp` will hold the models before we push them onto `modelList`.\n\t\t\t\t\t\ttmp = [],\n\t\t\t\t\t\t// `ML` (see way below) is just `can.Model.List`.\n\t\t\t\t\t\tListClass = self.List || ML,\n\t\t\t\t\t\tmodelList = oldList instanceof can.List ? oldList : new ListClass(),\n\n\t\t\t\t\t\t// Check if we were handed an Array or a model list.\n\t\t\t\t\t\trawDataIsArray = can.isArray(instancesRawData),\n\t\t\t\t\t\trawDataIsList = instancesRawData instanceof ML,\n\n\t\t\t\t\t\t// Get the \"plain\" objects from the models from the list/array.\n\t\t\t\t\t\traw = rawDataIsArray ? instancesRawData : (\n\t\t\t\t\t\t\trawDataIsList ? instancesRawData.serialize() : can.getObject(prop || \"data\", instancesRawData)\n\t\t\t\t\t\t);\n\n\t\t\t\t\tif (typeof raw === 'undefined') {\n\t\t\t\t\t\tthrow new Error('Could not get any raw data while converting using .models');\n\t\t\t\t\t}\n\n\t\t\t\t\n\n\t\t\t\t\t// If there was anything left in the list we were given, get rid of it.\n\t\t\t\t\tif (modelList.length) {\n\t\t\t\t\t\tmodelList.splice(0);\n\t\t\t\t\t}\n\n\t\t\t\t\t// If we pushed these directly onto the list, it would cause a change event for each model.\n\t\t\t\t\t// So, we push them onto `tmp` first and then push everything at once, causing one atomic change event that contains all the models at once.\n\t\t\t\t\tcan.each(raw, function (rawPart) {\n\t\t\t\t\t\ttmp.push(self.model(rawPart));\n\t\t\t\t\t});\n\t\t\t\t\tmodelList.push.apply(modelList, tmp);\n\n\t\t\t\t\t// If there was other stuff on `instancesRawData`, let's transfer that onto `modelList` too.\n\t\t\t\t\tif (!rawDataIsArray) {\n\t\t\t\t\t\tcan.each(instancesRawData, function (val, prop) {\n\t\t\t\t\t\t\tif (prop !== 'data') {\n\t\t\t\t\t\t\t\tmodelList.attr(prop, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t// Clean up the store on the next turn of the event loop. (`this` is a model constructor.)\n\t\t\t\t\tsetTimeout(can.proxy(this._clean, this), 1);\n\t\t\t\t\treturn modelList;\n\t\t\t\t};\n\t\t\t},\n\t\t\t// ## model\n\t\t\t// Returns a function that, when handed a plain object, turns it into a model.\n\t\t\t// `prop` is the property on `attributes` that has the properties for the model in it.\n\t\t\tmodel: function (prop) {\n\t\t\t\treturn function (attributes) {\n\t\t\t\t\t// If there're no properties, there can be no model.\n\t\t\t\t\tif (!attributes) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// If this object knows how to serialize, parse, or access itself, we'll use that instead.\n\t\t\t\t\tif (typeof attributes.serialize === 'function') {\n\t\t\t\t\t\tattributes = attributes.serialize();\n\t\t\t\t\t}\n\t\t\t\t\tif (this.parseModel) {\n\t\t\t\t\t\tattributes = this.parseModel.apply(this, arguments);\n\t\t\t\t\t} else if (prop) {\n\t\t\t\t\t\tattributes = can.getObject(prop || \"data\", attributes);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar id = attributes[this.id],\n\t\t\t\t\t\t// 0 is a valid ID.\n\t\t\t\t\t\tmodel = (id || id === 0) && this.store[id] ?\n\t\t\t\t\t\t\t// If this model is in the store already, just update it.\n\t\t\t\t\t\t\tthis.store[id].attr(attributes, this.removeAttr || false) :\n\t\t\t\t\t\t\t// Otherwise, we need a new model.\n\t\t\t\t\t\t\tnew this(attributes);\n\n\t\t\t\t\treturn model;\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @static\n\t\t */\n\t\t//\n\t\tparserMaker = function (prop) {\n\t\t\treturn function (attributes) {\n\t\t\t\treturn prop ? can.getObject(prop || \"data\", attributes) : attributes;\n\t\t\t};\n\t\t},\n\n\t\t// ## parsers\n\t\t// This object describes how to take the data from an AJAX request and prepare it for `models` and `model`.\n\t\t// These functions are meant to be overwritten (if necessary) in an extended model constructor.\n\t\tparsers = {\n\t\t\t/**\n\t\t\t * @function can.Model.parseModel parseModel\n\t\t\t * @parent can.Model.static\n\t\t\t * @description Convert raw data into an object that can be used to\n\t\t\t * create a [can.Model] instance.\n\t\t\t *\n\t\t\t * @signature `can.Model.parseModel( data, xhr )`\n\t\t\t * @release 2.1\n\t\t\t *\n\t\t\t *\n\t\t\t * @param {Object} data The data to convert to a can.Model instance.\n\t\t\t * @param {XMLHTTPRequest} xhr The XMLHTTPRequest object used to make the request.\n\t\t\t * @return {Object} An object of properties to set at the [can.Model::attr attributes]\n\t\t\t * of a model instance.\n\t\t\t *\n\t\t\t * @signature `parseModel: \"PROPERTY\"`\n\t\t\t *\n\t\t\t * Creates a `parseModel` function that looks for the attributes object in the PROPERTY\n\t\t\t * property of raw instance data.\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * `can.Model.parseModel(data, xhr)` is used to\n\t\t\t * convert the raw response of a [can.Model.findOne findOne],\n\t\t\t * [can.Model.update update], and [can.Model.create create] request\n\t\t\t * into an object that [can.Model.model] can use to create\n\t\t\t * a model instances.\n\t\t\t *\n\t\t\t * This method is never called directly. Instead the deferred returned\n\t\t\t * by `findOne`, `update`, and `create` is piped into `parseModel`. If `findOne` was called,\n\t\t\t * the result of that is sent to [can.Model.model].\n\t\t\t *\n\t\t\t * If your server is returning data in non-standard way,\n\t\t\t * overwriting `can.Model.parseModel` is the best way to normalize it.\n\t\t\t *\n\t\t\t * ## Expected data format\n\t\t\t *\n\t\t\t * By default, [can.Model.model] expects data to be a name-value pair\n\t\t\t * object like:\n\t\t\t *\n\t\t\t *     {id: 1, name : \"dishes\"}\n\t\t\t *\n\t\t\t * If your data does not look like this, you probably want to overwrite `parseModel`.\n\t\t\t *\n\t\t\t * ## Overwriting parseModel\n\t\t\t *\n\t\t\t * If your service returns data like:\n\t\t\t *\n\t\t\t *     { thingsToDo: {name: \"dishes\", id: 5} }\n\t\t\t *\n\t\t\t * You will want to overwrite `parseModel` to pass the model what it expects like:\n\t\t\t *\n\t\t\t *     Task = can.Model.extend({\n\t\t\t *       parseModel: function(data){\n\t\t\t *         return data.thingsToDo;\n\t\t\t *       }\n\t\t\t *     },{});\n\t\t\t *\n\t\t\t * You could also do this like:\n\t\t\t *\n\t\t\t *     Task = can.Model.extend({\n\t\t\t *       parseModel: \"thingsToDo\"\n\t\t\t *     },{});\n\t\t\t *\n\t\t\t */\n\t\t\tparseModel: parserMaker,\n\t\t\t/**\n\t\t\t * @function can.Model.parseModels parseModels\n\t\t\t * @parent can.Model.static\n\t\t\t * @description Convert raw xhr data into an array or object that can be used to\n\t\t\t * create a [can.Model.List].\n\t\t\t * @release 2.1\n\t\t\t *\n\t\t\t * @signature `can.Model.parseModels(data, xhr)`\n\t\t\t *\n\t\t\t * @param {*} data The raw data from a `[can.Model.findAll findAll()]` request.\n\t\t\t *\n\t\t\t * @param {XMLHTTPRequest} [xhr] The XMLHTTPRequest object used to make the request.\n\t\t\t *\n\t\t\t * @return {Array|Object} A JavaScript Object or Array that [can.Model.models]\n\t\t\t * can convert into the Model's List.\n\t\t\t *\n\t\t\t * @signature `parseModels: \"PROPERTY\"`\n\t\t\t *\n\t\t\t * Creates a `parseModels` function that looks for the array of instance data in the PROPERTY\n\t\t\t * property of the raw response data of [can.Model.findAll].\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * `can.Model.parseModels(data, xhr)` is used to\n\t\t\t * convert the raw response of a [can.Model.findAll] request\n\t\t\t * into an object or Array that [can.Model.models] can use to create\n\t\t\t * a [can.Model.List] of model instances.\n\t\t\t *\n\t\t\t * This method is never called directly. Instead the deferred returned\n\t\t\t * by findAll is piped into `parseModels` and the result of that\n\t\t\t * is sent to [can.Model.models].\n\t\t\t *\n\t\t\t * If your server is returning data in non-standard way,\n\t\t\t * overwriting `can.Model.parseModels` is the best way to normalize it.\n\t\t\t *\n\t\t\t * ## Expected data format\n\t\t\t *\n\t\t\t * By default, [can.Model.models] expects data to be an array of name-value pair\n\t\t\t * objects like:\n\t\t\t *\n\t\t\t *     [{id: 1, name : \"dishes\"},{id:2, name: \"laundry\"}, ...]\n\t\t\t *\n\t\t\t * It can also take an object with additional data about the array like:\n\t\t\t *\n\t\t\t *     {\n\t\t\t *       count: 15000 //how many total items there might be\n\t\t\t *       data: [{id: 1, name : \"justin\"},{id:2, name: \"brian\"}, ...]\n\t\t\t *     }\n\t\t\t *\n\t\t\t * In this case, models will return a [can.Model.List] of instances found in\n\t\t\t * data, but with additional properties as expandos on the list:\n\t\t\t *\n\t\t\t *     var tasks = Task.models({\n\t\t\t *       count : 1500,\n\t\t\t *       data : [{id: 1, name: 'dishes'}, ...]\n\t\t\t *     })\n\t\t\t *     tasks.attr(\"name\") // -> 'dishes'\n\t\t\t *     tasks.count // -> 1500\n\t\t\t *\n\t\t\t * If your data does not look like one of these formats, overwrite `parseModels`.\n\t\t\t *\n\t\t\t * ## Overwriting parseModels\n\t\t\t *\n\t\t\t * If your service returns data like:\n\t\t\t *\n\t\t\t *     {thingsToDo: [{name: \"dishes\", id: 5}]}\n\t\t\t *\n\t\t\t * You will want to overwrite `parseModels` to pass the models what it expects like:\n\t\t\t *\n\t\t\t *     Task = can.Model.extend({\n\t\t\t *       parseModels: function(data){\n\t\t\t *         return data.thingsToDo;\n\t\t\t *       }\n\t\t\t *     },{});\n\t\t\t *\n\t\t\t * You could also do this like:\n\t\t\t *\n\t\t\t *     Task = can.Model.extend({\n\t\t\t *       parseModels: \"thingsToDo\"\n\t\t\t *     },{});\n\t\t\t *\n\t\t\t * `can.Model.models` passes each instance's data to `can.Model.model` to\n\t\t\t * create the individual instances.\n\t\t\t */\n\t\t\tparseModels: parserMaker\n\t\t},\n\n\t\t// ## ajaxMethods\n\t\t// This object describes how to make an AJAX request for each ajax method (`create`, `update`, etc.)\n\t\t// Each AJAX method is an object in `ajaxMethods` and can have the following properties:\n\t\t//\n\t\t// - `url`: Which property on the model contains the default URL for this method.\n\t\t// - `type`: The default HTTP request method.\n\t\t// - `data`: A method that takes the arguments from `makeRequest` (see above) and returns a data object for use in the AJAX call.\n\n\t\t/**\n\t\t * @function can.Model.bind bind\n\t\t * @parent can.Model.static\n\t\t * @description Listen for events on a Model class.\n\t\t *\n\t\t * @signature `can.Model.bind(eventType, handler)`\n\t\t * @param {String} eventType The type of event.  It must be\n\t\t * `\"created\"`, `\"updated\"`, `\"destroyed\"`.\n\t\t * @param {function} handler A callback function\n\t\t * that gets called with the event and instance that was\n\t\t * created, destroyed, or updated.\n\t\t * @return {can.Model} The model constructor function.\n\t\t *\n\t\t * @body\n\t\t * `bind(eventType, handler(event, instance))` listens to\n\t\t * __created__, __updated__, __destroyed__ events on all\n\t\t * instances of the model.\n\t\t *\n\t\t *     Task.bind(\"created\", function(ev, createdTask){\n\t\t *      this //-> Task\n\t\t *       createdTask.attr(\"name\") //-> \"Dishes\"\n\t\t *     })\n\t\t *\n\t\t *     new Task({name: \"Dishes\"}).save();\n\t\t */\n\t\t//\n\t\t/**\n\t\t * @function can.Model.unbind unbind\n\t\t * @parent can.Model.static\n\t\t * @description Stop listening for events on a Model class.\n\t\t *\n\t\t * @signature `can.Model.unbind(eventType, handler)`\n\t\t * @param {String} eventType The type of event. It must be\n\t\t * `\"created\"`, `\"updated\"`, `\"destroyed\"`.\n\t\t * @param {function} handler A callback function\n\t\t * that was passed to `bind`.\n\t\t * @return {can.Model} The model constructor function.\n\t\t *\n\t\t * @body\n\t\t * `unbind(eventType, handler)` removes a listener\n\t\t * attached with [can.Model.bind].\n\t\t *\n\t\t *     var handler = function(ev, createdTask){\n\t\t *\n\t\t *     }\n\t\t *     Task.bind(\"created\", handler)\n\t\t *     Task.unbind(\"created\", handler)\n\t\t *\n\t\t * You have to pass the same function to `unbind` that you\n\t\t * passed to `bind`.\n\t\t */\n\t\t//\n\t\t/**\n\t\t * @property {String} can.Model.id id\n\t\t * @parent can.Model.static\n\t\t * The name of the id field.  Defaults to `'id'`. Change this if it is something different.\n\t\t *\n\t\t * For example, it's common in .NET to use `'Id'`.  Your model might look like:\n\t\t *\n\t\t *     Friend = can.Model.extend({\n\t\t *       id: \"Id\"\n\t\t *     },{});\n\t\t */\n\t\t/**\n\t\t * @property {Boolean} can.Model.removeAttr removeAttr\n\t\t * @parent can.Model.static\n\t\t * Sets whether model conversion should remove non existing attributes or merge with\n\t\t * the existing attributes. The default is `false`.\n\t\t * For example, if `Task.findOne({ id: 1 })` returns\n\t\t *\n\t\t *      { id: 1, name: 'Do dishes', index: 1, color: ['red', 'blue'] }\n\t\t *\n\t\t * for the first request and\n\t\t *\n\t\t *      { id: 1, name: 'Really do dishes', color: ['green'] }\n\t\t *\n\t\t *  for the next request, the actual model attributes would look like:\n\t\t *\n\t\t *      { id: 1, name: 'Really do dishes', index: 1, color: ['green', 'blue'] }\n\t\t *\n\t\t *  Because the attributes of the original model and the updated model will\n\t\t *  be merged. Setting `removeAttr` to `true` will result in model attributes like\n\t\t *\n\t\t *      { id: 1, name: 'Really do dishes', color: ['green'] }\n\t\t *\n\t\t */\n\t\tajaxMethods = {\n\t\t\t/**\n\t\t\t * @description Specifies how to create a new resource on the server. `create(serialized)` is called\n\t\t\t * by [can.Model.prototype.save save] if the model instance [can.Model.prototype.isNew is new].\n\t\t\t * @function can.Model.create create\n\t\t\t * @parent can.Model.static\n\t\t\t *\n\t\t\t *\n\t\t\t * @signature `can.Model.create: function(serialized) -> deferred`\n\t\t\t *\n\t\t\t * Specify a function to create persistent instances. The function will\n\t\t\t * typically perform an AJAX request to a service that results in\n\t\t\t * creating a record in a database.\n\t\t\t *\n\t\t\t * @param {Object} serialized The [can.Map::serialize serialized] properties of\n\t\t\t * the model to create.\n\t\t\t * @return {can.Deferred} A Deferred that resolves to an object of attributes\n\t\t\t * that will be added to the created model instance.  The object __MUST__ contain\n\t\t\t * an [can.Model.id id] property so that future calls to [can.Model.prototype.save save]\n\t\t\t * will call [can.Model.update].\n\t\t\t *\n\t\t\t *\n\t\t\t * @signature `can.Model.create: \"[METHOD] /path/to/resource\"`\n\t\t\t *\n\t\t\t * Specify a HTTP method and url to create persistent instances.\n\t\t\t *\n\t\t\t * If you provide a URL, the Model will send a request to that URL using\n\t\t\t * the method specified (or POST if none is specified) when saving a\n\t\t\t * new instance on the server. (See below for more details.)\n\t\t\t *\n\t\t\t * @param {HttpMethod} METHOD An HTTP method. Defaults to `\"POST\"`.\n\t\t\t * @param {STRING} url The URL of the service to retrieve JSON data.\n\t\t\t *\n\t\t\t *\n\t\t\t * @signature `can.Model.create: {ajaxSettings}`\n\t\t\t *\n\t\t\t * Specify an options object that is used to make a HTTP request to create\n\t\t\t * persistent instances.\n\t\t\t *\n\t\t\t * @param {can.AjaxSettings} ajaxSettings A settings object that\n\t\t\t * specifies the options available to pass to [can.ajax].\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * `create(attributes) -> Deferred` is used by [can.Model::save save] to create a\n\t\t\t * model instance on the server.\n\t\t\t *\n\t\t\t * ## Implement with a URL\n\t\t\t *\n\t\t\t * The easiest way to implement create is to give it the url\n\t\t\t * to post data to:\n\t\t\t *\n\t\t\t *     var Recipe = can.Model.extend({\n\t\t\t *       create: \"/recipes\"\n\t\t\t *     },{})\n\t\t\t *\n\t\t\t * This lets you create a recipe like:\n\t\t\t *\n\t\t\t *     new Recipe({name: \"hot dog\"}).save();\n\t\t\t *\n\t\t\t *\n\t\t\t * ## Implement with a Function\n\t\t\t *\n\t\t\t * You can also implement create by yourself. Create gets called\n\t\t\t * with `attrs`, which are the [can.Map::serialize serialized] model\n\t\t\t * attributes.  Create returns a `Deferred`\n\t\t\t * that contains the id of the new instance and any other\n\t\t\t * properties that should be set on the instance.\n\t\t\t *\n\t\t\t * For example, the following code makes a request\n\t\t\t * to `POST /recipes.json {'name': 'hot+dog'}` and gets back\n\t\t\t * something that looks like:\n\t\t\t *\n\t\t\t *     {\n\t\t\t *       \"id\": 5,\n\t\t\t *       \"createdAt\": 2234234329\n\t\t\t *     }\n\t\t\t *\n\t\t\t * The code looks like:\n\t\t\t *\n\t\t\t *     can.Model.extend(\"Recipe\", {\n\t\t\t *       create : function( attrs ){\n\t\t\t *         return $.post(\"/recipes.json\",attrs, undefined ,\"json\");\n\t\t\t *       }\n\t\t\t *     },{})\n\t\t\t */\n\t\t\tcreate: {\n\t\t\t\turl: \"_shortName\",\n\t\t\t\ttype: \"post\"\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Update a resource on the server.\n\t\t\t * @function can.Model.update update\n\t\t\t * @parent can.Model.static\n\t\t\t * @signature `can.Model.update: \"[METHOD] /path/to/resource\"`\n\t\t\t * If you provide a URL, the Model will send a request to that URL using\n\t\t\t * the method specified (or PUT if none is specified) when updating an\n\t\t\t * instance on the server. (See below for more details.)\n\t\t\t * @return {can.Deferred} A Deferred that resolves to the updated model.\n\t\t\t *\n\t\t\t * @signature `can.Model.update: function(id, serialized) -> can.Deffered`\n\t\t\t * If you provide a function, the Model will expect you to do your own AJAX requests.\n\t\t\t * @param {*} id The ID of the model to update.\n\t\t\t * @param {Object} serialized The [can.Map::serialize serialized] properties of\n\t\t\t * the model to update.\n\t\t\t * @return {can.Deferred} A Deferred that resolves to the updated model.\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `update( id, attrs ) -> Deferred` is used by [can.Model::save save] to\n\t\t\t * update a model instance on the server.\n\t\t\t *\n\t\t\t * ## Implement with a URL\n\t\t\t *\n\t\t\t * The easist way to implement update is to just give it the url to `PUT` data to:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       update: \"/recipes/{id}\"\n\t\t\t *     },{});\n\t\t\t *\n\t\t\t * This lets you update a recipe like:\n\t\t\t *\n\t\t\t *     Recipe.findOne({id: 1}, function(recipe){\n\t\t\t *       recipe.attr('name','salad');\n\t\t\t *       recipe.save();\n\t\t\t *     })\n\t\t\t *\n\t\t\t * This will make an XHR request like:\n\t\t\t *\n\t\t\t *     PUT /recipes/1\n\t\t\t *     name=salad\n\t\t\t *\n\t\t\t * If your server doesn't use PUT, you can change it to post like:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       update: \"POST /recipes/{id}\"\n\t\t\t *     },{});\n\t\t\t *\n\t\t\t * The server should send back an object with any new attributes the model\n\t\t\t * should have.  For example if your server updates the \"updatedAt\" property, it\n\t\t\t * should send back something like:\n\t\t\t *\n\t\t\t *     // PUT /recipes/4 {name: \"Food\"} ->\n\t\t\t *     {\n\t\t\t *       updatedAt : \"10-20-2011\"\n\t\t\t *     }\n\t\t\t *\n\t\t\t * ## Implement with a Function\n\t\t\t *\n\t\t\t * You can also implement update by yourself.  Update takes the `id` and\n\t\t\t * `attributes` of the instance to be updated.  Update must return\n\t\t\t * a [can.Deferred Deferred] that resolves to an object that contains any\n\t\t\t * properties that should be set on the instance.\n\t\t\t *\n\t\t\t * For example, the following code makes a request\n\t\t\t * to '/recipes/5.json?name=hot+dog' and gets back\n\t\t\t * something that looks like:\n\t\t\t *\n\t\t\t *     {\n\t\t\t *       updatedAt: \"10-20-2011\"\n\t\t\t *     }\n\t\t\t *\n\t\t\t * The code looks like:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       update : function(id, attrs ) {\n\t\t\t *         return $.post(\"/recipes/\"+id+\".json\",attrs, null,\"json\");\n\t\t\t *       }\n\t\t\t *     },{});\n\t\t\t */\n\t\t\tupdate: {\n\t\t\t\t// ## update.data\n\t\t\t\tdata: function (id, attrs) {\n\t\t\t\t\tattrs = attrs || {};\n\n\t\t\t\t\t// `this.id` is the property that represents the ID (and is usually `\"id\"`).\n\t\t\t\t\tvar identity = this.id;\n\n\t\t\t\t\t// If the value of the property being used as the ID changed,\n\t\t\t\t\t// indicate that in the request and replace the current ID property.\n\t\t\t\t\tif (attrs[identity] && attrs[identity] !== id) {\n\t\t\t\t\t\tattrs[\"new\" + can.capitalize(id)] = attrs[identity];\n\t\t\t\t\t\tdelete attrs[identity];\n\t\t\t\t\t}\n\t\t\t\t\tattrs[identity] = id;\n\n\t\t\t\t\treturn attrs;\n\t\t\t\t},\n\t\t\t\ttype: \"put\"\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Destroy a resource on the server.\n\t\t\t * @function can.Model.destroy destroy\n\t\t\t * @parent can.Model.static\n\t\t\t *\n\t\t\t * @signature `can.Model.destroy: function(id) -> deferred`\n\t\t\t *\n\t\t\t *\n\t\t\t *\n\t\t\t * If you provide a function, the Model will expect you to do your own AJAX requests.\n\t\t\t * @param {*} id The ID of the resource to destroy.\n\t\t\t * @return {can.Deferred} A Deferred that resolves to the destroyed model.\n\t\t\t *\n\t\t\t *\n\t\t\t * @signature `can.Model.destroy: \"[METHOD] /path/to/resource\"`\n\t\t\t *\n\t\t\t * If you provide a URL, the Model will send a request to that URL using\n\t\t\t * the method specified (or DELETE if none is specified) when deleting an\n\t\t\t * instance on the server. (See below for more details.)\n\t\t\t *\n\t\t\t * @return {can.Deferred} A Deferred that resolves to the destroyed model.\n\t\t\t *\n\t\t\t *\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `destroy(id) -> Deferred` is used by [can.Model::destroy] remove a model\n\t\t\t * instance from the server.\n\t\t\t *\n\t\t\t * ## Implement with a URL\n\t\t\t *\n\t\t\t * You can implement destroy with a string like:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       destroy : \"/recipe/{id}\"\n\t\t\t *     },{})\n\t\t\t *\n\t\t\t * And use [can.Model::destroy] to destroy it like:\n\t\t\t *\n\t\t\t *     Recipe.findOne({id: 1}, function(recipe){\n\t\t\t *          recipe.destroy();\n\t\t\t *     });\n\t\t\t *\n\t\t\t * This sends a `DELETE` request to `/thing/destroy/1`.\n\t\t\t *\n\t\t\t * If your server does not support `DELETE` you can override it like:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       destroy : \"POST /recipe/destroy/{id}\"\n\t\t\t *     },{})\n\t\t\t *\n\t\t\t * ## Implement with a function\n\t\t\t *\n\t\t\t * Implement destroy with a function like:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       destroy : function(id){\n\t\t\t *         return $.post(\"/recipe/destroy/\"+id,{});\n\t\t\t *       }\n\t\t\t *     },{})\n\t\t\t *\n\t\t\t * Destroy just needs to return a deferred that resolves.\n\t\t\t */\n\t\t\tdestroy: {\n\t\t\t\ttype: 'delete',\n\t\t\t\t// ## destroy.data\n\t\t\t\tdata: function (id, attrs) {\n\t\t\t\t\tattrs = attrs || {};\n\t\t\t\t\t// `this.id` is the property that represents the ID (and is usually `\"id\"`).\n\t\t\t\t\tattrs.id = attrs[this.id] = id;\n\t\t\t\t\treturn attrs;\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Retrieve multiple resources from a server.\n\t\t\t * @function can.Model.findAll findAll\n\t\t\t * @parent can.Model.static\n\t\t\t *\n\t\t\t * @signature `can.Model.findAll( params[, success[, error]] )`\n\t\t\t *\n\t\t\t * Retrieve multiple resources from a server.\n\t\t\t *\n\t\t\t * @param {Object} params Values to filter the request or results with.\n\t\t\t * @param {function(can.Model.List)} [success(list)] A callback to call on successful retrieval. The callback recieves\n\t\t\t * a can.Model.List of the retrieved resources.\n\t\t\t * @param {function(can.AjaxSettings)} [error(xhr)] A callback to call when an error occurs. The callback receives the\n\t\t\t * XmlHttpRequest object.\n\t\t\t * @return {can.Deferred} A deferred that resolves to a [can.Model.List] of retrieved models.\n\t\t\t *\n\t\t\t *\n\t\t\t * @signature `can.Model.findAll: findAllData( params ) -> deferred`\n\t\t\t *\n\t\t\t * Implements `findAll` with a [can.Model.findAllData function]. This function\n\t\t\t * is passed to [can.Model.makeFindAll makeFindAll] to create the external\n\t\t\t * `findAll` method.\n\t\t\t *\n\t\t\t *     findAll: function(params){\n\t\t\t *       return $.get(\"/tasks\",params)\n\t\t\t *     }\n\t\t\t *\n\t\t\t * @param {can.Model.findAllData} findAllData A function that accepts parameters\n\t\t\t * specifying a list of instance data to retrieve and returns a [can.Deferred]\n\t\t\t * that resolves to an array of those instances.\n\t\t\t *\n\t\t\t * @signature `can.Model.findAll: \"[METHOD] /path/to/resource\"`\n\t\t\t *\n\t\t\t * Implements `findAll` with a HTTP method and url to retrieve instance data.\n\t\t\t *\n\t\t\t *     findAll: \"GET /tasks\"\n\t\t\t *\n\t\t\t * If `findAll` is implemented with a string, this gets converted to\n\t\t\t * a [can.Model.findAllData findAllData function]\n\t\t\t * which is passed to [can.Model.makeFindAll makeFindAll] to create the external\n\t\t\t * `findAll` method.\n\t\t\t *\n\t\t\t * @param {HttpMethod} METHOD An HTTP method. Defaults to `\"GET\"`.\n\t\t\t *\n\t\t\t * @param {STRING} url The URL of the service to retrieve JSON data.\n\t\t\t *\n\t\t\t * @return {JSON} The service should return a JSON object like:\n\t\t\t *\n\t\t\t *     {\n\t\t\t *       \"data\": [\n\t\t\t *         { \"id\" : 1, \"name\" : \"do the dishes\" },\n\t\t\t *         { \"id\" : 2, \"name\" : \"mow the lawn\" },\n\t\t\t *         { \"id\" : 3, \"name\" : \"iron my shirts\" }\n\t\t\t *       ]\n\t\t\t *     }\n\t\t\t *\n\t\t\t * This object is passed to [can.Model.models] to turn it into instances.\n\t\t\t *\n\t\t\t * _Note: .findAll can also accept an array, but you\n\t\t\t * probably [should not be doing that](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)._\n\t\t\t *\n\t\t\t *\n\t\t\t * @signature `can.Model.findAll: {ajaxSettings}`\n\t\t\t *\n\t\t\t * Implements `findAll` with a [can.AjaxSettings ajax settings object].\n\t\t\t *\n\t\t\t *     findAll: {url: \"/tasks\", dataType: \"json\"}\n\t\t\t *\n\t\t\t * If `findAll` is implemented with an object, it gets converted to\n\t\t\t * a [can.Model.findAllData findAllData function]\n\t\t\t * which is passed to [can.Model.makeFindAll makeFindAll] to create the external\n\t\t\t * `findAll` method.\n\t\t\t *\n\t\t\t * @param {can.AjaxSettings} ajaxSettings A settings object that\n\t\t\t * specifies the options available to pass to [can.ajax].\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * `findAll( params, success(instances), error(xhr) ) -> Deferred` is used to retrieve model\n\t\t\t * instances from the server. After implementing `findAll`, use it to retrieve instances of the model\n\t\t\t * like:\n\t\t\t *\n\t\t\t *     Recipe.findAll({favorite: true}, function(recipes){\n\t\t\t *       recipes[0].attr('name') //-> \"Ice Water\"\n\t\t\t *     }, function( xhr ){\n\t\t\t *       // called if an error\n\t\t\t *     }) //-> Deferred\n\t\t\t *\n\t\t\t *\n\t\t\t * Before you can use `findAll`, you must implement it.\n\t\t\t *\n\t\t\t * ## Implement with a URL\n\t\t\t *\n\t\t\t * Implement findAll with a url like:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       findAll : \"/recipes.json\"\n\t\t\t *     },{});\n\t\t\t *\n\t\t\t * The server should return data that looks like:\n\t\t\t *\n\t\t\t *     [\n\t\t\t *       {\"id\" : 57, \"name\": \"Ice Water\"},\n\t\t\t *       {\"id\" : 58, \"name\": \"Toast\"}\n\t\t\t *     ]\n\t\t\t *\n\t\t\t * ## Implement with an Object\n\t\t\t *\n\t\t\t * Implement findAll with an object that specifies the parameters to\n\t\t\t * `can.ajax` (jQuery.ajax) like:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       findAll : {\n\t\t\t *         url: \"/recipes.xml\",\n\t\t\t *         dataType: \"xml\"\n\t\t\t *       }\n\t\t\t *     },{})\n\t\t\t *\n\t\t\t * ## Implement with a Function\n\t\t\t *\n\t\t\t * To implement with a function, `findAll` is passed __params__ to filter\n\t\t\t * the instances retrieved from the server and it should return a\n\t\t\t * deferred that resolves to an array of model data. For example:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       findAll : function(params){\n\t\t\t *         return $.ajax({\n\t\t\t *           url: '/recipes.json',\n\t\t\t *           type: 'get',\n\t\t\t *           dataType: 'json'})\n\t\t\t *       }\n\t\t\t *     },{})\n\t\t\t *\n\t\t\t */\n\t\t\tfindAll: {\n\t\t\t\turl: \"_shortName\"\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Retrieve a resource from a server.\n\t\t\t * @function can.Model.findOne findOne\n\t\t\t * @parent can.Model.static\n\t\t\t *\n\t\t\t * @signature `can.Model.findOne( params[, success[, error]] )`\n\t\t\t *\n\t\t\t * Retrieve a single instance from the server.\n\t\t\t *\n\t\t\t * @param {Object} params Values to filter the request or results with.\n\t\t\t * @param {function(can.Model)} [success(model)] A callback to call on successful retrieval. The callback recieves\n\t\t\t * the retrieved resource as a can.Model.\n\t\t\t * @param {function(can.AjaxSettings)} [error(xhr)] A callback to call when an error occurs. The callback receives the\n\t\t\t * XmlHttpRequest object.\n\t\t\t * @return {can.Deferred} A deferred that resolves to a [can.Model.List] of retrieved models.\n\t\t\t *\n\t\t\t * @signature `can.Model.findOne: findOneData( params ) -> deferred`\n\t\t\t *\n\t\t\t * Implements `findOne` with a [can.Model.findOneData function]. This function\n\t\t\t * is passed to [can.Model.makeFindOne makeFindOne] to create the external\n\t\t\t * `findOne` method.\n\t\t\t *\n\t\t\t *     findOne: function(params){\n\t\t\t *       return $.get(\"/task/\"+params.id)\n\t\t\t *     }\n\t\t\t *\n\t\t\t * @param {can.Model.findOneData} findOneData A function that accepts parameters\n\t\t\t * specifying an instance to retreive and returns a [can.Deferred]\n\t\t\t * that resolves to that instance.\n\t\t\t *\n\t\t\t * @signature `can.Model.findOne: \"[METHOD] /path/to/resource\"`\n\t\t\t *\n\t\t\t * Implements `findOne` with a HTTP method and url to retrieve an instance's data.\n\t\t\t *\n\t\t\t *     findOne: \"GET /tasks/{id}\"\n\t\t\t *\n\t\t\t * If `findOne` is implemented with a string, this gets converted to\n\t\t\t * a [can.Model.makeFindOne makeFindOne function]\n\t\t\t * which is passed to [can.Model.makeFindOne makeFindOne] to create the external\n\t\t\t * `findOne` method.\n\t\t\t *\n\t\t\t * @param {HttpMethod} METHOD An HTTP method. Defaults to `\"GET\"`.\n\t\t\t *\n\t\t\t * @param {STRING} url The URL of the service to retrieve JSON data.\n\t\t\t *\n\t\t\t * @signature `can.Model.findOne: {ajaxSettings}`\n\t\t\t *\n\t\t\t * Implements `findOne` with a [can.AjaxSettings ajax settings object].\n\t\t\t *\n\t\t\t *     findOne: {url: \"/tasks/{id}\", dataType: \"json\"}\n\t\t\t *\n\t\t\t * If `findOne` is implemented with an object, it gets converted to\n\t\t\t * a [can.Model.makeFindOne makeFindOne function]\n\t\t\t * which is passed to [can.Model.makeFindOne makeFindOne] to create the external\n\t\t\t * `findOne` method.\n\t\t\t *\n\t\t\t * @param {can.AjaxSettings} ajaxSettings A settings object that\n\t\t\t * specifies the options available to pass to [can.ajax].\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * `findOne( params, success(instance), error(xhr) ) -> Deferred` is used to retrieve a model\n\t\t\t * instance from the server.\n\t\t\t *\n\t\t\t * Use `findOne` like:\n\t\t\t *\n\t\t\t *     Recipe.findOne({id: 57}, function(recipe){\n\t\t\t *      recipe.attr('name') //-> \"Ice Water\"\n\t\t\t *     }, function( xhr ){\n\t\t\t *      // called if an error\n\t\t\t *     }) //-> Deferred\n\t\t\t *\n\t\t\t * Before you can use `findOne`, you must implement it.\n\t\t\t *\n\t\t\t * ## Implement with a URL\n\t\t\t *\n\t\t\t * Implement findAll with a url like:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       findOne : \"/recipes/{id}.json\"\n\t\t\t *     },{});\n\t\t\t *\n\t\t\t * If `findOne` is called like:\n\t\t\t *\n\t\t\t *     Recipe.findOne({id: 57});\n\t\t\t *\n\t\t\t * The server should return data that looks like:\n\t\t\t *\n\t\t\t *     {\"id\" : 57, \"name\": \"Ice Water\"}\n\t\t\t *\n\t\t\t * ## Implement with an Object\n\t\t\t *\n\t\t\t * Implement `findOne` with an object that specifies the parameters to\n\t\t\t * `can.ajax` (jQuery.ajax) like:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       findOne : {\n\t\t\t *         url: \"/recipes/{id}.xml\",\n\t\t\t *         dataType: \"xml\"\n\t\t\t *       }\n\t\t\t *     },{})\n\t\t\t *\n\t\t\t * ## Implement with a Function\n\t\t\t *\n\t\t\t * To implement with a function, `findOne` is passed __params__ to specify\n\t\t\t * the instance retrieved from the server and it should return a\n\t\t\t * deferred that resolves to the model data.  Also notice that you now need to\n\t\t\t * build the URL manually. For example:\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       findOne : function(params){\n\t\t\t *         return $.ajax({\n\t\t\t *           url: '/recipes/' + params.id,\n\t\t\t *           type: 'get',\n\t\t\t *           dataType: 'json'})\n\t\t\t *       }\n\t\t\t *     },{})\n\t\t\t *\n\t\t\t *\n\t\t\t */\n\t\t\tfindOne: {}\n\t\t},\n\t\t// ## ajaxMaker\n\t\t// Takes a method defined just above and a string that describes how to call that method\n\t\t// and makes a function that calls that method with the given data.\n\t\t//\n\t\t// - `ajaxMethod`: The object defined above in `ajaxMethods`.\n\t\t// - `str`: The string the configuration provided (such as `\"/recipes.json\"` for a `findAll` call).\n\t\tajaxMaker = function (ajaxMethod, str) {\n\t\t\treturn function (data) {\n\t\t\t\tdata = ajaxMethod.data ?\n\t\t\t\t\t// If the AJAX method mentioned above has its own way of getting `data`, use that.\n\t\t\t\t\tajaxMethod.data.apply(this, arguments) :\n\t\t\t\t\t// Otherwise, just use the data passed in.\n\t\t\t\t\tdata;\n\n\t\t\t\t// Make the AJAX call with the URL, data, and type indicated by the proper `ajaxMethod` above.\n\t\t\t\treturn ajax(str || this[ajaxMethod.url || \"_url\"], data, ajaxMethod.type || \"get\");\n\t\t\t};\n\t\t},\n\t\t// ## createURLFromResource\n\t\t// For each of the names (create, update, destroy, findOne, and findAll) use the \n\t\t// URL provided by the `resource` property. For example:\n\t\t// \t\t\n\t\t// \t\tToDo = can.Model.extend({\n\t\t// \t\t\tresource: \"/todos\"\n\t\t// \t\t}, {});\n\t\t// \t\n\t\t// \tWill create a can.Model that is identical to:\n\t\t// \t\n\t\t// \t\tToDo = can.Model.extend({\n\t\t// \t\t\tfindAll: \"GET /todos\",\n\t\t// \t\t\tfindOne: \"GET /todos/{id}\",\n\t\t// \t\t\tcreate:  \"POST /todos\",\n\t\t// \t\t\tupdate:  \"PUT /todos/{id}\",\n\t\t// \t\t\tdestroy: \"DELETE /todos/{id}\"\n\t\t// \t\t},{});\n\t\t// \n\t\t// - `model`: the can.Model that has the resource property\n\t\t// - `method`: a property from the ajaxMethod object\n\t\tcreateURLFromResource = function(model, name) {\n\t\t\tif (!model.resource) { return; }\n\n\t\t\tvar resource = model.resource.replace(/\\/+$/, \"\");\n\t\t\tif (name === \"findAll\" || name === \"create\") {\n\t\t\t\treturn resource;\n\t\t\t} else {\n\t\t\t\treturn resource + \"/{\" + model.id + \"}\";\n\t\t\t}\n\t\t};\n\n\t// # can.Model\n\t// A can.Map that connects to a RESTful interface.\n\tcan.Model = can.Map.extend({\n\t\t\t// `fullName` identifies the model type in debugging.\n\t\t\tfullName: \"can.Model\",\n\t\t\t_reqs: 0,\n\t\t\t// ## can.Model.setup\n\t\t\t/**\n\t\t\t * @hide\n\t\t\t * @function can.Model.setup\n\t\t\t * @parent can.Model.static\n\t\t\t *\n\t\t\t * Configures\n\t\t\t *\n\t\t\t */\n\t\t\tsetup: function (base, fullName, staticProps, protoProps) {\n\t\t\t\t// Assume `fullName` wasn't passed. (`can.Model.extend({ ... }, { ... })`)\n\t\t\t\t// This is pretty usual.\n\t\t\t\tif (fullName !== \"string\") {\n\t\t\t\t\tprotoProps = staticProps;\n\t\t\t\t\tstaticProps = fullName;\n\t\t\t\t}\n\t\t\t\t// Assume no static properties were passed. (`can.Model.extend({ ... })`)\n\t\t\t\t// This is really unusual for a model though, since there's so much configuration.\n\t\t\t\tif (!protoProps) {\n\t\t\t\t\tprotoProps = staticProps;\n\t\t\t\t}\n\n\t\t\t\t// Create the model store here, in case someone wants to use can.Model without inheriting from it.\n\t\t\t\tthis.store = {};\n\n\t\t\t\tcan.Map.setup.apply(this, arguments);\n\t\t\t\tif (!can.Model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// `List` is just a regular can.Model.List that knows what kind of Model it's hooked up to.\n\t\t\t\t/**\n\t\t\t\t * @property {can.Model.List} can.Model.static.List List\n\t\t\t\t * @parent can.Model.static\n\t\t\t\t *\n\t\t\t\t * @description Specifies the type of List that [can.Model.findAll findAll]\n\t\t\t\t * should return.\n\t\t\t\t *\n\t\t\t\t * @option {can.Model.List} A can.Model's List property is the\n\t\t\t\t * type of [can.List List] returned\n\t\t\t\t * from [can.Model.findAll findAll]. For example:\n\t\t\t\t *\n\t\t\t\t *     Task = can.Model.extend({\n\t\t\t\t *       findAll: \"/tasks\"\n\t\t\t\t *     },{})\n\t\t\t\t *\n\t\t\t\t *     Task.findAll({}, function(tasks){\n\t\t\t\t *       tasks instanceof Task.List //-> true\n\t\t\t\t *     })\n\t\t\t\t *\n\t\t\t\t * Overwrite a Model's `List` property to add custom\n\t\t\t\t * behavior to the lists provided to `findAll` like:\n\t\t\t\t *\n\t\t\t\t *     Task = can.Model.extend({\n\t\t\t\t *       findAll: \"/tasks\"\n\t\t\t\t *     },{})\n\t\t\t\t *     Task.List = Task.List.extend({\n\t\t\t\t *       completed: function(){\n\t\t\t\t *         var count = 0;\n\t\t\t\t *         this.each(function(task){\n\t\t\t\t *           if( task.attr(\"completed\") ) count++;\n\t\t\t\t *         })\n\t\t\t\t *         return count;\n\t\t\t\t *       }\n\t\t\t\t *     })\n\t\t\t\t *\n\t\t\t\t *     Task.findAll({}, function(tasks){\n\t\t\t\t *       tasks.completed() //-> 3\n\t\t\t\t *     })\n\t\t\t\t *\n\t\t\t\t * When [can.Model] is extended,\n\t\t\t\t * [can.Model.List] is extended and set as the extended Model's\n\t\t\t\t * `List` property. The extended list's [can.List.Map Map] property\n\t\t\t\t * is set to the extended Model.  For example:\n\t\t\t\t *\n\t\t\t\t *     Task = can.Model.extend({\n\t\t\t\t *       findAll: \"/tasks\"\n\t\t\t\t *     },{})\n\t\t\t\t *     Task.List.Map //-> Task\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\tif(staticProps && staticProps.List) {\n\t\t\t\t\tthis.List = staticProps.List;\n\t\t\t\t\tthis.List.Map = this;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.List = base.List.extend({\n\t\t\t\t\t\tMap: this\n\t\t\t\t\t}, {});\n\t\t\t\t}\n\n\t\t\t\tvar self = this,\n\t\t\t\t\tclean = can.proxy(this._clean, self);\n\n\t\t\t\t// Go through `ajaxMethods` and set up static methods according to their configurations.\n\t\t\t\tcan.each(ajaxMethods, function (method, name) {\n\t\t\t\t\t// Check the configuration for this ajaxMethod.\n\t\t\t\t\t// If the configuration isn't a function, it should be a string (like `\"GET /endpoint\"`)\n\t\t\t\t\t// or an object like `{url: \"/endpoint\", type: 'GET'}`.\n\t\t\t\t\tif (!can.isFunction(self[name])) {\n\t\t\t\t\t\t// Etiher way, `ajaxMaker` will turn it into a function for us.\n\t\t\t\t\t\tself[name] = ajaxMaker(method, self[name] ? self[name] : createURLFromResource(self, name));\n\t\t\t\t\t}\n\n\t\t\t\t\t// There may also be a \"maker\" function (like `makeFindAll`) that alters the behavior of acting upon models\n\t\t\t\t\t// by changing when and how the function we just made with `ajaxMaker` gets called.\n\t\t\t\t\t// For example, you might cache responses and only make a call when you don't have a cached response.\n\t\t\t\t\tif (self[\"make\" + can.capitalize(name)]) {\n\t\t\t\t\t\t// Use the \"maker\" function to make the new \"ajaxMethod\" function.\n\t\t\t\t\t\tvar newMethod = self[\"make\" + can.capitalize(name)](self[name]);\n\t\t\t\t\t\t// Replace the \"ajaxMethod\" function in the configuration with the new one.\n\t\t\t\t\t\t// (`_overwrite` just overwrites a property in a given Construct.)\n\t\t\t\t\t\tcan.Construct._overwrite(self, base, name, function () {\n\t\t\t\t\t\t\t// Increment the numer of requests...\n\t\t\t\t\t\t\tcan.Model._reqs++;\n\t\t\t\t\t\t\t// ...make the AJAX call (and whatever else you're doing)...\n\t\t\t\t\t\t\tvar def = newMethod.apply(this, arguments);\n\t\t\t\t\t\t\t// ...and clean up the store.\n\t\t\t\t\t\t\tvar then = def.then(clean, clean);\n\t\t\t\t\t\t\t// Pass along `abort` so you can still abort the AJAX call.\n\t\t\t\t\t\t\tthen.abort = def.abort;\n\n\t\t\t\t\t\t\treturn then;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Set up the methods that will set up `models` and `model`.\n\t\t\t\tcan.each(initializers, function (makeInitializer, name) {\n\t\t\t\t\tvar parseName = \"parse\" + can.capitalize(name),\n\t\t\t\t\t\tdataProperty = self[name];\n\n\t\t\t\t\t// If there was a different property to find the model's data in than `data`,\n\t\t\t\t\t// make `parseModel` and `parseModels` functions that look that up instead.\n\t\t\t\t\tif (typeof dataProperty === \"string\") {\n\t\t\t\t\t\tcan.Construct._overwrite(self, base, parseName, parsers[parseName](dataProperty));\n\t\t\t\t\t\tcan.Construct._overwrite(self, base, name, makeInitializer(dataProperty));\n\t\t\t\t\t}\n\n\t\t\t\t\t// If there was no prototype, or no `model` and no `parseModel`,\n\t\t\t\t\t// we'll have to create a `parseModel`.\n\t\t\t\t\telse if (!protoProps || (!protoProps[name] && !protoProps[parseName])) {\n\t\t\t\t\t\tcan.Construct._overwrite(self, base, parseName, parsers[parseName]());\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// With the overridden parse methods, set up `models` and `model`.\n\t\t\t\tcan.each(parsers, function (makeParser, name) {\n\t\t\t\t\t// If there was a different property to find the model's data in than `data`,\n\t\t\t\t\t// make `model` and `models` functions that look that up instead.\n\t\t\t\t\tif (typeof self[name] === \"string\") {\n\t\t\t\t\t\tcan.Construct._overwrite(self, base, name, makeParser(self[name]));\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Make sure we have a unique name for this Model.\n\t\t\t\tif (self.fullName === \"can.Model\" || !self.fullName) {\n\t\t\t\t\tself.fullName = \"Model\" + (++modelNum);\n\t\t\t\t}\n\n\t\t\t\tcan.Model._reqs = 0;\n\t\t\t\tthis._url = this._shortName + \"/{\" + this.id + \"}\";\n\t\t\t},\n\t\t\t_ajax: ajaxMaker,\n\t\t\t_makeRequest: makeRequest,\n\t\t\t// ## can.Model._clean\n\t\t\t// `_clean` cleans up the model store after a request happens.\n\t\t\t_clean: function () {\n\t\t\t\tcan.Model._reqs--;\n\t\t\t\t// Don't clean up unless we have no pending requests.\n\t\t\t\tif (!can.Model._reqs) {\n\t\t\t\t\tfor (var id in this.store) {\n\t\t\t\t\t\t// Delete all items in the store without any event bindings.\n\t\t\t\t\t\tif (!this.store[id]._bindings) {\n\t\t\t\t\t\t\tdelete this.store[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn arguments[0];\n\t\t\t},\n\t\t\t/**\n\t\t\t * @function can.Model.models models\n\t\t\t * @parent can.Model.static\n\t\t\t *\n\t\t\t * @deprecated {2.1} Prior to 2.1, `.models` was used to convert the ajax\n\t\t\t * responses into a data format useful for converting them into an observable\n\t\t\t * list AND for converting them into that list. In 2.1, [can.Model.parseModels] should\n\t\t\t * be used to convert the ajax responses into a data format useful to [can.Model.models].\n\t\t\t *\n\t\t\t * @description Convert raw data into can.Model instances. Merge data with items in\n\t\t\t * the store if matches are found.\n\t\t\t *\n\t\t\t * @signature `can.Model.models(data[, oldList])`\n\t\t\t * @param {Array<Object>} data The raw data from a `[can.Model.findAll findAll()]` request.\n\t\t\t * @param {can.Model.List} [oldList] If supplied, this List will be updated with the data from\n\t\t\t * __data__.\n\t\t\t * @return {can.Model.List} A List of Models made from the raw data.\n\t\t\t *\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * `.models(data)` is used to create a [can.Model.List] of [can.Model] instances\n\t\t\t * with the data provided. If an item in data matches an instance in the [can.Model.store],\n\t\t\t * that instance will be merged with the item's data and inserted in the list.\n\t\t\t *\n\t\t\t * For example\n\t\t\t *\n\t\t\t *     Task = can.Model.extend({},{})\n\t\t\t *\n\t\t\t *     var t1 = new Task({id: 1, name: \"dishes\"});\n\t\t\t *\n\t\t\t *     // Binding on a model puts it in the store.\n\t\t\t *     t1.bind(\"change\", function(){})\n\t\t\t *\n\t\t\t *     var tasks = Task.models([\n\t\t\t *       {id: 1, name : \"dishes\", complete : false},\n\t\t\t *       {id: 2, name: \"laundry\", complete: true}\n\t\t\t *     ])\n\t\t\t *\n\t\t\t *     t1 === tasks.attr(0) //-> true\n\t\t\t *     t1.attr(\"complete\")  //-> false\n\t\t\t *\n\t\t\t */\n\t\t\tmodels: initializers.models(\"data\"),\n\t\t\t/**\n\t\t\t * @function can.Model.model model\n\t\t\t * @parent can.Model.static\n\t\t\t *\n\t\t\t * @deprecated {2.1} Prior to 2.1, `.model` was used to convert ajax\n\t\t\t * responses into a data format useful for converting them into a can.Model instance\n\t\t\t * AND for converting them into that instance. In 2.1, [can.Model.parseModel] should\n\t\t\t * be used to convert the ajax response into a data format useful to [can.Model.model].\n\t\t\t *\n\t\t\t * @description Convert raw data into a can.Model instance. If data's [can.Model.id id]\n\t\t\t * matches a item in the store's `id`, `data` is merged with the instance and the\n\t\t\t * instance is returned.\n\t\t\t *\n\t\t\t *\n\t\t\t * @signature `can.Model.model(data)`\n\t\t\t * @param {Object} data The data to convert to a can.Model instance.\n\t\t\t * @return {can.Model} An instance of can.Model made with the given data.\n\t\t\t *\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * `.models(data)` is used to create or retrieve a [can.Model] instance\n\t\t\t * with the data provided. If data matches an instance in the [can.Model.store],\n\t\t\t * that instance will be merged with the item's data and returneds\n\t\t\t *\n\t\t\t * For example\n\t\t\t *\n\t\t\t *     Task = can.Model.extend({},{})\n\t\t\t *\n\t\t\t *     var t1 = new Task({id: 1, name: \"dishes\"})\n\t\t\t *\n\t\t\t *     // Binding on a model puts it in the store\n\t\t\t *     t1.bind(\"change\", function(){})\n\t\t\t *\n\t\t\t *     var task = Task.model({id: 1, name : \"dishes\", complete : false})\n\t\t\t *\n\t\t\t *     t1 === task //-> true\n\t\t\t *     t1.attr(\"complete\")  //-> false\n\t\t\t *\n\t\t\t */\n\t\t\tmodel: initializers.model()\n\t\t},\n\n\t\t/**\n\t\t * @prototype\n\t\t */\n\t\t{\n\t\t\t// ## can.Model#setup\n\t\t\tsetup: function (attrs) {\n\t\t\t\t// Try to add things as early as possible to the store (#457).\n\t\t\t\t// This is the earliest possible moment, even before any properties are set.\n\t\t\t\tvar id = attrs && attrs[this.constructor.id];\n\t\t\t\tif (can.Model._reqs && id != null) {\n\t\t\t\t\tthis.constructor.store[id] = this;\n\t\t\t\t}\n\t\t\t\tcan.Map.prototype.setup.apply(this, arguments);\n\t\t\t},\n\t\t\t// ## can.Model#isNew\n\t\t\t// Something is new if its ID is `null` or `undefined`.\n\t\t\t/**\n\t\t\t * @function can.Model.prototype.isNew isNew\n\t\t\t * @description Check if a Model has yet to be saved on the server.\n\t\t\t * @signature `model.isNew()`\n\t\t\t * @return {Boolean} Whether an instance has been saved on the server.\n\t\t\t * (This is determined by whether `id` has a value set yet.)\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `isNew()` returns if the instance is has been created\n\t\t\t * on the server. This is essentially if the [can.Model.id]\n\t\t\t * property is null or undefined.\n\t\t\t *\n\t\t\t *     new Recipe({id: 1}).isNew() //-> false\n\t\t\t */\n\t\t\tisNew: function () {\n\t\t\t\tvar id = getId(this);\n\t\t\t\t// 0 is a valid ID.\n\t\t\t\t// TODO: Why not `return id === null || id === undefined;`?\n\t\t\t\treturn !(id || id === 0); // If `null` or `undefined`\n\t\t\t},\n\t\t\t// ## can.Model#save\n\t\t\t// `save` calls `create` or `update` as necessary, based on whether a model is new.\n\t\t\t/**\n\t\t\t * @function can.Model.prototype.save save\n\t\t\t * @description Save a model back to the server.\n\t\t\t * @signature `model.save([success[, error]])`\n\t\t\t * @param {function} [success] A callback to call on successful save. The callback recieves\n\t\t\t * the can.Model after saving.\n\t\t\t * @param {function} [error] A callback to call when an error occurs. The callback receives the\n\t\t\t * XmlHttpRequest object.\n\t\t\t * @return {can.Deferred} A Deferred that resolves to the Model after it has been saved.\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `model.save([success(model)],[error(xhr)])` creates or updates\n\t\t\t * the model instance using [can.Model.create] or\n\t\t\t * [can.Model.update] depending if the instance\n\t\t\t * [can.Model::isNew has an id or not].\n\t\t\t *\n\t\t\t * ## Using `save` to create an instance.\n\t\t\t *\n\t\t\t * If `save` is called on an instance that does not have\n\t\t\t * an [can.Model.id id] property, it calls [can.Model.create]\n\t\t\t * with the instance's properties.  It also [can.trigger triggers]\n\t\t\t * a \"created\" event on the instance and the model.\n\t\t\t *\n\t\t\t *     // create a model instance\n\t\t\t *     var todo = new Todo({name: \"dishes\"});\n\t\t\t *\n\t\t\t *     // listen when the instance is created\n\t\t\t *     todo.bind(\"created\", function(ev){\n\t\t\t *       this //-> todo\n\t\t\t *     });\n\t\t\t *\n\t\t\t *     // save it on the server\n\t\t\t *     todo.save(function(todo){\n\t\t\t *       console.log(\"todo\", todo, \"created\");\n\t\t\t *     });\n\t\t\t *\n\t\t\t * ## Using `save` to update an instance.\n\t\t\t *\n\t\t\t * If save is called on an instance that has\n\t\t\t * an [can.Model.id id] property, it calls [can.Model.create]\n\t\t\t * with the instance's properties.  When the save is complete,\n\t\t\t * it triggers an \"updated\" event on the instance and the instance's model.\n\t\t\t *\n\t\t\t * Instances with an\n\t\t\t * __id__ are typically retrieved with [can.Model.findAll] or\n\t\t\t * [can.Model.findOne].\n\t\t\t *\n\t\t\t *\n\t\t\t *     // get a created model instance\n\t\t\t *     Todo.findOne({id: 5},function(todo){\n\t\t\t *\n\t\t\t *       // listen when the instance is updated\n\t\t\t *       todo.bind(\"updated\", function(ev){\n\t\t\t *         this //-> todo\n\t\t\t *       })\n\t\t\t *\n\t\t\t *       // update the instance's property\n\t\t\t *       todo.attr(\"complete\", true)\n\t\t\t *\n\t\t\t *       // save it on the server\n\t\t\t *       todo.save(function(todo){\n\t\t\t *         console.log(\"todo\", todo, \"updated\")\n\t\t\t *       });\n\t\t\t *\n\t\t\t *     });\n\t\t\t *\n\t\t\t */\n\t\t\tsave: function (success, error) {\n\t\t\t\treturn makeRequest(this, this.isNew() ? 'create' : 'update', success, error);\n\t\t\t},\n\t\t\t// ## can.Model#destroy\n\t\t\t// Acts like can.Map.destroy but it also makes an AJAX call.\n\t\t\t/**\n\t\t\t * @function can.Model.prototype.destroy destroy\n\t\t\t * @description Destroy a Model on the server.\n\t\t\t * @signature `model.destroy([success[, error]])`\n\t\t\t * @param {function} [success] A callback to call on successful destruction. The callback recieves\n\t\t\t * the can.Model as it was just prior to destruction.\n\t\t\t * @param {function} [error] A callback to call when an error occurs. The callback receives the\n\t\t\t * XmlHttpRequest object.\n\t\t\t * @return {can.Deferred} A Deferred that resolves to the Model as it was before destruction.\n\t\t\t *\n\t\t\t * @body\n\t\t\t * Destroys the instance by calling\n\t\t\t * [Can.Model.destroy] with the id of the instance.\n\t\t\t *\n\t\t\t *     recipe.destroy(success, error);\n\t\t\t *\n\t\t\t * This triggers \"destroyed\" events on the instance and the\n\t\t\t * Model constructor function which can be listened to with\n\t\t\t * [can.Model::bind] and [can.Model.bind].\n\t\t\t *\n\t\t\t *     Recipe = can.Model.extend({\n\t\t\t *       destroy : \"DELETE /services/recipes/{id}\",\n\t\t\t *       findOne : \"/services/recipes/{id}\"\n\t\t\t *     },{})\n\t\t\t *\n\t\t\t *     Recipe.bind(\"destroyed\", function(){\n\t\t\t *       console.log(\"a recipe destroyed\");\n\t\t\t *     });\n\t\t\t *\n\t\t\t *     // get a recipe\n\t\t\t *     Recipe.findOne({id: 5}, function(recipe){\n\t\t\t *       recipe.bind(\"destroyed\", function(){\n\t\t\t *         console.log(\"this recipe destroyed\")\n\t\t\t *       })\n\t\t\t *       recipe.destroy();\n\t\t\t *     })\n\t\t\t */\n\t\t\tdestroy: function (success, error) {\n\t\t\t\t// If this model is new, don't make an AJAX call.\n\t\t\t\t// Instead, we have to construct the Deferred ourselves and return it.\n\t\t\t\tif (this.isNew()) {\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tvar def = can.Deferred();\n\t\t\t\t\tdef.then(success, error);\n\n\t\t\t\t\treturn def.done(function (data) {\n\t\t\t\t\t\tself.destroyed(data);\n\t\t\t\t\t}).resolve(self);\n\t\t\t\t}\n\n\t\t\t\t// If it isn't new, though, go ahead and make a request.\n\t\t\t\treturn makeRequest(this, 'destroy', success, error, 'destroyed');\n\t\t\t},\n\t\t\t// ## can.Model#bind and can.Model#unbind\n\t\t\t// These aren't actually implemented here, but their setup needs to be changed to account for the store.\n\t\t\t/**\n\t\t\t * @description Listen to events on this Model.\n\t\t\t * @function can.Model.prototype.bind bind\n\t\t\t * @signature `model.bind(eventName, handler)`\n\t\t\t * @param {String} eventName The event to bind to.\n\t\t\t * @param {function} handler The function to call when the\n\t\t\t * event occurs. __handler__ is passed the event and the\n\t\t\t * Model instance.\n\t\t\t * @return {can.Model} The Model, for chaining.\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `bind(eventName, handler(ev, args...) )` is used to listen\n\t\t\t * to events on this model instance.  Example:\n\t\t\t *\n\t\t\t *     Task = can.Model.extend()\n\t\t\t *     var task = new Task({name : \"dishes\"})\n\t\t\t *     task.bind(\"name\", function(ev, newVal, oldVal){})\n\t\t\t *\n\t\t\t * Use `bind` the\n\t\t\t * same as [can.Map::bind] which should be used as\n\t\t\t * a reference for listening to property changes.\n\t\t\t *\n\t\t\t * Bind on model can be used to listen to when\n\t\t\t * an instance is:\n\t\t\t *\n\t\t\t *  - created\n\t\t\t *  - updated\n\t\t\t *  - destroyed\n\t\t\t *\n\t\t\t * like:\n\t\t\t *\n\t\t\t *     Task = can.Model.extend()\n\t\t\t *     var task = new Task({name : \"dishes\"})\n\t\t\t *\n\t\t\t *     task.bind(\"created\", function(ev, newTask){\n\t\t\t *       console.log(\"created\", newTask)\n\t\t\t *     })\n\t\t\t *     .bind(\"updated\", function(ev, updatedTask){\n\t\t\t *       console.log(\"updated\", updatedTask)\n\t\t\t *     })\n\t\t\t *     .bind(\"destroyed\", function(ev, destroyedTask){\n\t\t\t *       console.log(\"destroyed\", destroyedTask)\n\t\t\t *     })\n\t\t\t *\n\t\t\t *     // create, update, and destroy\n\t\t\t *     task.save(function(){\n\t\t\t *       task.attr('name', \"do dishes\")\n\t\t\t *           .save(function(){\n\t\t\t *             task.destroy()\n\t\t\t *           })\n\t\t\t *     });\n\t\t\t *\n\t\t\t *\n\t\t\t * `bind` also extends the inherited\n\t\t\t * behavior of [can.Map::bind] to track the number\n\t\t\t * of event bindings on this object which is used to store\n\t\t\t * the model instance.  When there are no bindings, the\n\t\t\t * model instance is removed from the store, freeing memory.\n\t\t\t */\n\t\t\t_bindsetup: function () {\n\t\t\t\tthis.constructor.store[this.__get(this.constructor.id)] = this;\n\t\t\t\treturn can.Map.prototype._bindsetup.apply(this, arguments);\n\t\t\t},\n\t\t\t/**\n\t\t\t * @function can.Model.prototype.unbind unbind\n\t\t\t * @description Stop listening to events on this Model.\n\t\t\t * @signature `model.unbind(eventName[, handler])`\n\t\t\t * @param {String} eventName The event to unbind from.\n\t\t\t * @param {function} [handler] A handler previously bound with `bind`.\n\t\t\t * If __handler__ is not passed, `unbind` will remove all handlers\n\t\t\t * for the given event.\n\t\t\t * @return {can.Model} The Model, for chaining.\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `unbind(eventName, handler)` removes a listener\n\t\t\t * attached with [can.Model::bind].\n\t\t\t *\n\t\t\t *     var handler = function(ev, createdTask){\n\t\t\t *\n\t\t\t *     }\n\t\t\t *     task.bind(\"created\", handler)\n\t\t\t *     task.unbind(\"created\", handler)\n\t\t\t *\n\t\t\t * You have to pass the same function to `unbind` that you\n\t\t\t * passed to `bind`.\n\t\t\t *\n\t\t\t * Unbind will also remove the instance from the store\n\t\t\t * if there are no other listeners.\n\t\t\t */\n\t\t\t_bindteardown: function () {\n\t\t\t\tdelete this.constructor.store[getId(this)];\n\t\t\t\treturn can.Map.prototype._bindteardown.apply(this, arguments);\n\t\t\t},\n\t\t\t// Change the behavior of `___set` to account for the store.\n\t\t\t___set: function (prop, val) {\n\t\t\t\tcan.Map.prototype.___set.call(this, prop, val);\n\t\t\t\t// If we add or change the ID, update the store accordingly.\n\t\t\t\t// TODO: shouldn't this also delete the record from the old ID in the store?\n\t\t\t\tif (prop === this.constructor.id && this._bindings) {\n\t\t\t\t\tthis.constructor.store[getId(this)] = this;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t// Returns a function that knows how to prepare data from `findAll` or `findOne` calls.\n\t// `name` should be either `model` or `models`.\n\tvar makeGetterHandler = function (name) {\n\t\tvar parseName = \"parse\" + can.capitalize(name);\n\t\treturn function (data) {\n\t\t\t// If there's a `parse...` function, use its output.\n\t\t\tif (this[parseName]) {\n\t\t\t\tdata = this[parseName].apply(this, arguments);\n\t\t\t}\n\t\t\t// Run our maybe-parsed data through `model` or `models`.\n\t\t\treturn this[name](data);\n\t\t};\n\t},\n\t\t// Handle data returned from `create`, `update`, and `destroy` calls.\n\t\tcreateUpdateDestroyHandler = function (data) {\n\t\t\tif (this.parseModel) {\n\t\t\t\treturn this.parseModel.apply(this, arguments);\n\t\t\t} else {\n\t\t\t\treturn this.model(data);\n\t\t\t}\n\t\t};\n\n\tvar responseHandlers = {\n\t\t/**\n\t\t * @function can.Model.makeFindAll\n\t\t * @parent can.Model.static\n\t\t *\n\t\t * @signature `can.Model.makeFindAll: function(findAllData) -> findAll`\n\t\t *\n\t\t * Returns the external `findAll` method given the implemented [can.Model.findAllData findAllData] function.\n\t\t *\n\t\t * @params {can.Model.findAllData}\n\t\t *\n\t\t * [can.Model.findAll] is implemented with a `String`, [can.AjaxSettings ajax settings object], or\n\t\t * [can.Model.findAllData findAllData] function. If it is implemented as\n\t\t * a `String` or [can.AjaxSettings ajax settings object], those values are used\n\t\t * to create a [can.Model.findAllData findAllData] function.\n\t\t *\n\t\t * The [can.Model.findAllData findAllData] function is passed to `makeFindAll`. `makeFindAll`\n\t\t * should use `findAllData` internally to get the raw data for the request.\n\t\t *\n\t\t * @return {function(params,success,error):can.Deferred}\n\t\t *\n\t\t * Returns function that implements the external API of `findAll`.\n\t\t *\n\t\t * @body\n\t\t *\n\t\t * ## Use\n\t\t *\n\t\t * `makeFindAll` can be used to implement base models that perform special\n\t\t * behavior. `makeFindAll` is passed a [can.Model.findAllData findAllData] function that retrieves raw\n\t\t * data. It should return a function that when called, uses\n\t\t * the findAllData function to get the raw data, convert them to model instances with\n\t\t * [can.Model.models models].\n\t\t *\n\t\t * ## Caching\n\t\t *\n\t\t * The following uses `makeFindAll` to create a base `CachedModel`:\n\t\t *\n\t\t *     CachedModel = can.Model.extend({\n\t\t *       makeFindAll: function(findAllData){\n\t\t *         // A place to store requests\n\t\t *         var cachedRequests = {};\n\t\t *\n\t\t *         return function(params, success, error){\n\t\t *           // is this not cached?\n\t\t *           if(! cachedRequests[JSON.stringify(params)] ) {\n\t\t *             var self = this;\n\t\t *             // make the request for data, save deferred\n\t\t *             cachedRequests[JSON.stringify(params)] =\n\t\t *               findAllData(params).then(function(data){\n\t\t *                 // convert the raw data into instances\n\t\t *                 return self.models(data)\n\t\t *               })\n\t\t *           }\n\t\t *           // get the saved request\n\t\t *           var def = cachedRequests[JSON.stringify(params)]\n\t\t *           // hookup success and error\n\t\t *           def.then(success,error)\n\t\t *           return def;\n\t\t *         }\n\t\t *       }\n\t\t *     },{})\n\t\t *\n\t\t * The following Todo model will never request the same list of todo's twice:\n\t\t *\n\t\t *     Todo = CachedModel({\n\t\t *       findAll: \"/todos\"\n\t\t *     },{})\n\t\t *\n\t\t *     // widget 1\n\t\t *     Todo.findAll({})\n\t\t *\n\t\t *     // widget 2\n\t\t *     Todo.findAll({})\n\t\t */\n\t\tmakeFindAll: makeGetterHandler(\"models\"),\n\t\t/**\n\t\t * @function can.Model.makeFindOne\n\t\t * @parent can.Model.static\n\t\t *\n\t\t * @signature `can.Model.makeFindOne: function(findOneData) -> findOne`\n\t\t *\n\t\t * Returns the external `findOne` method given the implemented [can.Model.findOneData findOneData] function.\n\t\t *\n\t\t * @params {can.Model.findOneData}\n\t\t *\n\t\t * [can.Model.findOne] is implemented with a `String`, [can.AjaxSettings ajax settings object], or\n\t\t * [can.Model.findOneData findOneData] function. If it is implemented as\n\t\t * a `String` or [can.AjaxSettings ajax settings object], those values are used\n\t\t * to create a [can.Model.findOneData findOneData] function.\n\t\t *\n\t\t * The [can.Model.findOneData findOneData] function is passed to `makeFindOne`. `makeFindOne`\n\t\t * should use `findOneData` internally to get the raw data for the request.\n\t\t *\n\t\t * @return {function(params,success,error):can.Deferred}\n\t\t *\n\t\t * Returns function that implements the external API of `findOne`.\n\t\t *\n\t\t * @body\n\t\t *\n\t\t * ## Use\n\t\t *\n\t\t * `makeFindOne` can be used to implement base models that perform special\n\t\t * behavior. `makeFindOne` is passed a [can.Model.findOneData findOneData] function that retrieves raw\n\t\t * data. It should return a function that when called, uses\n\t\t * the findOneData function to get the raw data, convert them to model instances with\n\t\t * [can.Model.models models].\n\t\t *\n\t\t * ## Caching\n\t\t *\n\t\t * The following uses `makeFindOne` to create a base `CachedModel`:\n\t\t *\n\t\t *     CachedModel = can.Model.extend({\n\t\t *       makeFindOne: function(findOneData){\n\t\t *         // A place to store requests\n\t\t *         var cachedRequests = {};\n\t\t *\n\t\t *         return function(params, success, error){\n\t\t *           // is this not cached?\n\t\t *           if(! cachedRequests[JSON.stringify(params)] ) {\n\t\t *             var self = this;\n\t\t *             // make the request for data, save deferred\n\t\t *             cachedRequests[JSON.stringify(params)] =\n\t\t *               findOneData(params).then(function(data){\n\t\t *                 // convert the raw data into instances\n\t\t *                 return self.model(data)\n\t\t *               })\n\t\t *           }\n\t\t *           // get the saved request\n\t\t *           var def = cachedRequests[JSON.stringify(params)]\n\t\t *           // hookup success and error\n\t\t *           def.then(success,error)\n\t\t *           return def;\n\t\t *         }\n\t\t *       }\n\t\t *     },{})\n\t\t *\n\t\t * The following Todo model will never request the same todo twice:\n\t\t *\n\t\t *     Todo = CachedModel({\n\t\t *       findOne: \"/todos/{id}\"\n\t\t *     },{})\n\t\t *\n\t\t *     // widget 1\n\t\t *     Todo.findOne({id: 5})\n\t\t *\n\t\t *     // widget 2\n\t\t *     Todo.findOne({id: 5})\n\t\t */\n\t\tmakeFindOne: makeGetterHandler(\"model\"),\n\t\tmakeCreate: createUpdateDestroyHandler,\n\t\tmakeUpdate: createUpdateDestroyHandler\n\t};\n\n\t// Go through the response handlers and make the actual \"make\" methods.\n\tcan.each(responseHandlers, function (method, name) {\n\t\tcan.Model[name] = function (oldMethod) {\n\t\t\treturn function () {\n\t\t\t\tvar args = can.makeArray(arguments),\n\t\t\t\t\t// If args[1] is a function, we were only passed one argument before success and failure callbacks.\n\t\t\t\t\toldArgs = can.isFunction(args[1]) ? args.splice(0, 1) : args.splice(0, 2),\n\t\t\t\t\t// Call the AJAX method (`findAll` or `update`, etc.) and pipe it through the response handler from above.\n\t\t\t\t\tdef = pipe(oldMethod.apply(this, oldArgs), this, method);\n\n\t\t\t\tdef.then(args[0], args[1]);\n\t\t\t\treturn def;\n\t\t\t};\n\t\t};\n\t});\n\n\t// ## can.Model.created, can.Model.updated, and can.Model.destroyed\n\t// Livecycle methods for models.\n\tcan.each([\n\t\t/**\n\t\t * @function can.Model.prototype.created created\n\t\t * @hide\n\t\t * Called by save after a new instance is created.  Publishes 'created'.\n\t\t * @param {Object} attrs\n\t\t */\n\t\t\"created\",\n\t\t/**\n\t\t * @function can.Model.prototype.updated updated\n\t\t * @hide\n\t\t * Called by save after an instance is updated.  Publishes 'updated'.\n\t\t * @param {Object} attrs\n\t\t */\n\t\t\"updated\",\n\t\t/**\n\t\t * @function can.Model.prototype.destroyed destroyed\n\t\t * @hide\n\t\t * Called after an instance is destroyed.\n\t\t *   - Publishes \"shortName.destroyed\".\n\t\t *   - Triggers a \"destroyed\" event on this model.\n\t\t *   - Removes the model from the global list if its used.\n\t\t *\n\t\t */\n\t\t\"destroyed\"\n\t], function (funcName) {\n\t\t// Each of these is pretty much the same, except for the events they trigger.\n\t\tcan.Model.prototype[funcName] = function (attrs) {\n\t\t\tvar stub,\n\t\t\t\tconstructor = this.constructor;\n\n\t\t\t// Update attributes if attributes have been passed\n\t\t\tstub = attrs && typeof attrs === 'object' && this.attr(attrs.attr ? attrs.attr() : attrs);\n\n\t\t\t// triggers change event that bubble's like\n\t\t\t// handler( 'change','1.destroyed' ). This is used\n\t\t\t// to remove items on destroyed from Model Lists.\n\t\t\t// but there should be a better way.\n\t\t\tcan.trigger(this, \"change\", funcName);\n\n\t\t\n\n\t\t\t// Call event on the instance's Class\n\t\t\tcan.trigger(constructor, funcName, this);\n\t\t};\n\t});\n\t\n\n\t// # can.Model.List\n\t// Model Lists are just like `Map.List`s except that when their items are\n\t// destroyed, they automatically get removed from the List.\n\tvar ML = can.Model.List = can.List.extend({\n\t\t// ## can.Model.List.setup\n\t\t// On change or a nested named event, setup change bubbling.\n\t\t// On any other type of event, setup \"destroyed\" bubbling.\n\t\t_bubbleRule: function(eventName, list) {\n\t\t\treturn can.List._bubbleRule(eventName, list) || \"destroyed\";\n\t\t}\n\t},{\n\t\tsetup: function (params) {\n\t\t\t// If there was a plain object passed to the List constructor,\n\t\t\t// we use those as parameters for an initial findAll.\n\t\t\tif (can.isPlainObject(params) && !can.isArray(params)) {\n\t\t\t\tcan.List.prototype.setup.apply(this);\n\t\t\t\tthis.replace(this.constructor.Map.findAll(params));\n\t\t\t} else {\n\t\t\t\t// Otherwise, set up the list like normal.\n\t\t\t\tcan.List.prototype.setup.apply(this, arguments);\n\t\t\t}\n\t\t\tthis._init = 1;\n\t\t\tthis.bind('destroyed', can.proxy(this._destroyed, this));\n\t\t\tdelete this._init;\n\t\t},\n\t\t_destroyed: function (ev, attr) {\n\t\t\tif (/\\w+/.test(attr)) {\n\t\t\t\tvar index;\n\t\t\t\twhile((index = this.indexOf(ev.target)) > -1) {\n\t\t\t\t\tthis.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn can.Model;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/model\";\ndefine([\"can/util/library\", \"can/map\", \"can/list\"], function(can) {\n  var pipe = function(def, thisArg, func) {\n    var d = new can.Deferred();\n    def.then(function() {\n      var args = can.makeArray(arguments),\n          success = true;\n      try {\n        args[0] = func.apply(thisArg, args);\n      } catch (e) {\n        success = false;\n        d.rejectWith(d, [e].concat(args));\n      }\n      if (success) {\n        d.resolveWith(d, args);\n      }\n    }, function() {\n      d.rejectWith(this, arguments);\n    });\n    if (typeof def.abort === 'function') {\n      d.abort = function() {\n        return def.abort();\n      };\n    }\n    return d;\n  },\n      modelNum = 0,\n      getId = function(inst) {\n        can.__reading(inst, inst.constructor.id);\n        return inst.__get(inst.constructor.id);\n      },\n      ajax = function(ajaxOb, data, type, dataType, success, error) {\n        var params = {};\n        if (typeof ajaxOb === 'string') {\n          var parts = ajaxOb.split(/\\s+/);\n          params.url = parts.pop();\n          if (parts.length) {\n            params.type = parts.pop();\n          }\n        } else {\n          can.extend(params, ajaxOb);\n        }\n        params.data = typeof data === \"object\" && !can.isArray(data) ? can.extend(params.data || {}, data) : data;\n        params.url = can.sub(params.url, params.data, true);\n        return can.ajax(can.extend({\n          type: type || 'post',\n          dataType: dataType || 'json',\n          success: success,\n          error: error\n        }, params));\n      },\n      makeRequest = function(modelObj, type, success, error, method) {\n        var args;\n        if (can.isArray(modelObj)) {\n          args = modelObj[1];\n          modelObj = modelObj[0];\n        } else {\n          args = modelObj.serialize();\n        }\n        args = [args];\n        var deferred,\n            model = modelObj.constructor,\n            jqXHR;\n        if (type === 'update' || type === 'destroy') {\n          args.unshift(getId(modelObj));\n        }\n        jqXHR = model[type].apply(model, args);\n        deferred = pipe(jqXHR, modelObj, function(data) {\n          modelObj[method || type + \"d\"](data, jqXHR);\n          return modelObj;\n        });\n        if (jqXHR.abort) {\n          deferred.abort = function() {\n            jqXHR.abort();\n          };\n        }\n        deferred.then(success, error);\n        return deferred;\n      },\n      initializers = {\n        models: function(prop) {\n          return function(instancesRawData, oldList) {\n            can.Model._reqs++;\n            if (!instancesRawData) {\n              return;\n            }\n            if (instancesRawData instanceof this.List) {\n              return instancesRawData;\n            }\n            var self = this,\n                tmp = [],\n                ListClass = self.List || ML,\n                modelList = oldList instanceof can.List ? oldList : new ListClass(),\n                rawDataIsArray = can.isArray(instancesRawData),\n                rawDataIsList = instancesRawData instanceof ML,\n                raw = rawDataIsArray ? instancesRawData : (rawDataIsList ? instancesRawData.serialize() : can.getObject(prop || \"data\", instancesRawData));\n            if (typeof raw === 'undefined') {\n              throw new Error('Could not get any raw data while converting using .models');\n            }\n            if (modelList.length) {\n              modelList.splice(0);\n            }\n            can.each(raw, function(rawPart) {\n              tmp.push(self.model(rawPart));\n            });\n            modelList.push.apply(modelList, tmp);\n            if (!rawDataIsArray) {\n              can.each(instancesRawData, function(val, prop) {\n                if (prop !== 'data') {\n                  modelList.attr(prop, val);\n                }\n              });\n            }\n            setTimeout(can.proxy(this._clean, this), 1);\n            return modelList;\n          };\n        },\n        model: function(prop) {\n          return function(attributes) {\n            if (!attributes) {\n              return;\n            }\n            if (typeof attributes.serialize === 'function') {\n              attributes = attributes.serialize();\n            }\n            if (this.parseModel) {\n              attributes = this.parseModel.apply(this, arguments);\n            } else if (prop) {\n              attributes = can.getObject(prop || \"data\", attributes);\n            }\n            var id = attributes[this.id],\n                model = (id || id === 0) && this.store[id] ? this.store[id].attr(attributes, this.removeAttr || false) : new this(attributes);\n            return model;\n          };\n        }\n      },\n      parserMaker = function(prop) {\n        return function(attributes) {\n          return prop ? can.getObject(prop || \"data\", attributes) : attributes;\n        };\n      },\n      parsers = {\n        parseModel: parserMaker,\n        parseModels: parserMaker\n      },\n      ajaxMethods = {\n        create: {\n          url: \"_shortName\",\n          type: \"post\"\n        },\n        update: {\n          data: function(id, attrs) {\n            attrs = attrs || {};\n            var identity = this.id;\n            if (attrs[identity] && attrs[identity] !== id) {\n              attrs[\"new\" + can.capitalize(id)] = attrs[identity];\n              delete attrs[identity];\n            }\n            attrs[identity] = id;\n            return attrs;\n          },\n          type: \"put\"\n        },\n        destroy: {\n          type: 'delete',\n          data: function(id, attrs) {\n            attrs = attrs || {};\n            attrs.id = attrs[this.id] = id;\n            return attrs;\n          }\n        },\n        findAll: {url: \"_shortName\"},\n        findOne: {}\n      },\n      ajaxMaker = function(ajaxMethod, str) {\n        return function(data) {\n          data = ajaxMethod.data ? ajaxMethod.data.apply(this, arguments) : data;\n          return ajax(str || this[ajaxMethod.url || \"_url\"], data, ajaxMethod.type || \"get\");\n        };\n      },\n      createURLFromResource = function(model, name) {\n        if (!model.resource) {\n          return;\n        }\n        var resource = model.resource.replace(/\\/+$/, \"\");\n        if (name === \"findAll\" || name === \"create\") {\n          return resource;\n        } else {\n          return resource + \"/{\" + model.id + \"}\";\n        }\n      };\n  can.Model = can.Map.extend({\n    fullName: \"can.Model\",\n    _reqs: 0,\n    setup: function(base, fullName, staticProps, protoProps) {\n      if (fullName !== \"string\") {\n        protoProps = staticProps;\n        staticProps = fullName;\n      }\n      if (!protoProps) {\n        protoProps = staticProps;\n      }\n      this.store = {};\n      can.Map.setup.apply(this, arguments);\n      if (!can.Model) {\n        return;\n      }\n      if (staticProps && staticProps.List) {\n        this.List = staticProps.List;\n        this.List.Map = this;\n      } else {\n        this.List = base.List.extend({Map: this}, {});\n      }\n      var self = this,\n          clean = can.proxy(this._clean, self);\n      can.each(ajaxMethods, function(method, name) {\n        if (!can.isFunction(self[name])) {\n          self[name] = ajaxMaker(method, self[name] ? self[name] : createURLFromResource(self, name));\n        }\n        if (self[\"make\" + can.capitalize(name)]) {\n          var newMethod = self[\"make\" + can.capitalize(name)](self[name]);\n          can.Construct._overwrite(self, base, name, function() {\n            can.Model._reqs++;\n            var def = newMethod.apply(this, arguments);\n            var then = def.then(clean, clean);\n            then.abort = def.abort;\n            return then;\n          });\n        }\n      });\n      can.each(initializers, function(makeInitializer, name) {\n        var parseName = \"parse\" + can.capitalize(name),\n            dataProperty = self[name];\n        if (typeof dataProperty === \"string\") {\n          can.Construct._overwrite(self, base, parseName, parsers[parseName](dataProperty));\n          can.Construct._overwrite(self, base, name, makeInitializer(dataProperty));\n        } else if (!protoProps || (!protoProps[name] && !protoProps[parseName])) {\n          can.Construct._overwrite(self, base, parseName, parsers[parseName]());\n        }\n      });\n      can.each(parsers, function(makeParser, name) {\n        if (typeof self[name] === \"string\") {\n          can.Construct._overwrite(self, base, name, makeParser(self[name]));\n        }\n      });\n      if (self.fullName === \"can.Model\" || !self.fullName) {\n        self.fullName = \"Model\" + (++modelNum);\n      }\n      can.Model._reqs = 0;\n      this._url = this._shortName + \"/{\" + this.id + \"}\";\n    },\n    _ajax: ajaxMaker,\n    _makeRequest: makeRequest,\n    _clean: function() {\n      can.Model._reqs--;\n      if (!can.Model._reqs) {\n        for (var id in this.store) {\n          if (!this.store[id]._bindings) {\n            delete this.store[id];\n          }\n        }\n      }\n      return arguments[0];\n    },\n    models: initializers.models(\"data\"),\n    model: initializers.model()\n  }, {\n    setup: function(attrs) {\n      var id = attrs && attrs[this.constructor.id];\n      if (can.Model._reqs && id != null) {\n        this.constructor.store[id] = this;\n      }\n      can.Map.prototype.setup.apply(this, arguments);\n    },\n    isNew: function() {\n      var id = getId(this);\n      return !(id || id === 0);\n    },\n    save: function(success, error) {\n      return makeRequest(this, this.isNew() ? 'create' : 'update', success, error);\n    },\n    destroy: function(success, error) {\n      if (this.isNew()) {\n        var self = this;\n        var def = can.Deferred();\n        def.then(success, error);\n        return def.done(function(data) {\n          self.destroyed(data);\n        }).resolve(self);\n      }\n      return makeRequest(this, 'destroy', success, error, 'destroyed');\n    },\n    _bindsetup: function() {\n      this.constructor.store[this.__get(this.constructor.id)] = this;\n      return can.Map.prototype._bindsetup.apply(this, arguments);\n    },\n    _bindteardown: function() {\n      delete this.constructor.store[getId(this)];\n      return can.Map.prototype._bindteardown.apply(this, arguments);\n    },\n    ___set: function(prop, val) {\n      can.Map.prototype.___set.call(this, prop, val);\n      if (prop === this.constructor.id && this._bindings) {\n        this.constructor.store[getId(this)] = this;\n      }\n    }\n  });\n  var makeGetterHandler = function(name) {\n    var parseName = \"parse\" + can.capitalize(name);\n    return function(data) {\n      if (this[parseName]) {\n        data = this[parseName].apply(this, arguments);\n      }\n      return this[name](data);\n    };\n  },\n      createUpdateDestroyHandler = function(data) {\n        if (this.parseModel) {\n          return this.parseModel.apply(this, arguments);\n        } else {\n          return this.model(data);\n        }\n      };\n  var responseHandlers = {\n    makeFindAll: makeGetterHandler(\"models\"),\n    makeFindOne: makeGetterHandler(\"model\"),\n    makeCreate: createUpdateDestroyHandler,\n    makeUpdate: createUpdateDestroyHandler\n  };\n  can.each(responseHandlers, function(method, name) {\n    can.Model[name] = function(oldMethod) {\n      return function() {\n        var args = can.makeArray(arguments),\n            oldArgs = can.isFunction(args[1]) ? args.splice(0, 1) : args.splice(0, 2),\n            def = pipe(oldMethod.apply(this, oldArgs), this, method);\n        def.then(args[0], args[1]);\n        return def;\n      };\n    };\n  });\n  can.each([\"created\", \"updated\", \"destroyed\"], function(funcName) {\n    can.Model.prototype[funcName] = function(attrs) {\n      var stub,\n          constructor = this.constructor;\n      stub = attrs && typeof attrs === 'object' && this.attr(attrs.attr ? attrs.attr() : attrs);\n      can.trigger(this, \"change\", funcName);\n      can.trigger(constructor, funcName, this);\n    };\n  });\n  var ML = can.Model.List = can.List.extend({_bubbleRule: function(eventName, list) {\n      return can.List._bubbleRule(eventName, list) || \"destroyed\";\n    }}, {\n    setup: function(params) {\n      if (can.isPlainObject(params) && !can.isArray(params)) {\n        can.List.prototype.setup.apply(this);\n        this.replace(this.constructor.Map.findAll(params));\n      } else {\n        can.List.prototype.setup.apply(this, arguments);\n      }\n      this._init = 1;\n      this.bind('destroyed', can.proxy(this._destroyed, this));\n      delete this._init;\n    },\n    _destroyed: function(ev, attr) {\n      if (/\\w+/.test(attr)) {\n        var index;\n        while ((index = this.indexOf(ev.target)) > -1) {\n          this.splice(index, 1);\n        }\n      }\n    }\n  });\n  return can.Model;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/view/callbacks\", \"can/control\", \"can/observe\", \"can/view/mustache\", \"can/view/bindings\"], function (can, viewCallbacks) {\n\t// ## Helpers\n\t// Attribute names to ignore for setting scope values.\n\tvar ignoreAttributesRegExp = /^(dataViewId|class|id)$/i,\n\t\tparamReplacer = /\\{([^\\}]+)\\}/g;\n\n\t/**\n\t * @add can.Component\n\t */\n\tvar Component = can.Component = can.Construct.extend(\n\t\t\n\t\t// ## Static\n\t\t/**\n\t\t * @static\n\t\t */\n\t\t\n\t\t{\n\t\t\t// ### setup\n\t\t\t// \n\t\t\t// When a component is extended, this sets up the component's internal constructor\n\t\t\t// functions and templates for later fast initialization.\n\t\t\tsetup: function () {\n\t\t\t\tcan.Construct.setup.apply(this, arguments);\n\n\t\t\t\t// When `can.Component.setup` function is ran for the first time, `can.Component` doesn't exist yet \n\t\t\t\t// which ensures that the following code is ran only in constructors that extend `can.Component`. \n\t\t\t\tif (can.Component) {\n\t\t\t\t\tvar self = this,\n\t\t\t\t\t\tscope = this.prototype.scope;\n\t\t\t\t\t\n\t\t\t\t\t// Define a control using the `events` prototype property.\n\t\t\t\t\tthis.Control = ComponentControl.extend( this.prototype.events );\n\t\t\t\t\t\n\t\t\t\t\t// Look to convert `scope` to a Map constructor function.\n\t\t\t\t\tif (!scope || (typeof scope === \"object\" && ! (scope instanceof can.Map)  ) ) {\n\t\t\t\t\t\t// If scope is an object, use that object as the prototype of an extended \n\t\t\t\t\t\t// Map constructor function.\n\t\t\t\t\t\t// A new instance of that Map constructor function will be created and\n\t\t\t\t\t\t// set a the constructor instance's scope.\n\t\t\t\t\t\tthis.Map = can.Map.extend(scope || {});\n\t\t\t\t\t}\n\t\t\t\t\telse if (scope.prototype instanceof can.Map) {\n\t\t\t\t\t\t// If scope is a can.Map constructor function, just use that.\n\t\t\t\t\t\tthis.Map = scope;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Look for default `@` values. If a `@` is found, these\n\t\t\t\t\t// attributes string values will be set and 2-way bound on the\n\t\t\t\t\t// component instance's scope.\n\t\t\t\t\tthis.attributeScopeMappings = {};\n\t\t\t\t\tcan.each(this.Map ? this.Map.defaults : {}, function (val, prop) {\n\t\t\t\t\t\tif (val === \"@\") {\n\t\t\t\t\t\t\tself.attributeScopeMappings[prop] = prop;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Convert the template into a renderer function.\n\t\t\t\t\tif (this.prototype.template) {\n\t\t\t\t\t\t// If `this.prototype.template` is a function create renderer from it by\n\t\t\t\t\t\t// wrapping it with the anonymous function that will pass it the arguments,\n\t\t\t\t\t\t// otherwise create the render from the string\n\t\t\t\t\t\tif (typeof this.prototype.template === \"function\") {\n\t\t\t\t\t\t\tvar temp = this.prototype.template;\n\t\t\t\t\t\t\tthis.renderer = function () {\n\t\t\t\t\t\t\t\treturn can.view.frag(temp.apply(null, arguments));\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.renderer = can.view.mustache(this.prototype.template);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Register this component to be created when its `tag` is found.\n\t\t\t\t\tcan.view.tag(this.prototype.tag, function (el, options) {\n\t\t\t\t\t\tnew self(el, options);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\t\t}, {\n\t\t\t// ## Prototype\n\t\t\t/**\n\t\t\t * @prototype\n\t\t\t */\n\t\t\t// ### setup\n\t\t\t// When a new component instance is created, setup bindings, render the template, etc.\n\t\t\tsetup: function (el, hookupOptions) {\n\t\t\t\t// Setup values passed to component\n\t\t\t\tvar initalScopeData = {},\n\t\t\t\t\tcomponent = this,\n\t\t\t\t\ttwoWayBindings = {},\n\t\t\t\t\t// what scope property is currently updating\n\t\t\t\t\tscopePropertyUpdating,\n\t\t\t\t\t// the object added to the scope\n\t\t\t\t\tcomponentScope,\n\t\t\t\t\tfrag;\n\n\t\t\t\t// ## Scope\n\n\t\t\t\t// Add scope prototype properties marked with an \"@\" to the `initialScopeData` object\n\t\t\t\tcan.each(this.constructor.attributeScopeMappings, function (val, prop) {\n\t\t\t\t\tinitalScopeData[prop] = el.getAttribute(can.hyphenate(val));\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Get the value in the scope for each attribute\n\t\t\t\t// the hookup should probably happen after?\n\t\t\t\tcan.each(can.makeArray(el.attributes), function (node, index) {\n\t\t\t\t\tvar name = can.camelize(node.nodeName.toLowerCase()),\n\t\t\t\t\t\tvalue = node.value;\n\n\t\t\t\t\t// Ignore attributes already present in the ScopeMappings.\n\t\t\t\t\tif (component.constructor.attributeScopeMappings[name] || ignoreAttributesRegExp.test(name) || viewCallbacks.attr(node.nodeName)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Only setup bindings if attribute looks like `foo=\"{bar}\"`\n\t\t\t\t\tif(value[0] === \"{\" && value[value.length-1] === \"}\") {\n\t\t\t\t\t\tvalue = value.substr(1, value.length - 2 );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Legacy template types will crossbind \"foo=bar\"\n\t\t\t\t\t\tif(hookupOptions.templateType !== \"legacy\") {\n\t\t\t\t\t\t\tinitalScopeData[name] = value;\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Cross-bind the value in the scope to this \n\t\t\t\t\t// component's scope\n\t\t\t\t\tvar computeData = hookupOptions.scope.computeData(value, {\n\t\t\t\t\t\targs: []\n\t\t\t\t\t}),\n\t\t\t\t\t\tcompute = computeData.compute;\n\n\t\t\t\t\t// bind on this, check it's value, if it has dependencies\n\t\t\t\t\tvar handler = function (ev, newVal) {\n\t\t\t\t\t\tscopePropertyUpdating = name;\n\t\t\t\t\t\tcomponentScope.attr(name, newVal);\n\t\t\t\t\t\tscopePropertyUpdating = null;\n\t\t\t\t\t};\n\n\t\t\t\t\t// Compute only returned if bindable\n\t\t\t\t\tcompute.bind(\"change\", handler);\n\n\t\t\t\t\t// Set the value to be added to the scope\n\t\t\t\t\tinitalScopeData[name] = compute();\n\t\t\t\t\t\n\t\t\t\t\t// We don't need to listen to the compute `change` if it doesn't have any dependencies\n\t\t\t\t\tif (!compute.hasDependencies) {\n\t\t\t\t\t\tcompute.unbind(\"change\", handler);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Make sure we unbind (there's faster ways of doing this)\n\t\t\t\t\t\tcan.bind.call(el, \"removed\", function () {\n\t\t\t\t\t\t\tcompute.unbind(\"change\", handler);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// Setup the two-way binding\n\t\t\t\t\t\ttwoWayBindings[name] = computeData;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t\tif (this.constructor.Map) {\n\t\t\t\t\t// If `Map` property is set on the constructor use it to wrap the `initialScopeData`\n\t\t\t\t\tcomponentScope = new this.constructor.Map(initalScopeData);\n\t\t\t\t} else if (this.scope instanceof can.Map) {\n\t\t\t\t\t// If `this.scope` is instance of `can.Map` assign it to the `componentScope`\n\t\t\t\t\tcomponentScope = this.scope;\n\t\t\t\t} else if (can.isFunction(this.scope)) {\n\t\t\t\t\t// If `this.scope` is a function, call the function and \n\t\t\t\t\tvar scopeResult = this.scope(initalScopeData, hookupOptions.scope, el);\n\n\t\t\t\t\tif (scopeResult instanceof can.Map) {\n\t\t\t\t\t\t// If the function returns a can.Map, use that as the scope\n\t\t\t\t\t\tcomponentScope = scopeResult;\n\t\t\t\t\t} else if (scopeResult.prototype instanceof can.Map) {\n\t\t\t\t\t\t// If `scopeResult` is of a `can.Map` type, use it to wrap the `initialScopeData`\n\t\t\t\t\t\tcomponentScope = new scopeResult(initalScopeData);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Otherwise extend `can.Map` with the `scopeResult` and initialize it with the `initialScopeData`\n\t\t\t\t\t\tcomponentScope = new(can.Map.extend(scopeResult))(initalScopeData);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// ## Two way bindings\n\n\t\t\t\t// Object to hold the bind handlers so we can tear them down\n\t\t\t\tvar handlers = {};\n\t\t\t\t// Setup reverse bindings\n\t\t\t\tcan.each(twoWayBindings, function (computeData, prop) {\n\t\t\t\t\thandlers[prop] = function (ev, newVal) {\n\t\t\t\t\t\t// Check that this property is not being changed because\n\t\t\t\t\t\t// it's source value just changed\n\t\t\t\t\t\tif (scopePropertyUpdating !== prop) {\n\t\t\t\t\t\t\tcomputeData.compute(newVal);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tcomponentScope.bind(prop, handlers[prop]);\n\t\t\t\t});\n\t\t\t\t// Teardown reverse bindings when the element is removed\n\t\t\t\tcan.bind.call(el, \"removed\", function () {\n\t\t\t\t\tcan.each(handlers, function (handler, prop) {\n\t\t\t\t\t\tcomponentScope.unbind(prop, handlers[prop]);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t// Setup the attributes bindings\n\t\t\t\tif (!can.isEmptyObject(this.constructor.attributeScopeMappings) || hookupOptions.templateType !== \"legacy\") {\n\t\t\t\t\t// Bind on the `attributes` event and update the scope.\n\t\t\t\t\tcan.bind.call(el, \"attributes\", function (ev) {\n\t\t\t\t\t\t// Convert attribute name from the `attribute-name` to the `attributeName` format.\n\t\t\t\t\t\tvar camelized = can.camelize(ev.attributeName);\n\t\t\t\t\t\tif (!twoWayBindings[camelized]) {\n\t\t\t\t\t\t\t// If there is a mapping for this attribute, update the `componentScope` attribute\n\t\t\t\t\t\t\tcomponentScope.attr(camelized, el.getAttribute(ev.attributeName));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\t// Set `componentScope` to `this.scope` and set it to the element's `data` object as a `scope` property\n\t\t\t\tthis.scope = componentScope;\n\t\t\t\tcan.data(can.$(el), \"scope\", this.scope);\n\n\t\t\t\t// Create a real Scope object out of the scope property\n\t\t\t\tvar renderedScope = hookupOptions.scope.add(this.scope),\n\t\t\t\t\toptions = {\n\t\t\t\t\t\thelpers: {}\n\t\t\t\t\t};\n\n\t\t\t\t// ## Helpers\n\n\n\t\t\t\t// Setup helpers to callback with `this` as the component\n\t\t\t\tcan.each(this.helpers || {}, function (val, prop) {\n\t\t\t\t\tif (can.isFunction(val)) {\n\t\t\t\t\t\toptions.helpers[prop] = function () {\n\t\t\t\t\t\t\treturn val.apply(componentScope, arguments);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// ## `events` control\n\n\t\t\t\t// Create a control to listen to events\n\t\t\t\tthis._control = new this.constructor.Control(el, {\n\t\t\t\t\t// Pass the scope to the control so we can listen to it's changes from the controller.\n\t\t\t\t\tscope: this.scope\n\t\t\t\t});\n\n\t\t\t\t// ## Rendering\n\n\t\t\t\t// If this component has a template (that we've already converted to a renderer)\n\t\t\t\tif (this.constructor.renderer) {\n\t\t\t\t\t// If `options.tags` doesn't exist set it to an empty object.\n\t\t\t\t\tif (!options.tags) {\n\t\t\t\t\t\toptions.tags = {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// We need be alerted to when a <content> element is rendered so we can put the original contents of the widget in its place\n\t\t\t\t\toptions.tags.content = function contentHookup(el, rendererOptions) {\n\t\t\t\t\t\t// First check if there was content within the custom tag\n\t\t\t\t\t\t// otherwise, render what was within <content>, the default code\n\t\t\t\t\t\tvar subtemplate = hookupOptions.subtemplate || rendererOptions.subtemplate;\n\n\t\t\t\t\t\tif (subtemplate) {\n\n\t\t\t\t\t\t\t// `rendererOptions.options` is a scope of helpers where `<content>` was found, so\n\t\t\t\t\t\t\t// the right helpers should already be available.\n\t\t\t\t\t\t\t// However, `_tags.content` is going to point to this current content callback.  We need to \n\t\t\t\t\t\t\t// remove that so it will walk up the chain\n\n\t\t\t\t\t\t\tdelete options.tags.content;\n\n\t\t\t\t\t\t\tcan.view.live.replace([el], subtemplate(\n\t\t\t\t\t\t\t\t// This is the context of where `<content>` was found\n\t\t\t\t\t\t\t\t// which will have the the component's context\n\t\t\t\t\t\t\t\trendererOptions.scope,\n\n\t\t\t\t\t\t\t\trendererOptions.options));\n\n\t\t\t\t\t\t\t// Restore the content tag so it could potentially be used again (as in lists)\n\t\t\t\t\t\t\toptions.tags.content = contentHookup;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t// Render the component's template\n\t\t\t\t\tfrag = this.constructor.renderer(renderedScope, hookupOptions.options.add(options));\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise render the contents between the \n\t\t\t\t\tif(hookupOptions.templateType === \"legacy\") {\n\t\t\t\t\t\tfrag = can.view.frag(hookupOptions.subtemplate ? hookupOptions.subtemplate(renderedScope, hookupOptions.options.add(options)) : \"\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrag = hookupOptions.subtemplate ? hookupOptions.subtemplate(renderedScope, hookupOptions.options.add(options)) : document.createDocumentFragment();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t// Append the resulting document fragment to the element\n\t\t\t\tcan.appendChild(el, frag);\n\t\t\t}\n\t\t});\n\n\tvar ComponentControl = can.Control.extend({\n\t\t// Change lookup to first look in the scope.\n\t\t_lookup: function (options) {\n\t\t\treturn [options.scope, options, window];\n\t\t},\n\t\t_action: function (methodName, options, controlInstance ) {\n\t\t\tvar hasObjectLookup, readyCompute;\n\n\t\t\tparamReplacer.lastIndex = 0;\n\n\t\t\thasObjectLookup = paramReplacer.test(methodName);\n\n\t\t\t// If we don't have options (a `control` instance), we'll run this \n\t\t\t// later.\n\t\t\tif( !controlInstance && hasObjectLookup) {\n\t\t\t\treturn;\n\t\t\t} else if( !hasObjectLookup ) {\n\t\t\t\treturn can.Control._action.apply(this, arguments);\n\t\t\t} else {\n\t\t\t\t// We have `hasObjectLookup` and `controlInstance`.\n\n\t\t\t\treadyCompute = can.compute(function(){\n\t\t\t\t\tvar delegate;\n\t\t\t\t\t\n\t\t\t\t\t// Set the delegate target and get the name of the event we're listening to.\n\t\t\t\t\tvar name = methodName.replace(paramReplacer, function(matched, key){\n\t\t\t\t\t\tvar value;\n\n\t\t\t\t\t\t// If we are listening directly on the `scope` set it as a delegate target.\n\t\t\t\t\t\tif(key === \"scope\") {\n\t\t\t\t\t\t\tdelegate = options.scope;\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove `scope.` from the start of the key and read the value from the `scope`.\n\t\t\t\t\t\tkey = key.replace(/^scope\\./,\"\");\n\t\t\t\t\t\tvalue = can.compute.read(options.scope, key.split(\".\"), {isArgument: true}).value;\n\n\t\t\t\t\t\t// If `value` is undefined use `can.getObject` to get the value.\n\t\t\t\t\t\tif(value === undefined) {\n\t\t\t\t\t\t\tvalue = can.getObject(key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If `value` is a string we just return it, otherwise we set it as a delegate target.\n\t\t\t\t\t\tif(typeof value === \"string\") {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdelegate = value;\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// Get the name of the `event` we're listening to.\n\t\t\t\t\tvar parts = name.split(/\\s+/g),\n\t\t\t\t\t\tevent = parts.pop();\n\n\t\t\t\t\t// Return everything needed to handle the event we're listening to.\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprocessor: this.processors[event] || this.processors.click,\n\t\t\t\t\t\tparts: [name, parts.join(\" \"), event],\n\t\t\t\t\t\tdelegate: delegate || undefined\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t}, this);\n\n\t\t\t\t// Create a handler function that we'll use to handle the `change` event on the `readyCompute`.\n\t\t\t\tvar handler = function(ev, ready){\n\t\t\t\t\tcontrolInstance._bindings.control[methodName](controlInstance.element);\n\t\t\t\t\tcontrolInstance._bindings.control[methodName] = ready.processor(\n\t\t\t\t\t\t\t\t\tready.delegate || controlInstance.element,\n\t\t\t\t\t\t\t\t\tready.parts[2], ready.parts[1], methodName, controlInstance);\n\t\t\t\t};\n\n\t\t\t\treadyCompute.bind(\"change\", handler);\n\t\t\t\t\n\t\t\t\tcontrolInstance._bindings.readyComputes[methodName] = {\n\t\t\t\t\tcompute: readyCompute,\n\t\t\t\t\thandler: handler\n\t\t\t\t};\n\n\t\t\t\treturn readyCompute();\n\t\t\t}\n\t\t}\n\t},\n\t// Extend `events` with a setup method that listens to changes in `scope` and\n\t// rebinds all templated event handlers.\n\t{\n\t\tsetup: function (el, options) {\n\t\t\tthis.scope = options.scope;\n\t\t\treturn can.Control.prototype.setup.call(this, el, options);\n\t\t},\n\t\toff: function(){\n\t\t\t// If `this._bindings` exists we need to go through it's `readyComputes` and manually\n\t\t\t// unbind `change` event listeners set by the controller.\n\t\t\tif( this._bindings ) {\n\t\t\t\tcan.each(this._bindings.readyComputes || {}, function (value) {\n\t\t\t\t\tvalue.compute.unbind(\"change\", value.handler);\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Call `can.Control.prototype.off` function on this instance to cleanup the bindings.\n\t\t\tcan.Control.prototype.off.apply(this, arguments);\n\t\t\tthis._bindings.readyComputes = {};\n\t\t}\n\t});\n\n\t// If there is a `$` object and it has the `fn` object, create the `scope` plugin that returns\n\t// the scope object\n\tif (window.$ && $.fn) {\n\t\t$.fn.scope = function (attr) {\n\t\t\t// If `attr` is passed to the `scope` plugin return the value of that \n\t\t\t// attribute on the `scope` object, otherwise return the whole scope\n\t\t\tif (attr) {\n\t\t\t\treturn this.data(\"scope\")\n\t\t\t\t\t.attr(attr);\n\t\t\t} else {\n\t\t\t\treturn this.data(\"scope\");\n\t\t\t}\n\t\t};\n\t}\n\n\t// Define the `can.scope` function that can be used to retrieve the `scope` from the element\n\tcan.scope = function (el, attr) {\n\t\tel = can.$(el);\n\t\t// If `attr` is passed to the `can.scope` function return the value of that\n\t\t// attribute on the `scope` object otherwise return the whole scope\n\t\tif (attr) {\n\t\t\treturn can.data(el, \"scope\")\n\t\t\t\t.attr(attr);\n\t\t} else {\n\t\t\treturn can.data(el, \"scope\");\n\t\t}\n\t};\n\n\treturn Component;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/component\";\ndefine([\"can/util/library\", \"can/view/callbacks\", \"can/control\", \"can/observe\", \"can/view/mustache\", \"can/view/bindings\"], function(can, viewCallbacks) {\n  var ignoreAttributesRegExp = /^(dataViewId|class|id)$/i,\n      paramReplacer = /\\{([^\\}]+)\\}/g;\n  var Component = can.Component = can.Construct.extend({setup: function() {\n      can.Construct.setup.apply(this, arguments);\n      if (can.Component) {\n        var self = this,\n            scope = this.prototype.scope;\n        this.Control = ComponentControl.extend(this.prototype.events);\n        if (!scope || (typeof scope === \"object\" && !(scope instanceof can.Map))) {\n          this.Map = can.Map.extend(scope || {});\n        } else if (scope.prototype instanceof can.Map) {\n          this.Map = scope;\n        }\n        this.attributeScopeMappings = {};\n        can.each(this.Map ? this.Map.defaults : {}, function(val, prop) {\n          if (val === \"@\") {\n            self.attributeScopeMappings[prop] = prop;\n          }\n        });\n        if (this.prototype.template) {\n          if (typeof this.prototype.template === \"function\") {\n            var temp = this.prototype.template;\n            this.renderer = function() {\n              return can.view.frag(temp.apply(null, arguments));\n            };\n          } else {\n            this.renderer = can.view.mustache(this.prototype.template);\n          }\n        }\n        can.view.tag(this.prototype.tag, function(el, options) {\n          new self(el, options);\n        });\n      }\n    }}, {setup: function(el, hookupOptions) {\n      var initalScopeData = {},\n          component = this,\n          twoWayBindings = {},\n          scopePropertyUpdating,\n          componentScope,\n          frag;\n      can.each(this.constructor.attributeScopeMappings, function(val, prop) {\n        initalScopeData[prop] = el.getAttribute(can.hyphenate(val));\n      });\n      can.each(can.makeArray(el.attributes), function(node, index) {\n        var name = can.camelize(node.nodeName.toLowerCase()),\n            value = node.value;\n        if (component.constructor.attributeScopeMappings[name] || ignoreAttributesRegExp.test(name) || viewCallbacks.attr(node.nodeName)) {\n          return;\n        }\n        if (value[0] === \"{\" && value[value.length - 1] === \"}\") {\n          value = value.substr(1, value.length - 2);\n        } else {\n          if (hookupOptions.templateType !== \"legacy\") {\n            initalScopeData[name] = value;\n            return;\n          }\n        }\n        var computeData = hookupOptions.scope.computeData(value, {args: []}),\n            compute = computeData.compute;\n        var handler = function(ev, newVal) {\n          scopePropertyUpdating = name;\n          componentScope.attr(name, newVal);\n          scopePropertyUpdating = null;\n        };\n        compute.bind(\"change\", handler);\n        initalScopeData[name] = compute();\n        if (!compute.hasDependencies) {\n          compute.unbind(\"change\", handler);\n        } else {\n          can.bind.call(el, \"removed\", function() {\n            compute.unbind(\"change\", handler);\n          });\n          twoWayBindings[name] = computeData;\n        }\n      });\n      if (this.constructor.Map) {\n        componentScope = new this.constructor.Map(initalScopeData);\n      } else if (this.scope instanceof can.Map) {\n        componentScope = this.scope;\n      } else if (can.isFunction(this.scope)) {\n        var scopeResult = this.scope(initalScopeData, hookupOptions.scope, el);\n        if (scopeResult instanceof can.Map) {\n          componentScope = scopeResult;\n        } else if (scopeResult.prototype instanceof can.Map) {\n          componentScope = new scopeResult(initalScopeData);\n        } else {\n          componentScope = new (can.Map.extend(scopeResult))(initalScopeData);\n        }\n      }\n      var handlers = {};\n      can.each(twoWayBindings, function(computeData, prop) {\n        handlers[prop] = function(ev, newVal) {\n          if (scopePropertyUpdating !== prop) {\n            computeData.compute(newVal);\n          }\n        };\n        componentScope.bind(prop, handlers[prop]);\n      });\n      can.bind.call(el, \"removed\", function() {\n        can.each(handlers, function(handler, prop) {\n          componentScope.unbind(prop, handlers[prop]);\n        });\n      });\n      if (!can.isEmptyObject(this.constructor.attributeScopeMappings) || hookupOptions.templateType !== \"legacy\") {\n        can.bind.call(el, \"attributes\", function(ev) {\n          var camelized = can.camelize(ev.attributeName);\n          if (!twoWayBindings[camelized]) {\n            componentScope.attr(camelized, el.getAttribute(ev.attributeName));\n          }\n        });\n      }\n      this.scope = componentScope;\n      can.data(can.$(el), \"scope\", this.scope);\n      var renderedScope = hookupOptions.scope.add(this.scope),\n          options = {helpers: {}};\n      can.each(this.helpers || {}, function(val, prop) {\n        if (can.isFunction(val)) {\n          options.helpers[prop] = function() {\n            return val.apply(componentScope, arguments);\n          };\n        }\n      });\n      this._control = new this.constructor.Control(el, {scope: this.scope});\n      if (this.constructor.renderer) {\n        if (!options.tags) {\n          options.tags = {};\n        }\n        options.tags.content = function contentHookup(el, rendererOptions) {\n          var subtemplate = hookupOptions.subtemplate || rendererOptions.subtemplate;\n          if (subtemplate) {\n            delete options.tags.content;\n            can.view.live.replace([el], subtemplate(rendererOptions.scope, rendererOptions.options));\n            options.tags.content = contentHookup;\n          }\n        };\n        frag = this.constructor.renderer(renderedScope, hookupOptions.options.add(options));\n      } else {\n        if (hookupOptions.templateType === \"legacy\") {\n          frag = can.view.frag(hookupOptions.subtemplate ? hookupOptions.subtemplate(renderedScope, hookupOptions.options.add(options)) : \"\");\n        } else {\n          frag = hookupOptions.subtemplate ? hookupOptions.subtemplate(renderedScope, hookupOptions.options.add(options)) : document.createDocumentFragment();\n        }\n      }\n      can.appendChild(el, frag);\n    }});\n  var ComponentControl = can.Control.extend({\n    _lookup: function(options) {\n      return [options.scope, options, window];\n    },\n    _action: function(methodName, options, controlInstance) {\n      var hasObjectLookup,\n          readyCompute;\n      paramReplacer.lastIndex = 0;\n      hasObjectLookup = paramReplacer.test(methodName);\n      if (!controlInstance && hasObjectLookup) {\n        return;\n      } else if (!hasObjectLookup) {\n        return can.Control._action.apply(this, arguments);\n      } else {\n        readyCompute = can.compute(function() {\n          var delegate;\n          var name = methodName.replace(paramReplacer, function(matched, key) {\n            var value;\n            if (key === \"scope\") {\n              delegate = options.scope;\n              return \"\";\n            }\n            key = key.replace(/^scope\\./, \"\");\n            value = can.compute.read(options.scope, key.split(\".\"), {isArgument: true}).value;\n            if (value === undefined) {\n              value = can.getObject(key);\n            }\n            if (typeof value === \"string\") {\n              return value;\n            } else {\n              delegate = value;\n              return \"\";\n            }\n          });\n          var parts = name.split(/\\s+/g),\n              event = parts.pop();\n          return {\n            processor: this.processors[event] || this.processors.click,\n            parts: [name, parts.join(\" \"), event],\n            delegate: delegate || undefined\n          };\n        }, this);\n        var handler = function(ev, ready) {\n          controlInstance._bindings.control[methodName](controlInstance.element);\n          controlInstance._bindings.control[methodName] = ready.processor(ready.delegate || controlInstance.element, ready.parts[2], ready.parts[1], methodName, controlInstance);\n        };\n        readyCompute.bind(\"change\", handler);\n        controlInstance._bindings.readyComputes[methodName] = {\n          compute: readyCompute,\n          handler: handler\n        };\n        return readyCompute();\n      }\n    }\n  }, {\n    setup: function(el, options) {\n      this.scope = options.scope;\n      return can.Control.prototype.setup.call(this, el, options);\n    },\n    off: function() {\n      if (this._bindings) {\n        can.each(this._bindings.readyComputes || {}, function(value) {\n          value.compute.unbind(\"change\", value.handler);\n        });\n      }\n      can.Control.prototype.off.apply(this, arguments);\n      this._bindings.readyComputes = {};\n    }\n  });\n  if (window.$ && $.fn) {\n    $.fn.scope = function(attr) {\n      if (attr) {\n        return this.data(\"scope\").attr(attr);\n      } else {\n        return this.data(\"scope\");\n      }\n    };\n  }\n  can.scope = function(el, attr) {\n    el = can.$(el);\n    if (attr) {\n      return can.data(el, \"scope\").attr(attr);\n    } else {\n      return can.data(el, \"scope\");\n    }\n  };\n  return Component;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/jquery\"], function (can) {\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/library\";\ndefine([\"can/util/jquery\"], function(can) {\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/route\", \"can/control\"], function (can) {\n\n\t// ## control/route.js\n\t// _Controller route integration._\n\n\tcan.Control.processors.route = function (el, event, selector, funcName, controller) {\n\t\tselector = selector || \"\";\n\t\tif (!can.route.routes[selector]) {\n\t\t\tif (selector[0] === '/') {\n\t\t\t\tselector = selector.substring(1);\n\t\t\t}\n\t\t\tcan.route(selector);\n\t\t}\n\t\tvar batchNum,\n\t\t\tcheck = function (ev, attr, how) {\n\t\t\t\tif (can.route.attr('route') === (selector) &&\n\t\t\t\t\t(ev.batchNum === undefined || ev.batchNum !== batchNum)) {\n\n\t\t\t\t\tbatchNum = ev.batchNum;\n\n\t\t\t\t\tvar d = can.route.attr();\n\t\t\t\t\tdelete d.route;\n\t\t\t\t\tif (can.isFunction(controller[funcName])) {\n\t\t\t\t\t\tcontroller[funcName](d);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontroller[controller[funcName]](d);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t};\n\t\tcan.route.bind('change', check);\n\t\treturn function () {\n\t\t\tcan.route.unbind('change', check);\n\t\t};\n\t};\n\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/control/route\";\ndefine([\"can/util/library\", \"can/route\", \"can/control\"], function(can) {\n  can.Control.processors.route = function(el, event, selector, funcName, controller) {\n    selector = selector || \"\";\n    if (!can.route.routes[selector]) {\n      if (selector[0] === '/') {\n        selector = selector.substring(1);\n      }\n      can.route(selector);\n    }\n    var batchNum,\n        check = function(ev, attr, how) {\n          if (can.route.attr('route') === (selector) && (ev.batchNum === undefined || ev.batchNum !== batchNum)) {\n            batchNum = ev.batchNum;\n            var d = can.route.attr();\n            delete d.route;\n            if (can.isFunction(controller[funcName])) {\n              controller[funcName](d);\n            } else {\n              controller[controller[funcName]](d);\n            }\n          }\n        };\n    can.route.bind('change', check);\n    return function() {\n      can.route.unbind('change', check);\n    };\n  };\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/view/scope\", \"can/view\", \"can/view/scanner\", \"can/compute\", \"can/view/render\"], function (can) {\n\n\t\t// # mustache.js\n\t\t// `can.Mustache`: The Mustache templating engine.\n\t\t// \n\t\t// See the [Transformation](#section-29) section within *Scanning Helpers* for a detailed explanation \n\t\t// of the runtime render code design. The majority of the Mustache engine implementation \n\t\t// occurs within the *Transformation* scanning helper.\n\n\t\t// ## Initialization\n\t\t//\n\t\t// Define the view extension.\n\t\tcan.view.ext = \".mustache\";\n\n\t\t// ### Setup internal helper variables and functions.\n\t\t//\n\t\t// An alias for the context variable used for tracking a stack of contexts.\n\t\t// This is also used for passing to helper functions to maintain proper context.\n\t\tvar SCOPE = 'scope',\n\t\t\t// An alias for the variable used for the hash object that can be passed\n\t\t\t// to helpers via `options.hash`.\n\t\t\tHASH = '___h4sh',\n\t\t\t// An alias for the most used context stacking call.\n\t\t\tCONTEXT_OBJ = '{scope:' + SCOPE + ',options:options}',\n\t\t\t// a context object used to incidate being special\n\t\t\tSPECIAL_CONTEXT_OBJ = '{scope:' + SCOPE + ',options:options, special: true}',\n\t\t\t// argument names used to start the function (used by scanner and steal)\n\t\t\tARG_NAMES = SCOPE + \",options\",\n\n\t\t\t// matches arguments inside a {{ }}\n\t\t\targumentsRegExp = /((([^\\s]+?=)?('.*?'|\".*?\"))|.*?)\\s/g,\n\n\t\t\t// matches a literal number, string, null or regexp\n\t\t\tliteralNumberStringBooleanRegExp = /^(('.*?'|\".*?\"|[0-9]+\\.?[0-9]*|true|false|null|undefined)|((.+?)=(('.*?'|\".*?\"|[0-9]+\\.?[0-9]*|true|false)|(.+))))$/,\n\n\t\t\t// returns an object literal that we can use to look up a value in the current scope\n\t\t\tmakeLookupLiteral = function (type) {\n\t\t\t\treturn '{get:\"' + type.replace(/\"/g, '\\\\\"') + '\"}';\n\t\t\t},\n\t\t\t// returns if the object is a lookup\n\t\t\tisLookup = function (obj) {\n\t\t\t\treturn obj && typeof obj.get === \"string\";\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * Checks whether an object is like a can.Map. This takes into\n\t\t\t * fact that can.route is can.Map like.\n\t\t\t * @param  {[can.Map]}  observable\n\t\t\t * @return {Boolean} returns if the object is observable like.\n\t\t\t */\n\t\t\tisObserveLike = function (obj) {\n\t\t\t\treturn obj instanceof can.Map || (obj && !! obj._get);\n\t\t\t},\n\n\t\t\t/*\n\t\t\t * Tries to determine if the object passed is an array.\n\t\t\t * @param  {Array}  obj The object to check.\n\t\t\t * @return {Boolean} returns if the object is an array.\n\t\t\t */\n\t\t\tisArrayLike = function (obj) {\n\t\t\t\treturn obj && obj.splice && typeof obj.length === 'number';\n\t\t\t},\n\t\t\t// used to make sure .fn and .inverse are always called with a Scope like object\n\t\t\tmakeConvertToScopes = function (original, scope, options) {\n\t\t\t\tvar originalWithScope = function(ctx, opts){\n\t\t\t\t\treturn original(ctx || scope, opts);\n\t\t\t\t};\n\t\t\t\treturn function (updatedScope, updatedOptions) {\n\t\t\t\t\tif (updatedScope !== undefined && !(updatedScope instanceof can.view.Scope)) {\n\t\t\t\t\t\tupdatedScope = scope.add(updatedScope);\n\t\t\t\t\t}\n\t\t\t\t\tif (updatedOptions !== undefined && !(updatedOptions instanceof can.view.Options)) {\n\t\t\t\t\t\tupdatedOptions = options.add(updatedOptions);\n\t\t\t\t\t}\n\t\t\t\t\treturn originalWithScope(updatedScope, updatedOptions || options);\n\t\t\t\t};\n\t\t\t};\n\n\t\t// ## Mustache\n\t\t/**\n\t\t * @hide\n\t\t * The Mustache templating engine.\n\t\t * @param {Object} options\tConfiguration options\n\t\t */\n\t\tvar Mustache = function (options, helpers) {\n\t\t\t// Support calling Mustache without the constructor.\n\t\t\t// This returns a function that renders the template.\n\t\t\tif (this.constructor !== Mustache) {\n\t\t\t\tvar mustache = new Mustache(options);\n\t\t\t\treturn function (data, options) {\n\t\t\t\t\treturn mustache.render(data, options);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// If we get a `function` directly, it probably is coming from\n\t\t\t// a `steal`-packaged view.\n\t\t\tif (typeof options === \"function\") {\n\t\t\t\tthis.template = {\n\t\t\t\t\tfn: options\n\t\t\t\t};\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set options on self.\n\t\t\tcan.extend(this, options);\n\t\t\tthis.template = this.scanner.scan(this.text, this.name);\n\t\t};\n\n\t\t/**\n\t\t * @add can.Mustache\n\t\t */\n\t\t// Put Mustache on the `can` object.\n\t\tcan.Mustache = window.Mustache = Mustache;\n\n\t\t/** \n\t\t * @prototype\n\t\t */\n\t\tMustache.prototype.\n\t\t/**\n\t\t * @function can.Mustache.prototype.render render\n\t\t * @parent can.Mustache.prototype\n\t\t * @signature `mustache.render( data [, helpers] )`\n\t\t * @param {Object} data Data to interpolate into the template.\n\t\t * @return {String} The template with interpolated data, in string form.\n\t\t * @hide\n\t\t *\n\t\t * @body\n\t\t * Renders an object with view helpers attached to the view.\n\t\t *\n\t\t *\t\t new Mustache({text: \"<%= message %>\"}).render({\n\t\t *\t\t\t message: \"foo\"\n\t\t *\t\t })\n\t\t */\n\t\trender = function (data, options) {\n\t\t\tif (!(data instanceof can.view.Scope)) {\n\t\t\t\tdata = new can.view.Scope(data || {});\n\t\t\t}\n\t\t\tif (!(options instanceof can.view.Options)) {\n\t\t\t\toptions = new can.view.Options(options || {});\n\t\t\t}\n\t\t\toptions = options || {};\n\n\t\t\treturn this.template.fn.call(data, data, options);\n\t\t};\n\n\t\tcan.extend(Mustache.prototype, {\n\t\t\t// Share a singleton scanner for parsing templates.\n\t\t\tscanner: new can.view.Scanner({\n\t\t\t\t// A hash of strings for the scanner to inject at certain points.\n\t\t\t\ttext: {\n\t\t\t\t\t// This is the logic to inject at the beginning of a rendered template. \n\t\t\t\t\t// This includes initializing the `context` stack.\n\t\t\t\t\tstart: \"\", //\"var \"+SCOPE+\"= this instanceof can.view.Scope? this : new can.view.Scope(this);\\n\",\n\t\t\t\t\tscope: SCOPE,\n\t\t\t\t\toptions: \",options: options\",\n\t\t\t\t\targNames: ARG_NAMES\n\t\t\t\t},\n\n\t\t\t\t// An ordered token registry for the scanner.\n\t\t\t\t// This needs to be ordered by priority to prevent token parsing errors.\n\t\t\t\t// Each token follows the following structure:\n\t\t\t\t//\n\t\t\t\t//\t\t[\n\t\t\t\t//\t\t\t// Which key in the token map to match.\n\t\t\t\t//\t\t\t\"tokenMapName\",\n\t\t\t\t//\n\t\t\t\t//\t\t\t// A simple token to match, like \"{{\".\n\t\t\t\t//\t\t\t\"token\",\n\t\t\t\t//\n\t\t\t\t//\t\t\t// Optional. A complex (regexp) token to match that \n\t\t\t\t//\t\t\t// overrides the simple token.\n\t\t\t\t//\t\t\t\"[\\\\s\\\\t]*{{\",\n\t\t\t\t//\n\t\t\t\t//\t\t\t// Optional. A function that executes advanced \n\t\t\t\t//\t\t\t// manipulation of the matched content. This is \n\t\t\t\t//\t\t\t// rarely used.\n\t\t\t\t//\t\t\tfunction(content){   \n\t\t\t\t//\t\t\t\treturn content;\n\t\t\t\t//\t\t\t}\n\t\t\t\t//\t\t]\n\t\t\t\ttokens: [\n\t\t\t\t\t/**\n\t\t\t\t\t * @function can.mustache.tags.escaped {{key}}\n\t\t\t\t\t *\n\t\t\t\t\t * @description Insert the value of the [can.mustache.key key] into the\n\t\t\t\t\t * output of the template.\n\t\t\t\t\t *\n\t\t\t\t\t * @parent can.mustache.tags 0\n\t\t\t\t\t *\n\t\t\t\t\t * @signature `{{key}}`\n\t\t\t\t\t *\n\t\t\t\t\t * @param {can.mustache.key} key A key that references one of the following:\n\t\t\t\t\t *\n\t\t\t\t\t *  - A [can.mustache.registerHelper registered helper].\n\t\t\t\t\t *  - A value within the current or parent\n\t\t\t\t\t *    [can.mustache.context context]. If the value is a function or [can.compute], the\n\t\t\t\t\t *    function's return value is used.\n\t\t\t\t\t *\n\t\t\t\t\t * @return {String|Function|*}\n\t\t\t\t\t *\n\t\t\t\t\t * After the key's value is found (and set to any function's return value),\n\t\t\t\t\t * it is passed to [can.view.txt] as the result of a call to its `func`\n\t\t\t\t\t * argument. There, if the value is a:\n\t\t\t\t\t *\n\t\t\t\t\t *  - `null` or `undefined` - an empty string is inserted into the rendered template result.\n\t\t\t\t\t *  - `String` or `Number` - the value is inserted into the rendered template result.\n\t\t\t\t\t *  - `Function` - A [can.view.hook hookup] attribute or element is inserted so this function\n\t\t\t\t\t *    will be called back with the DOM element after it is created.\n\t\t\t\t\t *\n\t\t\t\t\t * @body\n\t\t\t\t\t *\n\t\t\t\t\t * ## Use\n\t\t\t\t\t *\n\t\t\t\t\t * `{{key}}` insert data into the template. It most commonly references\n\t\t\t\t\t * values within the current [can.mustache.context context]. For example:\n\t\t\t\t\t *\n\t\t\t\t\t * Rendering:\n\t\t\t\t\t *\n\t\t\t\t\t *     <h1>{{name}}</h1>\n\t\t\t\t\t *\n\t\t\t\t\t * With:\n\t\t\t\t\t *\n\t\t\t\t\t *     {name: \"Austin\"}\n\t\t\t\t\t *\n\t\t\t\t\t * Results in:\n\t\t\t\t\t *\n\t\t\t\t\t *     <h1>Austin</h1>\n\t\t\t\t\t *\n\t\t\t\t\t * If the key value is a String or Number, it is inserted into the template.\n\t\t\t\t\t * If it is `null` or `undefined`, nothing is added to the template.\n\t\t\t\t\t *\n\t\t\t\t\t *\n\t\t\t\t\t * ## Nested Properties\n\t\t\t\t\t *\n\t\t\t\t\t * Mustache supports nested paths, making it possible to\n\t\t\t\t\t * look up properties nested deep inside the current context. For example:\n\t\t\t\t\t *\n\t\t\t\t\t * Rendering:\n\t\t\t\t\t *\n\t\t\t\t\t *     <h1>{{book.author}}</h1>\n\t\t\t\t\t *\n\t\t\t\t\t * With:\n\t\t\t\t\t *\n\t\t\t\t\t *     {\n\t\t\t\t\t *       book: {\n\t\t\t\t\t *         author: \"Ernest Hemingway\"\n\t\t\t\t\t *       }\n\t\t\t\t\t *     }\n\t\t\t\t\t *\n\t\t\t\t\t * Results in:\n\t\t\t\t\t *\n\t\t\t\t\t *     <h1>Ernest Hemingway</h1>\n\t\t\t\t\t *\n\t\t\t\t\t * ## Looking up values in parent contexts\n\t\t\t\t\t *\n\t\t\t\t\t * Sections and block helpers can create their own contexts. If a key's value\n\t\t\t\t\t * is not found in the current context, it will look up the key's value\n\t\t\t\t\t * in parent contexts. For example:\n\t\t\t\t\t *\n\t\t\t\t\t * Rendering:\n\t\t\t\t\t *\n\t\t\t\t\t *     {{#chapters}}\n\t\t\t\t\t *        <li>{{title}} - {{name}}</li>\n\t\t\t\t\t *     {{chapters}}\n\t\t\t\t\t *\n\t\t\t\t\t * With:\n\t\t\t\t\t *\n\t\t\t\t\t *     {\n\t\t\t\t\t *       title: \"The Book of Bitovi\"\n\t\t\t\t\t *       chapters: [{name: \"Breakdown\"}]\n\t\t\t\t\t *     }\n\t\t\t\t\t *\n\t\t\t\t\t * Results in:\n\t\t\t\t\t *\n\t\t\t\t\t *     <li>The Book of Bitovi - Breakdown</li>\n\t\t\t\t\t *\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t// Return unescaped\n\t\t\t\t\t[\"returnLeft\", \"{{{\", \"{{[{&]\"],\n\t\t\t\t\t// Full line comments\n\t\t\t\t\t[\"commentFull\", \"{{!}}\", \"^[\\\\s\\\\t]*{{!.+?}}\\\\n\"],\n\t\t\t\t\t/**\n\t\t\t\t\t * @function can.mustache.tags.comment {{!key}}\n\t\t\t\t\t *\n\t\t\t\t\t * @parent can.mustache.tags 7\n\t\t\t\t\t *\n\t\t\t\t\t * @description A comment that doesn't get inserted into the rendered result.\n\t\t\t\t\t *\n\t\t\t\t\t * @signature `{{!key}}`\n\t\t\t\t\t *\n\t\t\t\t\t * The comment tag operates similarly to a `<!-- -->` tag in HTML. It exists in your template but never shows up.\n\t\t\t\t\t *\n\t\t\t\t\t * @param {can.mustache.key} key Everything within this tag is completely ignored.\n\t\t\t\t\t * @return {String}\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t// Inline comments\n\t\t\t\t\t[\"commentLeft\", \"{{!\", \"(\\\\n[\\\\s\\\\t]*{{!|{{!)\"],\n\t\t\t\t\t/**\n\t\t\t\t\t * @function can.mustache.tags.unescaped {{{key}}}\n\t\t\t\t\t *\n\t\t\t\t\t * @parent can.mustache.tags 1\n\t\t\t\t\t *\n\t\t\t\t\t * @description Insert the unescaped value of the [can.mustache.key key] into the\n\t\t\t\t\t * output of the template.\n\t\t\t\t\t *\n\t\t\t\t\t * @signature `{{{key}}}`\n\t\t\t\t\t *\n\t\t\t\t\t * Behaves just like [can.mustache.tags.escaped {{key}}] and [can.mustache.helpers.helper {{helper}}] but does not\n\t\t\t\t\t * escape the result.\n\t\t\t\t\t *\n\t\t\t\t\t * @param {can.mustache.key} key A key that references a value within the current or parent\n\t\t\t\t\t * context. If the value is a function or can.compute, the function's return value is used.\n\t\t\t\t\t * @return {String|Function|*}\n\t\t\t\t\t *\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t//\n\t\t\t\t\t/**\n\t\t\t\t\t * @function can.mustache.tags.unescaped2 {{&key}}\n\t\t\t\t\t *\n\t\t\t\t\t * @parent can.mustache.tags 2\n\t\t\t\t\t *\n\t\t\t\t\t * @description Insert the unescaped value of the [can.mustache.key key] into the\n\t\t\t\t\t * output of the template.\n\t\t\t\t\t *\n\t\t\t\t\t * @signature `{{&key}}`\n\t\t\t\t\t *\n\t\t\t\t\t * The `{{&key}}` tag is an alias for [can.mustache.tags.unescaped {{{key}}}], behaving just\n\t\t\t\t\t * like [can.mustache.tags.escaped {{key}}] and [can.mustache.helpers.helper {{helper}}] but does not\n\t\t\t\t\t * escape the result.\n\t\t\t\t\t *\n\t\t\t\t\t * @param {can.mustache.key} key A key that references a value within the current or parent\n\t\t\t\t\t * context. If the value is a function or can.compute, the function's return value is used.\n\t\t\t\t\t * @return {String|Function|*}\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t// Full line escapes\n\t\t\t\t\t// This is used for detecting lines with only whitespace and an escaped tag\n\t\t\t\t\t[\"escapeFull\", \"{{}}\", \"(^[\\\\s\\\\t]*{{[#/^][^}]+?}}\\\\n|\\\\n[\\\\s\\\\t]*{{[#/^][^}]+?}}\\\\n|\\\\n[\\\\s\\\\t]*{{[#/^][^}]+?}}$)\",\n\t\t\t\t\t\tfunction (content) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tbefore: /^\\n.+?\\n$/.test(content) ? '\\n' : '',\n\t\t\t\t\t\t\t\tcontent: content.match(/\\{\\{(.+?)\\}\\}/)[1] || ''\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t// Return escaped\n\t\t\t\t\t[\"escapeLeft\", \"{{\"],\n\t\t\t\t\t// Close return unescaped\n\t\t\t\t\t[\"returnRight\", \"}}}\"],\n\t\t\t\t\t// Close tag\n\t\t\t\t\t[\"right\", \"}}\"]\n\t\t\t\t],\n\n\t\t\t\t// ## Scanning Helpers\n\t\t\t\t//\n\t\t\t\t// This is an array of helpers that transform content that is within escaped tags like `{{token}}`. These helpers are solely for the scanning phase; they are unrelated to Mustache/Handlebars helpers which execute at render time. Each helper has a definition like the following:\n\t\t\t\t//\n\t\t\t\t//\t\t{\n\t\t\t\t//\t\t\t// The content pattern to match in order to execute.\n\t\t\t\t//\t\t\t// Only the first matching helper is executed.\n\t\t\t\t//\t\t\tname: /pattern to match/,\n\t\t\t\t//\n\t\t\t\t//\t\t\t// The function to transform the content with.\n\t\t\t\t//\t\t\t// @param {String} content   The content to transform.\n\t\t\t\t//\t\t\t// @param {Object} cmd       Scanner helper data.\n\t\t\t\t//\t\t\t//                           {\n\t\t\t\t//\t\t\t//                             insert: \"insert command\",\n\t\t\t\t//\t\t\t//                             tagName: \"div\",\n\t\t\t\t//\t\t\t//                             status: 0\n\t\t\t\t//\t\t\t//                           }\n\t\t\t\t//\t\t\tfn: function(content, cmd) {\n\t\t\t\t//\t\t\t\treturn 'for text injection' || \n\t\t\t\t//\t\t\t\t\t{ raw: 'to bypass text injection' };\n\t\t\t\t//\t\t\t}\n\t\t\t\t//\t\t}\n\t\t\t\thelpers: [\n\t\t\t\t\t// ### Partials\n\t\t\t\t\t//\n\t\t\t\t\t// Partials begin with a greater than sign, like {{> box}}.\n\t\t\t\t\t// \n\t\t\t\t\t// Partials are rendered at runtime (as opposed to compile time), \n\t\t\t\t\t// so recursive partials are possible. Just avoid infinite loops.\n\t\t\t\t\t// \n\t\t\t\t\t// For example, this template and partial:\n\t\t\t\t\t// \n\t\t\t\t\t// \t\tbase.mustache:\n\t\t\t\t\t// \t\t\t<h2>Names</h2>\n\t\t\t\t\t// \t\t\t{{#names}}\n\t\t\t\t\t// \t\t\t\t{{> user}}\n\t\t\t\t\t// \t\t\t{{/names}}\n\t\t\t\t\t// \t\t\t\n\t\t\t\t\t// \t\tuser.mustache:\n\t\t\t\t\t// \t\t\t<strong>{{name}}</strong>\n\t\t\t\t\t{\n\t\t\t\t\t\tname: /^>[\\s]*\\w*/,\n\t\t\t\t\t\tfn: function (content, cmd) {\n\t\t\t\t\t\t\t// Get the template name and call back into the render method,\n\t\t\t\t\t\t\t// passing the name and the current context.\n\t\t\t\t\t\t\tvar templateName = can.trim(content.replace(/^>\\s?/, ''))\n\t\t\t\t\t\t\t\t.replace(/[\"|']/g, \"\");\n\t\t\t\t\t\t\treturn \"can.Mustache.renderPartial('\" + templateName + \"',\" + ARG_NAMES + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// ### Data Hookup\n\t\t\t\t\t// \n\t\t\t\t\t// This will attach the data property of `this` to the element\n\t\t\t\t\t// its found on using the first argument as the data attribute\n\t\t\t\t\t// key.\n\t\t\t\t\t// \n\t\t\t\t\t// For example:\n\t\t\t\t\t// \t\n\t\t\t\t\t//\t\t<li id=\"nameli\" {{ data 'name' }}></li>\n\t\t\t\t\t// \n\t\t\t\t\t// then later you can access it like:\n\t\t\t\t\t// \n\t\t\t\t\t//\t\tcan.$('#nameli').data('name');\n\t\t\t\t\t/**\n\t\t\t\t\t * @function can.mustache.helpers.data {{data name}}\n\t\t\t\t\t * @parent can.mustache.htags 7\n\t\t\t\t\t * @signature `{{data name}}`\n\t\t\t\t\t *\n\t\t\t\t\t * Adds the current [can.mustache.context context] to the\n\t\t\t\t\t * element's [can.data].\n\t\t\t\t\t *\n\t\t\t\t\t * @param {String} name The name of the data attribute to use for the\n\t\t\t\t\t * context.\n\t\t\t\t\t *\n\t\t\t\t\t * @body\n\t\t\t\t\t *\n\t\t\t\t\t * ## Use\n\t\t\t\t\t *\n\t\t\t\t\t * It is common for you to want some data in the template to be available\n\t\t\t\t\t * on an element.  `{{data name}}` allows you to save the\n\t\t\t\t\t * context so it can later be retrieved by [can.data] or\n\t\t\t\t\t * `$.fn.data`. For example,\n\t\t\t\t\t *\n\t\t\t\t\t * The template:\n\t\t\t\t\t *\n\t\t\t\t\t *     <ul>\n\t\t\t\t\t *       <li id=\"person\" {{data 'person'}}>{{name}}</li>\n\t\t\t\t\t *     </ul>\n\t\t\t\t\t *\n\t\t\t\t\t * Rendered with:\n\t\t\t\t\t *\n\t\t\t\t\t *     document.body.appendChild(\n\t\t\t\t\t *       can.view.mustache(template,{ person: { name: 'Austin' } });\n\t\t\t\t\t *\n\t\t\t\t\t * Retrieve the person data back with:\n\t\t\t\t\t *\n\t\t\t\t\t *     $(\"#person\").data(\"person\")\n\t\t\t\t\t *\n\t\t\t\t\t */\n\t\t\t\t\t{\n\t\t\t\t\t\tname: /^\\s*data\\s/,\n\t\t\t\t\t\tfn: function (content, cmd) {\n\t\t\t\t\t\t\tvar attr = content.match(/[\"|'](.*)[\"|']/)[1];\n\t\t\t\t\t\t\t// return a function which calls `can.data` on the element\n\t\t\t\t\t\t\t// with the attribute name with the current context.\n\t\t\t\t\t\t\treturn \"can.proxy(function(__){\" +\n\t\t\t\t\t\t\t// \"var context = this[this.length-1];\" +\n\t\t\t\t\t\t\t// \"context = context.\" + STACKED + \" ? context[context.length-2] : context; console.warn(this, context);\" +\n\t\t\t\t\t\t\t\"can.data(can.$(__),'\" + attr + \"', this.attr('.')); }, \" + SCOPE + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: /\\s*\\(([\\$\\w]+)\\)\\s*->([^\\n]*)/,\n\t\t\t\t\t\tfn: function (content) {\n\t\t\t\t\t\t\tvar quickFunc = /\\s*\\(([\\$\\w]+)\\)\\s*->([^\\n]*)/,\n\t\t\t\t\t\t\t\tparts = content.match(quickFunc);\n\n\t\t\t\t\t\t\t//find \n\t\t\t\t\t\t\treturn \"can.proxy(function(__){var \" + parts[1] + \"=can.$(__);with(\" + SCOPE + \".attr('.')){\" + parts[2] + \"}}, this);\";\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t// ### Transformation (default)\n\t\t\t\t\t//\n\t\t\t\t\t// This transforms all content to its interpolated equivalent,\n\t\t\t\t\t// including calls to the corresponding helpers as applicable. \n\t\t\t\t\t// This outputs the render code for almost all cases.\n\t\t\t\t\t//\n\t\t\t\t\t// #### Definitions\n\t\t\t\t\t// \n\t\t\t\t\t// * `context` - This is the object that the current rendering context operates within. \n\t\t\t\t\t//\t\tEach nested template adds a new `context` to the context stack.\n\t\t\t\t\t// * `stack` - Mustache supports nested sections, \n\t\t\t\t\t//\t\teach of which add their own context to a stack of contexts.\n\t\t\t\t\t//\t\tWhenever a token gets interpolated, it will check for a match against the \n\t\t\t\t\t//\t\tlast context in the stack, then iterate through the rest of the stack checking for matches.\n\t\t\t\t\t//\t\tThe first match is the one that gets returned.\n\t\t\t\t\t// * `Mustache.txt` - This serializes a collection of logic, optionally contained within a section.\n\t\t\t\t\t//\t\tIf this is a simple interpolation, only the interpolation lookup will be passed.\n\t\t\t\t\t//\t\tIf this is a section, then an `options` object populated by the truthy (`options.fn`) and \n\t\t\t\t\t//\t\tfalsey (`options.inverse`) encapsulated functions will also be passed. This section handling \n\t\t\t\t\t//\t\texists to support the runtime context nesting that Mustache supports.\n\t\t\t\t\t// * `Mustache.get` - This resolves an interpolation reference given a stack of contexts.\n\t\t\t\t\t// * `options` - An object containing methods for executing the inner contents of sections or helpers.  \n\t\t\t\t\t//\t\t`options.fn` - Contains the inner template logic for a truthy section.  \n\t\t\t\t\t//\t\t`options.inverse` - Contains the inner template logic for a falsey section.  \n\t\t\t\t\t//\t\t`options.hash` - Contains the merged hash object argument for custom helpers.\n\t\t\t\t\t//\n\t\t\t\t\t// #### Design\n\t\t\t\t\t//\n\t\t\t\t\t// This covers the design of the render code that the transformation helper generates.\n\t\t\t\t\t//\n\t\t\t\t\t// ##### Pseudocode\n\t\t\t\t\t// \n\t\t\t\t\t// A detailed explanation is provided in the following sections, but here is some brief pseudocode\n\t\t\t\t\t// that gives a high level overview of what the generated render code does (with a template similar to  \n\t\t\t\t\t// `\"{{#a}}{{b.c.d.e.name}}{{/a}}\" == \"Phil\"`).\n\t\t\t\t\t//\n\t\t\t\t\t// *Initialize the render code.*\n\t\t\t\t\t// \n\t\t\t\t\t// \t\tview = []\n\t\t\t\t\t// \t\tcontext = []\n\t\t\t\t\t// \t\tstack = fn { context.concat([this]) }\n\t\t\t\t\t// \t\t\n\t\t\t\t\t// *Render the root section.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\tview.push( \"string\" )\n\t\t\t\t\t// \t\tview.push( can.view.txt(\n\t\t\t\t\t//\n\t\t\t\t\t// *Render the nested section with `can.Mustache.txt`.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t\ttxt( \n\t\t\t\t\t//\n\t\t\t\t\t// *Add the current context to the stack.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t\t\tstack(), \n\t\t\t\t\t//\n\t\t\t\t\t// *Flag this for truthy section mode.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t\t\t\"#\",\n\t\t\t\t\t//\n\t\t\t\t\t// *Interpolate and check the `a` variable for truthyness using the stack with `can.Mustache.get`.*\n\t\t\t\t\t// \n\t\t\t\t\t// \t\t\t\tget( \"a\", stack() ),\n\t\t\t\t\t//\n\t\t\t\t\t// *Include the nested section's inner logic.\n\t\t\t\t\t// The stack argument is usually the parent section's copy of the stack, \n\t\t\t\t\t// but it can be an override context that was passed by a custom helper.\n\t\t\t\t\t// Sections can nest `0..n` times -- **NESTCEPTION**.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t\t\t{ fn: fn(stack) {\n\t\t\t\t\t//\n\t\t\t\t\t// *Render the nested section (everything between the `{{#a}}` and `{{/a}}` tokens).*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t\t\t\tview = []\n\t\t\t\t\t// \t\t\t\t\tview.push( \"string\" )\n\t\t\t\t\t// \t\t\t\t\tview.push(\n\t\t\t\t\t//\n\t\t\t\t\t// *Add the current context to the stack.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t\t\t\t\tstack(),\n\t\t\t\t\t//\n\t\t\t\t\t// *Flag this as interpolation-only mode.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t\t\t\t\tnull,\n\t\t\t\t\t//\n\t\t\t\t\t// *Interpolate the `b.c.d.e.name` variable using the stack.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t\t\t\t\tget( \"b.c.d.e.name\", stack() ),\n\t\t\t\t\t// \t\t\t\t\t)\n\t\t\t\t\t// \t\t\t\t\tview.push( \"string\" )\n\t\t\t\t\t//\n\t\t\t\t\t// *Return the result for the nested section.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\t\t\t\treturn view.join()\n\t\t\t\t\t// \t\t\t\t}}\n\t\t\t\t\t// \t\t\t)\n\t\t\t\t\t// \t\t))\n\t\t\t\t\t// \t\tview.push( \"string\" )\n\t\t\t\t\t//\n\t\t\t\t\t// *Return the result for the root section, which includes all nested sections.*\n\t\t\t\t\t//\n\t\t\t\t\t// \t\treturn view.join()\n\t\t\t\t\t//\n\t\t\t\t\t// ##### Initialization\n\t\t\t\t\t//\n\t\t\t\t\t// Each rendered template is started with the following initialization code:\n\t\t\t\t\t//\n\t\t\t\t\t// \t\tvar ___v1ew = [];\n\t\t\t\t\t// \t\tvar ___c0nt3xt = [];\n\t\t\t\t\t// \t\t___c0nt3xt.__sc0pe = true;\n\t\t\t\t\t// \t\tvar __sc0pe = function(context, self) {\n\t\t\t\t\t// \t\t\tvar s;\n\t\t\t\t\t// \t\t\tif (arguments.length == 1 && context) {\n\t\t\t\t\t// \t\t\t\ts = !context.__sc0pe ? [context] : context;\n\t\t\t\t\t// \t\t\t} else {\n\t\t\t\t\t// \t\t\t\ts = context && context.__sc0pe \n\t\t\t\t\t//\t\t\t\t\t? context.concat([self]) \n\t\t\t\t\t//\t\t\t\t\t: __sc0pe(context).concat([self]);\n\t\t\t\t\t// \t\t\t}\n\t\t\t\t\t// \t\t\treturn (s.__sc0pe = true) && s;\n\t\t\t\t\t// \t\t};\n\t\t\t\t\t//\n\t\t\t\t\t// The `___v1ew` is the the array used to serialize the view.\n\t\t\t\t\t// The `___c0nt3xt` is a stacking array of contexts that slices and expands with each nested section.\n\t\t\t\t\t// The `__sc0pe` function is used to more easily update the context stack in certain situations.\n\t\t\t\t\t// Usually, the stack function simply adds a new context (`self`/`this`) to a context stack. \n\t\t\t\t\t// However, custom helpers will occasionally pass override contexts that need their own context stack.\n\t\t\t\t\t//\n\t\t\t\t\t// ##### Sections\n\t\t\t\t\t//\n\t\t\t\t\t// Each section, `{{#section}} content {{/section}}`, within a Mustache template generates a section \n\t\t\t\t\t// context in the resulting render code. The template itself is treated like a root section, with the \n\t\t\t\t\t// same execution logic as any others. Each section can have `0..n` nested sections within it.\n\t\t\t\t\t//\n\t\t\t\t\t// Here's an example of a template without any descendent sections.  \n\t\t\t\t\t// Given the template: `\"{{a.b.c.d.e.name}}\" == \"Phil\"`  \n\t\t\t\t\t// Would output the following render code:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\t___v1ew.push(\"\\\"\");\n\t\t\t\t\t//\t\t___v1ew.push(can.view.txt(1, '', 0, this, function() {\n\t\t\t\t\t// \t\t\treturn can.Mustache.txt(__sc0pe(___c0nt3xt, this), null, \n\t\t\t\t\t//\t\t\t\tcan.Mustache.get(\"a.b.c.d.e.name\", \n\t\t\t\t\t//\t\t\t\t\t__sc0pe(___c0nt3xt, this))\n\t\t\t\t\t//\t\t\t);\n\t\t\t\t\t//\t\t}));\n\t\t\t\t\t//\t\t___v1ew.push(\"\\\" == \\\"Phil\\\"\");\n\t\t\t\t\t//\n\t\t\t\t\t// The simple strings will get appended to the view. Any interpolated references (like `{{a.b.c.d.e.name}}`) \n\t\t\t\t\t// will be pushed onto the view via `can.view.txt` in order to support live binding.\n\t\t\t\t\t// The function passed to `can.view.txt` will call `can.Mustache.txt`, which serializes the object data by doing \n\t\t\t\t\t// a context lookup with `can.Mustache.get`.\n\t\t\t\t\t//\n\t\t\t\t\t// `can.Mustache.txt`'s first argument is a copy of the context stack with the local context `this` added to it.\n\t\t\t\t\t// This stack will grow larger as sections nest.\n\t\t\t\t\t//\n\t\t\t\t\t// The second argument is for the section type. This will be `\"#\"` for truthy sections, `\"^\"` for falsey, \n\t\t\t\t\t// or `null` if it is an interpolation instead of a section.\n\t\t\t\t\t//\n\t\t\t\t\t// The third argument is the interpolated value retrieved with `can.Mustache.get`, which will perform the \n\t\t\t\t\t// context lookup and return the approriate string or object.\n\t\t\t\t\t//\n\t\t\t\t\t// Any additional arguments, if they exist, are used for passing arguments to custom helpers.\n\t\t\t\t\t//\n\t\t\t\t\t// For nested sections, the last argument is an `options` object that contains the nested section's logic.\n\t\t\t\t\t//\n\t\t\t\t\t// Here's an example of a template with a single nested section.  \n\t\t\t\t\t// Given the template: `\"{{#a}}{{b.c.d.e.name}}{{/a}}\" == \"Phil\"`  \n\t\t\t\t\t// Would output the following render code:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\t___v1ew.push(\"\\\"\");\n\t\t\t\t\t// \t\t___v1ew.push(can.view.txt(0, '', 0, this, function() {\n\t\t\t\t\t// \t\t\treturn can.Mustache.txt(__sc0pe(___c0nt3xt, this), \"#\", \n\t\t\t\t\t//\t\t\t\tcan.Mustache.get(\"a\", __sc0pe(___c0nt3xt, this)), \n\t\t\t\t\t//\t\t\t\t\t[{\n\t\t\t\t\t// \t\t\t\t\t_: function() {\n\t\t\t\t\t// \t\t\t\t\t\treturn ___v1ew.join(\"\");\n\t\t\t\t\t// \t\t\t\t\t}\n\t\t\t\t\t// \t\t\t\t}, {\n\t\t\t\t\t// \t\t\t\t\tfn: function(___c0nt3xt) {\n\t\t\t\t\t// \t\t\t\t\t\tvar ___v1ew = [];\n\t\t\t\t\t// \t\t\t\t\t\t___v1ew.push(can.view.txt(1, '', 0, this, \n\t\t\t\t\t//\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t//                                  return can.Mustache.txt(\n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t__sc0pe(___c0nt3xt, this), \n\t\t\t\t\t// \t\t\t\t\t\t\t\t\tnull, \n\t\t\t\t\t// \t\t\t\t\t\t\t\t\tcan.Mustache.get(\"b.c.d.e.name\", \n\t\t\t\t\t// \t\t\t\t\t\t\t\t\t\t__sc0pe(___c0nt3xt, this))\n\t\t\t\t\t// \t\t\t\t\t\t\t\t);\n\t\t\t\t\t// \t\t\t\t\t\t\t}\n\t\t\t\t\t// \t\t\t\t\t\t));\n\t\t\t\t\t// \t\t\t\t\t\treturn ___v1ew.join(\"\");\n\t\t\t\t\t// \t\t\t\t\t}\n\t\t\t\t\t// \t\t\t\t}]\n\t\t\t\t\t//\t\t\t)\n\t\t\t\t\t// \t\t}));\n\t\t\t\t\t//\t\t___v1ew.push(\"\\\" == \\\"Phil\\\"\");\n\t\t\t\t\t//\n\t\t\t\t\t// This is specified as a truthy section via the `\"#\"` argument. The last argument includes an array of helper methods used with `options`.\n\t\t\t\t\t// These act similarly to custom helpers: `options.fn` will be called for truthy sections, `options.inverse` will be called for falsey sections.\n\t\t\t\t\t// The `options._` function only exists as a dummy function to make generating the section nesting easier (a section may have a `fn`, `inverse`,\n\t\t\t\t\t// or both, but there isn't any way to determine that at compilation time).\n\t\t\t\t\t// \n\t\t\t\t\t// Within the `fn` function is the section's render context, which in this case will render anything between the `{{#a}}` and `{{/a}}` tokens.\n\t\t\t\t\t// This function has `___c0nt3xt` as an argument because custom helpers can pass their own override contexts. For any case where custom helpers\n\t\t\t\t\t// aren't used, `___c0nt3xt` will be equivalent to the `__sc0pe(___c0nt3xt, this)` stack created by its parent section. The `inverse` function\n\t\t\t\t\t// works similarly, except that it is added when `{{^a}}` and `{{else}}` are used. `var ___v1ew = []` is specified in `fn` and `inverse` to \n\t\t\t\t\t// ensure that live binding in nested sections works properly.\n\t\t\t\t\t//\n\t\t\t\t\t// All of these nested sections will combine to return a compiled string that functions similar to EJS in its uses of `can.view.txt`.\n\t\t\t\t\t//\n\t\t\t\t\t// #### Implementation\n\t\t\t\t\t{\n\t\t\t\t\t\tname: /^.*$/,\n\t\t\t\t\t\tfn: function (content, cmd) {\n\t\t\t\t\t\t\tvar mode = false,\n\t\t\t\t\t\t\t\tresult = {\n\t\t\t\t\t\t\t\t\tcontent: \"\",\n\t\t\t\t\t\t\t\t\tstartTxt: false,\n\t\t\t\t\t\t\t\t\tstartOnlyTxt: false,\n\t\t\t\t\t\t\t\t\tend: false\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Trim the content so we don't have any trailing whitespace.\n\t\t\t\t\t\t\tcontent = can.trim(content);\n\n\t\t\t\t\t\t\t// Determine what the active mode is.\n\t\t\t\t\t\t\t// \n\t\t\t\t\t\t\t// * `#` - Truthy section\n\t\t\t\t\t\t\t// * `^` - Falsey section\n\t\t\t\t\t\t\t// * `/` - Close the prior section\n\t\t\t\t\t\t\t// * `else` - Inverted section (only exists within a truthy/falsey section)\n\t\t\t\t\t\t\tif (content.length && (mode = content.match(/^([#^/]|else$)/))) {\n\t\t\t\t\t\t\t\tmode = mode[0];\n\t\t\t\t\t\t\t\tswitch (mode) {\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * @function can.mustache.helpers.section {{#key}}\n\t\t\t\t\t\t\t\t\t * @parent can.mustache.tags 3\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @signature `{{#key}}BLOCK{{/key}}`\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Render blocks of text one or more times, depending\n\t\t\t\t\t\t\t\t\t * on the value of the key in the current context.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {can.mustache.key} key A key that references a value within the current or parent\n\t\t\t\t\t\t\t\t\t * [can.mustache.context context]. If the value is a function or [can.compute], the\n\t\t\t\t\t\t\t\t\t * function's return value is used.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @return {String}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Depending on the value's type, the following actions happen:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * - `Array` or [can.List] - the block is rendered for\n\t\t\t\t\t\t\t\t\t *   each item in the array. The [can.mustache.context context] is set to\n\t\t\t\t\t\t\t\t\t *   the item within each block rendering.\n\t\t\t\t\t\t\t\t\t * - A `truthy` value - the block is rendered with the [can.mustache.context context]\n\t\t\t\t\t\t\t\t\t *   set to the value.\n\t\t\t\t\t\t\t\t\t * - A `falsey` value - the block is not rendered.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The rendered result of the blocks, block or an empty string is returned.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @body\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Sections contain text blocks and evaluate whether to render it or not.  If\n\t\t\t\t\t\t\t\t\t * the object evaluates to an array it will iterate over it and render the block\n\t\t\t\t\t\t\t\t\t * for each item in the array.  There are four different types of sections.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * ## Falseys or Empty Arrays\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * If the value returns a `false`, `undefined`, `null`, `\"\"` or `[]` we consider\n\t\t\t\t\t\t\t\t\t * that a *falsey* value.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * If the value is falsey, the section will **NOT** render the block.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {\n\t\t\t\t\t\t\t\t\t *       friends: false\n\t\t\t\t\t\t\t\t\t *     }\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {{#friends}}\n\t\t\t\t\t\t\t\t\t *       Never shown!\n\t\t\t\t\t\t\t\t\t *     {{/friends}}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * ## Arrays\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * If the value is a non-empty array, sections will iterate over the\n\t\t\t\t\t\t\t\t\t * array of items, rendering the items in the block.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * For example, a list of friends will iterate\n\t\t\t\t\t\t\t\t\t * over each of those items within a section.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {\n\t\t\t\t\t\t\t\t\t *         friends: [\n\t\t\t\t\t\t\t\t\t *             { name: \"Austin\" },\n\t\t\t\t\t\t\t\t\t *             { name: \"Justin\" }\n\t\t\t\t\t\t\t\t\t *         ]\n\t\t\t\t\t\t\t\t\t *     }\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <ul>\n\t\t\t\t\t\t\t\t\t *         {{#friends}}\n\t\t\t\t\t\t\t\t\t *             <li>{{name}}</li>\n\t\t\t\t\t\t\t\t\t *         {{/friends}}\n\t\t\t\t\t\t\t\t\t *     </ul>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * would render:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <ul>\n\t\t\t\t\t\t\t\t\t *         <li>Austin</li>\n\t\t\t\t\t\t\t\t\t *         <li>Justin</li>\n\t\t\t\t\t\t\t\t\t *     </ul>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Reminder: Sections will reset the current context to the value for which it is iterating.\n\t\t\t\t\t\t\t\t\t * See the [basics of contexts](#Basics) for more information.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * ## Truthys\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * When the value is a non-falsey object but not a list, it is considered truthy and will be used\n\t\t\t\t\t\t\t\t\t * as the context for a single rendering of the block.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {\n\t\t\t\t\t\t\t\t\t *         friends: { name: \"Jon\" }\n\t\t\t\t\t\t\t\t\t *     }\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {{#friends}}\n\t\t\t\t\t\t\t\t\t *         Hi {{name}}\n\t\t\t\t\t\t\t\t\t *     {{/friends}}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * would render:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     Hi Jon!\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t// \n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * @function can.mustache.helpers.helper {{helper args hashes}}\n\t\t\t\t\t\t\t\t\t * @parent can.mustache.htags 0\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @description Calls a mustache helper function and inserts its return value into\n\t\t\t\t\t\t\t\t\t * the rendered template.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @signature `{{helper [args...] [hashProperty=hashValue...]}}`\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Calls a mustache helper function or a function. For example:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The template:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>{{madLib \"Lebron James\" verb 4 foo=\"bar\"}}</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Rendered with:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {verb: \"swept\"}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Will call a `madLib` helper with the following arguements:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     can.mustache.registerHelper('madLib',\n\t\t\t\t\t\t\t\t\t *       function(subject, verb, number, options){\n\t\t\t\t\t\t\t\t\t *         // subject -> \"Lebron James\"\n\t\t\t\t\t\t\t\t\t *         // verb -> \"swept\"\n\t\t\t\t\t\t\t\t\t *         // number -> 4\n\t\t\t\t\t\t\t\t\t *         // options.hash.foo -> \"bar\"\n\t\t\t\t\t\t\t\t\t *     });\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {can.mustache.key} helper A key that finds a [can.mustache.helper helper function]\n\t\t\t\t\t\t\t\t\t * that is either [can.mustache.registerHelper registered] or found within the\n\t\t\t\t\t\t\t\t\t * current or parent [can.mustache.context context].\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {...can.mustache.key|String|Number} [args] Space seperated arguments\n\t\t\t\t\t\t\t\t\t * that get passed to the helper function as arguments. If the key's value is a:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *  - [can.Map] - A getter/setter [can.compute] is passed.\n\t\t\t\t\t\t\t\t\t *  - [can.compute] - The can.compute is passed.\n\t\t\t\t\t\t\t\t\t *  - `function` - The function's return value is passed.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {String} hashProperty\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * A property name that gets added to a [can.mustache.helperOptions helper options]'s\n\t\t\t\t\t\t\t\t\t * hash object.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {...can.mustache.key|String|Number} hashValue A value that gets\n\t\t\t\t\t\t\t\t\t * set as a property value of the [can.mustache.helperOptions helper option argument]'s\n\t\t\t\t\t\t\t\t\t * hash object.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @body\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * ## Use\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The `{{helper}}` syntax is used to call out to Mustache [can.mustache.helper helper functions] functions\n\t\t\t\t\t\t\t\t\t * that may contain more complex functionality. `helper` is a [can.mustache.key key] that must match either:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *  - a [can.mustache.registerHelper registered helper function], or\n\t\t\t\t\t\t\t\t\t *  - a function in the current or parent [can.mustache.context contexts]\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The following example shows both cases.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The Template:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>{{greeting}} {{user}}</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Rendered with data:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {\n\t\t\t\t\t\t\t\t\t *       user: function(){ return \"Justin\" }\n\t\t\t\t\t\t\t\t\t *     }\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * And a with a registered helper like:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     can.mustache.registerHelper('greeting', function(){\n\t\t\t\t\t\t\t\t\t *       return \"Hello\"\n\t\t\t\t\t\t\t\t\t *     });\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Results in:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>Hello Justin</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * ## Arguments\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Arguments can be passed from the template to helper function by\n\t\t\t\t\t\t\t\t\t * listing space seperated strings, numbers or other [can.mustache.key keys] after the\n\t\t\t\t\t\t\t\t\t * `helper` name.  For example:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The template:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>{{madLib \"Lebron James\" verb 4}}</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Rendered with:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {verb: \"swept\"}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Will call a `madLib` helper with the following arguements:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     can.mustache.registerHelper('madLib',\n\t\t\t\t\t\t\t\t\t *       function(subject, verb, number, options){\n\t\t\t\t\t\t\t\t\t *         // subject -> \"Lebron James\"\n\t\t\t\t\t\t\t\t\t *         // verb -> \"swept\"\n\t\t\t\t\t\t\t\t\t *         // number -> 4\n\t\t\t\t\t\t\t\t\t *     });\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * If an argument `key` value is a [can.Map] property, the Observe's\n\t\t\t\t\t\t\t\t\t * property is converted to a getter/setter [can.compute]. For example:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The template:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>What! My name is: {{mr user.name}}</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Rendered with:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {user: new can.Map({name: \"Slim Shady\"})}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Needs the helper to check if name is a function or not:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     can.mustache.registerHelper('mr',function(name){\n\t\t\t\t\t\t\t\t\t *       return \"Mr. \"+ (typeof name === \"function\" ?\n\t\t\t\t\t\t\t\t\t *                       name():\n\t\t\t\t\t\t\t\t\t *                       name)\n\t\t\t\t\t\t\t\t\t *     })\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * This behavior enables two way binding helpers and is explained in more detail\n\t\t\t\t\t\t\t\t\t * on the [can.mustache.helper helper functions] docs.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * ## Hash\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * If enumerated arguments isn't an appropriate way to configure the behavior\n\t\t\t\t\t\t\t\t\t * of a helper, it's possible to pass a hash of key-value pairs to the\n\t\t\t\t\t\t\t\t\t * [can.mustache.helperOptions helper option argument]'s\n\t\t\t\t\t\t\t\t\t * hash object.  Properties and values are specified\n\t\t\t\t\t\t\t\t\t * as `hashProperty=hashValue`.  For example:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The template:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>My {{excuse who=pet how=\"shreded\"}}</p>\n\t\t\t\t\t\t\t\t\t * `\n\t\t\t\t\t\t\t\t\t * And the helper:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     can.mustache.registerHelper(\"excuse\",function(options){\n\t\t\t\t\t\t\t\t\t *       return [\"My\",\n\t\t\t\t\t\t\t\t\t *         options.hash.who || \"dog\".\n\t\t\t\t\t\t\t\t\t *         options.hash.how || \"ate\",\n\t\t\t\t\t\t\t\t\t *         \"my\",\n\t\t\t\t\t\t\t\t\t *         options.hash.what || \"homework\"].join(\" \")\n\t\t\t\t\t\t\t\t\t *     })\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Render with:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {pet: \"cat\"}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Results in:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>My cat shareded my homework</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * ## Returning an element callback function\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * If a helper returns a function, that function is called back after\n\t\t\t\t\t\t\t\t\t * the template has been rendered into DOM elements. This can\n\t\t\t\t\t\t\t\t\t * be used to create mustache tags that have rich behavior. Read about it\n\t\t\t\t\t\t\t\t\t * on the [can.mustache.helper helper function] page.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t// \n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * @function can.mustache.helpers.sectionHelper {{#helper args hashes}}\n\t\t\t\t\t\t\t\t\t * @parent can.mustache.htags 1\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Calls a mustache helper function with a block, and optional inverse\n\t\t\t\t\t\t\t\t\t * block.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @signature `{{#helper [args...] [hashName=hashValue...]}}BLOCK{{/helper}}`\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Calls a mustache helper function or a function with a block to\n\t\t\t\t\t\t\t\t\t * render.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The template:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>{{countTo number}}{{num}}{{/countTo}}</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Rendered with:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {number: 5}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Will call the `countTo` helper:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     can.mustache.registerHelper('madLib',\n\t\t\t\t\t\t\t\t\t *       function(number, options){\n\t\t\t\t\t\t\t\t\t *         var out = []\n\t\t\t\t\t\t\t\t\t *         for(var i =0; i < number; i++){\n\t\t\t\t\t\t\t\t\t *           out.push( options.fn({num: i+1}) )\n\t\t\t\t\t\t\t\t\t *         }\n\t\t\t\t\t\t\t\t\t *         return out.join(\" \")\n\t\t\t\t\t\t\t\t\t *     });\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Results in:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>1 2 3 4 5</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {can.mustache.key} helper A key that finds a [can.mustache.helper helper function]\n\t\t\t\t\t\t\t\t\t * that is either [can.mustache.registerHelper registered] or found within the\n\t\t\t\t\t\t\t\t\t * current or parent [can.mustache.context context].\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {...can.mustache.key|String|Number} [args] Space seperated arguments\n\t\t\t\t\t\t\t\t\t * that get passed to the helper function as arguments. If the key's value is a:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *  - [can.Map] - A getter/setter [can.compute] is passed.\n\t\t\t\t\t\t\t\t\t *  - [can.compute] - The can.compute is passed.\n\t\t\t\t\t\t\t\t\t *  - `function` - The function's return value is passed.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {String} hashProperty\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * A property name that gets added to a [can.mustache.helperOptions helper options]'s\n\t\t\t\t\t\t\t\t\t * hash object.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {...can.mustache.key|String|Number} hashValue A value that gets\n\t\t\t\t\t\t\t\t\t * set as a property value of the [can.mustache.helperOptions helper option argument]'s\n\t\t\t\t\t\t\t\t\t * hash object.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {mustache} BLOCK A mustache template that gets compiled and\n\t\t\t\t\t\t\t\t\t * passed to the helper function as the [can.mustache.helperOptions options argument's] `fn`\n\t\t\t\t\t\t\t\t\t * property.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @signature `{{#helper [args...] [hashName=hashValue...]}}BLOCK{{else}}INVERSE{{/helper}}`\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Calls a mustache helper function or a function with a `fn` and `inverse` block to\n\t\t\t\t\t\t\t\t\t * render.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The template:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>The bed is\n\t\t\t\t\t\t\t\t\t *        {{isJustRight firmness}}\n\t\t\t\t\t\t\t\t\t *           pefect!\n\t\t\t\t\t\t\t\t\t *        {{else}}\n\t\t\t\t\t\t\t\t\t *           uncomfortable.\n\t\t\t\t\t\t\t\t\t *        {{/justRight}}</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Rendered with:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {firmness: 45}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Will call the `isJustRight` helper:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     can.mustache.registerHelper('isJustRight',\n\t\t\t\t\t\t\t\t\t *       function(number, options){\n\t\t\t\t\t\t\t\t\t *         if(number > 50){\n\t\t\t\t\t\t\t\t\t *           return options.fn(this)\n\t\t\t\t\t\t\t\t\t *         } else {\n\t\t\t\t\t\t\t\t\t *           return options.inverse(this)\n\t\t\t\t\t\t\t\t\t *         }\n\t\t\t\t\t\t\t\t\t *         return out.join(\" \")\n\t\t\t\t\t\t\t\t\t *     });\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Results in:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <p>The bed is uncomfortable.</p>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {can.mustache.key} helper A key that finds a [can.mustache.helper helper function]\n\t\t\t\t\t\t\t\t\t * that is either [can.mustache.registerHelper registered] or found within the\n\t\t\t\t\t\t\t\t\t * current or parent [can.mustache.context context].\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {...can.mustache.key|String|Number} [args] Space seperated arguments\n\t\t\t\t\t\t\t\t\t * that get passed to the helper function as arguments. If the key's value is a:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *  - [can.Map] - A getter/setter [can.compute] is passed.\n\t\t\t\t\t\t\t\t\t *  - [can.compute] - The can.compute is passed.\n\t\t\t\t\t\t\t\t\t *  - `function` - The function's return value is passed.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {String} hashProperty\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * A property name that gets added to a [can.mustache.helperOptions helper options]'s\n\t\t\t\t\t\t\t\t\t * hash object.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {...can.mustache.key|String|Number} hashValue A value that gets\n\t\t\t\t\t\t\t\t\t * set as a property value of the [can.mustache.helperOptions helper option argument]'s\n\t\t\t\t\t\t\t\t\t * hash object.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {mustache} BLOCK A mustache template that gets compiled and\n\t\t\t\t\t\t\t\t\t * passed to the helper function as the [can.mustache.helperOptions options argument's] `fn`\n\t\t\t\t\t\t\t\t\t * property.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {mustache} INVERSE A mustache template that gets compiled and\n\t\t\t\t\t\t\t\t\t * passed to the helper function as the [can.mustache.helperOptions options argument's] `inverse`\n\t\t\t\t\t\t\t\t\t * property.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @body\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * ## Use\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Read the [use section of {{helper}}](can.mustache.helpers.helper.html#section_Use) to better understand how:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *  - [Helper functions are found](can.mustache.helpers.helper.html#section_Arguments)\n\t\t\t\t\t\t\t\t\t *  - [Arguments are passed to the helper](can.mustache.helpers.helper.html#section_Arguments)\n\t\t\t\t\t\t\t\t\t *  - [Hash values are passed to the helper](can.mustache.helpers.helper.html#section_Hash)\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Read how [helpers that return functions](can.mustache.helper.html#section_Returninganelementcallbackfunction) can\n\t\t\t\t\t\t\t\t\t * be used for rich behavior like 2-way binding.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t// Open a new section.\n\t\t\t\t\t\t\t\tcase '#':\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * @function can.mustache.helpers.inverse {{^key}}\n\t\t\t\t\t\t\t\t\t * @parent can.mustache.tags 5\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @signature `{{^key}}BLOCK{{/key}}`\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Render blocks of text if the value of the key\n\t\t\t\t\t\t\t\t\t * is falsey.  An inverted section syntax is similar to regular\n\t\t\t\t\t\t\t\t\t * sections except it begins with a caret rather than a\n\t\t\t\t\t\t\t\t\t * pound. If the value referenced is falsey, the section will render.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {can.mustache.key} key A key that references a value within the current or parent\n\t\t\t\t\t\t\t\t\t * [can.mustache.context context]. If the value is a function or [can.compute], the\n\t\t\t\t\t\t\t\t\t * function's return value is used.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @return {String}\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Depending on the value's type, the following actions happen:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * - A `truthy` value - the block is not rendered.\n\t\t\t\t\t\t\t\t\t * - A `falsey` value - the block is rendered.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The rendered result of the block or an empty string is returned.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @body\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * ## Use\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Inverted sections match falsey values. An inverted section\n\t\t\t\t\t\t\t\t\t * syntax is similar to regular sections except it begins with a caret\n\t\t\t\t\t\t\t\t\t * rather than a pound. If the value referenced is falsey, the section\n\t\t\t\t\t\t\t\t\t * will render. For example:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * The template:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <ul>\n\t\t\t\t\t\t\t\t\t *         {{#friends}}\n\t\t\t\t\t\t\t\t\t *             </li>{{name}}</li>\n\t\t\t\t\t\t\t\t\t *         {{/friends}}\n\t\t\t\t\t\t\t\t\t *         {{^friends}}\n\t\t\t\t\t\t\t\t\t *             <li>No friends.</li>\n\t\t\t\t\t\t\t\t\t *         {{/friends}}\n\t\t\t\t\t\t\t\t\t *     </ul>\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * And data:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     {\n\t\t\t\t\t\t\t\t\t *         friends: []\n\t\t\t\t\t\t\t\t\t *     }\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Results in:\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t *     <ul>\n\t\t\t\t\t\t\t\t\t *         <li>No friends.</li>\n\t\t\t\t\t\t\t\t\t *     </ul>\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tcase '^':\n\t\t\t\t\t\t\t\t\tif (cmd.specialAttribute) {\n\t\t\t\t\t\t\t\t\t\tresult.startOnlyTxt = true;\n\t\t\t\t\t\t\t\t\t\t//result.push(cmd.insert + 'can.view.onlytxt(this,function(){ return ');\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tresult.startTxt = true;\n\t\t\t\t\t\t\t\t\t\t// sections should never be escaped\n\t\t\t\t\t\t\t\t\t\tresult.escaped = 0;\n\t\t\t\t\t\t\t\t\t\t//result.push(cmd.insert + 'can.view.txt(0,\\'' + cmd.tagName + '\\',' + cmd.status + ',this,function(){ return ');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t// Close the prior section.\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * @function can.mustache.helpers.close {{/key}}\n\t\t\t\t\t\t\t\t\t * @parent can.mustache.tags 4\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @signature `{{/key}}`\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * Ends a [can.mustache.helpers.section {{#key}}] or [can.mustache.helpers.sectionHelper {{#helper}}]\n\t\t\t\t\t\t\t\t\t * block.\n\t\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t\t * @param {can.mustache.key} [key] A key that matches the opening key or helper name. It's also\n\t\t\t\t\t\t\t\t\t * possible to simply write `{{/}}` to end a block.\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tcase '/':\n\t\t\t\t\t\t\t\t\tresult.end = true;\n\t\t\t\t\t\t\t\t\tresult.content += 'return ___v1ew.join(\"\");}}])';\n\t\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Trim the mode off of the content.\n\t\t\t\t\t\t\t\tcontent = content.substring(1);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// `else` helpers are special and should be skipped since they don't \n\t\t\t\t\t\t\t// have any logic aside from kicking off an `inverse` function.\n\t\t\t\t\t\t\tif (mode !== 'else') {\n\t\t\t\t\t\t\t\tvar args = [],\n\t\t\t\t\t\t\t\t\thashes = [],\n\t\t\t\t\t\t\t\t\ti = 0,\n\t\t\t\t\t\t\t\t\tm;\n\n\t\t\t\t\t\t\t\t// Start the content render block.\n\t\t\t\t\t\t\t\tresult.content += 'can.Mustache.txt(\\n' +\n\t\t\t\t\t\t\t\t\t(cmd.specialAttribute ? SPECIAL_CONTEXT_OBJ : CONTEXT_OBJ ) +\n\t\t\t\t\t\t\t\t\t',\\n' + (mode ? '\"' + mode + '\"' : 'null') + ',';\n\n\t\t\t\t\t\t\t\t// Parse the helper arguments.\n\t\t\t\t\t\t\t\t// This needs uses this method instead of a split(/\\s/) so that \n\t\t\t\t\t\t\t\t// strings with spaces can be correctly parsed.\n\t\t\t\t\t\t\t\t(can.trim(content) + ' ')\n\t\t\t\t\t\t\t\t\t.replace(argumentsRegExp, function (whole, arg) {\n\n\t\t\t\t\t\t\t\t\t\t// Check for special helper arguments (string/number/boolean/hashes).\n\t\t\t\t\t\t\t\t\t\tif (i && (m = arg.match(literalNumberStringBooleanRegExp))) {\n\t\t\t\t\t\t\t\t\t\t\t// Found a native type like string/number/boolean.\n\t\t\t\t\t\t\t\t\t\t\tif (m[2]) {\n\t\t\t\t\t\t\t\t\t\t\t\targs.push(m[0]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t// Found a hash object.\n\t\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t\t// Addd to the hash object.\n\n\t\t\t\t\t\t\t\t\t\t\t\thashes.push(m[4] + \":\" + (m[6] ? m[6] : makeLookupLiteral(m[5])));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// Otherwise output a normal interpolation reference.\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\targs.push(makeLookupLiteral(arg));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tresult.content += args.join(\",\");\n\t\t\t\t\t\t\t\tif (hashes.length) {\n\t\t\t\t\t\t\t\t\tresult.content += \",{\" + HASH + \":{\" + hashes.join(\",\") + \"}}\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Create an option object for sections of code.\n\t\t\t\t\t\t\tif (mode && mode !== 'else') {\n\t\t\t\t\t\t\t\tresult.content += ',[\\n\\n';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tswitch (mode) {\n\t\t\t\t\t\t\t\t// Truthy section\n\t\t\t\t\t\t\tcase '^':\n\t\t\t\t\t\t\tcase '#':\n\t\t\t\t\t\t\t\tresult.content += ('{fn:function(' + ARG_NAMES + '){var ___v1ew = [];');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// If/else section\n\t\t\t\t\t\t\t\t// Falsey section\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * @function can.mustache.helpers.else {{else}}\n\t\t\t\t\t\t\t\t * @parent can.mustache.htags 3\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * @signature `{{#helper}}BLOCK{{else}}INVERSE{{/helper}}`\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * Creates an `inverse` block for a [can.mustache.helper helper function]'s\n\t\t\t\t\t\t\t\t * [can.mustache.helperOptions options argument]'s `inverse` property.\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * @param {can.mustache} INVERSE a mustache template coverted to a\n\t\t\t\t\t\t\t\t * function and set as the [can.mustache.helper helper function]'s\n\t\t\t\t\t\t\t\t * [can.mustache.helperOptions options argument]'s `inverse` property.\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * @body\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * ## Use\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t * For more information on how `{{else}}` is used checkout:\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t *  - [can.mustache.helpers.if {{if key}}]\n\t\t\t\t\t\t\t\t *  - [can.mustache.helpers.sectionHelper {{#helper}}]\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tcase 'else':\n\t\t\t\t\t\t\t\tresult.content += 'return ___v1ew.join(\"\");}},\\n{inverse:function(' + ARG_NAMES + '){\\nvar ___v1ew = [];';\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t// Not a section, no mode\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tresult.content += (')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!mode) {\n\t\t\t\t\t\t\t\tresult.startTxt = true;\n\t\t\t\t\t\t\t\tresult.end = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\n\t\t// Add in default scanner helpers first.\n\t\t// We could probably do this differently if we didn't 'break' on every match.\n\t\tvar helpers = can.view.Scanner.prototype.helpers;\n\t\tfor (var i = 0; i < helpers.length; i++) {\n\t\t\tMustache.prototype.scanner.helpers.unshift(helpers[i]);\n\t\t}\n\n\t\t/**\n\t\t * @function can.Mustache.txt\n\t\t * @hide\n\t\t *\n\t\t * Evaluates the resulting string based on the context/name.\n\t\t *\n\t\t * @param {Object|Array} context\tThe context stack to be used with evaluation.\n\t\t * @param {String} mode\t\tThe mode to evaluate the section with: # for truthy, ^ for falsey\n\t\t * @param {String|Object} name\tThe string (or sometimes object) to pass to the given helper method.\n\t\t */\n\t\tMustache.txt = function (scopeAndOptions, mode, name) {\n\n\t\t\t// here we are going to cache the lookup values so future calls are much faster\n\t\t\tvar scope = scopeAndOptions.scope,\n\t\t\t\toptions = scopeAndOptions.options,\n\t\t\t\targs = [],\n\t\t\t\thelperOptions = {\n\t\t\t\t\tfn: function () {},\n\t\t\t\t\tinverse: function () {}\n\t\t\t\t},\n\t\t\t\thash,\n\t\t\t\tcontext = scope.attr(\".\"),\n\t\t\t\tgetHelper = true,\n\t\t\t\thelper;\n\n\t\t\t// convert lookup values to actual values in name, arguments, and hash\n\t\t\tfor (var i = 3; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (mode && can.isArray(arg)) {\n\t\t\t\t\t// merge into options\n\t\t\t\t\thelperOptions = can.extend.apply(can, [helperOptions].concat(arg));\n\t\t\t\t} else if (arg && arg[HASH]) {\n\t\t\t\t\thash = arg[HASH];\n\t\t\t\t\t// get values on hash\n\t\t\t\t\tfor (var prop in hash) {\n\t\t\t\t\t\tif (isLookup(hash[prop])) {\n\t\t\t\t\t\t\thash[prop] = Mustache.get(hash[prop].get, scopeAndOptions, false, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (arg && isLookup(arg)) {\n\t\t\t\t\targs.push(Mustache.get(arg.get, scopeAndOptions, false, true));\n\t\t\t\t} else {\n\t\t\t\t\targs.push(arg);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isLookup(name)) {\n\t\t\t\tvar get = name.get;\n\t\t\t\tname = Mustache.get(name.get, scopeAndOptions, args.length, false);\n\n\t\t\t\t// Base whether or not we will get a helper on whether or not the original\n\t\t\t\t// name.get and Mustache.get resolve to the same thing. Saves us from running\n\t\t\t\t// into issues like {{text}} / {text: 'with'}\n\t\t\t\tgetHelper = (get === name);\n\t\t\t}\n\n\t\t\t// overwrite fn and inverse to always convert to scopes\n\t\t\thelperOptions.fn = makeConvertToScopes(helperOptions.fn, scope, options);\n\t\t\thelperOptions.inverse = makeConvertToScopes(helperOptions.inverse, scope, options);\n\n\t\t\t// if mode is ^, swap fn and inverse\n\t\t\tif(mode === '^') {\n\t\t\t\tvar tmp = helperOptions.fn;\n\t\t\t\thelperOptions.fn = helperOptions.inverse;\n\t\t\t\thelperOptions.inverse = tmp;\n\t\t\t}\n\n\t\t\t// Check for a registered helper or a helper-like function.\n\t\t\tif (helper = (getHelper && (typeof name === \"string\" && Mustache.getHelper(name, options)) || (can.isFunction(name) && !name.isComputed && {\n\t\t\t\tfn: name\n\t\t\t}))) {\n\t\t\t\t// Add additional data to be used by helper functions\n\n\t\t\t\tcan.extend(helperOptions, {\n\t\t\t\t\tcontext: context,\n\t\t\t\t\tscope: scope,\n\t\t\t\t\tcontexts: scope,\n\t\t\t\t\thash: hash\n\t\t\t\t});\n\n\t\t\t\targs.push(helperOptions);\n\t\t\t\t// Call the helper.\n\t\t\t\treturn function () {\n\t\t\t\t\treturn helper.fn.apply(context, args) || '';\n\t\t\t\t};\n\n\t\t\t}\n\t\t\t/*if( !mode && !args.length && can.isFunction(name) && name.isComputed ) {\n\t\t\t\tif(!scopeAndOptions.special) {\n\t\t\t\t\tname.canReadForChangeEvent = false;\n\t\t\t\t}\n\t\t\t\treturn name;\n\t\t\t}*/\n\t\t\treturn function () {\n\t\t\t\t//{{#foo.bar zed ted}}\n\t\t\t\tvar value;\n\t\t\t\tif (can.isFunction(name) && name.isComputed) {\n\t\t\t\t\tvalue = name();\n\t\t\t\t} else {\n\t\t\t\t\tvalue = name;\n\t\t\t\t}\n\t\t\t\t// An array of arguments to check for truthyness when evaluating sections.\n\t\t\t\tvar validArgs = args.length ? args : [value],\n\t\t\t\t\t// Whether the arguments meet the condition of the section.\n\t\t\t\t\tvalid = true,\n\t\t\t\t\tresult = [],\n\t\t\t\t\ti, argIsObserve, arg;\n\t\t\t\t// Validate the arguments based on the section mode.\n\t\t\t\tif (mode) {\n\t\t\t\t\tfor (i = 0; i < validArgs.length; i++) {\n\t\t\t\t\t\targ = validArgs[i];\n\t\t\t\t\t\targIsObserve = typeof arg !== 'undefined' && isObserveLike(arg);\n\t\t\t\t\t\t// Array-like objects are falsey if their length = 0.\n\t\t\t\t\t\tif (isArrayLike(arg)) {\n\t\t\t\t\t\t\t// Use .attr to trigger binding on empty lists returned from function\n\t\t\t\t\t\t\tif (mode === '#') {\n\t\t\t\t\t\t\t\tvalid = valid && !! (argIsObserve ? arg.attr('length') : arg.length);\n\t\t\t\t\t\t\t} else if (mode === '^') {\n\t\t\t\t\t\t\t\tvalid = valid && !(argIsObserve ? arg.attr('length') : arg.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Otherwise just check if it is truthy or not.\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvalid = mode === '#' ? valid && !! arg : mode === '^' ? valid && !arg : valid;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Otherwise interpolate like normal.\n\t\t\t\tif (valid) {\n\n\t\t\t\t\tif (mode === \"#\") {\n\t\t\t\t\t\tif (isArrayLike(value)) {\n\t\t\t\t\t\t\tvar isObserveList = isObserveLike(value);\n\n\t\t\t\t\t\t\t// Add the reference to the list in the contexts.\n\t\t\t\t\t\t\tfor (i = 0; i < value.length; i++) {\n\t\t\t\t\t\t\t\tresult.push(helperOptions.fn(\n\t\t\t\t\t\t\t\t\tisObserveList ? value.attr('' + i) : value[i]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn result.join('');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Normal case.\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treturn helperOptions.fn(value || {}) || '';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (mode === \"^\") {\n\t\t\t\t\t\treturn helperOptions.inverse(value || {}) || '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn '' + (value != null ? value : '');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn '';\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * @function can.Mustache.get\n\t\t * @hide\n\t\t *\n\t\t * Resolves a key for a given object (and then a context if that fails).\n\t\t *\n\t\t *     obj = this\n\t\t *     context = { a: true }\n\t\t *     ref = 'a.b.c'\n\t\t *          => obj.a.b.c || context.a.b.c || ''\n\t\t *\n\t\t * This implements the following Mustache specs:\n\t\t * Deeply Nested Contexts\n\t\t * All elements on the context stack should be accessible.\n\t\t *\n\t\t *     {{#bool}}B {{#bool}}C{{/bool}} D{{/bool}}\n\t\t *     { bool: true }\n\t\t *     => \"B C D\"\n\t\t *\n\t\t * Basic Context Miss Interpolation\n\t\t * Failed context lookups should default to empty strings.\n\t\t *\n\t\t *     {{cannot}}\n\t\t *     => \"\"\n\t\t *\n\t\t * Dotted Names - Broken Chains\n\t\t * Any falsey value prior to the last part of the name should yield ''.\n\t\t *\t\t{{a.b.c}}\n\t\t *\t\t{ a: { d: 1 } }\n\t\t *\t\t=> \"\"\n\t\t *\n\t\t * @param {can.mustache.key} key The reference to check for on the obj/context.\n\t\t * @param {Object} obj The object to use for checking for a reference.\n\t\t * @param {Object} context The context to use for checking for a reference if it doesn't exist in the object.\n\t\t * @param {Boolean} [isHelper] Whether the reference is seen as a helper.\n\t\t */\n\t\tMustache.get = function (key, scopeAndOptions, isHelper, isArgument) {\n\n\t\t\t// Cache a reference to the current context and options, we will use them a bunch.\n\t\t\tvar context = scopeAndOptions.scope.attr('.'),\n\t\t\t\toptions = scopeAndOptions.options || {};\n\n\t\t\t// If key is called as a helper,\n\t\t\tif (isHelper) {\n\t\t\t\t// try to find a registered helper.\n\t\t\t\tif (Mustache.getHelper(key, options)) {\n\t\t\t\t\treturn key;\n\t\t\t\t}\n\t\t\t\t// Support helper-like functions as anonymous helpers.\n\t\t\t\t// Check if there is a method directly in the \"top\" context.\n\t\t\t\tif (scopeAndOptions.scope && can.isFunction(context[key])) {\n\t\t\t\t\treturn context[key];\n\t\t\t\t}\n\n\t\t\t\n\t\t\t}\n\n\t\t\t// Get a compute (and some helper data) that represents key's value in the current scope\n\t\t\tvar computeData = scopeAndOptions.scope.computeData(key, {\n\t\t\t\tisArgument: isArgument,\n\t\t\t\targs: [context, scopeAndOptions.scope]\n\t\t\t}),\n\t\t\t\tcompute = computeData.compute;\n\n\t\t\t// Bind on the compute to cache its value. We will unbind in a timeout later.\n\t\t\tcan.compute.temporarilyBind(compute);\n\n\t\t\t// computeData gives us an initial value\n\t\t\tvar initialValue = computeData.initialValue;\n\t\t\t  \n\t\t\n\n\t\t\t// Use helper over the found value if the found value isn't in the current context\n\t\t\tif ((initialValue === undefined || computeData.scope !== scopeAndOptions.scope) && Mustache.getHelper(key, options)) {\n\t\t\t\treturn key;\n\t\t\t}\n\n\t\t\t// If there are no dependencies, just return the value.\n\t\t\tif (!compute.hasDependencies) {\n\t\t\t\treturn initialValue;\n\t\t\t} else {\n\t\t\t\treturn compute;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @hide\n\t\t *\n\t\t * Resolves an object to its truthy equivalent.\n\t\t *\n\t\t * @param {Object} value    The object to resolve.\n\t\t * @return {Object} The resolved object.\n\t\t */\n\t\tMustache.resolve = function (value) {\n\t\t\tif (isObserveLike(value) && isArrayLike(value) && value.attr('length')) {\n\t\t\t\treturn value;\n\t\t\t} else if (can.isFunction(value)) {\n\t\t\t\treturn value();\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @static\n\t\t */\n\n\t\tcan.view.Options = can.view.Scope.extend({\n\t\t\tinit: function (data, parent) {\n\t\t\t\tif (!data.helpers && !data.partials && !data.tags) {\n\t\t\t\t\tdata = {\n\t\t\t\t\t\thelpers: data\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tcan.view.Scope.prototype.init.apply(this, arguments);\n\t\t\t}\n\t\t});\n\n\t\t// ## Helpers\n\t\t//\n\t\t// Helpers are functions that can be called from within a template.\n\t\t// These helpers differ from the scanner helpers in that they execute\n\t\t// at runtime instead of during compilation.\n\t\t//\n\t\t// Custom helpers can be added via `can.Mustache.registerHelper`,\n\t\t// but there are also some built-in helpers included by default.\n\t\t// Most of the built-in helpers are little more than aliases to actions \n\t\t// that the base version of Mustache simply implies based on the \n\t\t// passed in object.\n\t\t// \n\t\t// Built-in helpers:\n\t\t// \n\t\t// * `data` - `data` is a special helper that is implemented via scanning helpers. \n\t\t//\t\tIt hooks up the active element to the active data object: `<div {{data \"key\"}} />`\n\t\t// * `if` - Renders a truthy section: `{{#if var}} render {{/if}}`\n\t\t// * `unless` - Renders a falsey section: `{{#unless var}} render {{/unless}}`\n\t\t// * `each` - Renders an array: `{{#each array}} render {{this}} {{/each}}`\n\t\t// * `with` - Opens a context section: `{{#with var}} render {{/with}}`\n\t\tMustache._helpers = {};\n\t\t/**\n\t\t * @function can.mustache.registerHelper\n\t\t * @parent can.mustache.methods\n\t\t * @description Register a helper.\n\t\t * @function can.mustache.registerHelper registerHelper\n\t\t * @signature `Mustache.registerHelper(name, helper)`\n\t\t * @param {String} name The name of the helper.\n\t\t * @param {can.mustache.helper} helper The helper function.\n\t\t *\n\t\t * @body\n\t\t * Registers a helper with the Mustache system.\n\t\t * Pass the name of the helper followed by the\n\t\t * function to which Mustache should invoke.\n\t\t * These are run at runtime.\n\t\t */\n\t\tMustache.registerHelper = function (name, fn) {\n\t\t\tthis._helpers[name] = {\n\t\t\t\tname: name,\n\t\t\t\tfn: fn\n\t\t\t};\n\t\t};\n\n\t\t/**\n\t\t * @hide\n\t\t * @function can.Mustache.getHelper getHelper\n\t\t * @description Retrieve a helper.\n\t\t * @signature `Mustache.getHelper(name)`\n\t\t * @param {String} name The name of the helper.\n\t\t * @return {Function|null} The helper, or `null` if\n\t\t * no helper by that name is found.\n\t\t *\n\t\t * @body\n\t\t * Returns a helper given the name.\n\t\t */\n\t\tMustache.getHelper = function (name, options) {\n\t\t\tvar helper = options.attr(\"helpers.\" + name);\n\t\t\treturn helper ? {\n\t\t\t\tfn: helper\n\t\t\t} : this._helpers[name];\n\t\t};\n\n\t\t/**\n\t\t * @function can.Mustache.static.render render\n\t\t * @hide\n\t\t * @parent can.Mustache.static\n\t\t * @signature `Mustache.render(partial, context)`\n\t\t * @param {Object} partial\n\t\t * @param {can.view.Scope} scope\n\t\t *\n\t\t * @body\n\t\t * `Mustache.render` is a helper method that calls\n\t\t * into `can.view.render` passing the partial\n\t\t * and the context object.\n\t\t *\n\t\t * Its purpose is to determine if the partial object\n\t\t * being passed represents a template like:\n\t\t *\n\t\t *     partial === \"movember.mustache\"\n\t\t *\n\t\t * or if the partial is a variable name that represents\n\t\t * a partial on the context object such as:\n\t\t *\n\t\t *     context[partial] === \"movember.mustache\"\n\t\t */\n\t\tMustache.render = function (partial, scope, options) {\n\t\t\t// TOOD: clean up the following\n\t\t\t// If there is a \"partial\" property and there is not\n\t\t\t// an already-cached partial, we use the value of the \n\t\t\t// property to look up the partial\n\n\t\t\t// if this partial is not cached ...\n\t\t\tif (!can.view.cached[partial]) {\n\t\t\t\t// we don't want to bind to changes so clear and restore reading\n\t\t\t\tvar reads = can.__clearReading();\n\t\t\t\tif (scope.attr('partial')) {\n\t\t\t\t\tpartial = scope.attr('partial');\n\t\t\t\t}\n\t\t\t\tcan.__setReading(reads);\n\t\t\t}\n\n\t\t\t// Call into `can.view.render` passing the\n\t\t\t// partial and scope.\n\t\t\treturn can.view.render(partial, scope /*, options*/ );\n\t\t};\n\n\t\t/**\n\t\t * @function can.mustache.safeString\n\t\t * @parent can.mustache.methods\n\t\t * \n\t\t * @signature `can.mustache.safeString(str)`\n\t\t *\n\t\t * @param {String} str A string you don't want to become escaped.\n\t\t * @return {String} A string flagged by `can.mustache` as safe, which will\n\t\t * not become escaped, even if you use [can.mustache.tags.unescaped](triple slash).\n\t\t *\n\t\t * @body\n\t\t * If you write a helper that generates its own HTML, you will\n\t\t * usually want to return a `can.mustache.safeString.` In this case,\n\t\t * you will want to manually escape parameters with `[can.esc].`\n\t\t *\n\t\t * @codestart\n\t\t * can.mustache.registerHelper('link', function(text, url) {\n\t\t *   text = can.esc(text);\n\t\t *   url  = can.esc(url);\n\t\t *\n\t\t *   var result = '&lt;a href=\"' + url + '\"&gt;' + text + '&lt;/a&gt;';\n\t\t *   return can.mustache.safeString(result);\n\t\t * });\n\t\t * @codeend\n\t\t *\n\t\t * Rendering:\n\t\t * @codestart\n\t\t * &lt;div&gt;{{link \"Google\", \"http://google.com\"}}&lt;/div&gt;\n\t\t * @codeend\n\t\t *\n\t\t * Results in:\n\t\t *\n\t\t * @codestart\n\t\t * &lt;div&gt;&lt;a href=\"http://google.com\"&gt;Google&lt;/a&gt;&lt;/div&gt;\n\t\t * @codeend\n\t\t *\n\t\t * As an anchor tag whereas if we would have just returned the result rather than a\n\t\t * `can.mustache.safeString` our template would have rendered a div with the escaped anchor tag.\n\t\t *\n\t\t */\n\t\tMustache.safeString = function (str) {\n\t\t\treturn {\n\t\t\t\ttoString: function () {\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\n\t\tMustache.renderPartial = function (partialName, scope, options) {\n\t\t\tvar partial = options.attr(\"partials.\" + partialName);\n\t\t\tif (partial) {\n\t\t\t\treturn partial.render ? partial.render(scope, options) :\n\t\t\t\t\tpartial(scope, options);\n\t\t\t} else {\n\t\t\t\treturn can.Mustache.render(partialName, scope, options);\n\t\t\t}\n\t\t};\n\n\t\t// The built-in Mustache helpers.\n\t\tcan.each({\n\t\t\t// Implements the `if` built-in helper.\n\t\t\t/**\n\t\t\t * @function can.mustache.helpers.if {{#if key}}\n\t\t\t * @parent can.mustache.htags 2\n\t\t\t * @signature `{{#if key}}BLOCK{{/if}}`\n\t\t\t *\n\t\t\t * Renders the `BLOCK` template within the current template.\n\t\t\t *\n\t\t\t * @param {can.mustache.key} key A key that references a value within the current or parent\n\t\t\t * context. If the value is a function or can.compute, the function's return value is used.\n\t\t\t *\n\t\t\t * @param {can.Mustache} BLOCK A mustache template.\n\t\t\t *\n\t\t\t * @return {String} If the key's value is truthy, the `BLOCK` is rendered with the\n\t\t\t * current context and its value is returned; otherwise, an empty string.\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * `{{#if key}}` provides explicit conditional truthy tests. For example,\n\t\t\t *\n\t\t\t * The template:\n\t\t\t *\n\t\t\t *     {{#if user.isFemale}}\n\t\t\t *       {{#if user.isMarried}}\n\t\t\t *         Mrs\n\t\t\t *       {{/if}}\n\t\t\t *       {{#if user.isSingle}}\n\t\t\t *         Miss\n\t\t\t *       {{/if}}\n\t\t\t *     {{/if}}\n\t\t\t *\n\t\t\t * Rendered with:\n\t\t\t *\n\t\t\t *     {user: {isFemale: true, isMarried: true}}\n\t\t\t *\n\t\t\t * Results in:\n\t\t\t *\n\t\t\t *     Mrs\n\t\t\t *\n\t\t\t * If can be used with [can.mustache.helpers.else {{else}}] too. For example,\n\t\t\t *\n\t\t\t *     {{#if user.isFemale}}\n\t\t\t *       {{#if user.isMarried}}\n\t\t\t *         Mrs\n\t\t\t *       {{else}}\n\t\t\t *         Miss\n\t\t\t *       {{/if}}\n\t\t\t *     {{/if}}\n\t\t\t *\n\t\t\t * Rendered with:\n\t\t\t *\n\t\t\t *     {user: {isFemale: true, isMarried: false}}\n\t\t\t *\n\t\t\t * Results in:\n\t\t\t *\n\t\t\t *     Miss\n\t\t\t */\n\t\t\t'if': function (expr, options) {\n\t\t\t\tvar value;\n\t\t\t\t// if it's a function, wrap its value in a compute\n\t\t\t\t// that will only change values from true to false\n\t\t\t\tif (can.isFunction(expr)) {\n\t\t\t\t\tvalue = can.compute.truthy(expr)();\n\t\t\t\t} else {\n\t\t\t\t\tvalue = !! Mustache.resolve(expr);\n\t\t\t\t}\n\n\t\t\t\tif (value) {\n\t\t\t\t\treturn options.fn(options.contexts || this);\n\t\t\t\t} else {\n\t\t\t\t\treturn options.inverse(options.contexts || this);\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Implements the `unless` built-in helper.\n\t\t\t/**\n\t\t\t * @function can.mustache.helpers.unless {{#unless key}}\n\t\t\t * @parent can.mustache.htags 4\n\t\t\t *\n\t\t\t * @signature `{{#unless key}}BLOCK{{/unless}}`\n\t\t\t *\n\t\t\t * Render the block of text if the key's value is falsey.\n\t\t\t *\n\t\t\t * @param {can.mustache.key} key A key that references a value within the current or parent\n\t\t\t * context. If the value is a function or can.compute, the function's\n\t\t\t * return value is used.\n\t\t\t *\n\t\t\t * @param {can.mustache} BLOCK A template that is rendered\n\t\t\t * if the `key`'s value is falsey.\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * The `unless` helper evaluates the inverse of the value\n\t\t\t * of the key and renders the block between the helper and the slash.\n\t\t\t *\n\t\t\t *     {{#unless expr}}\n\t\t\t *       // unless\n\t\t\t *     {{/unless}}\n\t\t\t */\n\t\t\t'unless': function (expr, options) {\n\t\t\t\tif (!Mustache.resolve(expr)) {\n\t\t\t\t\treturn options.fn(options.contexts || this);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Implements the `each` built-in helper.\n\t\t\t/**\n\t\t\t * @function can.mustache.helpers.each {{#each key}}\n\t\t\t * @parent can.mustache.htags 5\n\t\t\t *\n\t\t\t * @signature `{{#each key}}BLOCK{{/each}}`\n\t\t\t *\n\t\t\t * Render the block of text for each item in key's value.\n\t\t\t *\n\t\t\t * @param {can.mustache.key} key A key that references a value within the current or parent\n\t\t\t * context. If the value is a function or can.compute, the function's\n\t\t\t * return value is used.\n\t\t\t *\n\t\t\t * If the value of the key is a [can.List], the resulting HTML is updated when the\n\t\t\t * list changes. When a change in the list happens, only the minimum amount of DOM\n\t\t\t * element changes occur.\n\t\t\t *\n\t\t\t * If the value of the key is a [can.Map], the resulting HTML is updated whenever\n\t\t\t * attributes are added or removed. When a change in the map happens, only\n\t\t\t * the minimum amount of DOM element changes occur.\n\t\t\t *\n\t\t\t * @param {can.mustache} BLOCK A template that is rendered for each item in\n\t\t\t * the `key`'s value. The `BLOCK` is rendered with the context set to the item being rendered.\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * Use the `each` helper to iterate over a array\n\t\t\t * of items and render the block between the helper and the slash. For example,\n\t\t\t *\n\t\t\t * The template:\n\t\t\t *\n\t\t\t *     <ul>\n\t\t\t *       {{#each friends}}\n\t\t\t *         <li>{{name}}</li>\n\t\t\t *       {{/each}}\n\t\t\t *     </ul>\n\t\t\t *\n\t\t\t * Rendered with:\n\t\t\t *\n\t\t\t *     {friends: [{name: \"Austin\"},{name: \"Justin\"}]}\n\t\t\t *\n\t\t\t * Renders:\n\t\t\t *\n\t\t\t *     <ul>\n\t\t\t *       <li>Austin</li>\n\t\t\t *       <li>Justin</li>\n\t\t\t *     </ul>\n\t\t\t *\n\t\t\t * ## Object iteration\n\t\t\t *\n\t\t\t * As of 2.1, you can now iterate over properties of objects and attributes with\n\t\t\t * the `each` helper. When iterating over [can.Map] it will only iterate over the\n\t\t\t * map's [keys](can.Map.keys.html) and none of the hidden properties of a can.Map. For example,\n\t\t\t *\n\t\t\t * The template:\n\t\t\t *\n\t\t\t *     <ul>\n\t\t\t *       {{#each person}}\n\t\t\t *         <li>{{.}}</li>\n\t\t\t *       {{/each}}\n\t\t\t *     </ul>\n\t\t\t *\n\t\t\t * Rendered with:\n\t\t\t *\n\t\t\t *     {person: {name: 'Josh', age: 27}}\n\t\t\t *\n\t\t\t * Renders:\n\t\t\t *\n\t\t\t *     <ul>\n\t\t\t *       <li>Josh</li>\n\t\t\t *       <li>27</li>\n\t\t\t *     </ul>\n\t\t\t */\n\t\t\t'each': function (expr, options) {\n\t\t\t\t// Check if this is a list or a compute that resolves to a list, and setup\n\t\t\t\t// the incremental live-binding \n\n\t\t\t\t// First, see what we are dealing with.  It's ok to read the compute\n\t\t\t\t// because can.view.text is only temporarily binding to what is going on here.\n\t\t\t\t// Calling can.view.lists prevents anything from listening on that compute.\n\t\t\t\tvar resolved = Mustache.resolve(expr),\n\t\t\t\t\tresult = [],\n\t\t\t\t\tkeys,\n\t\t\t\t\tkey,\n\t\t\t\t\ti;\n\n\t\t\t\t// When resolved === undefined, the property hasn't been defined yet\n\t\t\t\t// Assume it is intended to be a list\n\t\t\t\tif (can.view.lists && (resolved instanceof can.List || (expr && expr.isComputed && resolved === undefined))) {\n\t\t\t\t\treturn can.view.lists(expr, function (item, index) {\n\t\t\t\t\t\treturn options.fn(options.scope.add({\n\t\t\t\t\t\t\t\t\"@index\": index\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.add(item));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\texpr = resolved;\n\n\t\t\t\tif ( !! expr && isArrayLike(expr)) {\n\t\t\t\t\tfor (i = 0; i < expr.length; i++) {\n\t\t\t\t\t\tresult.push(options.fn(options.scope.add({\n\t\t\t\t\t\t\t\t\"@index\": i\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.add(expr[i])));\n\t\t\t\t\t}\n\t\t\t\t\treturn result.join('');\n\t\t\t\t} else if (isObserveLike(expr)) {\n\t\t\t\t\tkeys = can.Map.keys(expr);\n\t\t\t\t\t// listen to keys changing so we can livebind lists of attributes.\n\n\t\t\t\t\tfor (i = 0; i < keys.length; i++) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tresult.push(options.fn(options.scope.add({\n\t\t\t\t\t\t\t\t\"@key\": key\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.add(expr[key])));\n\t\t\t\t\t}\n\t\t\t\t\treturn result.join('');\n\t\t\t\t} else if (expr instanceof Object) {\n\t\t\t\t\tfor (key in expr) {\n\t\t\t\t\t\tresult.push(options.fn(options.scope.add({\n\t\t\t\t\t\t\t\t\"@key\": key\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.add(expr[key])));\n\t\t\t\t\t}\n\t\t\t\t\treturn result.join('');\n\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Implements the `with` built-in helper.\n\t\t\t/**\n\t\t\t * @function can.mustache.helpers.with {{#with key}}\n\t\t\t * @parent can.mustache.htags 6\n\t\t\t *\n\t\t\t * @signature `{{#with key}}BLOCK{{/with}}`\n\t\t\t *\n\t\t\t * Changes the context within a block.\n\t\t\t *\n\t\t\t * @param {can.mustache.key} key A key that references a value within the current or parent\n\t\t\t * context. If the value is a function or can.compute, the function's\n\t\t\t * return value is used.\n\t\t\t *\n\t\t\t * @param {can.Mustache} BLOCK A template that is rendered\n\t\t\t * with the context of the `key`'s value.\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * Mustache typically applies the context passed in the section\n\t\t\t * at compiled time.  However, if you want to override this\n\t\t\t * context you can use the `with` helper.\n\t\t\t *\n\t\t\t *     {{#with arr}}\n\t\t\t *       // with\n\t\t\t *     {{/with}}\n\t\t\t */\n\t\t\t'with': function (expr, options) {\n\t\t\t\tvar ctx = expr;\n\t\t\t\texpr = Mustache.resolve(expr);\n\t\t\t\tif ( !! expr) {\n\t\t\t\t\treturn options.fn(ctx);\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * @function can.mustache.helpers.log {{log}}\n\t\t\t * @parent can.mustache.htags 9\n\t\t\t *\n\t\t\t * @signature `{{#log [message]}}`\n\t\t\t *\n\t\t\t * Logs the context of the current block with an optional message.\n\t\t\t *\n\t\t\t * @param {*} message An optional message to log out in addition to the\n\t\t\t * current context.\n\t\t\t *\n\t\t\t */\n\t\t\t'log': function (expr, options) {\n\t\t\t\tif(typeof console !== \"undefined\" && console.log) {\n\t\t\t\t\tif (!options) {\n\t\t\t\t\t\tconsole.log(expr.context);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log(expr, options.context);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/**\n\t\t\t * @function can.mustache.helpers.elementCallback {{(el)->CODE}}\n\t\t\t *\n\t\t\t * @parent can.mustache.htags 8\n\t\t\t *\n\t\t\t * @signature `{{(el) -> CODE}}`\n\t\t\t *\n\t\t\t * Executes an element callback with the inline code on the element.\n\t\t\t *\n\t\t\t * @param {String} code The inline code to execute on the element.\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * It is common for you to want to execute some code on a given\n\t\t\t * DOM element. An example would be for initializing a jQuery plugin\n\t\t\t * on the new HTML.\n\t\t\t *\n\t\t\t *     <div class=\"tabs\" {{(el) -> el.jquery_tabs()}}></div>\n\t\t\t *\n\t\t\t */\n\t\t\t//\n\t\t\t/**\n\t\t\t * @function can.mustache.helpers.index {{@index}}\n\t\t\t *\n\t\t\t * @parent can.mustache.htags 10\n\t\t\t *\n\t\t\t * @signature `{{@index [offset]}}`\n\t\t\t *\n\t\t\t * Insert the index of an Array or can.List we are iterating on with [#each](can.mustache.helpers.each)\n\t\t\t *\n\t\t\t * @param {Number} offset The number to optionally offset the index by.\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * When iterating over and array or list of items, you might need to render the index\n\t\t\t * of the item. Use the `@index` directive to do so. For example,\n\t\t\t *\n\t\t\t * The template:\n\t\t\t *\n\t\t\t *     <ul>\n\t\t\t *       {{#each items}}\n\t\t\t *         <li> {{@index}} - {{.}} </li>\n\t\t\t *       {{/each}}\n\t\t\t *     </ul>\n\t\t\t *\n\t\t\t * Rendered with:\n\t\t\t *\n\t\t\t *     { items: ['Josh', 'Eli', 'David'] }\n\t\t\t *\n\t\t\t * Renders:\n\t\t\t *\n\t\t\t *     <ul>\n\t\t\t *       <li> 0 - Josh </li>\n\t\t\t *       <li> 1 - Eli </li>\n\t\t\t *       <li> 2 - David </li>\n\t\t\t *     </ul>\n\t\t\t *\n\t\t\t */\n\t\t\t//\n\t\t\t/**\n\t\t\t * @function can.mustache.helpers.key {{@key}}\n\t\t\t *\n\t\t\t * @parent can.mustache.htags 11\n\t\t\t *\n\t\t\t * @signature `{{@key}}`\n\t\t\t *\n\t\t\t * Insert the property name of an Object or attribute name of a can.Map that we iterate over with [#each](can.mustache.helpers.each)\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * Use `{{@key}}` to render the property or attribute name of an Object or can.Map, when iterating over it with [#each](can.mustache.helpers.each). For example,\n\t\t\t *\n\t\t\t * The template:\n\t\t\t *\n\t\t\t *     <ul>\n\t\t\t *       {{#each person}}\n\t\t\t *         <li> {{@key}}: {{.}} </li>\n\t\t\t *       {{/each}}\n\t\t\t *     </ul>\n\t\t\t *\n\t\t\t * Rendered with:\n\t\t\t *\n\t\t\t *     { person: {name: 'Josh', age: 27, likes: 'Mustache, JavaScript, High Fives'} }\n\t\t\t *\n\t\t\t * Renders:\n\t\t\t *\n\t\t\t *     <ul>\n\t\t\t *       <li> name: Josh </li>\n\t\t\t *       <li> age: 27 </li>\n\t\t\t *       <li> likes: Mustache, JavaScript, High Fives </li>\n\t\t\t *     </ul>\n\t\t\t *\n\t\t\t */\n\t\t}, function (fn, name) {\n\t\t\tMustache.registerHelper(name, fn);\n\t\t});\n\n\t\t// ## Registration\n\t\t//\n\t\t// Registers Mustache with can.view.\n\t\tcan.view.register({\n\t\t\tsuffix: \"mustache\",\n\n\t\t\tcontentType: \"x-mustache-template\",\n\n\t\t\t// Returns a `function` that renders the view.\n\t\t\tscript: function (id, src) {\n\t\t\t\treturn \"can.Mustache(function(\" + ARG_NAMES + \") { \" + new Mustache({\n\t\t\t\t\ttext: src,\n\t\t\t\t\tname: id\n\t\t\t\t})\n\t\t\t\t\t.template.out + \" })\";\n\t\t\t},\n\n\t\t\trenderer: function (id, text) {\n\t\t\t\treturn Mustache({\n\t\t\t\t\ttext: text,\n\t\t\t\t\tname: id\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t\n\t\tcan.mustache.registerHelper = can.proxy(can.Mustache.registerHelper, can.Mustache);\n\t\tcan.mustache.safeString = can.Mustache.safeString;\n\t\treturn can;\n\t});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/mustache\";\ndefine([\"can/util/library\", \"can/view/scope\", \"can/view\", \"can/view/scanner\", \"can/compute\", \"can/view/render\"], function(can) {\n  can.view.ext = \".mustache\";\n  var SCOPE = 'scope',\n      HASH = '___h4sh',\n      CONTEXT_OBJ = '{scope:' + SCOPE + ',options:options}',\n      SPECIAL_CONTEXT_OBJ = '{scope:' + SCOPE + ',options:options, special: true}',\n      ARG_NAMES = SCOPE + \",options\",\n      argumentsRegExp = /((([^\\s]+?=)?('.*?'|\".*?\"))|.*?)\\s/g,\n      literalNumberStringBooleanRegExp = /^(('.*?'|\".*?\"|[0-9]+\\.?[0-9]*|true|false|null|undefined)|((.+?)=(('.*?'|\".*?\"|[0-9]+\\.?[0-9]*|true|false)|(.+))))$/,\n      makeLookupLiteral = function(type) {\n        return '{get:\"' + type.replace(/\"/g, '\\\\\"') + '\"}';\n      },\n      isLookup = function(obj) {\n        return obj && typeof obj.get === \"string\";\n      },\n      isObserveLike = function(obj) {\n        return obj instanceof can.Map || (obj && !!obj._get);\n      },\n      isArrayLike = function(obj) {\n        return obj && obj.splice && typeof obj.length === 'number';\n      },\n      makeConvertToScopes = function(original, scope, options) {\n        var originalWithScope = function(ctx, opts) {\n          return original(ctx || scope, opts);\n        };\n        return function(updatedScope, updatedOptions) {\n          if (updatedScope !== undefined && !(updatedScope instanceof can.view.Scope)) {\n            updatedScope = scope.add(updatedScope);\n          }\n          if (updatedOptions !== undefined && !(updatedOptions instanceof can.view.Options)) {\n            updatedOptions = options.add(updatedOptions);\n          }\n          return originalWithScope(updatedScope, updatedOptions || options);\n        };\n      };\n  var Mustache = function(options, helpers) {\n    if (this.constructor !== Mustache) {\n      var mustache = new Mustache(options);\n      return function(data, options) {\n        return mustache.render(data, options);\n      };\n    }\n    if (typeof options === \"function\") {\n      this.template = {fn: options};\n      return;\n    }\n    can.extend(this, options);\n    this.template = this.scanner.scan(this.text, this.name);\n  };\n  can.Mustache = window.Mustache = Mustache;\n  Mustache.prototype.render = function(data, options) {\n    if (!(data instanceof can.view.Scope)) {\n      data = new can.view.Scope(data || {});\n    }\n    if (!(options instanceof can.view.Options)) {\n      options = new can.view.Options(options || {});\n    }\n    options = options || {};\n    return this.template.fn.call(data, data, options);\n  };\n  can.extend(Mustache.prototype, {scanner: new can.view.Scanner({\n      text: {\n        start: \"\",\n        scope: SCOPE,\n        options: \",options: options\",\n        argNames: ARG_NAMES\n      },\n      tokens: [[\"returnLeft\", \"{{{\", \"{{[{&]\"], [\"commentFull\", \"{{!}}\", \"^[\\\\s\\\\t]*{{!.+?}}\\\\n\"], [\"commentLeft\", \"{{!\", \"(\\\\n[\\\\s\\\\t]*{{!|{{!)\"], [\"escapeFull\", \"{{}}\", \"(^[\\\\s\\\\t]*{{[#/^][^}]+?}}\\\\n|\\\\n[\\\\s\\\\t]*{{[#/^][^}]+?}}\\\\n|\\\\n[\\\\s\\\\t]*{{[#/^][^}]+?}}$)\", function(content) {\n        return {\n          before: /^\\n.+?\\n$/.test(content) ? '\\n' : '',\n          content: content.match(/\\{\\{(.+?)\\}\\}/)[1] || ''\n        };\n      }], [\"escapeLeft\", \"{{\"], [\"returnRight\", \"}}}\"], [\"right\", \"}}\"]],\n      helpers: [{\n        name: /^>[\\s]*\\w*/,\n        fn: function(content, cmd) {\n          var templateName = can.trim(content.replace(/^>\\s?/, '')).replace(/[\"|']/g, \"\");\n          return \"can.Mustache.renderPartial('\" + templateName + \"',\" + ARG_NAMES + \")\";\n        }\n      }, {\n        name: /^\\s*data\\s/,\n        fn: function(content, cmd) {\n          var attr = content.match(/[\"|'](.*)[\"|']/)[1];\n          return \"can.proxy(function(__){\" + \"can.data(can.$(__),'\" + attr + \"', this.attr('.')); }, \" + SCOPE + \")\";\n        }\n      }, {\n        name: /\\s*\\(([\\$\\w]+)\\)\\s*->([^\\n]*)/,\n        fn: function(content) {\n          var quickFunc = /\\s*\\(([\\$\\w]+)\\)\\s*->([^\\n]*)/,\n              parts = content.match(quickFunc);\n          return \"can.proxy(function(__){var \" + parts[1] + \"=can.$(__);with(\" + SCOPE + \".attr('.')){\" + parts[2] + \"}}, this);\";\n        }\n      }, {\n        name: /^.*$/,\n        fn: function(content, cmd) {\n          var mode = false,\n              result = {\n                content: \"\",\n                startTxt: false,\n                startOnlyTxt: false,\n                end: false\n              };\n          content = can.trim(content);\n          if (content.length && (mode = content.match(/^([#^/]|else$)/))) {\n            mode = mode[0];\n            switch (mode) {\n              case '#':\n              case '^':\n                if (cmd.specialAttribute) {\n                  result.startOnlyTxt = true;\n                } else {\n                  result.startTxt = true;\n                  result.escaped = 0;\n                }\n                break;\n              case '/':\n                result.end = true;\n                result.content += 'return ___v1ew.join(\"\");}}])';\n                return result;\n            }\n            content = content.substring(1);\n          }\n          if (mode !== 'else') {\n            var args = [],\n                hashes = [],\n                i = 0,\n                m;\n            result.content += 'can.Mustache.txt(\\n' + (cmd.specialAttribute ? SPECIAL_CONTEXT_OBJ : CONTEXT_OBJ) + ',\\n' + (mode ? '\"' + mode + '\"' : 'null') + ',';\n            (can.trim(content) + ' ').replace(argumentsRegExp, function(whole, arg) {\n              if (i && (m = arg.match(literalNumberStringBooleanRegExp))) {\n                if (m[2]) {\n                  args.push(m[0]);\n                } else {\n                  hashes.push(m[4] + \":\" + (m[6] ? m[6] : makeLookupLiteral(m[5])));\n                }\n              } else {\n                args.push(makeLookupLiteral(arg));\n              }\n              i++;\n            });\n            result.content += args.join(\",\");\n            if (hashes.length) {\n              result.content += \",{\" + HASH + \":{\" + hashes.join(\",\") + \"}}\";\n            }\n          }\n          if (mode && mode !== 'else') {\n            result.content += ',[\\n\\n';\n          }\n          switch (mode) {\n            case '^':\n            case '#':\n              result.content += ('{fn:function(' + ARG_NAMES + '){var ___v1ew = [];');\n              break;\n            case 'else':\n              result.content += 'return ___v1ew.join(\"\");}},\\n{inverse:function(' + ARG_NAMES + '){\\nvar ___v1ew = [];';\n              break;\n            default:\n              result.content += (')');\n              break;\n          }\n          if (!mode) {\n            result.startTxt = true;\n            result.end = true;\n          }\n          return result;\n        }\n      }]\n    })});\n  var helpers = can.view.Scanner.prototype.helpers;\n  for (var i = 0; i < helpers.length; i++) {\n    Mustache.prototype.scanner.helpers.unshift(helpers[i]);\n  }\n  Mustache.txt = function(scopeAndOptions, mode, name) {\n    var scope = scopeAndOptions.scope,\n        options = scopeAndOptions.options,\n        args = [],\n        helperOptions = {\n          fn: function() {},\n          inverse: function() {}\n        },\n        hash,\n        context = scope.attr(\".\"),\n        getHelper = true,\n        helper;\n    for (var i = 3; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (mode && can.isArray(arg)) {\n        helperOptions = can.extend.apply(can, [helperOptions].concat(arg));\n      } else if (arg && arg[HASH]) {\n        hash = arg[HASH];\n        for (var prop in hash) {\n          if (isLookup(hash[prop])) {\n            hash[prop] = Mustache.get(hash[prop].get, scopeAndOptions, false, true);\n          }\n        }\n      } else if (arg && isLookup(arg)) {\n        args.push(Mustache.get(arg.get, scopeAndOptions, false, true));\n      } else {\n        args.push(arg);\n      }\n    }\n    if (isLookup(name)) {\n      var get = name.get;\n      name = Mustache.get(name.get, scopeAndOptions, args.length, false);\n      getHelper = (get === name);\n    }\n    helperOptions.fn = makeConvertToScopes(helperOptions.fn, scope, options);\n    helperOptions.inverse = makeConvertToScopes(helperOptions.inverse, scope, options);\n    if (mode === '^') {\n      var tmp = helperOptions.fn;\n      helperOptions.fn = helperOptions.inverse;\n      helperOptions.inverse = tmp;\n    }\n    if (helper = (getHelper && (typeof name === \"string\" && Mustache.getHelper(name, options)) || (can.isFunction(name) && !name.isComputed && {fn: name}))) {\n      can.extend(helperOptions, {\n        context: context,\n        scope: scope,\n        contexts: scope,\n        hash: hash\n      });\n      args.push(helperOptions);\n      return function() {\n        return helper.fn.apply(context, args) || '';\n      };\n    }\n    return function() {\n      var value;\n      if (can.isFunction(name) && name.isComputed) {\n        value = name();\n      } else {\n        value = name;\n      }\n      var validArgs = args.length ? args : [value],\n          valid = true,\n          result = [],\n          i,\n          argIsObserve,\n          arg;\n      if (mode) {\n        for (i = 0; i < validArgs.length; i++) {\n          arg = validArgs[i];\n          argIsObserve = typeof arg !== 'undefined' && isObserveLike(arg);\n          if (isArrayLike(arg)) {\n            if (mode === '#') {\n              valid = valid && !!(argIsObserve ? arg.attr('length') : arg.length);\n            } else if (mode === '^') {\n              valid = valid && !(argIsObserve ? arg.attr('length') : arg.length);\n            }\n          } else {\n            valid = mode === '#' ? valid && !!arg : mode === '^' ? valid && !arg : valid;\n          }\n        }\n      }\n      if (valid) {\n        if (mode === \"#\") {\n          if (isArrayLike(value)) {\n            var isObserveList = isObserveLike(value);\n            for (i = 0; i < value.length; i++) {\n              result.push(helperOptions.fn(isObserveList ? value.attr('' + i) : value[i]));\n            }\n            return result.join('');\n          } else {\n            return helperOptions.fn(value || {}) || '';\n          }\n        } else if (mode === \"^\") {\n          return helperOptions.inverse(value || {}) || '';\n        } else {\n          return '' + (value != null ? value : '');\n        }\n      }\n      return '';\n    };\n  };\n  Mustache.get = function(key, scopeAndOptions, isHelper, isArgument) {\n    var context = scopeAndOptions.scope.attr('.'),\n        options = scopeAndOptions.options || {};\n    if (isHelper) {\n      if (Mustache.getHelper(key, options)) {\n        return key;\n      }\n      if (scopeAndOptions.scope && can.isFunction(context[key])) {\n        return context[key];\n      }\n    }\n    var computeData = scopeAndOptions.scope.computeData(key, {\n      isArgument: isArgument,\n      args: [context, scopeAndOptions.scope]\n    }),\n        compute = computeData.compute;\n    can.compute.temporarilyBind(compute);\n    var initialValue = computeData.initialValue;\n    if ((initialValue === undefined || computeData.scope !== scopeAndOptions.scope) && Mustache.getHelper(key, options)) {\n      return key;\n    }\n    if (!compute.hasDependencies) {\n      return initialValue;\n    } else {\n      return compute;\n    }\n  };\n  Mustache.resolve = function(value) {\n    if (isObserveLike(value) && isArrayLike(value) && value.attr('length')) {\n      return value;\n    } else if (can.isFunction(value)) {\n      return value();\n    } else {\n      return value;\n    }\n  };\n  can.view.Options = can.view.Scope.extend({init: function(data, parent) {\n      if (!data.helpers && !data.partials && !data.tags) {\n        data = {helpers: data};\n      }\n      can.view.Scope.prototype.init.apply(this, arguments);\n    }});\n  Mustache._helpers = {};\n  Mustache.registerHelper = function(name, fn) {\n    this._helpers[name] = {\n      name: name,\n      fn: fn\n    };\n  };\n  Mustache.getHelper = function(name, options) {\n    var helper = options.attr(\"helpers.\" + name);\n    return helper ? {fn: helper} : this._helpers[name];\n  };\n  Mustache.render = function(partial, scope, options) {\n    if (!can.view.cached[partial]) {\n      var reads = can.__clearReading();\n      if (scope.attr('partial')) {\n        partial = scope.attr('partial');\n      }\n      can.__setReading(reads);\n    }\n    return can.view.render(partial, scope);\n  };\n  Mustache.safeString = function(str) {\n    return {toString: function() {\n        return str;\n      }};\n  };\n  Mustache.renderPartial = function(partialName, scope, options) {\n    var partial = options.attr(\"partials.\" + partialName);\n    if (partial) {\n      return partial.render ? partial.render(scope, options) : partial(scope, options);\n    } else {\n      return can.Mustache.render(partialName, scope, options);\n    }\n  };\n  can.each({\n    'if': function(expr, options) {\n      var value;\n      if (can.isFunction(expr)) {\n        value = can.compute.truthy(expr)();\n      } else {\n        value = !!Mustache.resolve(expr);\n      }\n      if (value) {\n        return options.fn(options.contexts || this);\n      } else {\n        return options.inverse(options.contexts || this);\n      }\n    },\n    'unless': function(expr, options) {\n      if (!Mustache.resolve(expr)) {\n        return options.fn(options.contexts || this);\n      }\n    },\n    'each': function(expr, options) {\n      var resolved = Mustache.resolve(expr),\n          result = [],\n          keys,\n          key,\n          i;\n      if (can.view.lists && (resolved instanceof can.List || (expr && expr.isComputed && resolved === undefined))) {\n        return can.view.lists(expr, function(item, index) {\n          return options.fn(options.scope.add({\"@index\": index}).add(item));\n        });\n      }\n      expr = resolved;\n      if (!!expr && isArrayLike(expr)) {\n        for (i = 0; i < expr.length; i++) {\n          result.push(options.fn(options.scope.add({\"@index\": i}).add(expr[i])));\n        }\n        return result.join('');\n      } else if (isObserveLike(expr)) {\n        keys = can.Map.keys(expr);\n        for (i = 0; i < keys.length; i++) {\n          key = keys[i];\n          result.push(options.fn(options.scope.add({\"@key\": key}).add(expr[key])));\n        }\n        return result.join('');\n      } else if (expr instanceof Object) {\n        for (key in expr) {\n          result.push(options.fn(options.scope.add({\"@key\": key}).add(expr[key])));\n        }\n        return result.join('');\n      }\n    },\n    'with': function(expr, options) {\n      var ctx = expr;\n      expr = Mustache.resolve(expr);\n      if (!!expr) {\n        return options.fn(ctx);\n      }\n    },\n    'log': function(expr, options) {\n      if (typeof console !== \"undefined\" && console.log) {\n        if (!options) {\n          console.log(expr.context);\n        } else {\n          console.log(expr, options.context);\n        }\n      }\n    }\n  }, function(fn, name) {\n    Mustache.registerHelper(name, fn);\n  });\n  can.view.register({\n    suffix: \"mustache\",\n    contentType: \"x-mustache-template\",\n    script: function(id, src) {\n      return \"can.Mustache(function(\" + ARG_NAMES + \") { \" + new Mustache({\n        text: src,\n        name: id\n      }).template.out + \" })\";\n    },\n    renderer: function(id, text) {\n      return Mustache({\n        text: text,\n        name: id\n      });\n    }\n  });\n  can.mustache.registerHelper = can.proxy(can.Mustache.registerHelper, can.Mustache);\n  can.mustache.safeString = can.Mustache.safeString;\n  return can;\n});\n\n","module.exports = function() { throw new Error(\"define cannot be used indirect\"); };\r\n","module.exports = __webpack_amd_options__;\r\n","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n","\"use strict\";\nvar __moduleName = \"node_modules/webpack/buildin/module\";\nmodule.exports = function(module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function() {};\n    module.paths = [];\n    module.children = [];\n    module.webpackPolyfill = 1;\n  }\n  return module;\n};\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/view\"], function(can){\n\n\n\tvar attr = can.view.attr = function (attributeName, attrHandler) {\n\t\tif(attrHandler) {\n\t\t\tif (typeof attributeName === \"string\") {\n\t\t\t\tattributes[attributeName] = attrHandler;\n\t\t\t} else {\n\t\t\t\tregExpAttributes.push({\n\t\t\t\t\tmatch: attributeName,\n\t\t\t\t\thandler: attrHandler\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tvar cb = attributes[attributeName];\n\t\t\tif( !cb ) {\n\t\t\t\t\n\t\t\t\tfor( var i = 0, len = regExpAttributes.length; i < len; i++) {\n\t\t\t\t\tvar attrMatcher = regExpAttributes[i];\n\t\t\t\t\tif(attrMatcher.match.test(attributeName)) {\n\t\t\t\t\t\tcb = attrMatcher.handler;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cb;\n\t\t}\n\t};\n\n\tvar attributes = {},\n\t\tregExpAttributes = [],\n\t\tautomaticCustomElementCharacters = /[-\\:]/;\n\n\tvar tag = can.view.tag = function (tagName, tagHandler) {\n\t\tif(tagHandler) {\n\t\t\t// if we have html5shive ... re-generate\n\t\t\tif (window.html5) {\n\t\t\t\twindow.html5.elements += \" \" + tagName;\n\t\t\t\twindow.html5.shivDocument();\n\t\t\t}\n\t\n\t\t\ttags[tagName.toLowerCase()] = tagHandler;\n\t\t} else {\n\t\t\tvar cb = tags[tagName.toLowerCase()];\n\t\t\tif(!cb && automaticCustomElementCharacters.test(tagName)) {\n\t\t\t\t// empty callback for things that look like special tags\n\t\t\t\tcb = function(){};\n\t\t\t}\n\t\t\treturn cb;\n\t\t}\n\t\t\n\t};\n\tvar tags = {};\n\t\n\tcan.view.callbacks = {\n\t\t_tags: tags,\n\t\t_attributes: attributes,\n\t\t_regExpAttributes: regExpAttributes,\n\t\ttag: tag,\n\t\tattr: attr,\n\t\t// handles calling back a tag callback\n\t\ttagHandler: function(el, tagName, tagData){\n\t\t\tvar helperTagCallback = tagData.options.read('tags.' + tagName, {\n\t\t\t\t\tisArgument: true,\n\t\t\t\t\tproxyMethods: false\n\t\t\t\t})\n\t\t\t\t\t.value,\n\t\t\t\ttagCallback = helperTagCallback || tags[tagName];\n\t\n\t\t\t// If this was an element like <foo-bar> that doesn't have a component, just render its content\n\t\t\tvar scope = tagData.scope,\n\t\t\t\tres = tagCallback ? tagCallback(el, tagData) : scope;\n\t\n\t\t\n\t\n\t\t\t// If the tagCallback gave us something to render with, and there is content within that element\n\t\t\t// render it!\n\t\t\tif (res && tagData.subtemplate) {\n\t\n\t\t\t\tif (scope !== res) {\n\t\t\t\t\tscope = scope.add(res);\n\t\t\t\t}\n\t\t\t\tvar result = tagData.subtemplate(scope, tagData.options);\n\t\t\t\tvar frag = typeof result === \"string\" ? can.view.frag(result) : result;\n\t\t\t\tcan.appendChild(el, frag);\n\t\t\t}\n\t\t}\n\t};\n\treturn can.view.callbacks;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/callbacks\";\ndefine([\"can/util/library\", \"can/view\"], function(can) {\n  var attr = can.view.attr = function(attributeName, attrHandler) {\n    if (attrHandler) {\n      if (typeof attributeName === \"string\") {\n        attributes[attributeName] = attrHandler;\n      } else {\n        regExpAttributes.push({\n          match: attributeName,\n          handler: attrHandler\n        });\n      }\n    } else {\n      var cb = attributes[attributeName];\n      if (!cb) {\n        for (var i = 0,\n            len = regExpAttributes.length; i < len; i++) {\n          var attrMatcher = regExpAttributes[i];\n          if (attrMatcher.match.test(attributeName)) {\n            cb = attrMatcher.handler;\n            break;\n          }\n        }\n      }\n      return cb;\n    }\n  };\n  var attributes = {},\n      regExpAttributes = [],\n      automaticCustomElementCharacters = /[-\\:]/;\n  var tag = can.view.tag = function(tagName, tagHandler) {\n    if (tagHandler) {\n      if (window.html5) {\n        window.html5.elements += \" \" + tagName;\n        window.html5.shivDocument();\n      }\n      tags[tagName.toLowerCase()] = tagHandler;\n    } else {\n      var cb = tags[tagName.toLowerCase()];\n      if (!cb && automaticCustomElementCharacters.test(tagName)) {\n        cb = function() {};\n      }\n      return cb;\n    }\n  };\n  var tags = {};\n  can.view.callbacks = {\n    _tags: tags,\n    _attributes: attributes,\n    _regExpAttributes: regExpAttributes,\n    tag: tag,\n    attr: attr,\n    tagHandler: function(el, tagName, tagData) {\n      var helperTagCallback = tagData.options.read('tags.' + tagName, {\n        isArgument: true,\n        proxyMethods: false\n      }).value,\n          tagCallback = helperTagCallback || tags[tagName];\n      var scope = tagData.scope,\n          res = tagCallback ? tagCallback(el, tagData) : scope;\n      if (res && tagData.subtemplate) {\n        if (scope !== res) {\n          scope = scope.add(res);\n        }\n        var result = tagData.subtemplate(scope, tagData.options);\n        var frag = typeof result === \"string\" ? can.view.frag(result) : result;\n        can.appendChild(el, frag);\n      }\n    }\n  };\n  return can.view.callbacks;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/construct\"], function (can) {\n\t// \n\t// ### bind\n\t// this helper binds to one element and returns a function that unbinds from that element.\n\tvar bind = function (el, ev, callback) {\n\n\t\tcan.bind.call(el, ev, callback);\n\n\t\treturn function () {\n\t\t\tcan.unbind.call(el, ev, callback);\n\t\t};\n\t},\n\t\tisFunction = can.isFunction,\n\t\textend = can.extend,\n\t\teach = can.each,\n\t\tslice = [].slice,\n\t\tparamReplacer = /\\{([^\\}]+)\\}/g,\n\t\tspecial = can.getObject(\"$.event.special\", [can]) || {},\n\n\t\t// ### delegate\n\t\t// \n\t\t// this helper binds to elements based on a selector and returns a \n\t\t// function that unbinds.\n\t\tdelegate = function (el, selector, ev, callback) {\n\t\t\tcan.delegate.call(el, selector, ev, callback);\n\t\t\treturn function () {\n\t\t\t\tcan.undelegate.call(el, selector, ev, callback);\n\t\t\t};\n\t\t},\n\n\t\t// ### binder\n\t\t// \n\t\t// Calls bind or unbind depending if there is a selector.\n\t\tbinder = function (el, ev, callback, selector) {\n\t\t\treturn selector ?\n\t\t\t\tdelegate(el, can.trim(selector), ev, callback) :\n\t\t\t\tbind(el, ev, callback);\n\t\t},\n\n\t\tbasicProcessor;\n\n\tvar Control = can.Control = can.Construct(\n\t\t/**\n\t\t * @add can.Control\n\t\t */\n\t\t// ## *static functions*\n\t\t/** \n\t\t * @static\n\t\t */\n\t\t{\n\t\t\t// ## can.Control.setup\n\t\t\t// \n\t\t\t// This function pre-processes which methods are event listeners and which are methods of\n\t\t\t// the control. It has a mechanism to allow controllers to inherit default values from super\n\t\t\t// classes, like `can.Construct`, and will cache functions that are action functions (see `_isAction`)\n\t\t\t// or functions with an underscored name.\n\t\t\tsetup: function () {\n\t\t\t\tcan.Construct.setup.apply(this, arguments);\n\n\t\t\t\tif (can.Control) {\n\t\t\t\t\tvar control = this,\n\t\t\t\t\t\tfuncName;\n\n\t\t\t\t\tcontrol.actions = {};\n\t\t\t\t\tfor (funcName in control.prototype) {\n\t\t\t\t\t\tif (control._isAction(funcName)) {\n\t\t\t\t\t\t\tcontrol.actions[funcName] = control._action(funcName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// ## can.Control._shifter\n\t\t\t// \n\t\t\t// Moves `this` to the first argument, wraps it with `jQuery` if it's \n\t\t\t// an element.\n\t\t\t_shifter: function (context, name) {\n\n\t\t\t\tvar method = typeof name === \"string\" ? context[name] : name;\n\n\t\t\t\tif (!isFunction(method)) {\n\t\t\t\t\tmethod = context[method];\n\t\t\t\t}\n\n\t\t\t\treturn function () {\n\t\t\t\t\tcontext.called = name;\n\t\t\t\t\treturn method.apply(context, [this.nodeName ? can.$(this) : this].concat(slice.call(arguments, 0)));\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t// ## can.Control._isAction\n\t\t\t// \n\t\t\t// Return `true` if `methodName` refers to an action. An action is a `methodName` value that\n\t\t\t// is not the constructor, and is either a function or string that refers to a function, or is\n\t\t\t// defined in `special`, `processors`. Detects whether `methodName` is also a valid method name.\n\t\t\t_isAction: function (methodName) {\n\t\t\t\tvar val = this.prototype[methodName],\n\t\t\t\t\ttype = typeof val;\n\n\t\t\t\treturn (methodName !== 'constructor') &&\n\t\t\t\t(type === \"function\" || (type === \"string\" && isFunction(this.prototype[val]))) &&\n\t\t\t\t!! (special[methodName] || processors[methodName] || /[^\\w]/.test(methodName));\n\t\t\t},\n\t\t\t// ## can.Control._action\n\t\t\t// \n\t\t\t// Takes a method name and the options passed to a control and tries to return the data \n\t\t\t// necessary to pass to a processor (something that binds things).\n\t\t\t// \n\t\t\t// For performance reasons, `_action` is called twice: \n\t\t\t// * It's called when the Control class is created. for templated method names (e.g., `{window} foo`), it returns null. For non-templated method names it returns the event binding data. That data is added to `this.actions`.\n\t\t\t// * It is called wehn a control instance is created, but only for templated actions.\n\t\t\t_action: function (methodName, options) {\n\n\t\t\t\t// If we don't have options (a `control` instance), we'll run this later. If we have\n\t\t\t\t// options, run `can.sub` to replace the action template `{}` with values from the `options`\n\t\t\t\t// or `window`. If a `{}` template resolves to an object, `convertedName` will be an array.\n\t\t\t\t// In that case, the event name we want will be the last item in that array.\n\t\t\t\tparamReplacer.lastIndex = 0;\n\t\t\t\tif (options || !paramReplacer.test(methodName)) {\n\t\t\t\t\tvar convertedName = options ? can.sub(methodName, this._lookup(options)) : methodName;\n\t\t\t\t\tif (!convertedName) {\n\t\t\t\t\t\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tvar arr = can.isArray(convertedName),\n\t\t\t\t\t\tname = arr ? convertedName[1] : convertedName,\n\t\t\t\t\t\tparts = name.split(/\\s+/g),\n\t\t\t\t\t\tevent = parts.pop();\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprocessor: processors[event] || basicProcessor,\n\t\t\t\t\t\tparts: [name, parts.join(\" \"), event],\n\t\t\t\t\t\tdelegate: arr ? convertedName[0] : undefined\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\t_lookup: function (options) {\n\t\t\t\treturn [options, window];\n\t\t\t},\n\t\t\t// ## can.Control.processors\n\t\t\t// \n\t\t\t// An object of `{eventName : function}` pairs that Control uses to \n\t\t\t// hook up events automatically.\n\t\t\tprocessors: {},\n\t\t\t// ## can.Control.defaults\n\t\t\t// A object of name-value pairs that act as default values for a control instance\n\t\t\tdefaults: {}\n\t\t}, {\n\t\t\t// ## *prototype functions*\n\t\t\t/**\n\t\t\t * @prototype\n\t\t\t */\n\t\t\t// ## setup\n\t\t\t// \n\t\t\t// Setup is where most of the Control's magic happens. It performs several pre-initialization steps:\n\t\t\t// - Sets `this.element`\n\t\t\t// - Adds the Control's name to the element's className\n\t\t\t// - Saves the Control in `$.data`\n\t\t\t// - Merges Options\n\t\t\t// - Binds event handlers using `delegate`\n\t\t\t// The final step is to return pass the element and prepareed options, to be used in `init`.\n\t\t\tsetup: function (element, options) {\n\n\t\t\t\tvar cls = this.constructor,\n\t\t\t\t\tpluginname = cls.pluginName || cls._fullName,\n\t\t\t\t\tarr;\n\n\t\t\t\t// Retrieve the raw element, then set the plugin name as a class there.\n\t\t\t\tthis.element = can.$(element);\n\n\t\t\t\tif (pluginname && pluginname !== 'can_control') {\n\t\t\t\t\tthis.element.addClass(pluginname);\n\t\t\t\t}\n\n\t\t\t\t// Set up the 'controls' data on the element. If it does not exist, initialize\n\t\t\t\t// it to an empty array.\n\t\t\t\tarr = can.data(this.element, 'controls');\n\t\t\t\tif (!arr) {\n\t\t\t\t\tarr = [];\n\t\t\t\t\tcan.data(this.element, 'controls', arr);\n\t\t\t\t}\n\t\t\t\tarr.push(this);\n\n\t\t\t\t// The `this.options` property is an Object that contains configuration data\n\t\t\t\t// passed to a control when it is created (`new can.Control(element, options)`)\n\t\t\t\t// \n\t\t\t\t// The `options` argument passed when creating the control is merged with `can.Control.defaults` \n\t\t\t\t// in [can.Control.prototype.setup setup].\n\t\t\t\t// \n\t\t\t\t// If no `options` value is used during creation, the value in `defaults` is used instead\n\t\t\t\tthis.options = extend({}, cls.defaults, options);\n\n\t\t\t\tthis.on();\n\n\t\t\t\treturn [this.element, this.options];\n\t\t\t},\n\t\t\t// ## on\n\t\t\t// \n\t\t\t// This binds an event handler for an event to a selector under the scope of `this.element`\n\t\t\t// If no options are specified, all events are rebound to their respective elements. The actions,\n\t\t\t// which were cached in `setup`, are used and all elements are bound using `delegate` from `this.element`.\n\t\t\ton: function (el, selector, eventName, func) {\n\t\t\t\tif (!el) {\n\t\t\t\t\tthis.off();\n\n\t\t\t\t\tvar cls = this.constructor,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tactions = cls.actions,\n\t\t\t\t\t\telement = this.element,\n\t\t\t\t\t\tdestroyCB = can.Control._shifter(this, \"destroy\"),\n\t\t\t\t\t\tfuncName, ready;\n\n\t\t\t\t\tfor (funcName in actions) {\n\t\t\t\t\t\t// Only push if we have the action and no option is `undefined`\n\t\t\t\t\t\tif ( actions.hasOwnProperty(funcName) ) {\n\t\t\t\t\t\t\tready = actions[funcName] || cls._action(funcName, this.options, this);\n\t\t\t\t\t\t\tif( ready ) {\n\t\t\t\t\t\t\t\tbindings.control[funcName]  = ready.processor(ready.delegate || element,\n\t\t\t\t\t\t\t\t\tready.parts[2], ready.parts[1], funcName, this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set up the ability to `destroy` the control later.\n\t\t\t\t\tcan.bind.call(element, \"removed\", destroyCB);\n\t\t\t\t\tbindings.user.push(function (el) {\n\t\t\t\t\t\tcan.unbind.call(el, \"removed\", destroyCB);\n\t\t\t\t\t});\n\t\t\t\t\treturn bindings.user.length;\n\t\t\t\t}\n\n\t\t\t\t// if `el` is a string, use that as `selector` and re-set it to this control's element...\n\t\t\t\tif (typeof el === 'string') {\n\t\t\t\t\tfunc = eventName;\n\t\t\t\t\teventName = selector;\n\t\t\t\t\tselector = el;\n\t\t\t\t\tel = this.element;\n\t\t\t\t}\n\n\t\t\t\t// ...otherwise, set `selector` to null\n\t\t\t\tif (func === undefined) {\n\t\t\t\t\tfunc = eventName;\n\t\t\t\t\teventName = selector;\n\t\t\t\t\tselector = null;\n\t\t\t\t}\n\n\t\t\t\tif (typeof func === 'string') {\n\t\t\t\t\tfunc = can.Control._shifter(this, func);\n\t\t\t\t}\n\n\t\t\t\tthis._bindings.user.push(binder(el, eventName, func, selector));\n\n\t\t\t\treturn this._bindings.user.length;\n\t\t\t},\n\t\t\t// ## off\n\t\t\t// \n\t\t\t// Unbinds all event handlers on the controller.\n\t\t\t// This should _only_ be called in combination with .on()\n\t\t\toff: function () {\n\t\t\t\tvar el = this.element[0],\n\t\t\t\t\tbindings = this._bindings;\n\t\t\t\tif( bindings ) {\n\t\t\t\t\teach(bindings.user || [], function (value) {\n\t\t\t\t\t\tvalue(el);\n\t\t\t\t\t});\n\t\t\t\t\teach(bindings.control || {}, function (value) {\n\t\t\t\t\t\tvalue(el);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// Adds bindings.\n\t\t\t\tthis._bindings = {user: [], control: {}};\n\t\t\t},\n\t\t\t// ## destroy\n\t\t\t// \n\t\t\t// Prepares a `control` for garbage collection.\n\t\t\t// First checks if it has already been removed. Then, removes all the bindings, data, and \n\t\t\t// the element from the Control instance.\n\t\t\tdestroy: function () {\n\t\t\t\tif (this.element === null) {\n\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar Class = this.constructor,\n\t\t\t\t\tpluginName = Class.pluginName || Class._fullName,\n\t\t\t\t\tcontrols;\n\n\t\t\t\tthis.off();\n\n\t\t\t\tif (pluginName && pluginName !== 'can_control') {\n\t\t\t\t\tthis.element.removeClass(pluginName);\n\t\t\t\t}\n\n\t\t\t\tcontrols = can.data(this.element, \"controls\");\n\t\t\t\tcontrols.splice(can.inArray(this, controls), 1);\n\n\t\t\t\tcan.trigger(this, \"destroyed\");\n\n\t\t\t\tthis.element = null;\n\t\t\t}\n\t\t});\n\n\t// ## Processors\n\t// \n\t// Processors do the binding. This basic processor binds events. Each returns a function that unbinds \n\t// when called.\n\tvar processors = can.Control.processors;\n\tbasicProcessor = function (el, event, selector, methodName, control) {\n\t\treturn binder(el, event, can.Control._shifter(control, methodName), selector);\n\t};\n\n\t// Set common events to be processed as a `basicProcessor`\n\teach([\"change\", \"click\", \"contextmenu\", \"dblclick\", \"keydown\", \"keyup\",\n\t\t\"keypress\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\",\n\t\t\"mouseup\", \"reset\", \"resize\", \"scroll\", \"select\", \"submit\", \"focusin\",\n\t\t\"focusout\", \"mouseenter\", \"mouseleave\",\n\t\t\"touchstart\", \"touchmove\", \"touchcancel\", \"touchend\", \"touchleave\"\n\t], function (v) {\n\t\tprocessors[v] = basicProcessor;\n\t});\n\n\treturn Control;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/control\";\ndefine([\"can/util/library\", \"can/construct\"], function(can) {\n  var bind = function(el, ev, callback) {\n    can.bind.call(el, ev, callback);\n    return function() {\n      can.unbind.call(el, ev, callback);\n    };\n  },\n      isFunction = can.isFunction,\n      extend = can.extend,\n      each = can.each,\n      slice = [].slice,\n      paramReplacer = /\\{([^\\}]+)\\}/g,\n      special = can.getObject(\"$.event.special\", [can]) || {},\n      delegate = function(el, selector, ev, callback) {\n        can.delegate.call(el, selector, ev, callback);\n        return function() {\n          can.undelegate.call(el, selector, ev, callback);\n        };\n      },\n      binder = function(el, ev, callback, selector) {\n        return selector ? delegate(el, can.trim(selector), ev, callback) : bind(el, ev, callback);\n      },\n      basicProcessor;\n  var Control = can.Control = can.Construct({\n    setup: function() {\n      can.Construct.setup.apply(this, arguments);\n      if (can.Control) {\n        var control = this,\n            funcName;\n        control.actions = {};\n        for (funcName in control.prototype) {\n          if (control._isAction(funcName)) {\n            control.actions[funcName] = control._action(funcName);\n          }\n        }\n      }\n    },\n    _shifter: function(context, name) {\n      var method = typeof name === \"string\" ? context[name] : name;\n      if (!isFunction(method)) {\n        method = context[method];\n      }\n      return function() {\n        context.called = name;\n        return method.apply(context, [this.nodeName ? can.$(this) : this].concat(slice.call(arguments, 0)));\n      };\n    },\n    _isAction: function(methodName) {\n      var val = this.prototype[methodName],\n          type = typeof val;\n      return (methodName !== 'constructor') && (type === \"function\" || (type === \"string\" && isFunction(this.prototype[val]))) && !!(special[methodName] || processors[methodName] || /[^\\w]/.test(methodName));\n    },\n    _action: function(methodName, options) {\n      paramReplacer.lastIndex = 0;\n      if (options || !paramReplacer.test(methodName)) {\n        var convertedName = options ? can.sub(methodName, this._lookup(options)) : methodName;\n        if (!convertedName) {\n          return null;\n        }\n        var arr = can.isArray(convertedName),\n            name = arr ? convertedName[1] : convertedName,\n            parts = name.split(/\\s+/g),\n            event = parts.pop();\n        return {\n          processor: processors[event] || basicProcessor,\n          parts: [name, parts.join(\" \"), event],\n          delegate: arr ? convertedName[0] : undefined\n        };\n      }\n    },\n    _lookup: function(options) {\n      return [options, window];\n    },\n    processors: {},\n    defaults: {}\n  }, {\n    setup: function(element, options) {\n      var cls = this.constructor,\n          pluginname = cls.pluginName || cls._fullName,\n          arr;\n      this.element = can.$(element);\n      if (pluginname && pluginname !== 'can_control') {\n        this.element.addClass(pluginname);\n      }\n      arr = can.data(this.element, 'controls');\n      if (!arr) {\n        arr = [];\n        can.data(this.element, 'controls', arr);\n      }\n      arr.push(this);\n      this.options = extend({}, cls.defaults, options);\n      this.on();\n      return [this.element, this.options];\n    },\n    on: function(el, selector, eventName, func) {\n      if (!el) {\n        this.off();\n        var cls = this.constructor,\n            bindings = this._bindings,\n            actions = cls.actions,\n            element = this.element,\n            destroyCB = can.Control._shifter(this, \"destroy\"),\n            funcName,\n            ready;\n        for (funcName in actions) {\n          if (actions.hasOwnProperty(funcName)) {\n            ready = actions[funcName] || cls._action(funcName, this.options, this);\n            if (ready) {\n              bindings.control[funcName] = ready.processor(ready.delegate || element, ready.parts[2], ready.parts[1], funcName, this);\n            }\n          }\n        }\n        can.bind.call(element, \"removed\", destroyCB);\n        bindings.user.push(function(el) {\n          can.unbind.call(el, \"removed\", destroyCB);\n        });\n        return bindings.user.length;\n      }\n      if (typeof el === 'string') {\n        func = eventName;\n        eventName = selector;\n        selector = el;\n        el = this.element;\n      }\n      if (func === undefined) {\n        func = eventName;\n        eventName = selector;\n        selector = null;\n      }\n      if (typeof func === 'string') {\n        func = can.Control._shifter(this, func);\n      }\n      this._bindings.user.push(binder(el, eventName, func, selector));\n      return this._bindings.user.length;\n    },\n    off: function() {\n      var el = this.element[0],\n          bindings = this._bindings;\n      if (bindings) {\n        each(bindings.user || [], function(value) {\n          value(el);\n        });\n        each(bindings.control || {}, function(value) {\n          value(el);\n        });\n      }\n      this._bindings = {\n        user: [],\n        control: {}\n      };\n    },\n    destroy: function() {\n      if (this.element === null) {\n        return;\n      }\n      var Class = this.constructor,\n          pluginName = Class.pluginName || Class._fullName,\n          controls;\n      this.off();\n      if (pluginName && pluginName !== 'can_control') {\n        this.element.removeClass(pluginName);\n      }\n      controls = can.data(this.element, \"controls\");\n      controls.splice(can.inArray(this, controls), 1);\n      can.trigger(this, \"destroyed\");\n      this.element = null;\n    }\n  });\n  var processors = can.Control.processors;\n  basicProcessor = function(el, event, selector, methodName, control) {\n    return binder(el, event, can.Control._shifter(control, methodName), selector);\n  };\n  each([\"change\", \"click\", \"contextmenu\", \"dblclick\", \"keydown\", \"keyup\", \"keypress\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"reset\", \"resize\", \"scroll\", \"select\", \"submit\", \"focusin\", \"focusout\", \"mouseenter\", \"mouseleave\", \"touchstart\", \"touchmove\", \"touchcancel\", \"touchend\", \"touchleave\"], function(v) {\n    processors[v] = basicProcessor;\n  });\n  return Control;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/map\", \"can/list\", \"can/compute\"], function (can) {\n\tcan.Observe = can.Map;\n\tcan.Observe.startBatch = can.batch.start;\n\tcan.Observe.stopBatch = can.batch.stop;\n\tcan.Observe.triggerBatch = can.batch.trigger;\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/observe\";\ndefine([\"can/util/library\", \"can/map\", \"can/list\", \"can/compute\"], function(can) {\n  can.Observe = can.Map;\n  can.Observe.startBatch = can.batch.start;\n  can.Observe.stopBatch = can.batch.stop;\n  can.Observe.triggerBatch = can.batch.trigger;\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/view/mustache\", \"can/control\"], function (can) {\n\t/**\n\t * @function isContentEditable\n\t * @hide\n\t *\n\t * Determines if an element is contenteditable.\n\t *\n\t * An element is contenteditable if it contains the `contenteditable`\n\t * attribute set to either an empty string or \"true\".\n\t *\n\t * By default an element is also contenteditable if its immediate parent\n\t * has a truthy version of the attribute, unless the element is explicitly\n\t * set to \"false\".\n\t *\n\t * @param {HTMLElement} el\n\t * @return {Boolean} returns if the element is editable\n\t */\n\t// Function for determining of an element is contenteditable\n\tvar isContentEditable = (function(){\n\t\t// A contenteditable element has a value of an empty string or \"true\"\n\t\tvar values = {\n\t\t\t\"\": true,\n\t\t\t\"true\": true,\n\t\t\t\"false\": false\n\t\t};\n\n\t\t// Tests if an element has the appropriate contenteditable attribute\n\t\tvar editable = function(el){\n\t\t\t// DocumentFragments do not have a getAttribute\n\t\t\tif(!el || !el.getAttribute) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar attr = el.getAttribute(\"contenteditable\");\n\t\t\treturn values[attr];\n\t\t};\n\n\t\treturn function (el){\n\t\t\t// First check if the element is explicitly true or false\n\t\t\tvar val = editable(el);\n\t\t\tif(typeof val === \"boolean\") {\n\t\t\t\treturn val;\n\t\t\t} else {\n\t\t\t\t// Otherwise, check the parent\n\t\t\t\treturn !!editable(el.parentNode);\n\t\t\t}\n\t\t};\n\t})(),\n\t\tremoveCurly = function(value){\n\t\t\tif(value[0] === \"{\" && value[value.length-1] === \"}\") {\n\t\t\t\treturn value.substr(1, value.length - 2);\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t// ## can-value\n\t// Implement the `can-value` special attribute\n\t// \n\t// ### Usage\n\t// \t\t\n\t// \t\t<input can-value=\"name\" />\n\t// \n\t// When a view engine finds this attribute, it will call this callback. The value of the attribute \n\t// should be a string representing some value in the current scope to cross-bind to.\n\tcan.view.attr(\"can-value\", function (el, data) {\n\n\t\tvar attr = removeCurly(el.getAttribute(\"can-value\")),\n\t\t\t// Turn the attribute passed in into a compute.  If the user passed in can-value=\"name\" and the current \n\t\t\t// scope of the template is some object called data, the compute representing this can-value will be the \n\t\t\t// data.attr('name') property.\n\t\t\tvalue = data.scope.computeData(attr, {\n\t\t\t\targs: []\n\t\t\t})\n\t\t\t\t.compute,\n\t\t\ttrueValue,\n\t\t\tfalseValue;\n\n\t\t// Depending on the type of element, this attribute has different behavior. can.Controls are defined (further below \n\t\t// in this file) for each type of input. This block of code collects arguments and instantiates each can.Control. There \n\t\t// is one for checkboxes/radios, another for multiselect inputs, and another for everything else.\n\t\tif (el.nodeName.toLowerCase() === \"input\") {\n\t\t\tif (el.type === \"checkbox\") {\n\t\t\t\t// If the element is a checkbox and has an attribute called \"can-true-value\", \n\t\t\t\t// set up a compute that toggles the value of the checkbox to \"true\" based on another attribute. \n\t\t\t\t// \n\t\t\t\t// \t\t<input type='checkbox' can-value='sex' can-true-value='male' can-false-value='female' />\n\t\t\t\tif (can.attr.has(el, \"can-true-value\")) {\n\t\t\t\t\ttrueValue = el.getAttribute(\"can-true-value\");\n\t\t\t\t} else {\n\t\t\t\t\ttrueValue = true;\n\t\t\t\t}\n\t\t\t\tif (can.attr.has(el, \"can-false-value\")) {\n\t\t\t\t\tfalseValue = el.getAttribute(\"can-false-value\");\n\t\t\t\t} else {\n\t\t\t\t\tfalseValue = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (el.type === \"checkbox\" || el.type === \"radio\") {\n\t\t\t\t// For checkboxes and radio buttons, create a Checked can.Control around the input.  Pass in \n\t\t\t\t// the compute representing the can-value and can-true-value and can-false-value properties (if \n\t\t\t\t// they were used).\n\t\t\t\tnew Checked(el, {\n\t\t\t\t\tvalue: value,\n\t\t\t\t\ttrueValue: trueValue,\n\t\t\t\t\tfalseValue: falseValue\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (el.nodeName.toLowerCase() === \"select\" && el.multiple) {\n\t\t\t// For multiselect enabled select inputs, we instantiate a special control around that select element \n\t\t\t// called Multiselect\n\t\t\tnew Multiselect(el, {\n\t\t\t\tvalue: value\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t// For contenteditable elements, we instantiate a Content control.\n\t\tif (isContentEditable(el)) {\n\t\t\tnew Content(el, {\n\t\t\t\tvalue: value\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t// The default case. Instantiate the Value control around the element. Pass it the compute representing \n\t\t// the observable attribute property that was set.\n\t\tnew Value(el, {\n\t\t\tvalue: value\n\t\t});\n\t});\n\n\t// ## Special Event Types (can-SPECIAL)\n\n\t// A special object, similar to [$.event.special](http://benalman.com/news/2010/03/jquery-special-events/), \n\t// for adding hooks for special can-SPECIAL types (not native DOM events). Right now, only can-enter is \n\t// supported, but this object might be exported so that it can be added to easily.\n\t// \n\t// To implement a can-SPECIAL event type, add a property to the special object, whose value is a function \n\t// that returns the following: \n\t//\t\t\n\t//\t\t// the real event name to bind to\n\t//\t\tevent: \"event-name\",\n\t//\t\thandler: function (ev) {\n\t//\t\t\t// some logic that figures out if the original handler should be called or not, and if so...\n\t//\t\t\treturn original.call(this, ev);\n\t//\t\t}\n\tvar special = {\n\t\tenter: function (data, el, original) {\n\t\t\treturn {\n\t\t\t\tevent: \"keyup\",\n\t\t\t\thandler: function (ev) {\n\t\t\t\t\tif (ev.keyCode === 13) {\n\t\t\t\t\t\treturn original.call(this, ev);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\n\t// ## can-EVENT\n\t// The following section contains code for implementing the can-EVENT attribute. \n\t// This binds on a wildcard attribute name. Whenever a view is being processed \n\t// and can-xxx (anything starting with can-), this callback will be run.  Inside, its setting up an event handler \n\t// that calls a method identified by the value of this attribute.\n\tcan.view.attr(/can-[\\w\\.]+/, function (el, data) {\n\n\t\t// the attribute name is the function to call\n\t\tvar attributeName = data.attributeName,\n\t\t\t// The event type to bind on is deteremined by whatever is after can-\n\t\t\t// \n\t\t\t// For example, can-submit binds on the submit event.\n\t\t\tevent = attributeName.substr(\"can-\".length),\n\t\t\t// This is the method that the event will initially trigger. It will look up the method by the string name \n\t\t\t// passed in the attribute and call it.\n\t\t\thandler = function (ev) {\n\t\t\t\t// The attribute value, representing the name of the method to call (i.e. can-submit=\"foo\" foo is the \n\t\t\t\t// name of the method)\n\t\t\t\tvar attr = removeCurly( el.getAttribute(attributeName) ),\n\t\t\t\t\tscopeData = data.scope.read(attr, {\n\t\t\t\t\t\treturnObserveMethods: true,\n\t\t\t\t\t\tisArgument: true\n\t\t\t\t\t});\n\t\t\t\treturn scopeData.value.call(scopeData.parent, data.scope._context, can.$(this), ev);\n\t\t\t};\n\n\t\t// This code adds support for special event types, like can-enter=\"foo\". special.enter (or any special[event]) is \n\t\t// a function that returns an object containing an event and a handler. These are to be used for binding. For example, \n\t\t// when a user adds a can-enter attribute, we'll bind on the keyup event, and the handler performs special logic to \n\t\t// determine on keyup if the enter key was pressed.\n\t\tif (special[event]) {\n\t\t\tvar specialData = special[event](data, el, handler);\n\t\t\thandler = specialData.handler;\n\t\t\tevent = specialData.event;\n\t\t}\n\t\t// Bind the handler defined above to the element we're currently processing and the event name provided in this \n\t\t// attribute name (can-click=\"foo\")\n\t\tcan.bind.call(el, event, handler);\n\t});\n\n\n\t// ## Two way binding can.Controls\n\t// Each type of input that is supported by view/bindings is wrapped with a special can.Control.  The control serves \n\t// two functions: \n\t// 1. Bind on the property changing (the compute we're two-way binding to) and change the input value.\n\t// 2. Bind on the input changing and change the property (compute) we're two-way binding to.\n\t// There is one control per input type. There could easily be more for more advanced input types, like the HTML5 type=\"date\" input type.\n\n\n\t// ### Value \n\t// A can.Control that manages the two-way bindings on most inputs.  When can-value is found as an attribute \n\t// on an input, the callback above instantiates this Value control on the input element.\n\tvar Value = can.Control.extend({\n\t\tinit: function () {\n\t\t\t// Handle selects by calling `set` after this thread so the rest of the element can finish rendering.\n\t\t\tif (this.element[0].nodeName.toUpperCase() === \"SELECT\") {\n\t\t\t\tsetTimeout(can.proxy(this.set, this), 1);\n\t\t\t} else {\n\t\t\t\tthis.set();\n\t\t\t}\n\n\t\t},\n\t\t// If the live bound data changes, call set to reflect the change in the dom.\n\t\t\"{value} change\": \"set\",\n\t\tset: function () {\n\t\t\t// This may happen in some edgecases, esp. with selects that are not in DOM after the timeout has fired\n\t\t\tif (!this.element) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar val = this.options.value();\n\t\t\t// Set the element's value to match the attribute that was passed in\n\t\t\tthis.element[0].value = (val == null ? '' : val);\n\t\t},\n\t\t// If the input value changes, this will set the live bound data to reflect the change.\n\t\t\"change\": function () {\n\t\t\t// This may happen in some edgecases, esp. with selects that are not in DOM after the timeout has fired\n\t\t\tif (!this.element) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Set the value of the attribute passed in to reflect what the user typed\n\t\t\tthis.options.value(this.element[0].value);\n\t\t}\n\t}),\n\t// ### Checked \n\t// A can.Control that manages the two-way bindings on a checkbox element.  When can-value is found as an attribute \n\t// on a checkbox, the callback above instantiates this Checked control on the checkbox element.\n\t\tChecked = can.Control.extend({\n\t\t\tinit: function () {\n\t\t\t\t// If its not a checkbox, its a radio input\n\t\t\t\tthis.isCheckbox = (this.element[0].type.toLowerCase() === \"checkbox\");\n\t\t\t\tthis.check();\n\t\t\t},\n\t\t\t// `value` is the compute representing the can-value for this element.  For example can-value=\"foo\" and current \n\t\t\t// scope is someObj, value is the compute representing someObj.attr('foo')\n\t\t\t\"{value} change\": \"check\",\n\t\t\tcheck: function () {\n\t\t\t\t// jshint eqeqeq: false\n\t\t\t\tif (this.isCheckbox) {\n\t\t\t\t\tvar value = this.options.value(),\n\t\t\t\t\t\ttrueValue = this.options.trueValue || true;\n\t\t\t\t\t// If `can-true-value` attribute was set, check if the value is equal to that string value, and set \n\t\t\t\t\t// the checked property based on their equality.\n\t\t\t\t\tthis.element[0].checked = (value === trueValue);\n\t\t\t\t}\n\t\t\t\t// Its a radio input type\n\t\t\t\telse {\n\t\t\t\t\tvar setOrRemove = this.options.value() == this.element[0].value ?\n\t\t\t\t\t\t\"set\" : \"remove\";\n\n\t\t\t\t\tcan.attr[setOrRemove](this.element[0], 'checked', true);\n\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t// This event is triggered by the DOM.  If a change event occurs, we must set the value of the compute (options.value).\n\t\t\t\"change\": function () {\n\n\t\t\t\tif (this.isCheckbox) {\n\t\t\t\t\t// If the checkbox is checked and can-true-value was used, set value to the string value of can-true-value.  If \n\t\t\t\t\t// can-false-value was used and checked is false, set value to the string value of can-false-value.\n\t\t\t\t\tthis.options.value(this.element[0].checked ? this.options.trueValue : this.options.falseValue);\n\t\t\t\t}\n\t\t\t\t// Radio input type\n\t\t\t\telse {\n\t\t\t\t\tif (this.element[0].checked) {\n\t\t\t\t\t\tthis.options.value(this.element[0].value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}),\n\t\t// ### Multiselect\n\t\t// A can.Control that handles select input with the \"multiple\" attribute (meaning more than one can be selected at once). \n\t\tMultiselect = Value.extend({\n\t\t\tinit: function () {\n\t\t\t\tthis.delimiter = \";\";\n\t\t\t\tthis.set();\n\t\t\t},\n\t\t\t// Since this control extends Value (above), the set method will be called when the value compute changes (and on init).\n\t\t\tset: function () {\n\n\t\t\t\tvar newVal = this.options.value();\n\n\n\t\t\t\t// When given a string, try to extract all the options from it (i.e. \"a;b;c;d\")\n\t\t\t\tif (typeof newVal === 'string') {\n\t\t\t\t\tnewVal = newVal.split(this.delimiter);\n\t\t\t\t\tthis.isString = true;\n\t\t\t\t}\n\t\t\t\t// When given something else, try to make it an array and deal with it\n\t\t\t\telse if (newVal) {\n\t\t\t\t\tnewVal = can.makeArray(newVal);\n\t\t\t\t}\n\n\t\t\t\t// Make an object containing all the options passed in for convenient lookup\n\t\t\t\tvar isSelected = {};\n\t\t\t\tcan.each(newVal, function (val) {\n\t\t\t\t\tisSelected[val] = true;\n\t\t\t\t});\n\n\t\t\t\t// Go through each &lt;option/&gt; element, if it has a value property (its a valid option), then \n\t\t\t\t// set its selected property if it was in the list of vals that were just set.\n\t\t\t\tcan.each(this.element[0].childNodes, function (option) {\n\t\t\t\t\tif (option.value) {\n\t\t\t\t\t\toption.selected = !! isSelected[option.value];\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t},\n\t\t\t// A helper function used by the 'change' handler below. Its purpose is to return an array of selected \n\t\t\t// values, like [\"foo\", \"bar\"]\n\t\t\tget: function () {\n\t\t\t\tvar values = [],\n\t\t\t\t\tchildren = this.element[0].childNodes;\n\n\t\t\t\tcan.each(children, function (child) {\n\t\t\t\t\tif (child.selected && child.value) {\n\t\t\t\t\t\tvalues.push(child.value);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn values;\n\t\t\t},\n\t\t\t// Called when the user changes this input in any way.\n\t\t\t'change': function () {\n\t\t\t\t// Get an array of the currently selected values\n\t\t\t\tvar value = this.get(),\n\t\t\t\t\tcurrentValue = this.options.value();\n\n\t\t\t\t// If the compute is a string, set its value to the joined version of the values array (i.e. \"foo;bar\")\n\t\t\t\tif (this.isString || typeof currentValue === \"string\") {\n\t\t\t\t\tthis.isString = true;\n\t\t\t\t\tthis.options.value(value.join(this.delimiter));\n\t\t\t\t}\n\t\t\t\t// If the compute is a can.List, replace its current contents with the new array of values\n\t\t\t\telse if (currentValue instanceof can.List) {\n\t\t\t\t\tcurrentValue.attr(value, true);\n\t\t\t\t}\n\t\t\t\t// Otherwise set the value to the array of values selected in the input.\n\t\t\t\telse {\n\t\t\t\t\tthis.options.value(value);\n\t\t\t\t}\n\n\t\t\t}\n\t\t}),\n\t\tContent = can.Control.extend({\n\t\t\tinit: function () {\n\t\t\t\tthis.set();\n\t\t\t\tthis.on(\"blur\", \"setValue\");\n\t\t\t},\n\t\t\t\"{value} change\": \"set\",\n\t\t\tset: function () {\n\t\t\t\tvar val = this.options.value();\n\t\t\t\tthis.element[0].innerHTML = (typeof val === 'undefined' ? '' : val);\n\t\t\t},\n\t\t\tsetValue: function () {\n\t\t\t\tthis.options.value(this.element[0].innerHTML);\n\t\t\t}\n\t\t});\n\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/bindings\";\ndefine([\"can/util/library\", \"can/view/mustache\", \"can/control\"], function(can) {\n  var isContentEditable = (function() {\n    var values = {\n      \"\": true,\n      \"true\": true,\n      \"false\": false\n    };\n    var editable = function(el) {\n      if (!el || !el.getAttribute) {\n        return;\n      }\n      var attr = el.getAttribute(\"contenteditable\");\n      return values[attr];\n    };\n    return function(el) {\n      var val = editable(el);\n      if (typeof val === \"boolean\") {\n        return val;\n      } else {\n        return !!editable(el.parentNode);\n      }\n    };\n  })(),\n      removeCurly = function(value) {\n        if (value[0] === \"{\" && value[value.length - 1] === \"}\") {\n          return value.substr(1, value.length - 2);\n        }\n        return value;\n      };\n  can.view.attr(\"can-value\", function(el, data) {\n    var attr = removeCurly(el.getAttribute(\"can-value\")),\n        value = data.scope.computeData(attr, {args: []}).compute,\n        trueValue,\n        falseValue;\n    if (el.nodeName.toLowerCase() === \"input\") {\n      if (el.type === \"checkbox\") {\n        if (can.attr.has(el, \"can-true-value\")) {\n          trueValue = el.getAttribute(\"can-true-value\");\n        } else {\n          trueValue = true;\n        }\n        if (can.attr.has(el, \"can-false-value\")) {\n          falseValue = el.getAttribute(\"can-false-value\");\n        } else {\n          falseValue = false;\n        }\n      }\n      if (el.type === \"checkbox\" || el.type === \"radio\") {\n        new Checked(el, {\n          value: value,\n          trueValue: trueValue,\n          falseValue: falseValue\n        });\n        return;\n      }\n    }\n    if (el.nodeName.toLowerCase() === \"select\" && el.multiple) {\n      new Multiselect(el, {value: value});\n      return;\n    }\n    if (isContentEditable(el)) {\n      new Content(el, {value: value});\n      return;\n    }\n    new Value(el, {value: value});\n  });\n  var special = {enter: function(data, el, original) {\n      return {\n        event: \"keyup\",\n        handler: function(ev) {\n          if (ev.keyCode === 13) {\n            return original.call(this, ev);\n          }\n        }\n      };\n    }};\n  can.view.attr(/can-[\\w\\.]+/, function(el, data) {\n    var attributeName = data.attributeName,\n        event = attributeName.substr(\"can-\".length),\n        handler = function(ev) {\n          var attr = removeCurly(el.getAttribute(attributeName)),\n              scopeData = data.scope.read(attr, {\n                returnObserveMethods: true,\n                isArgument: true\n              });\n          return scopeData.value.call(scopeData.parent, data.scope._context, can.$(this), ev);\n        };\n    if (special[event]) {\n      var specialData = special[event](data, el, handler);\n      handler = specialData.handler;\n      event = specialData.event;\n    }\n    can.bind.call(el, event, handler);\n  });\n  var Value = can.Control.extend({\n    init: function() {\n      if (this.element[0].nodeName.toUpperCase() === \"SELECT\") {\n        setTimeout(can.proxy(this.set, this), 1);\n      } else {\n        this.set();\n      }\n    },\n    \"{value} change\": \"set\",\n    set: function() {\n      if (!this.element) {\n        return;\n      }\n      var val = this.options.value();\n      this.element[0].value = (val == null ? '' : val);\n    },\n    \"change\": function() {\n      if (!this.element) {\n        return;\n      }\n      this.options.value(this.element[0].value);\n    }\n  }),\n      Checked = can.Control.extend({\n        init: function() {\n          this.isCheckbox = (this.element[0].type.toLowerCase() === \"checkbox\");\n          this.check();\n        },\n        \"{value} change\": \"check\",\n        check: function() {\n          if (this.isCheckbox) {\n            var value = this.options.value(),\n                trueValue = this.options.trueValue || true;\n            this.element[0].checked = (value === trueValue);\n          } else {\n            var setOrRemove = this.options.value() == this.element[0].value ? \"set\" : \"remove\";\n            can.attr[setOrRemove](this.element[0], 'checked', true);\n          }\n        },\n        \"change\": function() {\n          if (this.isCheckbox) {\n            this.options.value(this.element[0].checked ? this.options.trueValue : this.options.falseValue);\n          } else {\n            if (this.element[0].checked) {\n              this.options.value(this.element[0].value);\n            }\n          }\n        }\n      }),\n      Multiselect = Value.extend({\n        init: function() {\n          this.delimiter = \";\";\n          this.set();\n        },\n        set: function() {\n          var newVal = this.options.value();\n          if (typeof newVal === 'string') {\n            newVal = newVal.split(this.delimiter);\n            this.isString = true;\n          } else if (newVal) {\n            newVal = can.makeArray(newVal);\n          }\n          var isSelected = {};\n          can.each(newVal, function(val) {\n            isSelected[val] = true;\n          });\n          can.each(this.element[0].childNodes, function(option) {\n            if (option.value) {\n              option.selected = !!isSelected[option.value];\n            }\n          });\n        },\n        get: function() {\n          var values = [],\n              children = this.element[0].childNodes;\n          can.each(children, function(child) {\n            if (child.selected && child.value) {\n              values.push(child.value);\n            }\n          });\n          return values;\n        },\n        'change': function() {\n          var value = this.get(),\n              currentValue = this.options.value();\n          if (this.isString || typeof currentValue === \"string\") {\n            this.isString = true;\n            this.options.value(value.join(this.delimiter));\n          } else if (currentValue instanceof can.List) {\n            currentValue.attr(value, true);\n          } else {\n            this.options.value(value);\n          }\n        }\n      }),\n      Content = can.Control.extend({\n        init: function() {\n          this.set();\n          this.on(\"blur\", \"setValue\");\n        },\n        \"{value} change\": \"set\",\n        set: function() {\n          var val = this.options.value();\n          this.element[0].innerHTML = (typeof val === 'undefined' ? '' : val);\n        },\n        setValue: function() {\n          this.options.value(this.element[0].innerHTML);\n        }\n      });\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/util/bind\", \"can/map/bubble\", \"can/construct\", \"can/util/batch\"], function (can, bind, bubble) {\n\t// ## Helpers\n\n\t// A temporary map of Maps that have been made from plain JS objects.\n\tvar madeMap = null;\n\t// Clears out map of converted objects.\n\tvar teardownMap = function () {\n\t\tfor (var cid in madeMap) {\n\t\t\tif (madeMap[cid].added) {\n\t\t\t\tdelete madeMap[cid].obj._cid;\n\t\t\t}\n\t\t}\n\t\tmadeMap = null;\n\t};\n\t// Retrieves a Map instance from an Object.\n\tvar getMapFromObject = function (obj) {\n\t\treturn madeMap && madeMap[obj._cid] && madeMap[obj._cid].instance;\n\t};\n\t// A temporary map of Maps\n\tvar serializeMap = null;\n\n\n\t/**\n\t * @add can.Map\n\t */\n\t//\n\tvar Map = can.Map = can.Construct.extend({\n\t\t\t/**\n\t\t\t * @static\n\t\t\t */\n\t\t\tsetup: function () {\n\n\t\t\t\tcan.Construct.setup.apply(this, arguments);\n\n\t\t\t\t// Do not run if we are defining can.Map.\n\t\t\t\tif (can.Map) {\n\t\t\t\t\tif (!this.defaults) {\n\t\t\t\t\t\tthis.defaults = {};\n\t\t\t\t\t}\n\t\t\t\t\t// Builds a list of compute and non-compute properties in this Object's prototype.\n\t\t\t\t\tthis._computes = [];\n\n\t\t\t\t\tfor (var prop in this.prototype) {\n\t\t\t\t\t\t// Non-functions are regular defaults.\n\t\t\t\t\t\tif (prop !== \"define\" && typeof this.prototype[prop] !== \"function\") {\n\t\t\t\t\t\t\tthis.defaults[prop] = this.prototype[prop];\n\t\t\t\t\t\t// Functions with an `isComputed` property are computes.\n\t\t\t\t\t\t} else if (this.prototype[prop].isComputed) {\n\t\t\t\t\t\t\tthis._computes.push(prop);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.helpers.define(this);\n\t\t\t\t}\n\t\t\t\t// If we inherit from can.Map, but not can.List, make sure any lists are the correct type.\n\t\t\t\tif (can.List && !(this.prototype instanceof can.List)) {\n\t\t\t\t\tthis.List = Map.List.extend({\n\t\t\t\t\t\tMap: this\n\t\t\t\t\t}, {});\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t// Reference to bubbling helpers.\n\t\t\t_bubble: bubble,\n\t\t\t// Given an eventName, determine if bubbling should be setup.\n\t\t\t_bubbleRule: function(eventName) {\n\t\t\t\treturn (eventName === \"change\" || eventName.indexOf(\".\") >= 0 ) && \"change\";\n\t\t\t},\n\t\t\t// List of computes on the Map's prototype.\n\t\t\t_computes: [],\n\t\t\t// Adds an event to this Map.\n\t\t\tbind: can.bindAndSetup,\n\t\t\ton: can.bindAndSetup,\n\t\t\t// Removes an event from this Map.\n\t\t\tunbind: can.unbindAndTeardown,\n\t\t\toff: can.unbindAndTeardown,\n\t\t\t// Name of the id field. Used in can.Model.\n\t\t\tid: \"id\",\n\t\t\t// ## Internal helpers\n\t\t\thelpers: {\n\t\t\t\t// ### can.Map.helpers.define\n\t\t\t\t// Stub function for the define plugin.\n\t\t\t\tdefine: function(){},\n\t\t\t\t/**\n\t\t\t\t * @hide\n\t\t\t\t * Parses attribute name into its parts\n\t\t\t\t * @param {String|Array} attr attribute name\n\t\t\t\t * @param {Boolean} keepKey whether to keep the key intact\n\t\t\t\t * @return {Array} attribute parts\n\t\t\t\t */\n\t\t\t\t// ### can.Map.helpers.attrParts\n\t\t\t\t// Parses attribute name into its parts.\n\t\t\t\tattrParts: function (attr, keepKey) {\n\t\t\t\t\t//Keep key intact\n\t\t\t\t\tif (keepKey) {\n\t\t\t\t\t\treturn [attr];\n\t\t\t\t\t}\n\t\t\t\t\t// Split key on '.'\n\t\t\t\t\treturn can.isArray(attr) ? attr : (\"\" + attr)\n\t\t\t\t\t\t.split(\".\");\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * @hide\n\t\t\t\t * Tracks Map instances created from JS Objects\n\t\t\t\t * @param {Object} obj original Object\n\t\t\t\t * @param {can.Map} instance the can.Map instance\n\t\t\t\t * @return {Function} function to clear out object mapping\n\t\t\t\t */\n\t\t\t\t// ### can.Map.helpers.addToMap\n\t\t\t\t// Tracks Map instances created from JS Objects\n\t\t\t\taddToMap: function (obj, instance) {\n\t\t\t\t\tvar teardown;\n\t\t\t\t\t// Setup a fresh mapping if `madeMap` is missing.\n\t\t\t\t\tif (!madeMap) {\n\t\t\t\t\t\tteardown = teardownMap;\n\t\t\t\t\t\tmadeMap = {};\n\t\t\t\t\t}\n\t\t\t\t\t// Record if Object has a `_cid` before adding one.\n\t\t\t\t\tvar hasCid = obj._cid;\n\t\t\t\t\tvar cid = can.cid(obj);\n\n\t\t\t\t\t// Only update if there already isn't one already.\n\t\t\t\t\tif (!madeMap[cid]) {\n\n\t\t\t\t\t\tmadeMap[cid] = {\n\t\t\t\t\t\t\tobj: obj,\n\t\t\t\t\t\t\tinstance: instance,\n\t\t\t\t\t\t\tadded: !hasCid\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn teardown;\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * @hide\n\t\t\t\t * Determines if `obj` is observable\n\t\t\t\t * @param {Object} obj Object to check\n\t\t\t\t * @return {Boolean} whether `obj` is an observable\n\t\t\t\t */\n\t\t\t\t// ### can.Map.helpers.isObservable\n\t\t\t\t// Determines if `obj` is observable.\n\t\t\t\tisObservable: function(obj){\n\t\t\t\t\treturn obj instanceof can.Map || (obj && obj === can.route);\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * @hide\n\t\t\t\t * Determines if `obj` can be made into an observable\n\t\t\t\t * @param {Object} obj Object to check\n\t\t\t\t * @return {Boolean} whether `obj` can be made into an observable\n\t\t\t\t */\n\t\t\t\t// ### can.Map.helpers.canMakeObserve\n\t\t\t\t// Determines if an object can be made into an observable.\n\t\t\t\tcanMakeObserve: function (obj) {\n\t\t\t\t\treturn obj && !can.isDeferred(obj) && (can.isArray(obj) || can.isPlainObject(obj) );\n\t\t\t\t},\n\t\t\t\t/**\n\t\t\t\t * @hide\n\t\t\t\t * Serializes a Map or Map.List\n\t\t\t\t * @param {can.Map|can.List} map The observable.\n\t\t\t\t * @param {String} how To serialize using `attr` or `serialize`.\n\t\t\t\t * @param {String} where Object or Array to put properties in.\n\t\t\t\t * @return {Object|Array} serialized Map or List data.\n\t\t\t\t */\n\t\t\t\t// ### can.Map.helpers.serialize\n\t\t\t\t// Serializes a Map or Map.List\n\t\t\t\tserialize: function (map, how, where) {\n\t\t\t\t\tvar cid = can.cid(map),\n\t\t\t\t\t\tfirstSerialize = false;\n\t\t\t\t\tif(!serializeMap) {\n\t\t\t\t\t\tfirstSerialize = true;\n\t\t\t\t\t\t// Serialize might call .attr() so we need to keep different map \n\t\t\t\t\t\tserializeMap = {\n\t\t\t\t\t\t\tattr: {},\n\t\t\t\t\t\t\tserialize: {}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tserializeMap[how][cid] = where;\n\t\t\t\t\t// Go through each property.\n\t\t\t\t\tmap.each(function (val, name) {\n\t\t\t\t\t\t// If the value is an `object`, and has an `attrs` or `serialize` function.\n\t\t\t\t\t\tvar result,\n\t\t\t\t\t\t\tisObservable =  Map.helpers.isObservable(val),\n\t\t\t\t\t\t\tserialized = isObservable && serializeMap[how][can.cid(val)];\n\t\t\t\t\t\tif( serialized ) {\n\t\t\t\t\t\t\tresult = serialized;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(how === \"serialize\") {\n\t\t\t\t\t\t\t\tresult = Map.helpers._serialize(map, name, val);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult = Map.helpers._getValue(map, name, val, how);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// this is probably removable\n\t\t\t\t\t\tif(result !== undefined){\n\t\t\t\t\t\t\twhere[name] = result;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tcan.__reading(map, '__keys');\n\t\t\t\t\tif(firstSerialize) {\n\t\t\t\t\t\tserializeMap = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn where;\n\t\t\t\t},\n\t\t\t\t_serialize: function(map, name, val){\n\t\t\t\t\treturn Map.helpers._getValue(map, name, val, \"serialize\");\n\t\t\t\t},\n\t\t\t\t_getValue: function(map, name, val, how){\n\t\t\t\t\tif( Map.helpers.isObservable(val) ) {\n\t\t\t\t\t\treturn val[how]();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/**\n\t\t\t * @hide\n\t\t\t * Returns list of keys in a Map\n\t\t\t * @param {can.Map} map\n\t\t\t * @returns {Array}\n\t\t\t */\n\t\t\tkeys: function (map) {\n\t\t\t\tvar keys = [];\n\t\t\t\tcan.__reading(map, '__keys');\n\t\t\t\tfor (var keyName in map._data) {\n\t\t\t\t\tkeys.push(keyName);\n\t\t\t\t}\n\t\t\t\treturn keys;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @prototype\n\t\t */\n\t\t{\n\t\t\tsetup: function (obj) {\n\t\t\t\t// `_data` is where we keep the properties.\n\t\t\t\tthis._data = {};\n\t\t\t\t/**\n\t\t\t\t * @property {String} can.Map.prototype._cid\n\t\t\t\t * @hide\n\t\t\t\t *\n\t\t\t\t * A globally unique ID for this `can.Map` instance.\n\t\t\t\t */\n\t\t\t\t// The namespace this `object` uses to listen to events.\n\t\t\t\tcan.cid(this, \".map\");\n\t\t\t\t// Sets all `attrs`.\n\t\t\t\tthis._init = 1;\n\t\t\t\t// It's handy if we pass this to comptues, because computes can have a default value.\n\t\t\t\tvar defaultValues = this._setupDefaults();\n\t\t\t\tthis._setupComputes(defaultValues);\n\t\t\t\tvar teardownMapping = obj && can.Map.helpers.addToMap(obj, this);\n\n\t\t\t\tvar data = can.extend(can.extend(true, {}, defaultValues), obj);\n\n\t\t\t\tthis.attr(data);\n\n\t\t\t\tif (teardownMapping) {\n\t\t\t\t\tteardownMapping();\n\t\t\t\t}\n\n\t\t\t\t// `batchTrigger` change events.\n\t\t\t\tthis.bind('change', can.proxy(this._changes, this));\n\n\t\t\t\tdelete this._init;\n\t\t\t},\n\t\t\t// Sets up computed properties on a Map.\n\t\t\t_setupComputes: function () {\n\t\t\t\tvar computes = this.constructor._computes;\n\t\t\t\tthis._computedBindings = {};\n\n\t\t\t\tfor (var i = 0, len = computes.length, prop; i < len; i++) {\n\t\t\t\t\tprop = computes[i];\n\t\t\t\t\t// Make the context of the compute the current Map\n\t\t\t\t\tthis[prop] = this[prop].clone(this);\n\t\t\t\t\t// Keep track of computed properties\n\t\t\t\t\tthis._computedBindings[prop] = {\n\t\t\t\t\t\tcount: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\t_setupDefaults: function(){\n\t\t\t\treturn this.constructor.defaults || {};\n\t\t\t},\n\t\t\t// Setup child bindings.\n\t\t\t_bindsetup: function(){},\n\t\t\t// Teardown child bindings.\n\t\t\t_bindteardown: function(){},\n\t\t\t// `change`event handler.\n\t\t\t_changes: function (ev, attr, how, newVal, oldVal) {\n\t\t\t\t// when a change happens, create the named event.\n\t\t\t\tcan.batch.trigger(this, {\n\t\t\t\t\ttype: attr,\n\t\t\t\t\tbatchNum: ev.batchNum\n\t\t\t\t}, [newVal, oldVal]);\n\n\t\t\t\tif(how === \"remove\" || how === \"add\") {\n\t\t\t\t\tcan.batch.trigger(this, {\n\t\t\t\t\t\ttype: \"__keys\",\n\t\t\t\t\t\tbatchNum: ev.batchNum\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Trigger a change event.\n\t\t\t_triggerChange: function (attr, how, newVal, oldVal) {\n\t\t\t\tcan.batch.trigger(this, \"change\", can.makeArray(arguments));\n\t\t\t},\n\t\t\t// Iterator that does not trigger live binding.\n\t\t\t_each: function (callback) {\n\t\t\t\tvar data = this.__get();\n\t\t\t\tfor (var prop in data) {\n\t\t\t\t\tif (data.hasOwnProperty(prop)) {\n\t\t\t\t\t\tcallback(data[prop], prop);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tattr: function (attr, val) {\n\t\t\t\t// This is super obfuscated for space -- basically, we're checking\n\t\t\t\t// if the type of the attribute is not a `number` or a `string`.\n\t\t\t\tvar type = typeof attr;\n\t\t\t\tif (type !== \"string\" && type !== \"number\") {\n\t\t\t\t\treturn this._attrs(attr, val);\n\t\t\t\t// If we are getting a value.\n\t\t\t\t} else if (arguments.length === 1) {\n\t\t\t\t\t// Let people know we are reading.\n\t\t\t\t\tcan.__reading(this, attr);\n\t\t\t\t\treturn this._get(attr);\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise we are setting.\n\t\t\t\t\tthis._set(attr, val);\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\teach: function () {\n\t\t\t\treturn can.each.apply(undefined, [this].concat(can.makeArray(arguments)));\n\t\t\t},\n\n\t\t\tremoveAttr: function (attr) {\n\t\t\t\t// If this is List.\n\t\t\t\tvar isList = can.List && this instanceof can.List,\n\t\t\t\t\t// Convert the `attr` into parts (if nested).\n\t\t\t\t\tparts = can.Map.helpers.attrParts(attr),\n\t\t\t\t\t// The actual property to remove.\n\t\t\t\t\tprop = parts.shift(),\n\t\t\t\t\t// The current value.\n\t\t\t\t\tcurrent = isList ? this[prop] : this._data[prop];\n\n\t\t\t\t// If we have more parts, call `removeAttr` on that part.\n\t\t\t\tif (parts.length && current) {\n\t\t\t\t\treturn current.removeAttr(parts);\n\t\t\t\t} else {\n\n\t\t\t\t\t// If attr does not have a `.`\n\t\t\t\t\tif (typeof attr === 'string' && !!~attr.indexOf('.')) {\n\t\t\t\t\t\tprop = attr;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._remove(prop, current);\n\t\t\t\t\treturn current;\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Remove a property.\n\t\t\t_remove: function(prop, current){\n\t\t\t\tif (prop in this._data) {\n\t\t\t\t\t// Delete the property from `_data` and the Map\n\t\t\t\t\t// as long as it isn't part of the Map's prototype.\n\t\t\t\t\tdelete this._data[prop];\n\t\t\t\t\tif (!(prop in this.constructor.prototype)) {\n\t\t\t\t\t\tdelete this[prop];\n\t\t\t\t\t}\n\t\t\t\t\t// Let others now this property has been removed.\n\t\t\t\t\tthis._triggerChange(prop, \"remove\", undefined, current);\n\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Reads a property from the `object`.\n\t\t\t_get: function (attr) {\n\t\t\t\tvar value;\n\t\t\t\t// Handles the case of a key having a `.` in its name\n\t\t\t\tif (typeof attr === 'string' && !! ~attr.indexOf('.')) {\n\t\t\t\t\t// Attempt to get the value\n\t\t\t\t\tvalue = this.__get(attr);\n\t\t\t\t\t// For keys with a `.` in them, value will be defined\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Otherwise we have to dig deeper into the Map to get the value.\n\t\t\t\t// First, break up the attr (`\"foo.bar\"`) into parts like `[\"foo\",\"bar\"]`.\n\t\t\t\tvar parts = can.Map.helpers.attrParts(attr),\n\t\t\t\t\t// Then get the value of the first attr name (`\"foo\"`).\n\t\t\t\t\tcurrent = this.__get(parts.shift());\n\t\t\t\t// If there are other attributes to read...\n\t\t\t\treturn parts.length ?\n\t\t\t\t// and current has a value...\n\t\t\t\tcurrent ?\n\t\t\t\t// then lookup the remaining attrs on current\n\t\t\t\tcurrent._get(parts) :\n\t\t\t\t// or if there's no current, return undefined.\n\t\t\t\tundefined :\n\t\t\t\t// If there are no more parts, return current.\n\t\t\t\tcurrent;\n\t\t\t},\n\t\t\t// Reads a property directly if an `attr` is provided, otherwise\n\t\t\t// returns the \"real\" data object itself.\n\t\t\t__get: function (attr) {\n\t\t\t\tif (attr) {\n\t\t\t\t\t// If property is a compute return the result, otherwise get the value directly\n\t\t\t\t\tif (this._computedBindings[attr]) {\n\t\t\t\t\t\treturn this[attr]();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this._data[attr];\n\t\t\t\t\t}\n\t\t\t\t// If not property is provided, return entire `_data` object\n\t\t\t\t} else {\n\t\t\t\t\treturn this._data;\n\t\t\t\t}\n\t\t\t},\n\t\t\t// converts the value into an observable if needed\n\t\t\t__type: function(value, prop){\n\t\t\t\t// If we are getting an object.\n\t\t\t\tif (!( value instanceof can.Map) && can.Map.helpers.canMakeObserve(value)  ) {\n\n\t\t\t\t\tvar cached = getMapFromObject(value);\n\t\t\t\t\tif(cached) {\n\t\t\t\t\t\treturn cached;\n\t\t\t\t\t}\n\t\t\t\t\tif( can.isArray(value) ) {\n\t\t\t\t\t\tvar List = can.List;\n\t\t\t\t\t\treturn new List(value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar Map = this.constructor.Map || can.Map;\n\t\t\t\t\t\treturn new Map(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t// Sets `attr` prop as value on this object where.\n\t\t\t// `attr` - Is a string of properties or an array  of property values.\n\t\t\t// `value` - The raw value to set.\n\t\t\t_set: function (attr, value, keepKey) {\n\t\t\t\t// Convert `attr` to attr parts (if it isn't already).\n\t\t\t\tvar parts = can.Map.helpers.attrParts(attr, keepKey),\n\t\t\t\t\t// The immediate prop we are setting.\n\t\t\t\t\tprop = parts.shift(),\n\t\t\t\t\t// We only need to get the current value if we are not in init.\n\t\t\t\t\tcurrent = this._init ? undefined : this.__get(prop);\n\n\t\t\t\tif ( parts.length && Map.helpers.isObservable(current) ) {\n\t\t\t\t\t// If we have an `object` and remaining parts that `object` should set it.\n\t\t\t\t\tcurrent._set(parts, value);\n\t\t\t\t} else if (!parts.length) {\n\t\t\t\t\t// We're in \"real\" set territory.\n\t\t\t\t\tif (this.__convert) {\n\t\t\t\t\t\t//Convert if there is a converter\n\t\t\t\t\t\tvalue = this.__convert(prop, value);\n\t\t\t\t\t}\n\t\t\t\t\tthis.__set(prop, this.__type(value, prop), current);\n\t\t\t\t} else {\n\t\t\t\t\tthrow \"can.Map: Object does not exist\";\n\t\t\t\t}\n\t\t\t},\n\t\t\t__set: function (prop, value, current) {\n\t\t\t\t// TODO: Check if value is object and transform.\n\t\t\t\t// Don't do anything if the value isn't changing.\n\t\t\t\tif (value !== current) {\n\t\t\t\t\t// Check if we are adding this for the first time --\n\t\t\t\t\t// if we are, we need to create an `add` event.\n\t\t\t\t\tvar changeType = this.__get()\n\t\t\t\t\t\t.hasOwnProperty(prop) ? \"set\" : \"add\";\n\n\t\t\t\t\t// Set the value on `_data` and hook it up to send event.\n\t\t\t\t\tthis.___set(prop, this.constructor._bubble.set(this, prop, value, current) );\n\n\t\t\t\t\t// `batchTrigger` the change event.\n\t\t\t\t\tthis._triggerChange(prop, changeType, value, current);\n\n\t\t\t\t\t// If we can stop listening to our old value, do it.\n\t\t\t\t\tif (current) {\n\t\t\t\t\t\tthis.constructor._bubble.teardownFromParent(this, current);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t// Directly sets a property on this `object`.\n\t\t\t___set: function (prop, val) {\n\t\t\t\tif ( this._computedBindings[prop] ) {\n\t\t\t\t\tthis[prop](val);\n\t\t\t\t} else {\n\t\t\t\t\tthis._data[prop] = val;\n\t\t\t\t}\n\t\t\t\t// Add property directly for easy writing.\n\t\t\t\t// Check if its on the `prototype` so we don't overwrite methods like `attrs`.\n\t\t\t\tif (!can.isFunction(this.constructor.prototype[prop]) && !this._computedBindings[prop] ) {\n\t\t\t\t\tthis[prop] = val;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tbind: function (eventName, handler) {\n\t\t\t\tvar computedBinding = this._computedBindings && this._computedBindings[eventName];\n\t\t\t\tif (computedBinding) {\n\t\t\t\t\t// The first time we bind to this computed property we\n\t\t\t\t\t// initialize `count` and `batchTrigger` the change event.\n\t\t\t\t\tif (!computedBinding.count) {\n\t\t\t\t\t\tcomputedBinding.count = 1;\n\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\tcomputedBinding.handler = function (ev, newVal, oldVal) {\n\t\t\t\t\t\t\tcan.batch.trigger(self, {\n\t\t\t\t\t\t\t\ttype: eventName,\n\t\t\t\t\t\t\t\tbatchNum: ev.batchNum\n\t\t\t\t\t\t\t}, [newVal, oldVal]);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis[eventName].bind(\"change\", computedBinding.handler);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Increment number of things listening to this computed property.\n\t\t\t\t\t\tcomputedBinding.count++;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// The first time we bind to this Map, `_bindsetup` will\n\t\t\t\t// be called to setup child event bubbling.\n\t\t\t\tthis.constructor._bubble.bind(this, eventName);\n\t\t\t\treturn can.bindAndSetup.apply(this, arguments);\n\n\t\t\t},\n\n\t\t\tunbind: function (eventName, handler) {\n\t\t\t\tvar computedBinding = this._computedBindings && this._computedBindings[eventName];\n\t\t\t\tif (computedBinding) {\n\t\t\t\t\t// If there is only one listener, we unbind the change event handler\n\t\t\t\t\t// and clean it up since no one is listening to this property any more.\n\t\t\t\t\tif (computedBinding.count === 1) {\n\t\t\t\t\t\tcomputedBinding.count = 0;\n\t\t\t\t\t\tthis[eventName].unbind(\"change\", computedBinding.handler);\n\t\t\t\t\t\tdelete computedBinding.handler;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Decrement number of things listening to this computed property\n\t\t\t\t\t\tcomputedBinding.count--;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tthis.constructor._bubble.unbind(this, eventName);\n\t\t\t\treturn can.unbindAndTeardown.apply(this, arguments);\n\n\t\t\t},\n\n\t\t\tserialize: function () {\n\t\t\t\treturn can.Map.helpers.serialize(this, 'serialize', {});\n\t\t\t},\n\t\t\t/**\n\t\t\t * @hide\n\t\t\t * Set multiple properties on the observable\n\t\t\t * @param {Object} props\n\t\t\t * @param {Boolean} remove true if you should remove properties that are not in props\n\t\t\t */\n\t\t\t_attrs: function (props, remove) {\n\t\t\t\tif (props === undefined) {\n\t\t\t\t\treturn Map.helpers.serialize(this, 'attr', {});\n\t\t\t\t}\n\n\t\t\t\tprops = can.simpleExtend({}, props);\n\t\t\t\tvar prop,\n\t\t\t\t\tself = this,\n\t\t\t\t\tnewVal;\n\n\t\t\t\t// Batch all of the change events until we are done.\n\t\t\t\tcan.batch.start();\n\t\t\t\t// Merge current properties with the new ones.\n\t\t\t\tthis.each(function (curVal, prop) {\n\t\t\t\t\t// You can not have a _cid property; abort.\n\t\t\t\t\tif (prop === \"_cid\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tnewVal = props[prop];\n\n\t\t\t\t\t// If we are merging, remove the property if it has no value.\n\t\t\t\t\tif (newVal === undefined) {\n\t\t\t\t\t\tif (remove) {\n\t\t\t\t\t\t\tself.removeAttr(prop);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Run converter if there is one\n\t\t\t\t\tif (self.__convert) {\n\t\t\t\t\t\tnewVal = self.__convert(prop, newVal);\n\t\t\t\t\t}\n\n\t\t\t\t\t// If we're dealing with models, we want to call _set to let converters run.\n\t\t\t\t\tif ( Map.helpers.isObservable( newVal ) ) {\n\n\t\t\t\t\t\tself.__set(prop, self.__type(newVal, prop), curVal);\n\t\t\t\t\t\t// If its an object, let attr merge.\n\t\t\t\t\t} else if (Map.helpers.isObservable(curVal) && Map.helpers.canMakeObserve(newVal) ) {\n\t\t\t\t\t\tcurVal.attr(newVal, remove);\n\t\t\t\t\t\t// Otherwise just set.\n\t\t\t\t\t} else if (curVal !== newVal) {\n\t\t\t\t\t\tself.__set(prop, self.__type(newVal, prop), curVal);\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete props[prop];\n\t\t\t\t});\n\t\t\t\t// Add remaining props.\n\t\t\t\tfor (prop in props) {\n\t\t\t\t\t// Ignore _cid.\n\t\t\t\t\tif (prop !== \"_cid\") {\n\t\t\t\t\t\tnewVal = props[prop];\n\t\t\t\t\t\tthis._set(prop, newVal, true);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tcan.batch.stop();\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tcompute: function (prop) {\n\t\t\t\t// If the property is a function, use it as the getter/setter\n\t\t\t\t// otherwise, create a new compute that returns the value of a property on `this`\n\t\t\t\tif (can.isFunction(this.constructor.prototype[prop])) {\n\t\t\t\t\treturn can.compute(this[prop], this);\n\t\t\t\t} else {\n\t\t\t\t\tvar reads = prop.split(\".\"),\n\t\t\t\t\t\tlast = reads.length - 1,\n\t\t\t\t\t\toptions = {\n\t\t\t\t\t\t\targs: []\n\t\t\t\t\t\t};\n\t\t\t\t\treturn can.compute(function (newVal) {\n\t\t\t\t\t\tif (arguments.length) {\n\t\t\t\t\t\t\tcan.compute.read(this, reads.slice(0, last))\n\t\t\t\t\t\t\t\t.value.attr(reads[last], newVal);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn can.compute.read(this, reads, options)\n\t\t\t\t\t\t\t\t.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\n\t// Setup on/off aliases\n\tMap.prototype.on = Map.prototype.bind;\n\tMap.prototype.off = Map.prototype.unbind;\n\n\treturn Map;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/map\";\ndefine([\"can/util/library\", \"can/util/bind\", \"can/map/bubble\", \"can/construct\", \"can/util/batch\"], function(can, bind, bubble) {\n  var madeMap = null;\n  var teardownMap = function() {\n    for (var cid in madeMap) {\n      if (madeMap[cid].added) {\n        delete madeMap[cid].obj._cid;\n      }\n    }\n    madeMap = null;\n  };\n  var getMapFromObject = function(obj) {\n    return madeMap && madeMap[obj._cid] && madeMap[obj._cid].instance;\n  };\n  var serializeMap = null;\n  var Map = can.Map = can.Construct.extend({\n    setup: function() {\n      can.Construct.setup.apply(this, arguments);\n      if (can.Map) {\n        if (!this.defaults) {\n          this.defaults = {};\n        }\n        this._computes = [];\n        for (var prop in this.prototype) {\n          if (prop !== \"define\" && typeof this.prototype[prop] !== \"function\") {\n            this.defaults[prop] = this.prototype[prop];\n          } else if (this.prototype[prop].isComputed) {\n            this._computes.push(prop);\n          }\n        }\n        this.helpers.define(this);\n      }\n      if (can.List && !(this.prototype instanceof can.List)) {\n        this.List = Map.List.extend({Map: this}, {});\n      }\n    },\n    _bubble: bubble,\n    _bubbleRule: function(eventName) {\n      return (eventName === \"change\" || eventName.indexOf(\".\") >= 0) && \"change\";\n    },\n    _computes: [],\n    bind: can.bindAndSetup,\n    on: can.bindAndSetup,\n    unbind: can.unbindAndTeardown,\n    off: can.unbindAndTeardown,\n    id: \"id\",\n    helpers: {\n      define: function() {},\n      attrParts: function(attr, keepKey) {\n        if (keepKey) {\n          return [attr];\n        }\n        return can.isArray(attr) ? attr : (\"\" + attr).split(\".\");\n      },\n      addToMap: function(obj, instance) {\n        var teardown;\n        if (!madeMap) {\n          teardown = teardownMap;\n          madeMap = {};\n        }\n        var hasCid = obj._cid;\n        var cid = can.cid(obj);\n        if (!madeMap[cid]) {\n          madeMap[cid] = {\n            obj: obj,\n            instance: instance,\n            added: !hasCid\n          };\n        }\n        return teardown;\n      },\n      isObservable: function(obj) {\n        return obj instanceof can.Map || (obj && obj === can.route);\n      },\n      canMakeObserve: function(obj) {\n        return obj && !can.isDeferred(obj) && (can.isArray(obj) || can.isPlainObject(obj));\n      },\n      serialize: function(map, how, where) {\n        var cid = can.cid(map),\n            firstSerialize = false;\n        if (!serializeMap) {\n          firstSerialize = true;\n          serializeMap = {\n            attr: {},\n            serialize: {}\n          };\n        }\n        serializeMap[how][cid] = where;\n        map.each(function(val, name) {\n          var result,\n              isObservable = Map.helpers.isObservable(val),\n              serialized = isObservable && serializeMap[how][can.cid(val)];\n          if (serialized) {\n            result = serialized;\n          } else {\n            if (how === \"serialize\") {\n              result = Map.helpers._serialize(map, name, val);\n            } else {\n              result = Map.helpers._getValue(map, name, val, how);\n            }\n          }\n          if (result !== undefined) {\n            where[name] = result;\n          }\n        });\n        can.__reading(map, '__keys');\n        if (firstSerialize) {\n          serializeMap = null;\n        }\n        return where;\n      },\n      _serialize: function(map, name, val) {\n        return Map.helpers._getValue(map, name, val, \"serialize\");\n      },\n      _getValue: function(map, name, val, how) {\n        if (Map.helpers.isObservable(val)) {\n          return val[how]();\n        } else {\n          return val;\n        }\n      }\n    },\n    keys: function(map) {\n      var keys = [];\n      can.__reading(map, '__keys');\n      for (var keyName in map._data) {\n        keys.push(keyName);\n      }\n      return keys;\n    }\n  }, {\n    setup: function(obj) {\n      this._data = {};\n      can.cid(this, \".map\");\n      this._init = 1;\n      var defaultValues = this._setupDefaults();\n      this._setupComputes(defaultValues);\n      var teardownMapping = obj && can.Map.helpers.addToMap(obj, this);\n      var data = can.extend(can.extend(true, {}, defaultValues), obj);\n      this.attr(data);\n      if (teardownMapping) {\n        teardownMapping();\n      }\n      this.bind('change', can.proxy(this._changes, this));\n      delete this._init;\n    },\n    _setupComputes: function() {\n      var computes = this.constructor._computes;\n      this._computedBindings = {};\n      for (var i = 0,\n          len = computes.length,\n          prop; i < len; i++) {\n        prop = computes[i];\n        this[prop] = this[prop].clone(this);\n        this._computedBindings[prop] = {count: 0};\n      }\n    },\n    _setupDefaults: function() {\n      return this.constructor.defaults || {};\n    },\n    _bindsetup: function() {},\n    _bindteardown: function() {},\n    _changes: function(ev, attr, how, newVal, oldVal) {\n      can.batch.trigger(this, {\n        type: attr,\n        batchNum: ev.batchNum\n      }, [newVal, oldVal]);\n      if (how === \"remove\" || how === \"add\") {\n        can.batch.trigger(this, {\n          type: \"__keys\",\n          batchNum: ev.batchNum\n        });\n      }\n    },\n    _triggerChange: function(attr, how, newVal, oldVal) {\n      can.batch.trigger(this, \"change\", can.makeArray(arguments));\n    },\n    _each: function(callback) {\n      var data = this.__get();\n      for (var prop in data) {\n        if (data.hasOwnProperty(prop)) {\n          callback(data[prop], prop);\n        }\n      }\n    },\n    attr: function(attr, val) {\n      var type = typeof attr;\n      if (type !== \"string\" && type !== \"number\") {\n        return this._attrs(attr, val);\n      } else if (arguments.length === 1) {\n        can.__reading(this, attr);\n        return this._get(attr);\n      } else {\n        this._set(attr, val);\n        return this;\n      }\n    },\n    each: function() {\n      return can.each.apply(undefined, [this].concat(can.makeArray(arguments)));\n    },\n    removeAttr: function(attr) {\n      var isList = can.List && this instanceof can.List,\n          parts = can.Map.helpers.attrParts(attr),\n          prop = parts.shift(),\n          current = isList ? this[prop] : this._data[prop];\n      if (parts.length && current) {\n        return current.removeAttr(parts);\n      } else {\n        if (typeof attr === 'string' && !!~attr.indexOf('.')) {\n          prop = attr;\n        }\n        this._remove(prop, current);\n        return current;\n      }\n    },\n    _remove: function(prop, current) {\n      if (prop in this._data) {\n        delete this._data[prop];\n        if (!(prop in this.constructor.prototype)) {\n          delete this[prop];\n        }\n        this._triggerChange(prop, \"remove\", undefined, current);\n      }\n    },\n    _get: function(attr) {\n      var value;\n      if (typeof attr === 'string' && !!~attr.indexOf('.')) {\n        value = this.__get(attr);\n        if (value !== undefined) {\n          return value;\n        }\n      }\n      var parts = can.Map.helpers.attrParts(attr),\n          current = this.__get(parts.shift());\n      return parts.length ? current ? current._get(parts) : undefined : current;\n    },\n    __get: function(attr) {\n      if (attr) {\n        if (this._computedBindings[attr]) {\n          return this[attr]();\n        } else {\n          return this._data[attr];\n        }\n      } else {\n        return this._data;\n      }\n    },\n    __type: function(value, prop) {\n      if (!(value instanceof can.Map) && can.Map.helpers.canMakeObserve(value)) {\n        var cached = getMapFromObject(value);\n        if (cached) {\n          return cached;\n        }\n        if (can.isArray(value)) {\n          var List = can.List;\n          return new List(value);\n        } else {\n          var Map = this.constructor.Map || can.Map;\n          return new Map(value);\n        }\n      }\n      return value;\n    },\n    _set: function(attr, value, keepKey) {\n      var parts = can.Map.helpers.attrParts(attr, keepKey),\n          prop = parts.shift(),\n          current = this._init ? undefined : this.__get(prop);\n      if (parts.length && Map.helpers.isObservable(current)) {\n        current._set(parts, value);\n      } else if (!parts.length) {\n        if (this.__convert) {\n          value = this.__convert(prop, value);\n        }\n        this.__set(prop, this.__type(value, prop), current);\n      } else {\n        throw \"can.Map: Object does not exist\";\n      }\n    },\n    __set: function(prop, value, current) {\n      if (value !== current) {\n        var changeType = this.__get().hasOwnProperty(prop) ? \"set\" : \"add\";\n        this.___set(prop, this.constructor._bubble.set(this, prop, value, current));\n        this._triggerChange(prop, changeType, value, current);\n        if (current) {\n          this.constructor._bubble.teardownFromParent(this, current);\n        }\n      }\n    },\n    ___set: function(prop, val) {\n      if (this._computedBindings[prop]) {\n        this[prop](val);\n      } else {\n        this._data[prop] = val;\n      }\n      if (!can.isFunction(this.constructor.prototype[prop]) && !this._computedBindings[prop]) {\n        this[prop] = val;\n      }\n    },\n    bind: function(eventName, handler) {\n      var computedBinding = this._computedBindings && this._computedBindings[eventName];\n      if (computedBinding) {\n        if (!computedBinding.count) {\n          computedBinding.count = 1;\n          var self = this;\n          computedBinding.handler = function(ev, newVal, oldVal) {\n            can.batch.trigger(self, {\n              type: eventName,\n              batchNum: ev.batchNum\n            }, [newVal, oldVal]);\n          };\n          this[eventName].bind(\"change\", computedBinding.handler);\n        } else {\n          computedBinding.count++;\n        }\n      }\n      this.constructor._bubble.bind(this, eventName);\n      return can.bindAndSetup.apply(this, arguments);\n    },\n    unbind: function(eventName, handler) {\n      var computedBinding = this._computedBindings && this._computedBindings[eventName];\n      if (computedBinding) {\n        if (computedBinding.count === 1) {\n          computedBinding.count = 0;\n          this[eventName].unbind(\"change\", computedBinding.handler);\n          delete computedBinding.handler;\n        } else {\n          computedBinding.count--;\n        }\n      }\n      this.constructor._bubble.unbind(this, eventName);\n      return can.unbindAndTeardown.apply(this, arguments);\n    },\n    serialize: function() {\n      return can.Map.helpers.serialize(this, 'serialize', {});\n    },\n    _attrs: function(props, remove) {\n      if (props === undefined) {\n        return Map.helpers.serialize(this, 'attr', {});\n      }\n      props = can.simpleExtend({}, props);\n      var prop,\n          self = this,\n          newVal;\n      can.batch.start();\n      this.each(function(curVal, prop) {\n        if (prop === \"_cid\") {\n          return;\n        }\n        newVal = props[prop];\n        if (newVal === undefined) {\n          if (remove) {\n            self.removeAttr(prop);\n          }\n          return;\n        }\n        if (self.__convert) {\n          newVal = self.__convert(prop, newVal);\n        }\n        if (Map.helpers.isObservable(newVal)) {\n          self.__set(prop, self.__type(newVal, prop), curVal);\n        } else if (Map.helpers.isObservable(curVal) && Map.helpers.canMakeObserve(newVal)) {\n          curVal.attr(newVal, remove);\n        } else if (curVal !== newVal) {\n          self.__set(prop, self.__type(newVal, prop), curVal);\n        }\n        delete props[prop];\n      });\n      for (prop in props) {\n        if (prop !== \"_cid\") {\n          newVal = props[prop];\n          this._set(prop, newVal, true);\n        }\n      }\n      can.batch.stop();\n      return this;\n    },\n    compute: function(prop) {\n      if (can.isFunction(this.constructor.prototype[prop])) {\n        return can.compute(this[prop], this);\n      } else {\n        var reads = prop.split(\".\"),\n            last = reads.length - 1,\n            options = {args: []};\n        return can.compute(function(newVal) {\n          if (arguments.length) {\n            can.compute.read(this, reads.slice(0, last)).value.attr(reads[last], newVal);\n          } else {\n            return can.compute.read(this, reads, options).value;\n          }\n        }, this);\n      }\n    }\n  });\n  Map.prototype.on = Map.prototype.bind;\n  Map.prototype.off = Map.prototype.unbind;\n  return Map;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/map\", \"can/map/bubble\"], function (can, Map, bubble) {\n\n\t// Helpers for `observable` lists.\n\tvar splice = [].splice,\n\t\t// test if splice works correctly\n\t\tspliceRemovesProps = (function () {\n\t\t\t// IE's splice doesn't remove properties\n\t\t\tvar obj = {\n\t\t\t\t0: \"a\",\n\t\t\t\tlength: 1\n\t\t\t};\n\t\t\tsplice.call(obj, 0, 1);\n\t\t\treturn !obj[0];\n\t\t})();\n\n\t/**\n\t * @add can.List\n\t */\n\tvar list = Map.extend(\n\t\t/**\n\t\t * @static\n\t\t */\n\t\t{\n\t\t\t/**\n\t\t\t * @property {can.Map} can.List.Map\n\t\t\t *\n\t\t\t * @description Specify the Map type used to make objects added to this list observable.\n\t\t\t *\n\t\t\t * @option {can.Map} When objects are added to a can.List, those objects are\n\t\t\t * converted into can.Map instances.  For example:\n\t\t\t *\n\t\t\t *     var list = new can.List();\n\t\t\t *     list.push({name: \"Justin\"});\n\t\t\t *\n\t\t\t *     var map = list.attr(0);\n\t\t\t *     map.attr(\"name\") //-> \"Justin\"\n\t\t\t *\n\t\t\t * By changing [can.List.Map], you can specify a different type of Map instance to\n\t\t\t * create. For example:\n\t\t\t *\n\t\t\t *     var User = can.Map.extend({\n\t\t\t *       fullName: function(){\n\t\t\t *         return this.attr(\"first\")+\" \"+this.attr(\"last\")\n\t\t\t *       }\n\t\t\t *     });\n\t\t\t *\n\t\t\t *     User.List = can.List.extend({\n\t\t\t *       Map: User\n\t\t\t *     }, {});\n\t\t\t *\n\t\t\t *     var list = new User.List();\n\t\t\t *     list.push({first: \"Justin\", last: \"Meyer\"});\n\t\t\t *\n\t\t\t *     var user = list.attr(0);\n\t\t\t *     user.fullName() //-> \"Justin Meyer\"\n\t\t\t *\n\t\t\t *\n\t\t\t *\n\t\t\t */\n\t\t\tMap: Map\n\t\t\t/**\n\t\t\t * @function can.Map.extend\n\t\t\t *\n\t\t\t * @signature `can.List.extend([name,] [staticProperties,] instanceProperties)`\n\t\t\t *\n\t\t\t * Creates a new extended constructor function. Learn more at [can.Construct.extend].\n\t\t\t *\n\t\t\t * @param {String} [name] If provided, adds the extened List constructor function\n\t\t\t * to the window at the given name.\n\t\t\t *\n\t\t\t * @param {Object} [staticProperties] Properties and methods\n\t\t\t * directly on the constructor function. The most common property to set is [can.List.Map].\n\t\t\t *\n\t\t\t * @param {Object} [instanceProperties] Properties and methods on instances of this list type.\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t *\n\t\t\t */\n\t\t},\n\t\t/**\n\t\t * @prototype\n\t\t */\n\t\t{\n\t\t\tsetup: function (instances, options) {\n\t\t\t\tthis.length = 0;\n\t\t\t\tcan.cid(this, \".map\");\n\t\t\t\tthis._init = 1;\n\t\t\t\tthis._setupComputes();\n\t\t\t\tinstances = instances || [];\n\t\t\t\tvar teardownMapping;\n\n\t\t\t\tif (can.isDeferred(instances)) {\n\t\t\t\t\tthis.replace(instances);\n\t\t\t\t} else {\n\t\t\t\t\tteardownMapping = instances.length && can.Map.helpers.addToMap(instances, this);\n\t\t\t\t\tthis.push.apply(this, can.makeArray(instances || []));\n\t\t\t\t}\n\n\t\t\t\tif (teardownMapping) {\n\t\t\t\t\tteardownMapping();\n\t\t\t\t}\n\n\t\t\t\t// this change needs to be ignored\n\t\t\t\tthis.bind('change', can.proxy(this._changes, this));\n\t\t\t\tcan.simpleExtend(this, options);\n\t\t\t\tdelete this._init;\n\t\t\t},\n\t\t\t_triggerChange: function (attr, how, newVal, oldVal) {\n\n\t\t\t\tMap.prototype._triggerChange.apply(this, arguments);\n\t\t\t\t// `batchTrigger` direct add and remove events...\n\t\t\t\tvar index = +attr;\n\t\t\t\t// Make sure this is not nested and not an expando\n\t\t\t\tif (!~attr.indexOf('.') && !isNaN(index)) {\n\n\t\t\t\t\tif (how === 'add') {\n\t\t\t\t\t\tcan.batch.trigger(this, how, [newVal, index]);\n\t\t\t\t\t\tcan.batch.trigger(this, 'length', [this.length]);\n\t\t\t\t\t} else if (how === 'remove') {\n\t\t\t\t\t\tcan.batch.trigger(this, how, [oldVal, index]);\n\t\t\t\t\t\tcan.batch.trigger(this, 'length', [this.length]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcan.batch.trigger(this, how, [newVal, index]);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t__get: function (attr) {\n\t\t\t\tif (attr) {\n\t\t\t\t\tif (this[attr] && this[attr].isComputed && can.isFunction(this.constructor.prototype[attr])) {\n\t\t\t\t\t\treturn this[attr]();\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this[attr];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t},\n\t\t\t___set: function (attr, val) {\n\t\t\t\tthis[attr] = val;\n\t\t\t\tif (+attr >= this.length) {\n\t\t\t\t\tthis.length = (+attr + 1);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_remove: function(prop, current) {\n\t\t\t\t// if removing an expando property\n\t\t\t\tif(isNaN(+prop)) {\n\t\t\t\t\tdelete this[prop];\n\t\t\t\t\tthis._triggerChange(prop, \"remove\", undefined, current);\n\t\t\t\t} else {\n\t\t\t\t\tthis.splice(prop, 1);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_each: function (callback) {\n\t\t\t\tvar data = this.__get();\n\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\tcallback(data[i], i);\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Returns the serialized form of this list.\n\t\t\t/**\n\t\t\t * @hide\n\t\t\t * Returns the serialized form of this list.\n\t\t\t */\n\t\t\tserialize: function () {\n\t\t\t\treturn Map.helpers.serialize(this, 'serialize', []);\n\t\t\t},\n\t\t\t/**\n\t\t\t * @function can.List.prototype.each each\n\t\t\t * @description Call a function on each element of a List.\n\t\t\t * @signature `list.each( callback(item, index) )`\n\t\t\t *\n\t\t\t * `each` iterates through the Map, calling a function\n\t\t\t * for each element.\n\t\t\t *\n\t\t\t * @param {function(*, Number)} callback the function to call for each element\n\t\t\t * The value and index of each element will be passed as the first and second\n\t\t\t * arguments, respectively, to the callback. If the callback returns false,\n\t\t\t * the loop will stop.\n\t\t\t *\n\t\t\t * @return {can.List} this List, for chaining\n\t\t\t *\n\t\t\t * @body\n\t\t\t * @codestart\n\t\t\t * var i = 0;\n\t\t\t * new can.Map([1, 10, 100]).each(function(element, index) {\n\t\t\t *     i += element;\n\t\t\t * });\n\t\t\t *\n\t\t\t * i; // 111\n\t\t\t *\n\t\t\t * i = 0;\n\t\t\t * new can.Map([1, 10, 100]).each(function(element, index) {\n\t\t\t *     i += element;\n\t\t\t *     if(index >= 1) {\n\t\t\t *         return false;\n\t\t\t *     }\n\t\t\t * });\n\t\t\t *\n\t\t\t * i; // 11\n\t\t\t * @codeend\n\t\t\t */\n\t\t\t//\n\t\t\t/**\n\t\t\t * @function can.List.prototype.splice splice\n\t\t\t * @description Insert and remove elements from a List.\n\t\t\t * @signature `list.splice(index[, howMany[, ...newElements]])`\n\t\t\t * @param {Number} index where to start removing or inserting elements\n\t\t\t *\n\t\t\t * @param {Number} [howMany] the number of elements to remove\n\t\t\t * If _howMany_ is not provided, `splice` will all elements from `index` to the end of the List.\n\t\t\t *\n\t\t\t * @param {*} newElements elements to insert into the List\n\t\t\t *\n\t\t\t * @return {Array} the elements removed by `splice`\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `splice` lets you remove elements from and insert elements into a List.\n\t\t\t *\n\t\t\t * This example demonstrates how to do surgery on a list of numbers:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List([0, 1, 2, 3]);\n\t\t\t *\n\t\t\t * // starting at index 2, remove one element and insert 'Alice' and 'Bob':\n\t\t\t * list.splice(2, 1, 'Alice', 'Bob');\n\t\t\t * list.attr(); // [0, 1, 'Alice', 'Bob', 3]\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * ## Events\n\t\t\t *\n\t\t\t * `splice` causes the List it's called on to emit _change_ events,\n\t\t\t * _add_ events, _remove_ events, and _length_ events. If there are\n\t\t\t * any elements to remove, a _change_ event, a _remove_ event, and a\n\t\t\t * _length_ event will be fired. If there are any elements to insert, a\n\t\t\t * separate _change_ event, an _add_ event, and a separate _length_ event\n\t\t\t * will be fired.\n\t\t\t *\n\t\t\t * This slightly-modified version of the above example should help\n\t\t\t * make it clear how `splice` causes events to be emitted:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List(['a', 'b', 'c', 'd']);\n\t\t\t * list.bind('change', function(ev, attr, how, newVals, oldVals) {\n\t\t\t *     console.log('change: ' + attr + ', ' + how + ', ' + newVals + ', ' + oldVals);\n\t\t\t * });\n\t\t\t * list.bind('add', function(ev, newVals, where) {\n\t\t\t *     console.log('add: ' + newVals + ', ' + where);\n\t\t\t * });\n\t\t\t * list.bind('remove', function(ev, oldVals, where) {\n\t\t\t *     console.log('remove: ' + oldVals + ', ' + where);\n\t\t\t * });\n\t\t\t * list.bind('length', function(ev, length) {\n\t\t\t *     console.log('length: ' + length + ', ' + this.attr());\n\t\t\t * });\n\t\t\t *\n\t\t\t * // starting at index 2, remove one element and insert 'Alice' and 'Bob':\n\t\t\t * list.splice(2, 1, 'Alice', 'Bob'); // change: 2, 'remove', undefined, ['c']\n\t\t\t *                                    // remove: ['c'], 2\n\t\t\t *                                    // length: 5, ['a', 'b', 'Alice', 'Bob', 'd']\n\t\t\t *                                    // change: 2, 'add', ['Alice', 'Bob'], ['c']\n\t\t\t *                                    // add: ['Alice', 'Bob'], 2\n\t\t\t *                                    // length: 5, ['a', 'b', 'Alice', 'Bob', 'd']\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * More information about binding to these events can be found under [can.List.attr attr].\n\t\t\t */\n\t\t\tsplice: function (index, howMany) {\n\t\t\t\tvar args = can.makeArray(arguments),\n\t\t\t\t\ti;\n\n\t\t\t\tfor (i = 2; i < args.length; i++) {\n\t\t\t\t\targs[i] = bubble.set(this, i, this.__type(args[i], i) );\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (howMany === undefined) {\n\t\t\t\t\thowMany = args[1] = this.length - index;\n\t\t\t\t}\n\t\t\t\tvar removed = splice.apply(this, args);\n\n\t\t\t\tif (!spliceRemovesProps) {\n\t\t\t\t\tfor (i = this.length; i < removed.length + this.length; i++) {\n\t\t\t\t\t\tdelete this[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcan.batch.start();\n\t\t\t\tif (howMany > 0) {\n\t\t\t\t\tthis._triggerChange(\"\" + index, \"remove\", undefined, removed);\n\t\t\t\t\tbubble.removeMany(this, removed);\n\t\t\t\t}\n\t\t\t\tif (args.length > 2) {\n\t\t\t\t\tthis._triggerChange(\"\" + index, \"add\", args.slice(2), removed);\n\t\t\t\t}\n\t\t\t\tcan.batch.stop();\n\t\t\t\treturn removed;\n\t\t\t},\n\t\t\t/**\n\t\t\t * @description Get or set elements in a List.\n\t\t\t * @function can.List.prototype.attr attr\n\t\t\t *\n\t\t\t * @signature `list.attr()`\n\t\t\t *\n\t\t\t * Gets an array of all the elements in this `can.List`.\n\t\t\t *\n\t\t\t * @return {Array} An array with all the elements in this List.\n\t\t\t *\n\t\t\t * @signature `list.attr(index)`\n\t\t\t *\n\t\t\t * Reads an element from this `can.List`.\n\t\t\t *\n\t\t\t * @param {Number} index The element to read.\n\t\t\t * @return {*} The value at _index_.\n\t\t\t *\n\t\t\t * @signature `list.attr(index, value)`\n\t\t\t *\n\t\t\t * Assigns _value_ to the index _index_ on this `can.List`, expanding the list if necessary.\n\t\t\t *\n\t\t\t * @param {Number} index The element to set.\n\t\t\t * @param {*} value The value to assign at _index_.\n\t\t\t * @return {can.List} This list, for chaining.\n\t\t\t *\n\t\t\t * @signature `list.attr(elements[, replaceCompletely])`\n\t\t\t *\n\t\t\t * Merges the members of _elements_ into this List, replacing each from the beginning in order. If\n\t\t\t * _elements_ is longer than the current List, the current List will be expanded. If _elements_\n\t\t\t * is shorter than the current List, the extra existing members are not affected (unless\n\t\t\t * _replaceCompletely_ is `true`). To remove elements without replacing them, use `[can.Map::removeAttr removeAttr]`.\n\t\t\t *\n\t\t\t * @param {Array} elements An array of elements to merge in.\n\t\t\t *\n\t\t\t * @param {bool} [replaceCompletely=false] whether to completely replace the elements of List\n\t\t\t * If _replaceCompletely_ is `true` and _elements_ is shorter than the List, the existing\n\t\t\t * extra members of the List will be removed.\n\t\t\t *\n\t\t\t * @return {can.List} This list, for chaining.\n\t\t\t *\n\t\t\t * @body\n\t\t\t *\n\t\t\t *\n\t\t\t * ## Use\n\t\t\t *\n\t\t\t * `attr` gets or sets elements on the `can.List` it's called on. Here's a tour through\n\t\t\t * how all of its forms work:\n\t\t\t *\n\t\t\t *     var people = new can.List(['Alex', 'Bill']);\n\t\t\t *\n\t\t\t *     // set an element:\n\t\t\t *     people.attr(0, 'Adam');\n\t\t\t *\n\t\t\t *     // get an element:\n\t\t\t *     people.attr(0); // 'Adam'\n\t\t\t *     people[0]; // 'Adam'\n\t\t\t *\n\t\t\t *     // get all elements:\n\t\t\t *     people.attr(); // ['Adam', 'Bill']\n\t\t\t *\n\t\t\t *     // extend the array:\n\t\t\t *     people.attr(4, 'Charlie');\n\t\t\t *     people.attr(); // ['Adam', 'Bill', undefined, undefined, 'Charlie']\n\t\t\t *\n\t\t\t *     // merge the elements:\n\t\t\t *     people.attr(['Alice', 'Bob', 'Eve']);\n\t\t\t *     people.attr(); // ['Alice', 'Bob', 'Eve', undefined, 'Charlie']\n\t\t\t *\n\t\t\t * ## Deep properties\n\t\t\t *\n\t\t\t * `attr` can also set and read deep properties. All you have to do is specify\n\t\t\t * the property name as you normally would if you weren't using `attr`.\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var people = new can.List([{name: 'Alex'}, {name: 'Bob'}]);\n\t\t\t *\n\t\t\t * // set a property:\n\t\t\t * people.attr('0.name', 'Alice');\n\t\t\t *\n\t\t\t * // get a property:\n\t\t\t * people.attr('0.name');  // 'Alice'\n\t\t\t * people[0].attr('name'); // 'Alice'\n\t\t\t *\n\t\t\t * // get all properties:\n\t\t\t * people.attr(); // [{name: 'Alice'}, {name: 'Bob'}]\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * The discussion of deep properties under `[can.Map.prototype.attr]` may also\n\t\t\t * be enlightening.\n\t\t\t *\n\t\t\t * ## Events\n\t\t\t *\n\t\t\t * `can.List`s emit five types of events in response to changes. They are:\n\t\t\t *\n\t\t\t * - the _change_ event fires on every change to a List.\n\t\t\t * - the _set_ event is fired when an element is set.\n\t\t\t * - the _add_ event is fired when an element is added to the List.\n\t\t\t * - the _remove_ event is fired when an element is removed from the List.\n\t\t\t * - the _length_ event is fired when the length of the List changes.\n\t\t\t *\n\t\t\t * ### The _change_ event\n\t\t\t *\n\t\t\t * The first event that is fired is the _change_ event. The _change_ event is useful\n\t\t\t * if you want to react to all changes on an List.\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List([]);\n\t\t\t * list.bind('change', function(ev, index, how, newVal, oldVal) {\n\t\t\t *     console.log('Something changed.');\n\t\t\t * });\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * The parameters of the event handler for the _change_ event are:\n\t\t\t *\n\t\t\t * - _ev_ The event object.\n\t\t\t * - _index_ Where the change took place.\n\t\t\t * - _how_ Whether elements were added, removed, or set.\n\t\t\t * Possible values are `'add'`, `'remove'`, or `'set'`.\n\t\t\t * - _newVal_ The elements affected after the change\n\t\t\t *  _newVal_ will be a single value when an index is set, an Array when elements\n\t\t\t * were added, and `undefined` if elements were removed.\n\t\t\t * - _oldVal_ The elements affected before the change.\n\t\t\t * _newVal_ will be a single value when an index is set, an Array when elements\n\t\t\t * were removed, and `undefined` if elements were added.\n\t\t\t *\n\t\t\t * Here is a concrete tour through the _change_ event handler's arguments:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List();\n\t\t\t * list.bind('change', function(ev, index, how, newVal, oldVal) {\n\t\t\t *     console.log(ev + ', ' + index + ', ' + how + ', ' + newVal + ', ' + oldVal);\n\t\t\t * });\n\t\t\t *\n\t\t\t * list.attr(['Alexis', 'Bill']); // [object Object], 0, add, ['Alexis', 'Bill'], undefined\n\t\t\t * list.attr(2, 'Eve');           // [object Object], 2, add, Eve, undefined\n\t\t\t * list.attr(0, 'Adam');          // [object Object], 0, set, Adam, Alexis\n\t\t\t * list.attr(['Alice', 'Bob']);   // [object Object], 0, set, Alice, Adam\n\t\t\t *                                // [object Object], 1, set, Bob, Bill\n\t\t\t * list.removeAttr(1);            // [object Object], 1, remove, undefined, Bob\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * ### The _set_ event\n\t\t\t *\n\t\t\t * _set_ events are fired when an element at an index that already exists in the List is\n\t\t\t * modified. Actions can cause _set_ events to fire never also cause _length_ events\n\t\t\t * to fire (although some functions, such as `[can.List.prototype.splice splice]`\n\t\t\t * may cause unrelated sets of events to fire after being batched).\n\t\t\t *\n\t\t\t * The parameters of the event handler for the _set_ event are:\n\t\t\t *\n\t\t\t * - _ev_ The event object.\n\t\t\t * - _newVal_ The new value of the element.\n\t\t\t * - _index_ where the set took place.\n\t\t\t *\n\t\t\t * Here is a concrete tour through the _set_ event handler's arguments:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List();\n\t\t\t * list.bind('set', function(ev, newVal, index) {\n\t\t\t *     console.log(newVal + ', ' + index);\n\t\t\t * });\n\t\t\t *\n\t\t\t * list.attr(['Alexis', 'Bill']);\n\t\t\t * list.attr(2, 'Eve');\n\t\t\t * list.attr(0, 'Adam');          // Adam, 0\n\t\t\t * list.attr(['Alice', 'Bob']);   // Alice, 0\n\t\t\t *                                // Bob, 1\n\t\t\t * list.removeAttr(1);\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * ### The _add_ event\n\t\t\t *\n\t\t\t * _add_ events are fired when elements are added or inserted\n\t\t\t * into the List.\n\t\t\t *\n\t\t\t * The parameters of the event handler for the _add_ event are:\n\t\t\t *\n\t\t\t * - _ev_ The event object.\n\t\t\t * - _newElements_ The new elements.\n\t\t\t * If more than one element is added, _newElements_ will be an array.\n\t\t\t * Otherwise, it is simply the new element itself.\n\t\t\t * - _index_ Where the add or insert took place.\n\t\t\t *\n\t\t\t * Here is a concrete tour through the _add_ event handler's arguments:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List();\n\t\t\t * list.bind('add', function(ev, newElements, index) {\n\t\t\t *     console.log(newElements + ', ' + index);\n\t\t\t * });\n\t\t\t *\n\t\t\t * list.attr(['Alexis', 'Bill']); // ['Alexis', 'Bill'], 0\n\t\t\t * list.attr(2, 'Eve');           // Eve, 2\n\t\t\t * list.attr(0, 'Adam');\n\t\t\t * list.attr(['Alice', 'Bob']);\n\t\t\t *\n\t\t\t * list.removeAttr(1);\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * ### The _remove_ event\n\t\t\t *\n\t\t\t * _remove_ events are fired when elements are removed from the list.\n\t\t\t *\n\t\t\t * The parameters of the event handler for the _remove_ event are:\n\t\t\t *\n\t\t\t * - _ev_ The event object.\n\t\t\t * - _removedElements_ The removed elements.\n\t\t\t * If more than one element was removed, _removedElements_ will be an array.\n\t\t\t * Otherwise, it is simply the element itself.\n\t\t\t * - _index_ Where the removal took place.\n\t\t\t *\n\t\t\t * Here is a concrete tour through the _remove_ event handler's arguments:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List();\n\t\t\t * list.bind('remove', function(ev, removedElements, index) {\n\t\t\t *     console.log(removedElements + ', ' + index);\n\t\t\t * });\n\t\t\t *\n\t\t\t * list.attr(['Alexis', 'Bill']);\n\t\t\t * list.attr(2, 'Eve');\n\t\t\t * list.attr(0, 'Adam');\n\t\t\t * list.attr(['Alice', 'Bob']);\n\t\t\t *\n\t\t\t * list.removeAttr(1);            // Bob, 1\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * ### The _length_ event\n\t\t\t *\n\t\t\t * _length_ events are fired whenever the list changes.\n\t\t\t *\n\t\t\t * The parameters of the event handler for the _length_ event are:\n\t\t\t *\n\t\t\t * - _ev_ The event object.\n\t\t\t * - _length_ The current length of the list.\n\t\t\t * If events were batched when the _length_ event was triggered, _length_\n\t\t\t * will have the length of the list when `stopBatch` was called. Because\n\t\t\t * of this, you may recieve multiple _length_ events with the same\n\t\t\t * _length_ parameter.\n\t\t\t *\n\t\t\t * Here is a concrete tour through the _length_ event handler's arguments:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List();\n\t\t\t * list.bind('length', function(ev, length) {\n\t\t\t *     console.log(length);\n\t\t\t * });\n\t\t\t *\n\t\t\t * list.attr(['Alexis', 'Bill']); // 2\n\t\t\t * list.attr(2, 'Eve');           // 3\n\t\t\t * list.attr(0, 'Adam');\n\t\t\t * list.attr(['Alice', 'Bob']);\n\t\t\t *\n\t\t\t * list.removeAttr(1);            // 2\n\t\t\t * @codeend\n\t\t\t */\n\t\t\t_attrs: function (items, remove) {\n\t\t\t\tif (items === undefined) {\n\t\t\t\t\treturn Map.helpers.serialize(this, 'attr', []);\n\t\t\t\t}\n\n\t\t\t\t// Create a copy.\n\t\t\t\titems = can.makeArray(items);\n\n\t\t\t\tcan.batch.start();\n\t\t\t\tthis._updateAttrs(items, remove);\n\t\t\t\tcan.batch.stop();\n\t\t\t},\n\n\t\t\t_updateAttrs: function (items, remove) {\n\t\t\t\tvar len = Math.min(items.length, this.length);\n\n\t\t\t\tfor (var prop = 0; prop < len; prop++) {\n\t\t\t\t\tvar curVal = this[prop],\n\t\t\t\t\t\tnewVal = items[prop];\n\n\t\t\t\t\tif (Map.helpers.isObservable(curVal) && Map.helpers.canMakeObserve(newVal)) {\n\t\t\t\t\t\tcurVal.attr(newVal, remove);\n\t\t\t\t\t\t//changed from a coercion to an explicit\n\t\t\t\t\t} else if (curVal !== newVal) {\n\t\t\t\t\t\tthis._set(prop, newVal);\n\t\t\t\t\t} else {\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (items.length > this.length) {\n\t\t\t\t\t// Add in the remaining props.\n\t\t\t\t\tthis.push.apply(this, items.slice(this.length));\n\t\t\t\t} else if (items.length < this.length && remove) {\n\t\t\t\t\tthis.splice(items.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\n\t\t// Converts to an `array` of arguments.\n\t\tgetArgs = function (args) {\n\t\t\treturn args[0] && can.isArray(args[0]) ?\n\t\t\t\targs[0] :\n\t\t\t\tcan.makeArray(args);\n\t\t};\n\t// Create `push`, `pop`, `shift`, and `unshift`\n\tcan.each({\n\t\t\t/**\n\t\t\t * @function can.List.prototype.push push\n\t\t\t * @description Add elements to the end of a list.\n\t\t\t * @signature `list.push(...elements)`\n\t\t\t *\n\t\t\t * `push` adds elements onto the end of a List.]\n\t\t\t *\n\t\t\t * @param {*} elements the elements to add to the List\n\t\t\t *\n\t\t\t * @return {Number} the new length of the List\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `push` is fairly straightforward:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List(['Alice']);\n\t\t\t *\n\t\t\t * list.push('Bob', 'Eve');\n\t\t\t * list.attr(); // ['Alice', 'Bob', 'Eve']\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * If you have an array you want to concatenate to the end\n\t\t\t * of the List, you can use `apply`:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var names = ['Bob', 'Eve'],\n\t\t\t *     list = new can.List(['Alice']);\n\t\t\t *\n\t\t\t * list.push.apply(list, names);\n\t\t\t * list.attr(); // ['Alice', 'Bob', 'Eve']\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * ## Events\n\t\t\t *\n\t\t\t * `push` causes _change_, _add_, and _length_ events to be fired.\n\t\t\t *\n\t\t\t * ## See also\n\t\t\t *\n\t\t\t * `push` has a counterpart in [can.List::pop pop], or you may be\n\t\t\t * looking for [can.List::unshift unshift] and its counterpart [can.List::shift shift].\n\t\t\t */\n\t\t\tpush: \"length\",\n\t\t\t/**\n\t\t\t * @function can.List.prototype.unshift unshift\n\t\t\t * @description Add elements to the beginning of a List.\n\t\t\t * @signature `list.unshift(...elements)`\n\t\t\t *\n\t\t\t * `unshift` adds elements onto the beginning of a List.\n\t\t\t *\n\t\t\t * @param {*} elements the elements to add to the List\n\t\t\t *\n\t\t\t * @return {Number} the new length of the List\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `unshift` adds elements to the front of the list in bulk in the order specified:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List(['Alice']);\n\t\t\t *\n\t\t\t * list.unshift('Bob', 'Eve');\n\t\t\t * list.attr(); // ['Bob', 'Eve', 'Alice']\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * If you have an array you want to concatenate to the beginning\n\t\t\t * of the List, you can use `apply`:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var names = ['Bob', 'Eve'],\n\t\t\t *     list = new can.List(['Alice']);\n\t\t\t *\n\t\t\t * list.push.apply(list, names);\n\t\t\t * list.attr(); // ['Bob', 'Eve', 'Alice']\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * ## Events\n\t\t\t *\n\t\t\t * `unshift` causes _change_, _add_, and _length_ events to be fired.\n\t\t\t *\n\t\t\t * ## See also\n\t\t\t *\n\t\t\t * `unshift` has a counterpart in [can.List::shift shift], or you may be\n\t\t\t * looking for [can.List::push push] and its counterpart [can.List::pop pop].\n\t\t\t */\n\t\t\tunshift: 0\n\t\t},\n\t\t// Adds a method\n\t\t// `name` - The method name.\n\t\t// `where` - Where items in the `array` should be added.\n\t\tfunction (where, name) {\n\t\t\tvar orig = [][name];\n\t\t\tlist.prototype[name] = function () {\n\t\t\t\t// Get the items being added.\n\t\t\t\tvar args = [],\n\t\t\t\t\t// Where we are going to add items.\n\t\t\t\t\tlen = where ? this.length : 0,\n\t\t\t\t\ti = arguments.length,\n\t\t\t\t\tres, val;\n\n\t\t\t\t// Go through and convert anything to an `map` that needs to be converted.\n\t\t\t\twhile (i--) {\n\t\t\t\t\tval = arguments[i];\n\t\t\t\t\targs[i] = bubble.set(this, i, this.__type(val, i) );\n\t\t\t\t}\n\n\t\t\t\t// Call the original method.\n\t\t\t\tres = orig.apply(this, args);\n\n\t\t\t\tif (!this.comparator || args.length) {\n\n\t\t\t\t\tthis._triggerChange(\"\" + len, \"add\", args, undefined);\n\t\t\t\t}\n\n\t\t\t\treturn res;\n\t\t\t};\n\t\t});\n\n\tcan.each({\n\t\t\t/**\n\t\t\t * @function can.List.prototype.pop pop\n\t\t\t * @description Remove an element from the end of a List.\n\t\t\t * @signature `list.pop()`\n\t\t\t *\n\t\t\t * `push` removes an element from the end of a List.\n\t\t\t *\n\t\t\t * @return {*} the element just popped off the List, or `undefined` if the List was empty\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `pop` is the opposite action from `[can.List.push push]`:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List(['Alice']);\n\t\t\t *\n\t\t\t * list.push('Bob', 'Eve');\n\t\t\t * list.attr(); // ['Alice', 'Bob', 'Eve']\n\t\t\t *\n\t\t\t * list.pop(); // 'Eve'\n\t\t\t * list.pop(); // 'Bob'\n\t\t\t * list.pop(); // 'Alice'\n\t\t\t * list.pop(); // undefined\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * ## Events\n\t\t\t *\n\t\t\t * `pop` causes _change_, _remove_, and _length_ events to be fired if the List is not empty\n\t\t\t * when it is called.\n\t\t\t *\n\t\t\t * ## See also\n\t\t\t *\n\t\t\t * `pop` has its counterpart in [can.List::push push], or you may be\n\t\t\t * looking for [can.List::unshift unshift] and its counterpart [can.List::shift shift].\n\t\t\t */\n\t\t\tpop: \"length\",\n\t\t\t/**\n\t\t\t * @function can.List.prototype.shift shift\n\t\t\t * @description Remove en element from the front of a list.\n\t\t\t * @signature `list.shift()`\n\t\t\t *\n\t\t\t * `shift` removes an element from the beginning of a List.\n\t\t\t *\n\t\t\t * @return {*} the element just shifted off the List, or `undefined` if the List is empty\n\t\t\t *\n\t\t\t * @body\n\t\t\t * `shift` is the opposite action from `[can.List::unshift unshift]`:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * var list = new can.List(['Alice']);\n\t\t\t *\n\t\t\t * list.unshift('Bob', 'Eve');\n\t\t\t * list.attr(); // ['Bob', 'Eve', 'Alice']\n\t\t\t *\n\t\t\t * list.shift(); // 'Bob'\n\t\t\t * list.shift(); // 'Eve'\n\t\t\t * list.shift(); // 'Alice'\n\t\t\t * list.shift(); // undefined\n\t\t\t * @codeend\n\t\t\t *\n\t\t\t * ## Events\n\t\t\t *\n\t\t\t * `pop` causes _change_, _remove_, and _length_ events to be fired if the List is not empty\n\t\t\t * when it is called.\n\t\t\t *\n\t\t\t * ## See also\n\t\t\t *\n\t\t\t * `shift` has a counterpart in [can.List::unshift unshift], or you may be\n\t\t\t * looking for [can.List::push push] and its counterpart [can.List::pop pop].\n\t\t\t */\n\t\t\tshift: 0\n\t\t},\n\t\t// Creates a `remove` type method\n\t\tfunction (where, name) {\n\t\t\tlist.prototype[name] = function () {\n\n\t\t\t\tvar args = getArgs(arguments),\n\t\t\t\t\tlen = where && this.length ? this.length - 1 : 0;\n\n\t\t\t\tvar res = [][name].apply(this, args);\n\n\t\t\t\t// Create a change where the args are\n\t\t\t\t// `len` - Where these items were removed.\n\t\t\t\t// `remove` - Items removed.\n\t\t\t\t// `undefined` - The new values (there are none).\n\t\t\t\t// `res` - The old, removed values (should these be unbound).\n\t\t\t\tthis._triggerChange(\"\" + len, \"remove\", undefined, [res]);\n\n\t\t\t\tif (res && res.unbind) {\n\t\t\t\t\tbubble.remove(this, res);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn res;\n\t\t\t};\n\t\t});\n\n\tcan.extend(list.prototype, {\n\t\t/**\n\t\t * @function can.List.prototype.indexOf indexOf\n\t\t * @description Look for an item in a List.\n\t\t * @signature `list.indexOf(item)`\n\t\t *\n\t\t * `indexOf` finds the position of a given item in the List.\n\t\t *\n\t\t * @param {*} item the item to find\n\t\t *\n\t\t * @return {Number} the position of the item in the List, or -1 if the item is not found.\n\t\t *\n\t\t * @body\n\t\t * @codestart\n\t\t * var list = new can.List(['Alice', 'Bob', 'Eve']);\n\t\t * list.indexOf('Alice');   // 0\n\t\t * list.indexOf('Charlie'); // -1\n\t\t * @codeend\n\t\t *\n\t\t * It is trivial to make a `contains`-type function using `indexOf`:\n\t\t *\n\t\t * @codestart\n\t\t * function(list, item) {\n\t\t *     return list.indexOf(item) >= 0;\n\t\t * }\n\t\t * @codeend\n\t\t */\n\t\tindexOf: function (item, fromIndex) {\n\t\t\tthis.attr('length');\n\t\t\treturn can.inArray(item, this, fromIndex);\n\t\t},\n\n\t\t/**\n\t\t * @function can.List.prototype.join join\n\t\t * @description Join a List's elements into a string.\n\t\t * @signature `list.join(separator)`\n\t\t *\n\t\t * `join` turns a List into a string by inserting _separator_ between the string representations\n\t\t * of all the elements of the List.\n\t\t *\n\t\t * @param {String} separator the string to seperate elements with\n\t\t *\n\t\t * @return {String} the joined string\n\t\t *\n\t\t * @body\n\t\t * @codestart\n\t\t * var list = new can.List(['Alice', 'Bob', 'Eve']);\n\t\t * list.join(', '); // 'Alice, Bob, Eve'\n\t\t *\n\t\t * var beatles = new can.List(['John', 'Paul', 'Ringo', 'George']);\n\t\t * beatles.join('&'); // 'John&Paul&Ringo&George'\n\t\t * @codeend\n\t\t */\n\t\tjoin: function () {\n\t\t\treturn [].join.apply(this.attr(), arguments);\n\t\t},\n\n\t\t/**\n\t\t * @function can.List.prototype.reverse reverse\n\t\t * @description Reverse the order of a List.\n\t\t * @signature `list.reverse()`\n\t\t *\n\t\t * `reverse` reverses the elements of the List in place.\n\t\t *\n\t\t * @return {can.List} the List, for chaining\n\t\t *\n\t\t * @body\n\t\t * @codestart\n\t\t * var list = new can.List(['Alice', 'Bob', 'Eve']);\n\t\t * var reversedList = list.reverse();\n\t\t *\n\t\t * reversedList.attr(); // ['Eve', 'Bob', 'Alice'];\n\t\t * list === reversedList; // true\n\t\t * @codeend\n\t\t */\n\t\treverse: function() {\n\t\t\tvar list = can.makeArray([].reverse.call(this));\n\t\t\tthis.replace(list);\n\t\t},\n\n\t\t/**\n\t\t * @function can.List.prototype.slice slice\n\t\t * @description Make a copy of a part of a List.\n\t\t * @signature `list.slice([start[, end]])`\n\t\t *\n\t\t * `slice` creates a copy of a portion of the List.\n\t\t *\n\t\t * @param {Number} [start=0] the index to start copying from\n\t\t *\n\t\t * @param {Number} [end] the first index not to include in the copy\n\t\t * If _end_ is not supplied, `slice` will copy until the end of the list.\n\t\t *\n\t\t * @return {can.List} a new `can.List` with the extracted elements\n\t\t *\n\t\t * @body\n\t\t * @codestart\n\t\t * var list = new can.List(['Alice', 'Bob', 'Charlie', 'Daniel', 'Eve']);\n\t\t * var newList = list.slice(1, 4);\n\t\t * newList.attr(); // ['Bob', 'Charlie', 'Daniel']\n\t\t * @codeend\n\t\t *\n\t\t * `slice` is the simplest way to copy a List:\n\t\t *\n\t\t * @codestart\n\t\t * var list = new can.List(['Alice', 'Bob', 'Eve']);\n\t\t * var copy = list.slice();\n\t\t *\n\t\t * copy.attr();   // ['Alice', 'Bob', 'Eve']\n\t\t * list === copy; // false\n\t\t * @codeend\n\t\t */\n\t\tslice: function () {\n\t\t\tvar temp = Array.prototype.slice.apply(this, arguments);\n\t\t\treturn new this.constructor(temp);\n\t\t},\n\n\t\t/**\n\t\t * @function can.List.prototype.concat concat\n\t\t * @description Merge many collections together into a List.\n\t\t * @signature `list.concat(...args)`\n\t\t * @param {Array|can.List|*} args Any number of arrays, Lists, or values to add in\n\t\t * For each parameter given, if it is an Array or a List, each of its elements will be added to\n\t\t * the end of the concatenated List. Otherwise, the parameter itself will be added.\n\t\t *\n\t\t * @body\n\t\t * `concat` makes a new List with the elements of the List followed by the elements of the parameters.\n\t\t *\n\t\t * @codestart\n\t\t * var list = new can.List();\n\t\t * var newList = list.concat(\n\t\t *     'Alice',\n\t\t *     ['Bob', 'Charlie']),\n\t\t *     new can.List(['Daniel', 'Eve']),\n\t\t *     {f: 'Francis'}\n\t\t * );\n\t\t * newList.attr(); // ['Alice', 'Bob', 'Charlie', 'Daniel', 'Eve', {f: 'Francis'}]\n\t\t * @codeend\n\t\t */\n\t\tconcat: function () {\n\t\t\tvar args = [];\n\t\t\tcan.each(can.makeArray(arguments), function (arg, i) {\n\t\t\t\targs[i] = arg instanceof can.List ? arg.serialize() : arg;\n\t\t\t});\n\t\t\treturn new this.constructor(Array.prototype.concat.apply(this.serialize(), args));\n\t\t},\n\n\t\t/**\n\t\t * @function can.List.prototype.forEach forEach\n\t\t * @description Call a function for each element of a List.\n\t\t * @signature `list.forEach(callback[, thisArg])`\n\t\t * @param {function(element, index, list)} callback a function to call with each element of the List\n\t\t * The three parameters that _callback_ gets passed are _element_, the element at _index_, _index_ the\n\t\t * current element of the list, and _list_ the List the elements are coming from.\n\t\t * @param {Object} [thisArg] the object to use as `this` inside the callback\n\t\t *\n\t\t * @body\n\t\t * `forEach` calls a callback for each element in the List.\n\t\t *\n\t\t * @codestart\n\t\t * var list = new can.List([1, 2, 3]);\n\t\t * list.forEach(function(element, index, list) {\n\t\t *     list.attr(index, element * element);\n\t\t * });\n\t\t * list.attr(); // [1, 4, 9]\n\t\t * @codeend\n\t\t */\n\t\tforEach: function (cb, thisarg) {\n\t\t\treturn can.each(this, cb, thisarg || this);\n\t\t},\n\n\t\t/**\n\t\t * @function can.List.prototype.replace replace\n\t\t * @description Replace all the elements of a List.\n\t\t * @signature `list.replace(collection)`\n\t\t * @param {Array|can.List|can.Deferred} collection the collection of new elements to use\n\t\t * If a [can.Deferred] is passed, it must resolve to an `Array` or `can.List`.\n\t\t * The elements of the list are not actually removed until the Deferred resolves.\n\t\t *\n\t\t * @body\n\t\t * `replace` replaces all the elements of this List with new ones.\n\t\t *\n\t\t * `replace` is especially useful when `can.List`s are live-bound into `[can.Control]`s,\n\t\t * and you intend to populate them with the results of a `[can.Model]` call:\n\t\t *\n\t\t * @codestart\n\t\t * can.Control({\n\t\t *     init: function() {\n\t\t *         this.list = new Todo.List();\n\t\t *         // live-bind the list into the DOM\n\t\t *         this.element.html(can.view('list.mustache', this.list));\n\t\t *         // when this AJAX call returns, the live-bound DOM will be updated\n\t\t *         this.list.replace(Todo.findAll());\n\t\t *     }\n\t\t * });\n\t\t * @codeend\n\t\t *\n\t\t * Learn more about [can.Model.List making Lists of models].\n\t\t *\n\t\t * ## Events\n\t\t *\n\t\t * A major difference between `replace` and `attr(newElements, true)` is that `replace` always emits\n\t\t * an _add_ event and a _remove_ event, whereas `attr` will cause _set_ events along with an _add_ or _remove_\n\t\t * event if needed. Corresponding _change_ and _length_ events will be fired as well.\n\t\t *\n\t\t * The differences in the events fired by `attr` and `replace` are demonstrated concretely by this example:\n\t\t * @codestart\n\t\t * var attrList = new can.List(['Alexis', 'Bill']);\n\t\t * attrList.bind('change', function(ev, index, how, newVals, oldVals) {\n\t\t *     console.log(index + ', ' + how + ', ' + newVals + ', ' + oldVals);\n\t\t * });\n\t\t *\n\t\t * var replaceList = new can.List(['Alexis', 'Bill']);\n\t\t * replaceList.bind('change', function(ev, index, how, newVals, oldVals) {\n\t\t *     console.log(index + ', ' + how + ', ' + newVals + ', ' + oldVals);\n\t\t * });\n\t\t *\n\t\t * attrList.attr(['Adam', 'Ben'], true);         // 0, set, Adam, Alexis\n\t\t *                                               // 1, set, Ben, Bill\n\t\t * replaceList.replace(['Adam', 'Ben']);         // 0, remove, undefined, ['Alexis', 'Bill']\n\t\t *                                               // 0, add, undefined, ['Adam', 'Ben']\n\t\t *\n\t\t * attrList.attr(['Amber'], true);               // 0, set, Amber, Adam\n\t\t *                                               // 1, remove, undefined, Ben\n\t\t * replaceList.replace(['Amber']);               // 0, remove, undefined, ['Adam', 'Ben']\n\t\t *                                               // 0, add, Amber, ['Adam', 'Ben']\n\t\t *\n\t\t * attrList.attr(['Alice', 'Bob', 'Eve'], true); // 0, set, Alice, Amber\n\t\t *                                               // 1, add, ['Bob', 'Eve'], undefined\n\t\t * replaceList.replace(['Alice', 'Bob', 'Eve']); // 0, remove, undefined, Amber\n\t\t *                                               // 0, add, ['Alice', 'Bob', 'Eve'], Amber\n\t\t * @codeend\n\t\t */\n\t\treplace: function (newList) {\n\t\t\tif (can.isDeferred(newList)) {\n\t\t\t\tnewList.then(can.proxy(this.replace, this));\n\t\t\t} else {\n\t\t\t\tthis.splice.apply(this, [0, this.length].concat(can.makeArray(newList || [])));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t},\n\t\tfilter: function (callback, thisArg) {\n\t\t\tvar filteredList = new can.List(),\n\t\t\t\tself = this,\n\t\t\t\tfiltered;\n\t\t\tthis.each(function(item, index, list){\n\t\t\t\tfiltered = callback.call( thisArg | self, item, index, self);\n\t\t\t\tif(filtered){\n\t\t\t\t\tfilteredList.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn filteredList;\n\t\t}\n\t});\n\tcan.List = Map.List = list;\n\treturn can.List;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/list\";\ndefine([\"can/util/library\", \"can/map\", \"can/map/bubble\"], function(can, Map, bubble) {\n  var splice = [].splice,\n      spliceRemovesProps = (function() {\n        var obj = {\n          0: \"a\",\n          length: 1\n        };\n        splice.call(obj, 0, 1);\n        return !obj[0];\n      })();\n  var list = Map.extend({Map: Map}, {\n    setup: function(instances, options) {\n      this.length = 0;\n      can.cid(this, \".map\");\n      this._init = 1;\n      this._setupComputes();\n      instances = instances || [];\n      var teardownMapping;\n      if (can.isDeferred(instances)) {\n        this.replace(instances);\n      } else {\n        teardownMapping = instances.length && can.Map.helpers.addToMap(instances, this);\n        this.push.apply(this, can.makeArray(instances || []));\n      }\n      if (teardownMapping) {\n        teardownMapping();\n      }\n      this.bind('change', can.proxy(this._changes, this));\n      can.simpleExtend(this, options);\n      delete this._init;\n    },\n    _triggerChange: function(attr, how, newVal, oldVal) {\n      Map.prototype._triggerChange.apply(this, arguments);\n      var index = +attr;\n      if (!~attr.indexOf('.') && !isNaN(index)) {\n        if (how === 'add') {\n          can.batch.trigger(this, how, [newVal, index]);\n          can.batch.trigger(this, 'length', [this.length]);\n        } else if (how === 'remove') {\n          can.batch.trigger(this, how, [oldVal, index]);\n          can.batch.trigger(this, 'length', [this.length]);\n        } else {\n          can.batch.trigger(this, how, [newVal, index]);\n        }\n      }\n    },\n    __get: function(attr) {\n      if (attr) {\n        if (this[attr] && this[attr].isComputed && can.isFunction(this.constructor.prototype[attr])) {\n          return this[attr]();\n        } else {\n          return this[attr];\n        }\n      } else {\n        return this;\n      }\n    },\n    ___set: function(attr, val) {\n      this[attr] = val;\n      if (+attr >= this.length) {\n        this.length = (+attr + 1);\n      }\n    },\n    _remove: function(prop, current) {\n      if (isNaN(+prop)) {\n        delete this[prop];\n        this._triggerChange(prop, \"remove\", undefined, current);\n      } else {\n        this.splice(prop, 1);\n      }\n    },\n    _each: function(callback) {\n      var data = this.__get();\n      for (var i = 0; i < data.length; i++) {\n        callback(data[i], i);\n      }\n    },\n    serialize: function() {\n      return Map.helpers.serialize(this, 'serialize', []);\n    },\n    splice: function(index, howMany) {\n      var args = can.makeArray(arguments),\n          i;\n      for (i = 2; i < args.length; i++) {\n        args[i] = bubble.set(this, i, this.__type(args[i], i));\n      }\n      if (howMany === undefined) {\n        howMany = args[1] = this.length - index;\n      }\n      var removed = splice.apply(this, args);\n      if (!spliceRemovesProps) {\n        for (i = this.length; i < removed.length + this.length; i++) {\n          delete this[i];\n        }\n      }\n      can.batch.start();\n      if (howMany > 0) {\n        this._triggerChange(\"\" + index, \"remove\", undefined, removed);\n        bubble.removeMany(this, removed);\n      }\n      if (args.length > 2) {\n        this._triggerChange(\"\" + index, \"add\", args.slice(2), removed);\n      }\n      can.batch.stop();\n      return removed;\n    },\n    _attrs: function(items, remove) {\n      if (items === undefined) {\n        return Map.helpers.serialize(this, 'attr', []);\n      }\n      items = can.makeArray(items);\n      can.batch.start();\n      this._updateAttrs(items, remove);\n      can.batch.stop();\n    },\n    _updateAttrs: function(items, remove) {\n      var len = Math.min(items.length, this.length);\n      for (var prop = 0; prop < len; prop++) {\n        var curVal = this[prop],\n            newVal = items[prop];\n        if (Map.helpers.isObservable(curVal) && Map.helpers.canMakeObserve(newVal)) {\n          curVal.attr(newVal, remove);\n        } else if (curVal !== newVal) {\n          this._set(prop, newVal);\n        } else {}\n      }\n      if (items.length > this.length) {\n        this.push.apply(this, items.slice(this.length));\n      } else if (items.length < this.length && remove) {\n        this.splice(items.length);\n      }\n    }\n  }),\n      getArgs = function(args) {\n        return args[0] && can.isArray(args[0]) ? args[0] : can.makeArray(args);\n      };\n  can.each({\n    push: \"length\",\n    unshift: 0\n  }, function(where, name) {\n    var orig = [][name];\n    list.prototype[name] = function() {\n      var args = [],\n          len = where ? this.length : 0,\n          i = arguments.length,\n          res,\n          val;\n      while (i--) {\n        val = arguments[i];\n        args[i] = bubble.set(this, i, this.__type(val, i));\n      }\n      res = orig.apply(this, args);\n      if (!this.comparator || args.length) {\n        this._triggerChange(\"\" + len, \"add\", args, undefined);\n      }\n      return res;\n    };\n  });\n  can.each({\n    pop: \"length\",\n    shift: 0\n  }, function(where, name) {\n    list.prototype[name] = function() {\n      var args = getArgs(arguments),\n          len = where && this.length ? this.length - 1 : 0;\n      var res = [][name].apply(this, args);\n      this._triggerChange(\"\" + len, \"remove\", undefined, [res]);\n      if (res && res.unbind) {\n        bubble.remove(this, res);\n      }\n      return res;\n    };\n  });\n  can.extend(list.prototype, {\n    indexOf: function(item, fromIndex) {\n      this.attr('length');\n      return can.inArray(item, this, fromIndex);\n    },\n    join: function() {\n      return [].join.apply(this.attr(), arguments);\n    },\n    reverse: function() {\n      var list = can.makeArray([].reverse.call(this));\n      this.replace(list);\n    },\n    slice: function() {\n      var temp = Array.prototype.slice.apply(this, arguments);\n      return new this.constructor(temp);\n    },\n    concat: function() {\n      var args = [];\n      can.each(can.makeArray(arguments), function(arg, i) {\n        args[i] = arg instanceof can.List ? arg.serialize() : arg;\n      });\n      return new this.constructor(Array.prototype.concat.apply(this.serialize(), args));\n    },\n    forEach: function(cb, thisarg) {\n      return can.each(this, cb, thisarg || this);\n    },\n    replace: function(newList) {\n      if (can.isDeferred(newList)) {\n        newList.then(can.proxy(this.replace, this));\n      } else {\n        this.splice.apply(this, [0, this.length].concat(can.makeArray(newList || [])));\n      }\n      return this;\n    },\n    filter: function(callback, thisArg) {\n      var filteredList = new can.List(),\n          self = this,\n          filtered;\n      this.each(function(item, index, list) {\n        filtered = callback.call(thisArg | self, item, index, self);\n        if (filtered) {\n          filteredList.push(item);\n        }\n      });\n      return filteredList;\n    }\n  });\n  can.List = Map.List = list;\n  return can.List;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/map\", \"can/list\", \"can/util/string/deparam\"], function (can) {\n\n\t// ## route.js\n\t// `can.route`\n\t// _Helps manage browser history (and client state) by synchronizing the\n\t// `window.location.hash` with a `can.Map`._\n\t//\n\t// Helper methods used for matching routes.\n\tvar\n\t// `RegExp` used to match route variables of the type ':name'.\n\t// Any word character or a period is matched.\n\tmatcher = /\\:([\\w\\.]+)/g,\n\t\t// Regular expression for identifying &amp;key=value lists.\n\t\tparamsMatcher = /^(?:&[^=]+=[^&]*)+/,\n\t\t// Converts a JS Object into a list of parameters that can be\n\t\t// inserted into an html element tag.\n\t\tmakeProps = function (props) {\n\t\t\tvar tags = [];\n\t\t\tcan.each(props, function (val, name) {\n\t\t\t\ttags.push((name === 'className' ? 'class' : name) + '=\"' +\n\t\t\t\t\t(name === \"href\" ? val : can.esc(val)) + '\"');\n\t\t\t});\n\t\t\treturn tags.join(\" \");\n\t\t},\n\t\t// Checks if a route matches the data provided. If any route variable\n\t\t// is not present in the data, the route does not match. If all route\n\t\t// variables are present in the data, the number of matches is returned\n\t\t// to allow discerning between general and more specific routes.\n\t\tmatchesData = function (route, data) {\n\t\t\tvar count = 0,\n\t\t\t\ti = 0,\n\t\t\t\tdefaults = {};\n\t\t\t// look at default values, if they match ...\n\t\t\tfor (var name in route.defaults) {\n\t\t\t\tif (route.defaults[name] === data[name]) {\n\t\t\t\t\t// mark as matched\n\t\t\t\t\tdefaults[name] = 1;\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (; i < route.names.length; i++) {\n\t\t\t\tif (!data.hasOwnProperty(route.names[i])) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (!defaults[route.names[i]]) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn count;\n\t\t},\n\t\tlocation = window.location,\n\t\twrapQuote = function (str) {\n\t\t\treturn (str + '')\n\t\t\t\t.replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, \"\\\\$1\");\n\t\t},\n\t\teach = can.each,\n\t\textend = can.extend,\n\t\t// Helper for convert any object (or value) to stringified object (or value)\n\t\tstringify = function (obj) {\n\t\t\t// Object is array, plain object, Map or List\n\t\t\tif (obj && typeof obj === \"object\") {\n\t\t\t\t// Get native object or array from Map or List\n\t\t\t\tif (obj instanceof can.Map) {\n\t\t\t\t\tobj = obj.attr();\n\t\t\t\t\t// Clone object to prevent change original values\n\t\t\t\t} else {\n\t\t\t\t\tobj = can.isFunction(obj.slice) ? obj.slice() : can.extend({}, obj);\n\t\t\t\t}\n\t\t\t\t// Convert each object property or array item into stringified new\n\t\t\t\tcan.each(obj, function (val, prop) {\n\t\t\t\t\tobj[prop] = stringify(val);\n\t\t\t\t});\n\t\t\t\t// Object supports toString function\n\t\t\t} else if (obj !== undefined && obj !== null && can.isFunction(obj.toString)) {\n\t\t\t\tobj = obj.toString();\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t},\n\t\tremoveBackslash = function (str) {\n\t\t\treturn str.replace(/\\\\/g, \"\");\n\t\t},\n\t\t// A ~~throttled~~ debounced function called multiple times will only fire once the\n\t\t// timer runs down. Each call resets the timer.\n\t\ttimer,\n\t\t// Intermediate storage for `can.route.data`.\n\t\tcurParams,\n\t\t// The last hash caused by a data change\n\t\tlastHash,\n\t\t// Are data changes pending that haven't yet updated the hash\n\t\tchangingData,\n\t\t// If the `can.route.data` changes, update the hash.\n\t\t// Using `.serialize()` retrieves the raw data contained in the `observable`.\n\t\t// This function is ~~throttled~~ debounced so it only updates once even if multiple values changed.\n\t\t// This might be able to use batchNum and avoid this.\n\t\tonRouteDataChange = function (ev, attr, how, newval) {\n\t\t\t// indicate that data is changing\n\t\t\tchangingData = 1;\n\t\t\tclearTimeout(timer);\n\t\t\ttimer = setTimeout(function () {\n\t\t\t\t// indicate that the hash is set to look like the data\n\t\t\t\tchangingData = 0;\n\t\t\t\tvar serialized = can.route.data.serialize(),\n\t\t\t\t\tpath = can.route.param(serialized, true);\n\t\t\t\tcan.route._call(\"setURL\", path);\n\n\t\t\t\tlastHash = path;\n\t\t\t}, 10);\n\t\t};\n\n\tcan.route = function (url, defaults) {\n\t\t// if route ends with a / and url starts with a /, remove the leading / of the url\n\t\tvar root = can.route._call(\"root\");\n\n\t\tif (root.lastIndexOf(\"/\") === root.length - 1 &&\n\t\t\turl.indexOf(\"/\") === 0) {\n\t\t\turl = url.substr(1);\n\t\t}\n\n\t\tdefaults = defaults || {};\n\t\t// Extract the variable names and replace with `RegExp` that will match\n\t\t// an atual URL with values.\n\t\tvar names = [],\n\t\t\tres,\n\t\t\ttest = \"\",\n\t\t\tlastIndex = matcher.lastIndex = 0,\n\t\t\tnext,\n\t\t\tquerySeparator = can.route._call(\"querySeparator\");\n\n\t\t// res will be something like [\":foo\",\"foo\"]\n\t\twhile (res = matcher.exec(url)) {\n\t\t\tnames.push(res[1]);\n\t\t\ttest += removeBackslash(url.substring(lastIndex, matcher.lastIndex - res[0].length));\n\t\t\tnext = \"\\\\\" + (removeBackslash(url.substr(matcher.lastIndex, 1)) || querySeparator);\n\t\t\t// a name without a default value HAS to have a value\n\t\t\t// a name that has a default value can be empty\n\t\t\t// The `\\\\` is for string-escaping giving single `\\` for `RegExp` escaping.\n\t\t\ttest += \"([^\" + next + \"]\" + (defaults[res[1]] ? \"*\" : \"+\") + \")\";\n\t\t\tlastIndex = matcher.lastIndex;\n\t\t}\n\t\ttest += url.substr(lastIndex)\n\t\t\t.replace(\"\\\\\", \"\");\n\t\t// Add route in a form that can be easily figured out.\n\t\tcan.route.routes[url] = {\n\t\t\t// A regular expression that will match the route when variable values\n\t\t\t// are present; i.e. for `:page/:type` the `RegExp` is `/([\\w\\.]*)/([\\w\\.]*)/` which\n\t\t\t// will match for any value of `:page` and `:type` (word chars or period).\n\t\t\ttest: new RegExp(\"^\" + test + \"($|\" + wrapQuote(querySeparator) + \")\"),\n\t\t\t// The original URL, same as the index for this entry in routes.\n\t\t\troute: url,\n\t\t\t// An `array` of all the variable names in this route.\n\t\t\tnames: names,\n\t\t\t// Default values provided for the variables.\n\t\t\tdefaults: defaults,\n\t\t\t// The number of parts in the URL separated by `/`.\n\t\t\tlength: url.split('/')\n\t\t\t\t.length\n\t\t};\n\t\treturn can.route;\n\t};\n\n\t/**\n\t * @static\n\t */\n\textend(can.route, {\n\n\t\t/**\n\t\t * @function can.route.param param\n\t\t * @parent can.route.static\n\t\t * @description Get a route path from given data.\n\t\t * @signature `can.route.param( data )`\n\t\t * @param {data} object The data to populate the route with.\n\t\t * @return {String} The route, with the data populated in it.\n\t\t *\n\t\t * @body\n\t\t * Parameterizes the raw JS object representation provided in data.\n\t\t *\n\t\t *     can.route.param( { type: \"video\", id: 5 } )\n\t\t *          // -> \"type=video&id=5\"\n\t\t *\n\t\t * If a route matching the provided data is found, that URL is built\n\t\t * from the data. Any remaining data is added at the end of the\n\t\t * URL as &amp; separated key/value parameters.\n\t\t *\n\t\t *     can.route(\":type/:id\")\n\t\t *\n\t\t *     can.route.param( { type: \"video\", id: 5 } ) // -> \"video/5\"\n\t\t *     can.route.param( { type: \"video\", id: 5, isNew: false } )\n\t\t *          // -> \"video/5&isNew=false\"\n\t\t */\n\t\tparam: function (data, _setRoute) {\n\t\t\t// Check if the provided data keys match the names in any routes;\n\t\t\t// Get the one with the most matches.\n\t\t\tvar route,\n\t\t\t\t// Need to have at least 1 match.\n\t\t\t\tmatches = 0,\n\t\t\t\tmatchCount,\n\t\t\t\trouteName = data.route,\n\t\t\t\tpropCount = 0;\n\n\t\t\tdelete data.route;\n\n\t\t\teach(data, function () {\n\t\t\t\tpropCount++;\n\t\t\t});\n\t\t\t// Otherwise find route.\n\t\t\teach(can.route.routes, function (temp, name) {\n\t\t\t\t// best route is the first with all defaults matching\n\n\t\t\t\tmatchCount = matchesData(temp, data);\n\t\t\t\tif (matchCount > matches) {\n\t\t\t\t\troute = temp;\n\t\t\t\t\tmatches = matchCount;\n\t\t\t\t}\n\t\t\t\tif (matchCount >= propCount) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// If we have a route name in our `can.route` data, and it's\n\t\t\t// just as good as what currently matches, use that\n\t\t\tif (can.route.routes[routeName] && matchesData(can.route.routes[routeName], data) === matches) {\n\t\t\t\troute = can.route.routes[routeName];\n\t\t\t}\n\t\t\t// If this is match...\n\t\t\tif (route) {\n\t\t\t\tvar cpy = extend({}, data),\n\t\t\t\t\t// Create the url by replacing the var names with the provided data.\n\t\t\t\t\t// If the default value is found an empty string is inserted.\n\t\t\t\t\tres = route.route.replace(matcher, function (whole, name) {\n\t\t\t\t\t\tdelete cpy[name];\n\t\t\t\t\t\treturn data[name] === route.defaults[name] ? \"\" : encodeURIComponent(data[name]);\n\t\t\t\t\t})\n\t\t\t\t\t\t.replace(\"\\\\\", \"\"),\n\t\t\t\t\tafter;\n\t\t\t\t// Remove matching default values\n\t\t\t\teach(route.defaults, function (val, name) {\n\t\t\t\t\tif (cpy[name] === val) {\n\t\t\t\t\t\tdelete cpy[name];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// The remaining elements of data are added as\n\t\t\t\t// `&amp;` separated parameters to the url.\n\t\t\t\tafter = can.param(cpy);\n\t\t\t\t// if we are paraming for setting the hash\n\t\t\t\t// we also want to make sure the route value is updated\n\t\t\t\tif (_setRoute) {\n\t\t\t\t\tcan.route.attr('route', route.route);\n\t\t\t\t}\n\t\t\t\treturn res + (after ? can.route._call(\"querySeparator\") + after : \"\");\n\t\t\t}\n\t\t\t// If no route was found, there is no hash URL, only paramters.\n\t\t\treturn can.isEmptyObject(data) ? \"\" : can.route._call(\"querySeparator\") + can.param(data);\n\t\t},\n\t\t/**\n\t\t * @function can.route.deparam deparam\n\t\t * @parent can.route.static\n\t\t * @description Extract data from a route path.\n\t\t * @signature `can.route.deparam( url )`\n\t\t * @param {String} url A route fragment to extract data from.\n\t\t * @return {Object} An object containing the extracted data.\n\t\t *\n\t\t * @body\n\t\t * Creates a data object based on the query string passed into it. This is\n\t\t * useful to create an object based on the `location.hash`.\n\t\t *\n\t\t *     can.route.deparam(\"id=5&type=videos\")\n\t\t *          // -> { id: 5, type: \"videos\" }\n\t\t *\n\t\t *\n\t\t * It's important to make sure the hash or exclamantion point is not passed\n\t\t * to `can.route.deparam` otherwise it will be included in the first property's\n\t\t * name.\n\t\t *\n\t\t *     can.route.attr(\"id\", 5) // location.hash -> #!id=5\n\t\t *     can.route.attr(\"type\", \"videos\")\n\t\t *          // location.hash -> #!id=5&type=videos\n\t\t *     can.route.deparam(location.hash)\n\t\t *          // -> { #!id: 5, type: \"videos\" }\n\t\t *\n\t\t * `can.route.deparam` will try and find a matching route and, if it does,\n\t\t * will deconstruct the URL and parse our the key/value parameters into the data object.\n\t\t *\n\t\t *     can.route(\":type/:id\")\n\t\t *\n\t\t *     can.route.deparam(\"videos/5\");\n\t\t *          // -> { id: 5, route: \":type/:id\", type: \"videos\" }\n\t\t */\n\t\tdeparam: function (url) {\n\n\t\t\t// remove the url\n\t\t\tvar root = can.route._call(\"root\");\n\t\t\tif (root.lastIndexOf(\"/\") === root.length - 1 &&\n\t\t\t\turl.indexOf(\"/\") === 0) {\n\t\t\t\turl = url.substr(1);\n\t\t\t}\n\n\t\t\t// See if the url matches any routes by testing it against the `route.test` `RegExp`.\n\t\t\t// By comparing the URL length the most specialized route that matches is used.\n\t\t\tvar route = {\n\t\t\t\tlength: -1\n\t\t\t},\n\t\t\t\tquerySeparator = can.route._call(\"querySeparator\"),\n\t\t\t\tparamsMatcher = can.route._call(\"paramsMatcher\");\n\n\t\t\teach(can.route.routes, function (temp, name) {\n\t\t\t\tif (temp.test.test(url) && temp.length > route.length) {\n\t\t\t\t\troute = temp;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// If a route was matched.\n\t\t\tif (route.length > -1) {\n\n\t\t\t\tvar // Since `RegExp` backreferences are used in `route.test` (parens)\n\t\t\t\t// the parts will contain the full matched string and each variable (back-referenced) value.\n\t\t\t\tparts = url.match(route.test),\n\t\t\t\t\t// Start will contain the full matched string; parts contain the variable values.\n\t\t\t\t\tstart = parts.shift(),\n\t\t\t\t\t// The remainder will be the `&amp;key=value` list at the end of the URL.\n\t\t\t\t\tremainder = url.substr(start.length - (parts[parts.length - 1] === querySeparator ? 1 : 0)),\n\t\t\t\t\t// If there is a remainder and it contains a `&amp;key=value` list deparam it.\n\t\t\t\t\tobj = (remainder && paramsMatcher.test(remainder)) ? can.deparam(remainder.slice(1)) : {};\n\n\t\t\t\t// Add the default values for this route.\n\t\t\t\tobj = extend(true, {}, route.defaults, obj);\n\t\t\t\t// Overwrite each of the default values in `obj` with those in\n\t\t\t\t// parts if that part is not empty.\n\t\t\t\teach(parts, function (part, i) {\n\t\t\t\t\tif (part && part !== querySeparator) {\n\t\t\t\t\t\tobj[route.names[i]] = decodeURIComponent(part);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tobj.route = route.route;\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\t// If no route was matched, it is parsed as a `&amp;key=value` list.\n\t\t\tif (url.charAt(0) !== querySeparator) {\n\t\t\t\turl = querySeparator + url;\n\t\t\t}\n\t\t\treturn paramsMatcher.test(url) ? can.deparam(url.slice(1)) : {};\n\t\t},\n\t\t/**\n\t\t * @hide\n\t\t * A can.Map that represents the state of the history.\n\t\t */\n\t\tdata: new can.Map({}),\n\t\tmap: function(data){\n\t\t\tvar appState;\n\t\t\t// appState is an instance of can.Map\n\t\t\tif(data instanceof can.Map){\n\t\t\t\tappState = data;\n\t\t\t}\n\t\t\t// appState is a can.Map constructor function\n\t\t\telse if(data.prototype instanceof can.Map){\n\t\t\t\tappState = new data();\n\t\t\t}\n\t\t\tcan.route.data = appState;\n\t\t},\n\t\t/**\n\t\t * @property {Object} routes\n\t\t * @hide\n\t\t *\n\t\t * A list of routes recognized by the router indixed by the url used to add it.\n\t\t * Each route is an object with these members:\n\t\t *\n\t\t *  - test - A regular expression that will match the route when variable values\n\t\t *    are present; i.e. for :page/:type the `RegExp` is /([\\w\\.]*)/([\\w\\.]*)/ which\n\t\t *    will match for any value of :page and :type (word chars or period).\n\t\t *\n\t\t *  - route - The original URL, same as the index for this entry in routes.\n\t\t *\n\t\t *  - names - An array of all the variable names in this route\n\t\t *\n\t\t *  - defaults - Default values provided for the variables or an empty object.\n\t\t *\n\t\t *  - length - The number of parts in the URL separated by '/'.\n\t\t */\n\t\troutes: {},\n\t\t/**\n\t\t * @function can.route.ready ready\n\t\t * @parent can.route.static\n\t\t *\n\t\t * Initialize can.route.\n\t\t *\n\t\t * @signature `can.route.ready()`\n\t\t *\n\t\t * Sets up the two-way binding between the hash and the can.route observable map and\n\t\t * sets the can.route map to its initial values.\n\t\t *\n\t\t * @return {can.route} The `can.route` object.\n\t\t *\n\t\t * @body\n\t\t *\n\t\t * ## Use\n\t\t *\n\t\t * After setting all your routes, call can.route.ready().\n\t\t *\n\t\t *     can.route(\"overview/:dateStart-:dateEnd\");\n\t\t *     can.route(\":type/:id\")\n\t\t *     can.route.ready()\n\t\t */\n\t\tready: function (val) {\n\t\t\tif (val !== true) {\n\t\t\t\tcan.route._setup();\n\t\t\t\tcan.route.setState();\n\t\t\t}\n\t\t\treturn can.route;\n\t\t},\n\t\t/**\n\t\t * @function can.route.url url\n\t\t * @parent can.route.static\n\t\t * @signature `can.route.url( data [, merge] )`\n\t\t *\n\t\t * Make a URL fragment that when set to window.location.hash will update can.route's properties\n\t\t * to match those in `data`.\n\t\t *\n\t\t * @param {Object} data The data to populate the route with.\n\t\t * @param {Boolean} [merge] Whether the given options should be merged into the current state of the route.\n\t\t * @return {String} The route URL and query string.\n\t\t *\n\t\t * @body\n\t\t * Similar to [can.route.link], but instead of creating an anchor tag, `can.route.url` creates\n\t\t * only the URL based on the route options passed into it.\n\t\t *\n\t\t *     can.route.url( { type: \"videos\", id: 5 } )\n\t\t *          // -> \"#!type=videos&id=5\"\n\t\t *\n\t\t * If a route matching the provided data is found the URL is built from the data. Any remaining\n\t\t * data is added at the end of the URL as & separated key/value parameters.\n\t\t *\n\t\t *     can.route(\":type/:id\")\n\t\t *\n\t\t *     can.route.url( { type: \"videos\", id: 5 } ) // -> \"#!videos/5\"\n\t\t *     can.route.url( { type: \"video\", id: 5, isNew: false } )\n\t\t *          // -> \"#!video/5&isNew=false\"\n\t\t */\n\t\turl: function (options, merge) {\n\n\t\t\tif (merge) {\n\t\t\t\toptions = can.extend({}, can.route.deparam(can.route._call(\"matchingPartOfURL\")), options);\n\t\t\t}\n\t\t\treturn can.route._call(\"root\") + can.route.param(options);\n\t\t},\n\t\t/**\n\t\t * @function can.route.link link\n\t\t * @parent can.route.static\n\t\t * @signature `can.route.link( innerText, data, props [, merge] )`\n\t\t *\n\t\t * Make an anchor tag (`<A>`) that when clicked on will update can.route's properties\n\t\t * to match those in `data`.\n\t\t *\n\t\t * @param {Object} innerText The text inside the link.\n\t\t * @param {Object} data The data to populate the route with.\n\t\t * @param {Object} props Properties for the anchor other than `href`.\n\t\t * @param {Boolean} [merge] Whether the given options should be merged into the current state of the route.\n\t\t * @return {String} A string with an anchor tag that points to the populated route.\n\t\t *\n\t\t * @body\n\t\t * Creates and returns an anchor tag with an href of the route\n\t\t * attributes passed into it, as well as any properies desired\n\t\t * for the tag.\n\t\t *\n\t\t *     can.route.link( \"My videos\", { type: \"videos\" }, {}, false )\n\t\t *          // -> <a href=\"#!type=videos\">My videos</a>\n\t\t *\n\t\t * Other attributes besides href can be added to the anchor tag\n\t\t * by passing in a data object with the attributes desired.\n\t\t *\n\t\t *     can.route.link( \"My videos\", { type: \"videos\" },\n\t\t *       { className: \"new\" }, false )\n\t\t *          // -> <a href=\"#!type=videos\" class=\"new\">My Videos</a>\n\t\t *\n\t\t * It is possible to utilize the current route options when making anchor\n\t\t * tags in order to make your code more reusable. If merge is set to true,\n\t\t * the route options passed into `can.route.link` will be passed into the\n\t\t * current ones.\n\t\t *\n\t\t *     location.hash = \"#!type=videos\"\n\t\t *     can.route.link( \"The zoo\", { id: 5 }, true )\n\t\t *          // -> <a href=\"#!type=videos&id=5\">The zoo</true>\n\t\t *\n\t\t *     location.hash = \"#!type=pictures\"\n\t\t *     can.route.link( \"The zoo\", { id: 5 }, true )\n\t\t *          // -> <a href=\"#!type=pictures&id=5\">The zoo</true>\n\t\t *\n\t\t *\n\t\t */\n\t\tlink: function (name, options, props, merge) {\n\t\t\treturn \"<a \" + makeProps(\n\t\t\t\textend({\n\t\t\t\t\thref: can.route.url(options, merge)\n\t\t\t\t}, props)) + \">\" + name + \"</a>\";\n\t\t},\n\t\t/**\n\t\t * @function can.route.current current\n\t\t * @parent can.route.static\n\t\t * @signature `can.route.current( data )`\n\t\t *\n\t\t * Check if data represents the current route.\n\t\t *\n\t\t * @param {Object} data Data to check agains the current route.\n\t\t * @return {Boolean} Whether the data matches the current URL.\n\t\t *\n\t\t * @body\n\t\t * Checks the page's current URL to see if the route represents the options passed\n\t\t * into the function.\n\t\t *\n\t\t * Returns true if the options respresent the current URL.\n\t\t *\n\t\t *     can.route.attr('id', 5) // location.hash -> \"#!id=5\"\n\t\t *     can.route.current({ id: 5 }) // -> true\n\t\t *     can.route.current({ id: 5, type: 'videos' }) // -> false\n\t\t *\n\t\t *     can.route.attr('type', 'videos')\n\t\t *            // location.hash -> #!id=5&type=videos\n\t\t *     can.route.current({ id: 5, type: 'videos' }) // -> true\n\t\t */\n\t\tcurrent: function (options) {\n\t\t\treturn this._call(\"matchingPartOfURL\") === can.route.param(options);\n\t\t},\n\t\tbindings: {\n\t\t\thashchange: {\n\t\t\t\tparamsMatcher: paramsMatcher,\n\t\t\t\tquerySeparator: \"&\",\n\t\t\t\tbind: function () {\n\t\t\t\t\tcan.bind.call(window, 'hashchange', setState);\n\t\t\t\t},\n\t\t\t\tunbind: function () {\n\t\t\t\t\tcan.unbind.call(window, 'hashchange', setState);\n\t\t\t\t},\n\t\t\t\t// Gets the part of the url we are determinging the route from.\n\t\t\t\t// For hashbased routing, it's everything after the #, for\n\t\t\t\t// pushState it's configurable\n\t\t\t\tmatchingPartOfURL: function () {\n\t\t\t\t\treturn location.href.split(/#!?/)[1] || \"\";\n\t\t\t\t},\n\t\t\t\t// gets called with the serialized can.route data after a route has changed\n\t\t\t\t// returns what the url has been updated to (for matching purposes)\n\t\t\t\tsetURL: function (path) {\n\t\t\t\t\tlocation.hash = \"#!\" + path;\n\t\t\t\t\treturn path;\n\t\t\t\t},\n\t\t\t\troot: \"#!\"\n\t\t\t}\n\t\t},\n\t\tdefaultBinding: \"hashchange\",\n\t\tcurrentBinding: null,\n\t\t// ready calls setup\n\t\t// setup binds and listens to data changes\n\t\t// bind listens to whatever you should be listening to\n\t\t// data changes tries to set the path\n\n\t\t// we need to be able to\n\t\t// easily kick off calling setState\n\t\t// \tteardown whatever is there\n\t\t//  turn on a particular binding\n\n\t\t// called when the route is ready\n\t\t_setup: function () {\n\t\t\tif (!can.route.currentBinding) {\n\t\t\t\tcan.route._call(\"bind\");\n\t\t\t\tcan.route.bind(\"change\", onRouteDataChange);\n\t\t\t\tcan.route.currentBinding = can.route.defaultBinding;\n\t\t\t}\n\t\t},\n\t\t_teardown: function () {\n\t\t\tif (can.route.currentBinding) {\n\t\t\t\tcan.route._call(\"unbind\");\n\t\t\t\tcan.route.unbind(\"change\", onRouteDataChange);\n\t\t\t\tcan.route.currentBinding = null;\n\t\t\t}\n\t\t\tclearTimeout(timer);\n\t\t\tchangingData = 0;\n\t\t},\n\t\t// a helper to get stuff from the current or default bindings\n\t\t_call: function () {\n\t\t\tvar args = can.makeArray(arguments),\n\t\t\t\tprop = args.shift(),\n\t\t\t\tbinding = can.route.bindings[can.route.currentBinding || can.route.defaultBinding],\n\t\t\t\tmethod = binding[prop];\n\t\t\tif (method.apply) {\n\t\t\t\treturn method.apply(binding, args);\n\t\t\t} else {\n\t\t\t\treturn method;\n\t\t\t}\n\t\t}\n\t});\n\n\t// The functions in the following list applied to `can.route` (e.g. `can.route.attr('...')`) will\n\t// instead act on the `can.route.data` observe.\n\teach(['bind', 'unbind', 'on', 'off', 'delegate', 'undelegate', 'removeAttr', 'compute', '_get', '__get'], function (name) {\n\t\tcan.route[name] = function () {\n\t\t\t// `delegate` and `undelegate` require\n\t\t\t// the `can/map/delegate` plugin\n\t\t\tif (!can.route.data[name]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn can.route.data[name].apply(can.route.data, arguments);\n\t\t};\n\t});\n\n\t// Because everything in hashbang is in fact a string this will automaticaly convert new values to string. Works with single value, or deep hashes.\n\t// Main motivation for this is to prevent double route event call for same value.\n\t// Example (the problem):\n\t// When you load page with hashbang like #!&some_number=2 and bind 'some_number' on routes.\n\t// It will fire event with adding of \"2\" (string) to 'some_number' property\n\t// But when you after this set can.route.attr({some_number: 2}) or can.route.attr('some_number', 2). it fires another event with change of 'some_number' from \"2\" (string) to 2 (integer)\n\t// This wont happen again with this normalization\n\tcan.route.attr = function (attr, val) {\n\t\tvar type = typeof attr,\n\t\t\tnewArguments;\n\n\t\t// Reading\n\t\tif (val === undefined) {\n\t\t\tnewArguments = arguments;\n\t\t\t// Sets object\n\t\t} else if (type !== \"string\" && type !== \"number\") {\n\t\t\tnewArguments = [stringify(attr), val];\n\t\t\t// Sets key - value\n\t\t} else {\n\t\t\tnewArguments = [attr, stringify(val)];\n\t\t}\n\n\t\treturn can.route.data.attr.apply(can.route.data, newArguments);\n\t};\n\n\tvar // Deparameterizes the portion of the hash of interest and assign the\n\t// values to the `can.route.data` removing existing values no longer in the hash.\n\t// setState is called typically by hashchange which fires asynchronously\n\t// So it's possible that someone started changing the data before the\n\t// hashchange event fired.  For this reason, it will not set the route data\n\t// if the data is changing or the hash already matches the hash that was set.\n\tsetState = can.route.setState = function () {\n\t\tvar hash = can.route._call(\"matchingPartOfURL\");\n\t\tvar oldParams = curParams;\n\t\tcurParams = can.route.deparam(hash);\n\n\t\t// if the hash data is currently changing, or\n\t\t// the hash is what we set it to anyway, do NOT change the hash\n\t\tif (!changingData || hash !== lastHash) {\n\t\t\tcan.batch.start();\n\t\t\tfor(var attr in oldParams){\n\t\t\t\tif(!curParams[attr]){\n\t\t\t\t\tcan.route.removeAttr(attr);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcan.route.attr(curParams);\n\t\t\tcan.batch.stop();\n\t\t}\n\t};\n\n\treturn can.route;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/route\";\ndefine([\"can/util/library\", \"can/map\", \"can/list\", \"can/util/string/deparam\"], function(can) {\n  var matcher = /\\:([\\w\\.]+)/g,\n      paramsMatcher = /^(?:&[^=]+=[^&]*)+/,\n      makeProps = function(props) {\n        var tags = [];\n        can.each(props, function(val, name) {\n          tags.push((name === 'className' ? 'class' : name) + '=\"' + (name === \"href\" ? val : can.esc(val)) + '\"');\n        });\n        return tags.join(\" \");\n      },\n      matchesData = function(route, data) {\n        var count = 0,\n            i = 0,\n            defaults = {};\n        for (var name in route.defaults) {\n          if (route.defaults[name] === data[name]) {\n            defaults[name] = 1;\n            count++;\n          }\n        }\n        for (; i < route.names.length; i++) {\n          if (!data.hasOwnProperty(route.names[i])) {\n            return -1;\n          }\n          if (!defaults[route.names[i]]) {\n            count++;\n          }\n        }\n        return count;\n      },\n      location = window.location,\n      wrapQuote = function(str) {\n        return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, \"\\\\$1\");\n      },\n      each = can.each,\n      extend = can.extend,\n      stringify = function(obj) {\n        if (obj && typeof obj === \"object\") {\n          if (obj instanceof can.Map) {\n            obj = obj.attr();\n          } else {\n            obj = can.isFunction(obj.slice) ? obj.slice() : can.extend({}, obj);\n          }\n          can.each(obj, function(val, prop) {\n            obj[prop] = stringify(val);\n          });\n        } else if (obj !== undefined && obj !== null && can.isFunction(obj.toString)) {\n          obj = obj.toString();\n        }\n        return obj;\n      },\n      removeBackslash = function(str) {\n        return str.replace(/\\\\/g, \"\");\n      },\n      timer,\n      curParams,\n      lastHash,\n      changingData,\n      onRouteDataChange = function(ev, attr, how, newval) {\n        changingData = 1;\n        clearTimeout(timer);\n        timer = setTimeout(function() {\n          changingData = 0;\n          var serialized = can.route.data.serialize(),\n              path = can.route.param(serialized, true);\n          can.route._call(\"setURL\", path);\n          lastHash = path;\n        }, 10);\n      };\n  can.route = function(url, defaults) {\n    var root = can.route._call(\"root\");\n    if (root.lastIndexOf(\"/\") === root.length - 1 && url.indexOf(\"/\") === 0) {\n      url = url.substr(1);\n    }\n    defaults = defaults || {};\n    var names = [],\n        res,\n        test = \"\",\n        lastIndex = matcher.lastIndex = 0,\n        next,\n        querySeparator = can.route._call(\"querySeparator\");\n    while (res = matcher.exec(url)) {\n      names.push(res[1]);\n      test += removeBackslash(url.substring(lastIndex, matcher.lastIndex - res[0].length));\n      next = \"\\\\\" + (removeBackslash(url.substr(matcher.lastIndex, 1)) || querySeparator);\n      test += \"([^\" + next + \"]\" + (defaults[res[1]] ? \"*\" : \"+\") + \")\";\n      lastIndex = matcher.lastIndex;\n    }\n    test += url.substr(lastIndex).replace(\"\\\\\", \"\");\n    can.route.routes[url] = {\n      test: new RegExp(\"^\" + test + \"($|\" + wrapQuote(querySeparator) + \")\"),\n      route: url,\n      names: names,\n      defaults: defaults,\n      length: url.split('/').length\n    };\n    return can.route;\n  };\n  extend(can.route, {\n    param: function(data, _setRoute) {\n      var route,\n          matches = 0,\n          matchCount,\n          routeName = data.route,\n          propCount = 0;\n      delete data.route;\n      each(data, function() {\n        propCount++;\n      });\n      each(can.route.routes, function(temp, name) {\n        matchCount = matchesData(temp, data);\n        if (matchCount > matches) {\n          route = temp;\n          matches = matchCount;\n        }\n        if (matchCount >= propCount) {\n          return false;\n        }\n      });\n      if (can.route.routes[routeName] && matchesData(can.route.routes[routeName], data) === matches) {\n        route = can.route.routes[routeName];\n      }\n      if (route) {\n        var cpy = extend({}, data),\n            res = route.route.replace(matcher, function(whole, name) {\n              delete cpy[name];\n              return data[name] === route.defaults[name] ? \"\" : encodeURIComponent(data[name]);\n            }).replace(\"\\\\\", \"\"),\n            after;\n        each(route.defaults, function(val, name) {\n          if (cpy[name] === val) {\n            delete cpy[name];\n          }\n        });\n        after = can.param(cpy);\n        if (_setRoute) {\n          can.route.attr('route', route.route);\n        }\n        return res + (after ? can.route._call(\"querySeparator\") + after : \"\");\n      }\n      return can.isEmptyObject(data) ? \"\" : can.route._call(\"querySeparator\") + can.param(data);\n    },\n    deparam: function(url) {\n      var root = can.route._call(\"root\");\n      if (root.lastIndexOf(\"/\") === root.length - 1 && url.indexOf(\"/\") === 0) {\n        url = url.substr(1);\n      }\n      var route = {length: -1},\n          querySeparator = can.route._call(\"querySeparator\"),\n          paramsMatcher = can.route._call(\"paramsMatcher\");\n      each(can.route.routes, function(temp, name) {\n        if (temp.test.test(url) && temp.length > route.length) {\n          route = temp;\n        }\n      });\n      if (route.length > -1) {\n        var parts = url.match(route.test),\n            start = parts.shift(),\n            remainder = url.substr(start.length - (parts[parts.length - 1] === querySeparator ? 1 : 0)),\n            obj = (remainder && paramsMatcher.test(remainder)) ? can.deparam(remainder.slice(1)) : {};\n        obj = extend(true, {}, route.defaults, obj);\n        each(parts, function(part, i) {\n          if (part && part !== querySeparator) {\n            obj[route.names[i]] = decodeURIComponent(part);\n          }\n        });\n        obj.route = route.route;\n        return obj;\n      }\n      if (url.charAt(0) !== querySeparator) {\n        url = querySeparator + url;\n      }\n      return paramsMatcher.test(url) ? can.deparam(url.slice(1)) : {};\n    },\n    data: new can.Map({}),\n    map: function(data) {\n      var appState;\n      if (data instanceof can.Map) {\n        appState = data;\n      } else if (data.prototype instanceof can.Map) {\n        appState = new data();\n      }\n      can.route.data = appState;\n    },\n    routes: {},\n    ready: function(val) {\n      if (val !== true) {\n        can.route._setup();\n        can.route.setState();\n      }\n      return can.route;\n    },\n    url: function(options, merge) {\n      if (merge) {\n        options = can.extend({}, can.route.deparam(can.route._call(\"matchingPartOfURL\")), options);\n      }\n      return can.route._call(\"root\") + can.route.param(options);\n    },\n    link: function(name, options, props, merge) {\n      return \"<a \" + makeProps(extend({href: can.route.url(options, merge)}, props)) + \">\" + name + \"</a>\";\n    },\n    current: function(options) {\n      return this._call(\"matchingPartOfURL\") === can.route.param(options);\n    },\n    bindings: {hashchange: {\n        paramsMatcher: paramsMatcher,\n        querySeparator: \"&\",\n        bind: function() {\n          can.bind.call(window, 'hashchange', setState);\n        },\n        unbind: function() {\n          can.unbind.call(window, 'hashchange', setState);\n        },\n        matchingPartOfURL: function() {\n          return location.href.split(/#!?/)[1] || \"\";\n        },\n        setURL: function(path) {\n          location.hash = \"#!\" + path;\n          return path;\n        },\n        root: \"#!\"\n      }},\n    defaultBinding: \"hashchange\",\n    currentBinding: null,\n    _setup: function() {\n      if (!can.route.currentBinding) {\n        can.route._call(\"bind\");\n        can.route.bind(\"change\", onRouteDataChange);\n        can.route.currentBinding = can.route.defaultBinding;\n      }\n    },\n    _teardown: function() {\n      if (can.route.currentBinding) {\n        can.route._call(\"unbind\");\n        can.route.unbind(\"change\", onRouteDataChange);\n        can.route.currentBinding = null;\n      }\n      clearTimeout(timer);\n      changingData = 0;\n    },\n    _call: function() {\n      var args = can.makeArray(arguments),\n          prop = args.shift(),\n          binding = can.route.bindings[can.route.currentBinding || can.route.defaultBinding],\n          method = binding[prop];\n      if (method.apply) {\n        return method.apply(binding, args);\n      } else {\n        return method;\n      }\n    }\n  });\n  each(['bind', 'unbind', 'on', 'off', 'delegate', 'undelegate', 'removeAttr', 'compute', '_get', '__get'], function(name) {\n    can.route[name] = function() {\n      if (!can.route.data[name]) {\n        return;\n      }\n      return can.route.data[name].apply(can.route.data, arguments);\n    };\n  });\n  can.route.attr = function(attr, val) {\n    var type = typeof attr,\n        newArguments;\n    if (val === undefined) {\n      newArguments = arguments;\n    } else if (type !== \"string\" && type !== \"number\") {\n      newArguments = [stringify(attr), val];\n    } else {\n      newArguments = [attr, stringify(val)];\n    }\n    return can.route.data.attr.apply(can.route.data, newArguments);\n  };\n  var setState = can.route.setState = function() {\n    var hash = can.route._call(\"matchingPartOfURL\");\n    var oldParams = curParams;\n    curParams = can.route.deparam(hash);\n    if (!changingData || hash !== lastHash) {\n      can.batch.start();\n      for (var attr in oldParams) {\n        if (!curParams[attr]) {\n          can.route.removeAttr(attr);\n        }\n      }\n      can.route.attr(curParams);\n      can.batch.stop();\n    }\n  };\n  return can.route;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/construct\", \"can/map\", \"can/list\", \"can/view\", \"can/compute\"], function (can) {\n\n\t\t// ## Helpers\n\n\t\t// Regex for escaped periods\n\t\tvar escapeReg = /(\\\\)?\\./g,\n\t\t// Regex for double escaped periods\n\t\t\tescapeDotReg = /\\\\\\./g,\n\t\t// **getNames**\n\t\t// Returns array of names by splitting provided string by periods and single escaped periods.\n\t\t// ```getNames(\"a.b\\.c.d\\\\.e\") //-> ['a', 'b', 'c', 'd.e']```\n\t\t\tgetNames = function (attr) {\n\t\t\t\tvar names = [],\n\t\t\t\t\tlast = 0;\n\t\t\t\t// Goes through attr string and places the characters found between the periods and single escaped periods into the\n\t\t\t\t// `names` array.  Double escaped periods are ignored.\n\t\t\t\tattr.replace(escapeReg, function (first, second, index) {\n\t\t\t\t\t/* If period is double escaped then leave in place */\n\t\t\t\t\tif (!second) {\n\t\t\t\t\t\tnames.push(\n\t\t\t\t\t\t\tattr\n\t\t\t\t\t\t\t\t.slice(last, index)\n\t\t\t\t\t\t\t\t/* replaces double-escaped period with period */\n\t\t\t\t\t\t\t\t.replace(escapeDotReg, '.')\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlast = index + first.length;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t/* Adds last portion of attr to names array */\n\t\t\t\tnames.push(\n\t\t\t\t\tattr\n\t\t\t\t\t\t.slice(last)\n\t\t\t\t\t\t/* replaces double-escaped period with period */\n\t\t\t\t\t\t.replace(escapeDotReg, '.')\n\t\t\t\t);\n\t\t\t\treturn names;\n\t\t\t};\n\n\t\t/**\n\t\t * @add can.view.Scope\n\t\t */\n\t\tvar Scope = can.Construct.extend(\n\n\t\t\t/**\n\t\t\t * @static\n\t\t\t */\n\t\t\t{\n\t\t\t\t// ## Scope.read\n\t\t\t\t// Scope.read was moved to can.compute.read\n\t\t\t\t// can.compute.read reads properties from a parent.  A much more complex version of getObject.\n\t\t\t\tread: can.compute.read\n\t\t\t},\n\t\t\t/**\n\t\t\t * @prototype\n\t\t\t */\n\t\t\t{\n\t\t\t\tinit: function (context, parent) {\n\t\t\t\t\tthis._context = context;\n\t\t\t\t\tthis._parent = parent;\n\t\t\t\t\tthis.__cache = {};\n\t\t\t\t},\n\n\t\t\t\t// ## Scope.prototype.attr\n\t\t\t\t// Reads a value from the current context or parent contexts.\n\t\t\t\tattr: function (key) {\n\t\t\t\t\t// Reads for whatever called before attr.  It's possible\n\t\t\t\t\t// that this.read clears them.  We want to restore them.\n\t\t\t\t\tvar previousReads = can.__clearReading(),\n\t\t\t\t\t\tres = this.read(key, {\n\t\t\t\t\t\t\tisArgument: true,\n\t\t\t\t\t\t\treturnObserveMethods: true,\n\t\t\t\t\t\t\tproxyMethods: false\n\t\t\t\t\t\t}).value;\n\t\t\t\t\tcan.__setReading(previousReads);\n\t\t\t\t\treturn res;\n\t\t\t\t},\n\n\t\t\t\t// ## Scope.prototype.add\n\t\t\t\t// Creates a new scope and sets the current scope to be the parent.\n\t\t\t\t// ```\n\t\t\t\t// var scope = new can.view.Scope([{name:\"Chris\"}, {name: \"Justin\"}]).add({name: \"Brian\"});\n\t\t\t\t// scope.attr(\"name\") //-> \"Brian\"\n\t\t\t\t// ```\n\t\t\t\tadd: function (context) {\n\t\t\t\t\tif (context !== this._context) {\n\t\t\t\t\t\treturn new this.constructor(context, this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// ## Scope.prototype.computeData\n\t\t\t\t// Finds the first location of the key in the scope and then provides a get-set compute that represents the key's value\n\t\t\t\t// and other information about where the value was found.\n\t\t\t\tcomputeData: function (key, options) {\n\t\t\t\t\toptions = options || {\n\t\t\t\t\t\targs: []\n\t\t\t\t\t};\n\t\t\t\t\tvar self = this,\n\t\t\t\t\t\trootObserve,\n\t\t\t\t\t\trootReads,\n\t\t\t\t\t\tcomputeData = {\n\t\t\t\t\t\t\t// computeData.compute returns a get-set compute that is tied to the first location of the provided\n\t\t\t\t\t\t\t// key in the context of the scope.\n\t\t\t\t\t\t\tcompute: can.compute(function (newVal) {\n\t\t\t\t\t\t\t\t// **Compute setter**\n\t\t\t\t\t\t\t\tif (arguments.length) {\n\t\t\t\t\t\t\t\t\tif (rootObserve.isComputed && !rootReads.length) {\n\t\t\t\t\t\t\t\t\t\trootObserve(newVal);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar last = rootReads.length - 1;\n\t\t\t\t\t\t\t\t\t\tcan.compute.read(rootObserve, rootReads.slice(0, last))\n\t\t\t\t\t\t\t\t\t\t\t.value.attr(rootReads[last], newVal);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// **Compute getter**\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// If computeData has found the value for the key in the past in an observable then go directly to\n\t\t\t\t\t\t\t\t\t// the observable (rootObserve) that the value was found in the last time and return the new value.  This\n\t\t\t\t\t\t\t\t\t// is a huge performance gain for the fact that we aren't having to check the entire scope each time.\n\t\t\t\t\t\t\t\t\tif (rootObserve) {\n\t\t\t\t\t\t\t\t\t\treturn can.compute.read(rootObserve, rootReads, options)\n\t\t\t\t\t\t\t\t\t\t\t.value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// If the key has not already been located in a observable then we need to search the scope for the\n\t\t\t\t\t\t\t\t\t// key.  Once we find the key then we need to return it's value and if it is found in an observable\n\t\t\t\t\t\t\t\t\t// then we need to store the observable so the next time this compute is called it can grab the value\n\t\t\t\t\t\t\t\t\t// directly from the observable.\n\t\t\t\t\t\t\t\t\tvar data = self.read(key, options);\n\t\t\t\t\t\t\t\t\trootObserve = data.rootObserve;\n\t\t\t\t\t\t\t\t\trootReads = data.reads;\n\t\t\t\t\t\t\t\t\tcomputeData.scope = data.scope;\n\t\t\t\t\t\t\t\t\tcomputeData.initialValue = data.value;\n\t\t\t\t\t\t\t\t\treturn data.value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t};\n\t\t\t\t\treturn computeData;\n\t\t\t\t},\n\n\t\t\t\t// ## Scope.prototype.compute\n\t\t\t\t// Provides a get-set compute that represents a key's value.\n\t\t\t\tcompute: function (key, options) {\n\t\t\t\t\treturn this.computeData(key, options)\n\t\t\t\t\t\t.compute;\n\t\t\t\t},\n\n\t\t\t\t// ## Scope.prototype.read\n\t\t\t\t// Finds the first isntance of a key in the available scopes and returns the keys value along with the the observable the key\n\t\t\t\t// was found in, readsData and the current scope.\n\t\t\t\t/**\n\t\t\t\t * @hide\n\t\t\t\t * @param {can.Mustache.key} attr A dot seperated path.  Use `\"\\.\"` if you have a property name that includes a dot.\n\t\t\t\t * @param {can.view.Scope.readOptions} options that configure how this gets read.\n\t\t\t\t * @return {{}}\n\t\t\t\t * @option {Object} parent the value's immediate parent\n\t\t\t\t * @option {can.Map|can.compute} rootObserve the first observable to read from.\n\t\t\t\t * @option {Array<String>} reads An array of properties that can be used to read from the rootObserve to get the value.\n\t\t\t\t * @option {*} value the found value\n\t\t\t\t */\n\t\t\t\tread: function (attr, options) {\n\t\t\t\t\t// check if we should only look within current scope\n\t\t\t\t\tvar stopLookup;\n\t\t\t\t\tif(attr.substr(0, 2) === './') {\n\t\t\t\t\t\t// set flag to halt lookup from walking up scope\n\t\t\t\t\t\tstopLookup = true;\n\t\t\t\t\t\t// stop lookup from checking parent scopes\n\t\t\t\t\t\tattr = attr.substr(2);\n\t\t\t\t\t}\n\t\t\t\t\t// check if we should be running this on a parent.\n\t\t\t\t\telse if (attr.substr(0, 3) === \"../\") {\n\t\t\t\t\t\treturn this._parent.read(attr.substr(3), options);\n\t\t\t\t\t} else if (attr === \"..\") {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: this._parent._context\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (attr === \".\" || attr === \"this\") {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalue: this._context\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Array of names from splitting attr string into names.  ```\"a.b\\.c.d\\\\.e\" //-> ['a', 'b', 'c', 'd.e']```\n\t\t\t\t\tvar names = attr.indexOf('\\\\.') === -1 ?\n\t\t\t\t\t\t\t// Reference doesn't contain escaped periods\n\t\t\t\t\t\t\tattr.split('.')\n\t\t\t\t\t\t\t// Reference contains escaped periods ```(`a.b\\.c.foo` == `a[\"b.c\"].foo)```\n\t\t\t\t\t\t\t: getNames(attr),\n\t\t\t\t\t// The current context (a scope is just data and a parent scope).\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t// The current scope.\n\t\t\t\t\t\tscope = this,\n\t\t\t\t\t// While we are looking for a value, we track the most likely place this value will be found.\n\t\t\t\t\t// This is so if there is no me.name.first, we setup a listener on me.name.\n\t\t\t\t\t// The most likely candidate is the one with the most \"read matches\" \"lowest\" in the\n\t\t\t\t\t// context chain.\n\t\t\t\t\t// By \"read matches\", we mean the most number of values along the key.\n\t\t\t\t\t// By \"lowest\" in the context chain, we mean the closest to the current context.\n\t\t\t\t\t// We track the starting position of the likely place with `defaultObserve`.\n\t\t\t\t\t\tdefaultObserve,\n\t\t\t\t\t// Tracks how to read from the defaultObserve.\n\t\t\t\t\t\tdefaultReads = [],\n\t\t\t\t\t// Tracks the highest found number of \"read matches\".\n\t\t\t\t\t\tdefaultPropertyDepth = -1,\n\t\t\t\t\t// `scope.read` is designed to be called within a compute, but\n\t\t\t\t\t// for performance reasons only listens to observables within one context.\n\t\t\t\t\t// This is to say, if you have me.name in the current context, but me.name.first and\n\t\t\t\t\t// we are looking for me.name.first, we don't setup bindings on me.name and me.name.first.\n\t\t\t\t\t// To make this happen, we clear readings if they do not find a value.  But,\n\t\t\t\t\t// if that path turns out to be the default read, we need to restore them.  This\n\t\t\t\t\t// variable remembers those reads so they can be restored.\n\t\t\t\t\t\tdefaultComputeReadings,\n\t\t\t\t\t// Tracks the default's scope.\n\t\t\t\t\t\tdefaultScope,\n\t\t\t\t\t// Tracks the first found observe.\n\t\t\t\t\t\tcurrentObserve,\n\t\t\t\t\t// Tracks the reads to get the value for a scope.\n\t\t\t\t\t\tcurrentReads;\n\n\t\t\t\t\t// Goes through each scope context provided until it finds the key (attr).  Once the key is found\n\t\t\t\t\t// then it's value is returned along with an observe, the current scope and reads.\n\t\t\t\t\t// While going through each scope context searching for the key, each observable found is returned and\n\t\t\t\t\t// saved so that either the observable the key is found in can be returned, or in the case the key is not\n\t\t\t\t\t// found in an observable the closest observable can be returned.\n\n\t\t\t\t\twhile (scope) {\n\t\t\t\t\t\tcontext = scope._context;\n\t\t\t\t\t\tif (context !== null) {\n\t\t\t\t\t\t\tvar data = can.compute.read(context, names, can.simpleExtend({\n\t\t\t\t\t\t\t\t/* Store found observable, incase we want to set it as the rootObserve. */\n\t\t\t\t\t\t\t\tfoundObservable: function (observe, nameIndex) {\n\t\t\t\t\t\t\t\t\tcurrentObserve = observe;\n\t\t\t\t\t\t\t\t\tcurrentReads = names.slice(nameIndex);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t// Called when we were unable to find a value.\n\t\t\t\t\t\t\t\tearlyExit: function (parentValue, nameIndex) {\n\t\t\t\t\t\t\t\t\t/* If this has more matching values */\n\t\t\t\t\t\t\t\t\tif (nameIndex > defaultPropertyDepth) {\n\t\t\t\t\t\t\t\t\t\tdefaultObserve = currentObserve;\n\t\t\t\t\t\t\t\t\t\tdefaultReads = currentReads;\n\t\t\t\t\t\t\t\t\t\tdefaultPropertyDepth = nameIndex;\n\t\t\t\t\t\t\t\t\t\tdefaultScope = scope;\n\t\t\t\t\t\t\t\t\t\t/* Clear and save readings so next attempt does not use these readings */\n\t\t\t\t\t\t\t\t\t\tdefaultComputeReadings = can.__clearReading();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t// Execute anonymous functions found along the way\n\t\t\t\t\t\t\t\texecuteAnonymousFunctions: true\n\t\t\t\t\t\t\t}, options));\n\t\t\t\t\t\t\t// **Key was found**, return value and location data\n\t\t\t\t\t\t\tif (data.value !== undefined) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tscope: scope,\n\t\t\t\t\t\t\t\t\trootObserve: currentObserve,\n\t\t\t\t\t\t\t\t\tvalue: data.value,\n\t\t\t\t\t\t\t\t\treads: currentReads\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Prevent prior readings and then move up to the next scope.\n\t\t\t\t\t\tcan.__clearReading();\n\t\t\t\t\t\tif(!stopLookup) {\n\t\t\t\t\t\t\t// Move up to the next scope.\n\t\t\t\t\t\t\tscope = scope._parent;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscope = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// **Key was not found**, return undefined for the value.  Unless an observable was\n\t\t\t\t\t// found in the process of searching for the key, then return the most likely observable along with it's\n\t\t\t\t\t// scope and reads.\n\n\t\t\t\t\tif (defaultObserve) {\n\t\t\t\t\t\tcan.__setReading(defaultComputeReadings);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tscope: defaultScope,\n\t\t\t\t\t\t\trootObserve: defaultObserve,\n\t\t\t\t\t\t\treads: defaultReads,\n\t\t\t\t\t\t\tvalue: undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tnames: names,\n\t\t\t\t\t\t\tvalue: undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\tcan.view.Scope = Scope;\n\t\treturn Scope;\n\t});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/scope\";\ndefine([\"can/util/library\", \"can/construct\", \"can/map\", \"can/list\", \"can/view\", \"can/compute\"], function(can) {\n  var escapeReg = /(\\\\)?\\./g,\n      escapeDotReg = /\\\\\\./g,\n      getNames = function(attr) {\n        var names = [],\n            last = 0;\n        attr.replace(escapeReg, function(first, second, index) {\n          if (!second) {\n            names.push(attr.slice(last, index).replace(escapeDotReg, '.'));\n            last = index + first.length;\n          }\n        });\n        names.push(attr.slice(last).replace(escapeDotReg, '.'));\n        return names;\n      };\n  var Scope = can.Construct.extend({read: can.compute.read}, {\n    init: function(context, parent) {\n      this._context = context;\n      this._parent = parent;\n      this.__cache = {};\n    },\n    attr: function(key) {\n      var previousReads = can.__clearReading(),\n          res = this.read(key, {\n            isArgument: true,\n            returnObserveMethods: true,\n            proxyMethods: false\n          }).value;\n      can.__setReading(previousReads);\n      return res;\n    },\n    add: function(context) {\n      if (context !== this._context) {\n        return new this.constructor(context, this);\n      } else {\n        return this;\n      }\n    },\n    computeData: function(key, options) {\n      options = options || {args: []};\n      var self = this,\n          rootObserve,\n          rootReads,\n          computeData = {compute: can.compute(function(newVal) {\n              if (arguments.length) {\n                if (rootObserve.isComputed && !rootReads.length) {\n                  rootObserve(newVal);\n                } else {\n                  var last = rootReads.length - 1;\n                  can.compute.read(rootObserve, rootReads.slice(0, last)).value.attr(rootReads[last], newVal);\n                }\n              } else {\n                if (rootObserve) {\n                  return can.compute.read(rootObserve, rootReads, options).value;\n                }\n                var data = self.read(key, options);\n                rootObserve = data.rootObserve;\n                rootReads = data.reads;\n                computeData.scope = data.scope;\n                computeData.initialValue = data.value;\n                return data.value;\n              }\n            })};\n      return computeData;\n    },\n    compute: function(key, options) {\n      return this.computeData(key, options).compute;\n    },\n    read: function(attr, options) {\n      var stopLookup;\n      if (attr.substr(0, 2) === './') {\n        stopLookup = true;\n        attr = attr.substr(2);\n      } else if (attr.substr(0, 3) === \"../\") {\n        return this._parent.read(attr.substr(3), options);\n      } else if (attr === \"..\") {\n        return {value: this._parent._context};\n      } else if (attr === \".\" || attr === \"this\") {\n        return {value: this._context};\n      }\n      var names = attr.indexOf('\\\\.') === -1 ? attr.split('.') : getNames(attr),\n          context,\n          scope = this,\n          defaultObserve,\n          defaultReads = [],\n          defaultPropertyDepth = -1,\n          defaultComputeReadings,\n          defaultScope,\n          currentObserve,\n          currentReads;\n      while (scope) {\n        context = scope._context;\n        if (context !== null) {\n          var data = can.compute.read(context, names, can.simpleExtend({\n            foundObservable: function(observe, nameIndex) {\n              currentObserve = observe;\n              currentReads = names.slice(nameIndex);\n            },\n            earlyExit: function(parentValue, nameIndex) {\n              if (nameIndex > defaultPropertyDepth) {\n                defaultObserve = currentObserve;\n                defaultReads = currentReads;\n                defaultPropertyDepth = nameIndex;\n                defaultScope = scope;\n                defaultComputeReadings = can.__clearReading();\n              }\n            },\n            executeAnonymousFunctions: true\n          }, options));\n          if (data.value !== undefined) {\n            return {\n              scope: scope,\n              rootObserve: currentObserve,\n              value: data.value,\n              reads: currentReads\n            };\n          }\n        }\n        can.__clearReading();\n        if (!stopLookup) {\n          scope = scope._parent;\n        } else {\n          scope = null;\n        }\n      }\n      if (defaultObserve) {\n        can.__setReading(defaultComputeReadings);\n        return {\n          scope: defaultScope,\n          rootObserve: defaultObserve,\n          reads: defaultReads,\n          value: undefined\n        };\n      } else {\n        return {\n          names: names,\n          value: undefined\n        };\n      }\n    }\n  });\n  can.view.Scope = Scope;\n  return Scope;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\"], function (can) {\n\n\tvar isFunction = can.isFunction,\n\t\tmakeArray = can.makeArray,\n\t\t// Used for hookup `id`s.\n\t\thookupId = 1;\n\n\t// internal utility methods\n\t// ------------------------\n\n\t// ##### makeRenderer\n\t/**\n\t * @hide\n\t * Rendering function factory method\n\t * @param textRenderer\n\t * @returns {renderer}\n\t */\n\tvar makeRenderer = function(textRenderer) {\n\t\tvar renderer = function() {\n\t\t\treturn $view.frag(textRenderer.apply(this, arguments));\n\t\t};\n\t\trenderer.render = function() {\n\t\t\treturn textRenderer.apply(textRenderer, arguments);\n\t\t};\n\t\treturn renderer;\n\t};\n\n\t// ##### checkText\n\t// Makes sure there's a template, if not, have `steal` provide a warning.\n\tvar checkText = function (text, url) {\n\t\tif (!text.length) {\n\n\t\t\t// _removed if not used as a steal module_\n\n\t\t\n\n\t\t\tthrow \"can.view: No template or empty template:\" + url;\n\t\t}\n\t};\n\n\t// ##### get\n\t// get a deferred renderer for provided url\n\t/**\n\t * @hide\n\t * @function get\n\t * @param {String | Object} obj url string or object with url property\n\t * @param {Boolean} async If the ajax request should be asynchronous.\n\t * @returns {can.Deferred} a `view` renderer deferred.\n\t */\n\tvar\tget = function (obj, async) {\n\t\tvar url = typeof obj === 'string' ? obj : obj.url,\n\t\t\tsuffix = (obj.engine && '.' + obj.engine) || url.match(/\\.[\\w\\d]+$/),\n\t\t\ttype,\n\t\t// If we are reading a script element for the content of the template,\n\t\t// `el` will be set to that script element.\n\t\t\tel,\n\t\t// A unique identifier for the view (used for caching).\n\t\t// This is typically derived from the element id or\n\t\t// the url for the template.\n\t\t\tid;\n\n\t\t//If the url has a #, we assume we want to use an inline template\n\t\t//from a script element and not current page's HTML\n\t\tif (url.match(/^#/)) {\n\t\t\turl = url.substr(1);\n\t\t}\n\t\t// If we have an inline template, derive the suffix from the `text/???` part.\n\t\t// This only supports `<script>` tags.\n\t\tif (el = document.getElementById(url)) {\n\t\t\tsuffix = '.' + el.type.match(/\\/(x\\-)?(.+)/)[2];\n\t\t}\n\n\t\t// If there is no suffix, add one.\n\t\tif (!suffix && !$view.cached[url]) {\n\t\t\turl += suffix = $view.ext;\n\t\t}\n\n\t\t// if the suffix was derived from the .match() operation, pluck out the first value\n\t\tif (can.isArray(suffix)) {\n\t\t\tsuffix = suffix[0];\n\t\t}\n\n\t\t// Convert to a unique and valid id.\n\t\tid = $view.toId(url);\n\n\t\t// If an absolute path, use `steal`/`require` to get it.\n\t\t// You should only be using `//` if you are using an AMD loader like `steal` or `require` (not almond).\n\t\tif (url.match(/^\\/\\//)) {\n\t\t\turl = url.substr(2);\n\t\t\turl = !window.steal ?\n\t\t\t\turl :\n\t\t\t\tsteal.config()\n\t\t\t\t\t.root.mapJoin(\"\" + steal.id(url));\n\t\t}\n\n\t\t// Localize for `require` (not almond)\n\t\tif (window.require) {\n\t\t\tif (require.toUrl) {\n\t\t\t\turl = require.toUrl(url);\n\t\t\t}\n\t\t}\n\n\t\t// Set the template engine type.\n\t\ttype = $view.types[suffix];\n\n\t\t// If it is cached,\n\t\tif ($view.cached[id]) {\n\t\t\t// Return the cached deferred renderer.\n\t\t\treturn $view.cached[id];\n\n\t\t\t// Otherwise if we are getting this from a `<script>` element.\n\t\t} else if (el) {\n\t\t\t// Resolve immediately with the element's `innerHTML`.\n\t\t\treturn $view.registerView(id, el.innerHTML, type);\n\t\t} else {\n\t\t\t// Make an ajax request for text.\n\t\t\tvar d = new can.Deferred();\n\t\t\tcan.ajax({\n\t\t\t\tasync: async,\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'text',\n\t\t\t\terror: function (jqXHR) {\n\t\t\t\t\tcheckText('', url);\n\t\t\t\t\td.reject(jqXHR);\n\t\t\t\t},\n\t\t\t\tsuccess: function (text) {\n\t\t\t\t\t// Make sure we got some text back.\n\t\t\t\t\tcheckText(text, url);\n\t\t\t\t\t$view.registerView(id, text, type, d);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn d;\n\t\t}\n\t};\n\t// ##### getDeferreds\n\t// Gets an `array` of deferreds from an `object`.\n\t// This only goes one level deep.\n\t/**\n\t * @hide\n\t * @param {Object|can.Deferred} data\n\t * @returns {Array} deferred objects\n\t */\n\tvar getDeferreds = function (data) {\n\t\tvar deferreds = [];\n\n\t\t// pull out deferreds\n\t\tif (can.isDeferred(data)) {\n\t\t\treturn [data];\n\t\t} else {\n\t\t\tfor (var prop in data) {\n\t\t\t\tif (can.isDeferred(data[prop])) {\n\t\t\t\t\tdeferreds.push(data[prop]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn deferreds;\n\t};\n\n\t// ##### usefulPart\n\t// Gets the useful part of a resolved deferred.\n\t// When a jQuery.when is resolved, it returns an array to each argument.\n\t// Reference ($.when)[https://api.jquery.com/jQuery.when/]\n\t// This is for `model`s and `can.ajax` that resolve to an `array`.\n\t/**\n\t * @hide\n\t * @function usefulPart\n\t * @param {Array|*} resolved\n\t * @returns {*}\n\t */\n\tvar usefulPart = function (resolved) {\n\t\treturn can.isArray(resolved) && resolved[1] === 'success' ? resolved[0] : resolved;\n\t};\n\n\t// #### can.view\n\t//defines $view for internal use, can.template for backwards compatibility\n\t/**\n\t * @add can.view\n\t */\n\tvar $view = can.view = can.template = function (view, data, helpers, callback) {\n\t\t// If helpers is a `function`, it is actually a callback.\n\t\tif (isFunction(helpers)) {\n\t\t\tcallback = helpers;\n\t\t\thelpers = undefined;\n\t\t}\n\t\tvar result;\n\t\t// Get the result, if a renderer function is passed in, then we just use that to render the data\n\t\tif( isFunction(view) ) {\n\t\t\tresult = view(data, helpers, callback);\n\t\t} else {\n\t\t\tresult = $view.renderAs(\"fragment\",view, data, helpers, callback);\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// can.view methods\n\t// --------------------------\n\tcan.extend($view, {\n\t\t// ##### frag\n\t\t// creates a fragment and hooks it up all at once\n\t\t/**\n\t\t * @function can.view.frag frag\n\t\t * @parent can.view.static\n\t\t */\n\t\tfrag: function (result, parentNode) {\n\t\t\treturn $view.hookup($view.fragment(result), parentNode);\n\t\t},\n\n\t\t// #### fragment\n\t\t// this is used internally to create a document fragment, insert it,then hook it up\n\t\tfragment: function (result) {\n\t\t\tif(typeof result !== \"string\" && result.nodeType === 11) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tvar frag = can.buildFragment(result, document.body);\n\t\t\t// If we have an empty frag...\n\t\t\tif (!frag.childNodes.length) {\n\t\t\t\tfrag.appendChild(document.createTextNode(''));\n\t\t\t}\n\t\t\treturn frag;\n\t\t},\n\n\t\t// ##### toId\n\t\t// Convert a path like string into something that's ok for an `element` ID.\n\t\ttoId: function (src) {\n\t\t\treturn can.map(src.toString()\n\t\t\t\t.split(/\\/|\\./g), function (part) {\n\t\t\t\t\t// Dont include empty strings in toId functions\n\t\t\t\t\tif (part) {\n\t\t\t\t\t\treturn part;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.join('_');\n\t\t},\n\t\t// ##### toStr\n        // convert argument to a string\n\t\ttoStr: function(txt){\n\t\t\treturn txt == null ? \"\" : \"\"+txt;\n\t\t},\n\n\t\t// ##### hookup\n\t\t// attach the provided `fragment` to `parentNode`\n\t\t/**\n\t\t * @hide\n\t\t * hook up a fragment to its parent node\n\t\t * @param fragment\n\t\t * @param parentNode\n\t\t * @returns {*}\n\t\t */\n\t\thookup: function (fragment, parentNode) {\n\t\t\tvar hookupEls = [],\n\t\t\t\tid,\n\t\t\t\tfunc;\n\n\t\t\t// Get all `childNodes`.\n\t\t\tcan.each(fragment.childNodes ? can.makeArray(fragment.childNodes) : fragment, function (node) {\n\t\t\t\tif (node.nodeType === 1) {\n\t\t\t\t\thookupEls.push(node);\n\t\t\t\t\thookupEls.push.apply(hookupEls, can.makeArray(node.getElementsByTagName('*')));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Filter by `data-view-id` attribute.\n\t\t\tcan.each(hookupEls, function (el) {\n\t\t\t\tif (el.getAttribute && (id = el.getAttribute('data-view-id')) && (func = $view.hookups[id])) {\n\t\t\t\t\tfunc(el, parentNode, id);\n\t\t\t\t\tdelete $view.hookups[id];\n\t\t\t\t\tel.removeAttribute('data-view-id');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn fragment;\n\t\t},\n\n\t\t// `hookups` keeps list of pending hookups, ie fragments to attach to a parent node\n\t\t/**\n\t\t * @property hookups\n\t\t * @hide\n\t\t * A list of pending 'hookups'\n\t\t */\n\t\thookups: {},\n\n\t\t// `hook` factory method for hookup function inserted into templates\n\t\t// hookup functions are called after the html is rendered to the page\n\t\t// only implemented by EJS templates.\n\t\t/**\n\t\t * @description Create a hookup to insert into templates.\n\t\t * @function can.view.hook hook\n\t\t * @parent can.view.static\n\t\t * @signature `can.view.hook(callback)`\n\t\t * @param {Function} callback A callback function to be called with the element.\n\t\t *\n\t\t * @body\n\t\t * Registers a hookup function that can be called back after the html is\n\t\t * put on the page.  Typically this is handled by the template engine.  Currently\n\t\t * only EJS supports this functionality.\n\t\t *\n\t\t *     var id = can.view.hook(function(el){\n\t\t *            //do something with el\n\t\t *         }),\n\t\t *         html = \"<div data-view-id='\"+id+\"'>\"\n\t\t *     $('.foo').html(html);\n\t\t */\n\t\thook: function (cb) {\n\t\t\t$view.hookups[++hookupId] = cb;\n\t\t\treturn ' data-view-id=\\'' + hookupId + '\\'';\n\t\t},\n\n\t\t/**\n\t\t * @hide\n\t\t * @property {Object} can.view.cached view\n\t\t * @parent can.view\n\t\t * Cached are put in this object\n\t\t */\n\t\tcached: {},\n\t\tcachedRenderers: {},\n\n\t\t// cache view templates resolved via XHR on the client\n\t\t/**\n\t\t * @property {Boolean} can.view.cache cache\n\t\t * @parent can.view.static\n\t\t * By default, views are cached on the client.  If you'd like the\n\t\t * the views to reload from the server, you can set the `cache` attribute to `false`.\n\t\t *\n\t\t *\t//- Forces loads from server\n\t\t *\tcan.view.cache = false;\n\t\t *\n\t\t */\n\t\tcache: true,\n\n\t\t// ##### register\n\t\t// given an info object, register a template type\n\t\t// different templating solutions produce strings or document fragments via their renderer function\n\t\t/**\n\t\t * @function can.view.register register\n\t\t * @parent can.view.static\n\t\t * @description Register a templating language.\n\t\t * @signature `can.view.register(info)`\n\t\t * @param {{}} info Information about the templating language.\n\t\t * @option {String} plugin The location of the templating language's plugin.\n\t\t * @option {String} suffix Files with this suffix will use this templating language's plugin by default.\n\t\t * @option {function} renderer A function that returns a function that, given data, will render the template with that data.\n\t\t * The __renderer__ function receives the id of the template and the text of the template.\n\t\t * @option {function} script A function that returns the string form of the processed template.\n\t\t *\n\t\t * @body\n\t\t * Registers a template engine to be used with\n\t\t * view helpers and compression.\n\t\t *\n\t\t * ## Example\n\t\t *\n\t\t * @codestart\n\t\t * can.View.register({\n\t\t *\tsuffix : \"tmpl\",\n\t\t *  plugin : \"jquery/view/tmpl\",\n\t\t *\trenderer: function( id, text ) {\n\t\t *\treturn function(data){\n\t\t *\t\treturn jQuery.render( text, data );\n\t\t *\t\t}\n\t\t *\t},\n\t\t *\tscript: function( id, text ) {\n\t\t *\tvar tmpl = can.tmpl(text).toString();\n\t\t *\treturn \"function(data){return (\"+\n\t\t *\t\t\ttmpl+\n\t\t *\t\t\t\").call(jQuery, jQuery, data); }\";\n\t\t *\t}\n\t\t * })\n\t\t * @codeend\n\t\t */\n\t\tregister: function (info) {\n\t\t\tthis.types['.' + info.suffix] = info;\n\n\t\t\t// _removed if not used as a steal module_\n\n\t\t\n\n\t\t\tcan[info.suffix] = $view[info.suffix] = function (id, text) {\n\t\t\t\t// If there is no text, assume id is the template text, so return a nameless renderer.\n\t\t\t\tif (!text) {\n\t\t\t\t\t// if the template has a fragRenderer already, just return that.\n\t\t\t\t\tif(info.fragRenderer) {\n\t\t\t\t\t\treturn info.fragRenderer(null, id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn makeRenderer(info.renderer(null, id));\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif(info.fragRenderer) {\n\t\t\t\t\treturn $view.preload( id, info.fragRenderer(id, text) );\n\t\t\t\t} else {\n\t\t\t\t\treturn $view.preloadStringRenderer(id, info.renderer(id, text));\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t//registered view types\n\t\ttypes: {},\n\n\t\t/**\n\t\t * @property {String} can.view.ext ext\n\t\t * @parent can.view.static\n\t\t * The default suffix to use if none is provided in the view's url.\n\t\t * This is set to `.ejs` by default.\n\t\t *\n\t\t *\t// Changes view ext to 'txt'\n\t\t *\tcan.view.ext = 'txt';\n\t\t *\n\t\t */\n\t\text: \".ejs\",\n\n\t\t/**\n\t\t * Returns the text from a script tag\n\t\t * @hide\n\t\t * @param {Object} type\n\t\t * @param {Object} id\n\t\t * @param {Object} src\n\t\t */\n\t\tregisterScript: function (type, id, src) {\n\t\t\treturn 'can.view.preloadStringRenderer(\\'' + id + '\\',' + $view.types['.' + type].script(id, src) + ');';\n\t\t},\n\n\t\t/**\n\t\t * @hide\n\t\t * Called by a production script to pre-load a fragment renderer function\n\t\t * into the view cache.\n\t\t * @param {String} id\n\t\t * @param {Function} renderer\n\t\t */\n\t\tpreload: function (id, renderer) {\n\t\t\tvar def = $view.cached[id] = new can.Deferred()\n\t\t\t\t.resolve(function (data, helpers) {\n\t\t\t\t\treturn renderer.call(data, data, helpers);\n\t\t\t\t});\n\n\t\t\t// set cache references (otherwise preloaded recursive views won't recurse properly)\n\t\t\tdef.__view_id = id;\n\t\t\t$view.cachedRenderers[id] = renderer;\n\n\t\t\treturn renderer;\n\t\t},\n\n\t\t/**\n\t\t * @hide\n\t\t * Called by a production script to pre-load a string renderer function\n\t\t * into the view cache.\n\t\t * @param id\n\t\t * @param stringRenderer\n\t\t * @returns {*}\n\t\t */\n\t\tpreloadStringRenderer: function(id, stringRenderer) {\n\t\t\treturn this.preload(id, makeRenderer(stringRenderer) );\n\t\t},\n\n\t\t// #### renderers\n\t\t// ---------------\n\t\t// can.view's primary purpose is to load templates (from strings or filesystem) and render them\n\t\t//\n\t\t// can.view supports two different forms of rendering systems\n\t\t//\n\t\t// mustache templates return a string based rendering function\n\n\t\t// stache (or other fragment based templating systems) return a document fragment, so 'hookup' steps are not required\n\t\t//\n\t\t// ##### render\n\t\t//\n\t\t/**\n\t\t * @function can.view.render render\n\t\t * @parent can.view.static\n\t\t * @description Render a template.\n\t\t * @signature `can.view.render(template[, callback])`\n\t\t * @param {String|Object} view The path of the view template or a view object.\n\t\t * @param {Function} [callback] A function executed after the template has been processed.\n\t\t * @return {Function|can.Deferred} A renderer function to be called with data and helpers\n\t\t * or a Deferred that resolves to a renderer function.\n\t\t *\n\t\t * @signature `can.view.render(template, data[, [helpers,] callback])`\n\t\t * @param {String|Object} view The path of the view template or a view object.\n\t\t * @param {Object} [data] The data to populate the template with.\n\t\t * @param {Object.<String, function>} [helpers] Helper methods referenced in the template.\n\t\t * @param {Function} [callback] A function executed after the template has been processed.\n\t\t * @return {String|can.Deferred} The template with interpolated data in string form\n\t\t * or a Deferred that resolves to the template with interpolated data.\n\t\t *\n\t\t * @body\n\t\t * `can.view.render(view, [data], [helpers], callback)` returns the rendered markup produced by the corresponding template\n\t\t * engine as String. If you pass a deferred object in as data, render returns\n\t\t * a deferred resolving to the rendered markup.\n\t\t *\n\t\t * `can.view.render` is commonly used for sub-templates.\n\t\t *\n\t\t * ## Example\n\t\t *\n\t\t * _welcome.ejs_ looks like:\n\t\t *\n\t\t *     <h1>Hello <%= hello %></h1>\n\t\t *\n\t\t * Render it to a string like:\n\t\t *\n\t\t *     can.view.render(\"welcome.ejs\",{hello: \"world\"})\n\t\t *       //-> <h1>Hello world</h1>\n\t\t *\n\t\t * ## Use as a Subtemplate\n\t\t *\n\t\t * If you have a template like:\n\t\t *\n\t\t *     <ul>\n\t\t *       <% list(items, function(item){ %>\n\t\t *         <%== can.view.render(\"item.ejs\",item) %>\n\t\t *       <% }) %>\n\t\t *     </ul>\n\t\t *\n\t\t * ## Using renderer functions\n\t\t *\n\t\t * If you only pass the view path, `can.view will return a renderer function that can be called with\n\t\t * the data to render:\n\t\t *\n\t\t *     var renderer = can.view.render(\"welcome.ejs\");\n\t\t *     // Do some more things\n\t\t *     renderer({hello: \"world\"}) // -> Document Fragment\n\t\t *\n\t\t */\n\t\t//call `renderAs` with a hardcoded string, as view.render\n\t\t// always operates against resolved template files or hardcoded strings\n\t\trender: function (view, data, helpers, callback) {\n\t\t\treturn can.view.renderAs(\"string\",view, data, helpers, callback);\n\t\t},\n\n\t\t// ##### renderTo\n\t\t//\n\t\t/**\n\t\t * @hide\n\t\t * @function renderTo\n\t\t * @param {String} format\n\t\t * @param {Function} renderer\n\t\t * @param data\n\t\t * @param {Object} helpers helper methods for this template\n\t\t * @returns {*}\n\t\t */\n\t\trenderTo: function(format, renderer, data, helpers){\n\t\t\treturn (format === \"string\" && renderer.render ? renderer.render : renderer)(data, helpers);\n\t\t},\n\n\t\t/**\n\t\t * @hide\n\t\t *\n\t\t * @param format\n\t\t * @param view\n\t\t * @param data\n\t\t * @param helpers\n\t\t * @param callback\n\t\t * @returns {*}\n\t\t */\n\t\trenderAs: function (format, view, data, helpers, callback) {\n\t\t\t// If helpers is a `function`, it is actually a callback.\n\t\t\tif (isFunction(helpers)) {\n\t\t\t\tcallback = helpers;\n\t\t\t\thelpers = undefined;\n\t\t\t}\n\n\t\t\t// See if we got passed any deferreds.\n\t\t\tvar deferreds = getDeferreds(data);\n\t\t\tvar reading, deferred, dataCopy, async, response;\n\t\t\tif (deferreds.length) {\n\t\t\t\t// Does data contain any deferreds?\n\t\t\t\t// The deferred that resolves into the rendered content...\n\t\t\t\tdeferred = new can.Deferred();\n\t\t\t\tdataCopy = can.extend({}, data);\n\n\t\t\t\t// Add the view request to the list of deferreds.\n\t\t\t\tdeferreds.push(get(view, true));\n\t\t\t\t// Wait for the view and all deferreds to finish...\n\t\t\t\tcan.when.apply(can, deferreds)\n\t\t\t\t\t.then(function (resolved) {\n\t\t\t\t\t\t// Get all the resolved deferreds.\n\t\t\t\t\t\tvar objs = makeArray(arguments),\n\t\t\t\t\t\t\t// Renderer is the last index of the data.\n\t\t\t\t\t\t\trenderer = objs.pop(),\n\t\t\t\t\t\t\t// The result of the template rendering with data.\n\t\t\t\t\t\t\tresult;\n\n\t\t\t\t\t\t// Make data look like the resolved deferreds.\n\t\t\t\t\t\tif (can.isDeferred(data)) {\n\t\t\t\t\t\t\tdataCopy = usefulPart(resolved);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Go through each prop in data again and\n\t\t\t\t\t\t\t// replace the defferreds with what they resolved to.\n\t\t\t\t\t\t\tfor (var prop in data) {\n\t\t\t\t\t\t\t\tif (can.isDeferred(data[prop])) {\n\t\t\t\t\t\t\t\t\tdataCopy[prop] = usefulPart(objs.shift());\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get the rendered result.\n\t\t\t\t\t\tresult = can.view.renderTo(format, renderer, dataCopy, helpers);\n\n\t\t\t\t\t\t// Resolve with the rendered view.\n\t\t\t\t\t\tdeferred.resolve(result, dataCopy);\n\n\t\t\t\t\t\t// If there's a `callback`, call it back with the result.\n\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\tcallback(result, dataCopy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tdeferred.reject.apply(deferred, arguments);\n\t\t\t\t\t});\n\t\t\t\t// Return the deferred...\n\t\t\t\treturn deferred;\n\t\t\t} else {\n\t\t\t\t// get is called async but in \n\t\t\t\t// ff will be async so we need to temporarily reset\n\t\t\t\treading = can.__clearReading();\n\n\t\t\t\t// If there's a `callback` function\n\t\t\t\tasync = isFunction(callback);\n\t\t\t\t// Get the `view` type\n\t\t\t\tdeferred = get(view, async);\n\n\t\t\t\tif (reading) {\n\t\t\t\t\tcan.__setReading(reading);\n\t\t\t\t}\n\n\t\t\t\t// If we are `async`...\n\t\t\t\tif (async) {\n\t\t\t\t\t// Return the deferred\n\t\t\t\t\tresponse = deferred;\n\t\t\t\t\t// And fire callback with the rendered result.\n\t\t\t\t\tdeferred.then(function (renderer) {\n\t\t\t\t\t\tcallback(data ? can.view.renderTo(format, renderer, data, helpers) : renderer);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// if the deferred is resolved, call the cached renderer instead\n\t\t\t\t\t// this is because it's possible, with recursive deferreds to\n\t\t\t\t\t// need to render a view while its deferred is _resolving_.  A _resolving_ deferred\n\t\t\t\t\t// is a deferred that was just resolved and is calling back it's success callbacks.\n\t\t\t\t\t// If a new success handler is called while resoliving, it does not get fired by\n\t\t\t\t\t// jQuery's deferred system.  So instead of adding a new callback\n\t\t\t\t\t// we use the cached renderer.\n\t\t\t\t\t// We also add __view_id on the deferred so we can look up it's cached renderer.\n\t\t\t\t\t// In the future, we might simply store either a deferred or the cached result.\n\t\t\t\t\tif (deferred.state() === 'resolved' && deferred.__view_id) {\n\t\t\t\t\t\tvar currentRenderer = $view.cachedRenderers[deferred.__view_id];\n\t\t\t\t\t\treturn data ? can.view.renderTo(format, currentRenderer, data, helpers) : currentRenderer;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Otherwise, the deferred is complete, so\n\t\t\t\t\t\t// set response to the result of the rendering.\n\t\t\t\t\t\tdeferred.then(function (renderer) {\n\t\t\t\t\t\t\tresponse = data ? can.view.renderTo(format, renderer, data, helpers) : renderer;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * @hide\n\t\t * Registers a view with `cached` object.  This is used\n\t\t * internally by this class and Mustache to hookup views.\n\t\t * @param  {String} id\n\t\t * @param  {String} text\n\t\t * @param  {String} type\n\t\t * @param  {can.Deferred} def\n\t\t */\n\t\tregisterView: function (id, text, type, def) {\n\t\t\t// Get the renderer function.\n\t\t\tvar info = (typeof type === \"object\" ? type :  $view.types[type || $view.ext]),\n\t\t\t\trenderer;\n\t\t\tif(info.fragRenderer) {\n\t\t\t\trenderer = info.fragRenderer(id, text);\n\t\t\t} else {\n\t\t\t\trenderer = makeRenderer( info.renderer(id, text) );\n\t\t\t}\n\t\t\t\n\t\t\tdef = def || new can.Deferred();\n\n\t\t\t// Cache if we are caching.\n\t\t\tif ($view.cache) {\n\t\t\t\t$view.cached[id] = def;\n\t\t\t\tdef.__view_id = id;\n\t\t\t\t$view.cachedRenderers[id] = renderer;\n\t\t\t}\n\n\t\t\t// Return the objects for the response's `dataTypes`\n\t\t\t// (in this case view).\n\t\t\treturn def.resolve(renderer);\n\t\t}\n\t});\n\n\t// _removed if not used as a steal module_\n\n\n\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view\";\ndefine([\"can/util/library\"], function(can) {\n  var isFunction = can.isFunction,\n      makeArray = can.makeArray,\n      hookupId = 1;\n  var makeRenderer = function(textRenderer) {\n    var renderer = function() {\n      return $view.frag(textRenderer.apply(this, arguments));\n    };\n    renderer.render = function() {\n      return textRenderer.apply(textRenderer, arguments);\n    };\n    return renderer;\n  };\n  var checkText = function(text, url) {\n    if (!text.length) {\n      throw \"can.view: No template or empty template:\" + url;\n    }\n  };\n  var get = function(obj, async) {\n    var url = typeof obj === 'string' ? obj : obj.url,\n        suffix = (obj.engine && '.' + obj.engine) || url.match(/\\.[\\w\\d]+$/),\n        type,\n        el,\n        id;\n    if (url.match(/^#/)) {\n      url = url.substr(1);\n    }\n    if (el = document.getElementById(url)) {\n      suffix = '.' + el.type.match(/\\/(x\\-)?(.+)/)[2];\n    }\n    if (!suffix && !$view.cached[url]) {\n      url += suffix = $view.ext;\n    }\n    if (can.isArray(suffix)) {\n      suffix = suffix[0];\n    }\n    id = $view.toId(url);\n    if (url.match(/^\\/\\//)) {\n      url = url.substr(2);\n      url = !window.steal ? url : steal.config().root.mapJoin(\"\" + steal.id(url));\n    }\n    if (window.require) {\n      if (require.toUrl) {\n        url = require.toUrl(url);\n      }\n    }\n    type = $view.types[suffix];\n    if ($view.cached[id]) {\n      return $view.cached[id];\n    } else if (el) {\n      return $view.registerView(id, el.innerHTML, type);\n    } else {\n      var d = new can.Deferred();\n      can.ajax({\n        async: async,\n        url: url,\n        dataType: 'text',\n        error: function(jqXHR) {\n          checkText('', url);\n          d.reject(jqXHR);\n        },\n        success: function(text) {\n          checkText(text, url);\n          $view.registerView(id, text, type, d);\n        }\n      });\n      return d;\n    }\n  };\n  var getDeferreds = function(data) {\n    var deferreds = [];\n    if (can.isDeferred(data)) {\n      return [data];\n    } else {\n      for (var prop in data) {\n        if (can.isDeferred(data[prop])) {\n          deferreds.push(data[prop]);\n        }\n      }\n    }\n    return deferreds;\n  };\n  var usefulPart = function(resolved) {\n    return can.isArray(resolved) && resolved[1] === 'success' ? resolved[0] : resolved;\n  };\n  var $view = can.view = can.template = function(view, data, helpers, callback) {\n    if (isFunction(helpers)) {\n      callback = helpers;\n      helpers = undefined;\n    }\n    var result;\n    if (isFunction(view)) {\n      result = view(data, helpers, callback);\n    } else {\n      result = $view.renderAs(\"fragment\", view, data, helpers, callback);\n    }\n    return result;\n  };\n  can.extend($view, {\n    frag: function(result, parentNode) {\n      return $view.hookup($view.fragment(result), parentNode);\n    },\n    fragment: function(result) {\n      if (typeof result !== \"string\" && result.nodeType === 11) {\n        return result;\n      }\n      var frag = can.buildFragment(result, document.body);\n      if (!frag.childNodes.length) {\n        frag.appendChild(document.createTextNode(''));\n      }\n      return frag;\n    },\n    toId: function(src) {\n      return can.map(src.toString().split(/\\/|\\./g), function(part) {\n        if (part) {\n          return part;\n        }\n      }).join('_');\n    },\n    toStr: function(txt) {\n      return txt == null ? \"\" : \"\" + txt;\n    },\n    hookup: function(fragment, parentNode) {\n      var hookupEls = [],\n          id,\n          func;\n      can.each(fragment.childNodes ? can.makeArray(fragment.childNodes) : fragment, function(node) {\n        if (node.nodeType === 1) {\n          hookupEls.push(node);\n          hookupEls.push.apply(hookupEls, can.makeArray(node.getElementsByTagName('*')));\n        }\n      });\n      can.each(hookupEls, function(el) {\n        if (el.getAttribute && (id = el.getAttribute('data-view-id')) && (func = $view.hookups[id])) {\n          func(el, parentNode, id);\n          delete $view.hookups[id];\n          el.removeAttribute('data-view-id');\n        }\n      });\n      return fragment;\n    },\n    hookups: {},\n    hook: function(cb) {\n      $view.hookups[++hookupId] = cb;\n      return ' data-view-id=\\'' + hookupId + '\\'';\n    },\n    cached: {},\n    cachedRenderers: {},\n    cache: true,\n    register: function(info) {\n      this.types['.' + info.suffix] = info;\n      can[info.suffix] = $view[info.suffix] = function(id, text) {\n        if (!text) {\n          if (info.fragRenderer) {\n            return info.fragRenderer(null, id);\n          } else {\n            return makeRenderer(info.renderer(null, id));\n          }\n        }\n        if (info.fragRenderer) {\n          return $view.preload(id, info.fragRenderer(id, text));\n        } else {\n          return $view.preloadStringRenderer(id, info.renderer(id, text));\n        }\n      };\n    },\n    types: {},\n    ext: \".ejs\",\n    registerScript: function(type, id, src) {\n      return 'can.view.preloadStringRenderer(\\'' + id + '\\',' + $view.types['.' + type].script(id, src) + ');';\n    },\n    preload: function(id, renderer) {\n      var def = $view.cached[id] = new can.Deferred().resolve(function(data, helpers) {\n        return renderer.call(data, data, helpers);\n      });\n      def.__view_id = id;\n      $view.cachedRenderers[id] = renderer;\n      return renderer;\n    },\n    preloadStringRenderer: function(id, stringRenderer) {\n      return this.preload(id, makeRenderer(stringRenderer));\n    },\n    render: function(view, data, helpers, callback) {\n      return can.view.renderAs(\"string\", view, data, helpers, callback);\n    },\n    renderTo: function(format, renderer, data, helpers) {\n      return (format === \"string\" && renderer.render ? renderer.render : renderer)(data, helpers);\n    },\n    renderAs: function(format, view, data, helpers, callback) {\n      if (isFunction(helpers)) {\n        callback = helpers;\n        helpers = undefined;\n      }\n      var deferreds = getDeferreds(data);\n      var reading,\n          deferred,\n          dataCopy,\n          async,\n          response;\n      if (deferreds.length) {\n        deferred = new can.Deferred();\n        dataCopy = can.extend({}, data);\n        deferreds.push(get(view, true));\n        can.when.apply(can, deferreds).then(function(resolved) {\n          var objs = makeArray(arguments),\n              renderer = objs.pop(),\n              result;\n          if (can.isDeferred(data)) {\n            dataCopy = usefulPart(resolved);\n          } else {\n            for (var prop in data) {\n              if (can.isDeferred(data[prop])) {\n                dataCopy[prop] = usefulPart(objs.shift());\n              }\n            }\n          }\n          result = can.view.renderTo(format, renderer, dataCopy, helpers);\n          deferred.resolve(result, dataCopy);\n          if (callback) {\n            callback(result, dataCopy);\n          }\n        }, function() {\n          deferred.reject.apply(deferred, arguments);\n        });\n        return deferred;\n      } else {\n        reading = can.__clearReading();\n        async = isFunction(callback);\n        deferred = get(view, async);\n        if (reading) {\n          can.__setReading(reading);\n        }\n        if (async) {\n          response = deferred;\n          deferred.then(function(renderer) {\n            callback(data ? can.view.renderTo(format, renderer, data, helpers) : renderer);\n          });\n        } else {\n          if (deferred.state() === 'resolved' && deferred.__view_id) {\n            var currentRenderer = $view.cachedRenderers[deferred.__view_id];\n            return data ? can.view.renderTo(format, currentRenderer, data, helpers) : currentRenderer;\n          } else {\n            deferred.then(function(renderer) {\n              response = data ? can.view.renderTo(format, renderer, data, helpers) : renderer;\n            });\n          }\n        }\n        return response;\n      }\n    },\n    registerView: function(id, text, type, def) {\n      var info = (typeof type === \"object\" ? type : $view.types[type || $view.ext]),\n          renderer;\n      if (info.fragRenderer) {\n        renderer = info.fragRenderer(id, text);\n      } else {\n        renderer = makeRenderer(info.renderer(id, text));\n      }\n      def = def || new can.Deferred();\n      if ($view.cache) {\n        $view.cached[id] = def;\n        def.__view_id = id;\n        $view.cachedRenderers[id] = renderer;\n      }\n      return def.resolve(renderer);\n    }\n  });\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/view\", \"can/view/elements\", \"can/view/callbacks\"], function (can, elements, viewCallbacks) {\n\n\t/**\n\t * Helper(s)\n\t */\n\tvar newLine = /(\\r|\\n)+/g,\n\t\tnotEndTag = /\\//,\n\t\t// Escapes characters starting with `\\`.\n\t\tclean = function (content) {\n\t\t\treturn content\n\t\t\t\t.split('\\\\')\n\t\t\t\t.join(\"\\\\\\\\\")\n\t\t\t\t.split(\"\\n\")\n\t\t\t\t.join(\"\\\\n\")\n\t\t\t\t.split('\"')\n\t\t\t\t.join('\\\\\"')\n\t\t\t\t.split(\"\\t\")\n\t\t\t\t.join(\"\\\\t\");\n\t\t},\n\t\t// Returns a tagName to use as a temporary placeholder for live content\n\t\t// looks forward ... could be slow, but we only do it when necessary\n\t\tgetTag = function (tagName, tokens, i) {\n\t\t\t// if a tagName is provided, use that\n\t\t\tif (tagName) {\n\t\t\t\treturn tagName;\n\t\t\t} else {\n\t\t\t\t// otherwise go searching for the next two tokens like \"<\",TAG\n\t\t\t\twhile (i < tokens.length) {\n\t\t\t\t\tif (tokens[i] === \"<\" && !notEndTag.test(tokens[i + 1])) {\n\t\t\t\t\t\treturn elements.reverseTagMap[tokens[i + 1]] || 'span';\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\t},\n\t\tbracketNum = function (content) {\n\t\t\treturn (--content.split(\"{\")\n\t\t\t\t.length) - (--content.split(\"}\")\n\t\t\t\t.length);\n\t\t},\n\t\tmyEval = function (script) {\n\t\t\teval(script);\n\t\t},\n\t\tattrReg = /([^\\s]+)[\\s]*=[\\s]*$/,\n\t\t// Commands for caching.\n\t\tstartTxt = 'var ___v1ew = [];',\n\t\tfinishTxt = \"return ___v1ew.join('')\",\n\t\tput_cmd = \"___v1ew.push(\\n\",\n\t\tinsert_cmd = put_cmd,\n\t\t// Global controls (used by other functions to know where we are).\n\t\t// Are we inside a tag?\n\t\thtmlTag = null,\n\t\t// Are we within a quote within a tag?\n\t\tquote = null,\n\t\t// What was the text before the current quote? (used to get the `attr` name)\n\t\tbeforeQuote = null,\n\t\t// Whether a rescan is in progress\n\t\trescan = null,\n\t\tgetAttrName = function () {\n\t\t\tvar matches = beforeQuote.match(attrReg);\n\t\t\treturn matches && matches[1];\n\t\t},\n\t\t// Used to mark where the element is.\n\t\tstatus = function () {\n\t\t\t// `t` - `1`.\n\t\t\t// `h` - `0`.\n\t\t\t// `q` - String `beforeQuote`.\n\t\t\treturn quote ? \"'\" + getAttrName() + \"'\" : (htmlTag ? 1 : 0);\n\t\t},\n\t\t// returns the top of a stack\n\t\ttop = function (stack) {\n\t\t\treturn stack[stack.length - 1];\n\t\t},\n\t\tScanner;\n\n\t/**\n\t * @constructor can.view.Scanner\n\t *\n\t * can.view.Scanner is used to convert a template into a JavaScript function.  That\n\t * function is called to produce a rendered result as a string. Often\n\t * the rendered result will include data-view-id attributes on elements that\n\t * will be processed after the template is used to create a document fragment.\n\t *\n\t *\n\t * @param {{text: can.view.Scanner.text, tokens: Array<can.view.Scanner.token>, helpers: Array<can.view.Scanner.helpers>}}\n\t */\n\t//\n\t/**\n\t * @typedef {{0:String,}}\n\t */\n\n\tcan.view.Scanner = Scanner = function (options) {\n\t\t// Set options on self\n\t\tcan.extend(this, {\n\t\t\t/**\n\t\t\t * @typedef {{start: String, escape: String, scope: String, options: String}}  can.view.Scanner.text\n\t\t\t */\n\t\t\ttext: {},\n\t\t\ttokens: []\n\t\t}, options);\n\t\t// make sure it's an empty string if it's not\n\t\tthis.text.options = this.text.options || \"\";\n\n\t\t// Cache a token lookup\n\t\tthis.tokenReg = [];\n\t\tthis.tokenSimple = {\n\t\t\t\"<\": \"<\",\n\t\t\t\">\": \">\",\n\t\t\t'\"': '\"',\n\t\t\t\"'\": \"'\"\n\t\t};\n\t\tthis.tokenComplex = [];\n\t\tthis.tokenMap = {};\n\t\tfor (var i = 0, token; token = this.tokens[i]; i++) {\n\t\t\t/**\n\t\t\t * Token data structure (complex token and rescan function are optional):\n\t\t\t * [\n\t\t\t *\t\"token name\",\n\t\t\t *\t\"simple token or abbreviation\",\n\t\t\t *\t/complex token regexp/,\n\t\t\t *\tfunction(content) {\n\t\t\t *\t\t// Rescan Function\n\t\t\t *\t\treturn {\n\t\t\t *\t\t\tbefore: '\\n',\n\t\t\t *\t\t\tcontent: content.trim(),\n\t\t\t *\t\t\tafter: '\\n'\n\t\t\t *\t\t}\n\t\t\t * ]\n\t\t\t */\n\n\t\t\t// Save complex mappings (custom regexp)\n\t\t\tif (token[2]) {\n\t\t\t\tthis.tokenReg.push(token[2]);\n\t\t\t\tthis.tokenComplex.push({\n\t\t\t\t\tabbr: token[1],\n\t\t\t\t\tre: new RegExp(token[2]),\n\t\t\t\t\trescan: token[3]\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Save simple mappings (string only, no regexp)\n\t\t\telse {\n\t\t\t\tthis.tokenReg.push(token[1]);\n\t\t\t\tthis.tokenSimple[token[1]] = token[0];\n\t\t\t}\n\t\t\tthis.tokenMap[token[0]] = token[1];\n\t\t}\n\n\t\t// Cache the token registry.\n\t\tthis.tokenReg = new RegExp(\"(\" + this.tokenReg.slice(0)\n\t\t\t.concat([\"<\", \">\", '\"', \"'\"])\n\t\t\t.join(\"|\") + \")\", \"g\");\n\t};\n\n\t/**\n\t * Extend can.View to add scanner support.\n\t */\n\tScanner.prototype = {\n\t\t// a default that can be overwritten\n\t\thelpers: [],\n\n\t\tscan: function (source, name) {\n\t\t\tvar tokens = [],\n\t\t\t\tlast = 0,\n\t\t\t\tsimple = this.tokenSimple,\n\t\t\t\tcomplex = this.tokenComplex;\n\n\t\t\tsource = source.replace(newLine, \"\\n\");\n\t\t\tif (this.transform) {\n\t\t\t\tsource = this.transform(source);\n\t\t\t}\n\t\t\tsource.replace(this.tokenReg, function (whole, part) {\n\t\t\t\t// offset is the second to last argument\n\t\t\t\tvar offset = arguments[arguments.length - 2];\n\n\t\t\t\t// if the next token starts after the last token ends\n\t\t\t\t// push what's in between\n\t\t\t\tif (offset > last) {\n\t\t\t\t\ttokens.push(source.substring(last, offset));\n\t\t\t\t}\n\n\t\t\t\t// push the simple token (if there is one)\n\t\t\t\tif (simple[whole]) {\n\t\t\t\t\ttokens.push(whole);\n\t\t\t\t}\n\t\t\t\t// otherwise lookup complex tokens\n\t\t\t\telse {\n\t\t\t\t\tfor (var i = 0, token; token = complex[i]; i++) {\n\t\t\t\t\t\tif (token.re.test(whole)) {\n\t\t\t\t\t\t\ttokens.push(token.abbr);\n\t\t\t\t\t\t\t// Push a rescan function if one exists\n\t\t\t\t\t\t\tif (token.rescan) {\n\t\t\t\t\t\t\t\ttokens.push(token.rescan(part));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update the position of the last part of the last token\n\t\t\t\tlast = offset + part.length;\n\t\t\t});\n\n\t\t\t// if there's something at the end, add it\n\t\t\tif (last < source.length) {\n\t\t\t\ttokens.push(source.substr(last));\n\t\t\t}\n\n\t\t\tvar content = '',\n\t\t\t\tbuff = [startTxt + (this.text.start || '')],\n\t\t\t\t// Helper `function` for putting stuff in the view concat.\n\t\t\t\tput = function (content, bonus) {\n\t\t\t\t\tbuff.push(put_cmd, '\"', clean(content), '\"' + (bonus || '') + ');');\n\t\t\t\t},\n\t\t\t\t// A stack used to keep track of how we should end a bracket\n\t\t\t\t// `}`.\n\t\t\t\t// Once we have a `<%= %>` with a `leftBracket`,\n\t\t\t\t// we store how the file should end here (either `))` or `;`).\n\t\t\t\tendStack = [],\n\t\t\t\t// The last token, used to remember which tag we are in.\n\t\t\t\tlastToken,\n\t\t\t\t// The corresponding magic tag.\n\t\t\t\tstartTag = null,\n\t\t\t\t// Was there a magic tag inside an html tag?\n\t\t\t\tmagicInTag = false,\n\t\t\t\t// was there a special state\n\t\t\t\tspecialStates = {\n\t\t\t\t\tattributeHookups: [],\n\t\t\t\t\t// a stack of tagHookups\n\t\t\t\t\ttagHookups: [],\n\t\t\t\t\t//last tag hooked up\n\t\t\t\t\tlastTagHookup: ''\n\t\t\t\t},\n\t\t\t\t// Helper `function` for removing tagHookups from the hookup stack\n\t\t\t\tpopTagHookup = function() {\n\t\t\t\t\t// The length of tagHookups is the nested depth which can be used to uniquely identify custom tags of the same type\n\t\t\t\t\tspecialStates.lastTagHookup = specialStates.tagHookups.pop() + specialStates.tagHookups.length;\n\t\t\t\t},\n\t\t\t\t// The current tag name.\n\t\t\t\ttagName = '',\n\t\t\t\t// stack of tagNames\n\t\t\t\ttagNames = [],\n\t\t\t\t// Pop from tagNames?\n\t\t\t\tpopTagName = false,\n\t\t\t\t// Declared here.\n\t\t\t\tbracketCount,\n\t\t\t\t// in a special attr like src= or style=\n\t\t\t\tspecialAttribute = false,\n\n\t\t\t\ti = 0,\n\t\t\t\ttoken,\n\t\t\t\ttmap = this.tokenMap,\n\t\t\t\tattrName;\n\n\t\t\t// Reinitialize the tag state goodness.\n\t\t\thtmlTag = quote = beforeQuote = null;\n\t\t\tfor (;\n\t\t\t\t(token = tokens[i++]) !== undefined;) {\n\t\t\t\tif (startTag === null) {\n\t\t\t\t\tswitch (token) {\n\t\t\t\t\tcase tmap.left:\n\t\t\t\t\tcase tmap.escapeLeft:\n\t\t\t\t\tcase tmap.returnLeft:\n\t\t\t\t\t\tmagicInTag = htmlTag && 1;\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase tmap.commentLeft:\n\t\t\t\t\t\t// A new line -- just add whatever content within a clean.\n\t\t\t\t\t\t// Reset everything.\n\t\t\t\t\t\tstartTag = token;\n\t\t\t\t\t\tif (content.length) {\n\t\t\t\t\t\t\tput(content);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase tmap.escapeFull:\n\t\t\t\t\t\t// This is a full line escape (a line that contains only whitespace and escaped logic)\n\t\t\t\t\t\t// Break it up into escape left and right\n\t\t\t\t\t\tmagicInTag = htmlTag && 1;\n\t\t\t\t\t\trescan = 1;\n\t\t\t\t\t\tstartTag = tmap.escapeLeft;\n\t\t\t\t\t\tif (content.length) {\n\t\t\t\t\t\t\tput(content);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trescan = tokens[i++];\n\t\t\t\t\t\tcontent = rescan.content || rescan;\n\t\t\t\t\t\tif (rescan.before) {\n\t\t\t\t\t\t\tput(rescan.before);\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttokens.splice(i, 0, tmap.right);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase tmap.commentFull:\n\t\t\t\t\t\t// Ignore full line comments.\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase tmap.templateLeft:\n\t\t\t\t\t\tcontent += tmap.left;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '<':\n\t\t\t\t\t\t// Make sure we are not in a comment.\n\t\t\t\t\t\tif (tokens[i].indexOf(\"!--\") !== 0) {\n\t\t\t\t\t\t\thtmlTag = 1;\n\t\t\t\t\t\t\tmagicInTag = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontent += token;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '>':\n\t\t\t\t\t\thtmlTag = 0;\n\t\t\t\t\t\t// content.substr(-1) doesn't work in IE7/8\n\t\t\t\t\t\tvar emptyElement = (content.substr(content.length - 1) === \"/\" || content.substr(content.length - 2) === \"--\"),\n\t\t\t\t\t\t\tattrs = \"\";\n\t\t\t\t\t\t// if there was a magic tag\n\t\t\t\t\t\t// or it's an element that has text content between its tags,\n\t\t\t\t\t\t// but content is not other tags add a hookup\n\t\t\t\t\t\t// TODO: we should only add `can.EJS.pending()` if there's a magic tag\n\t\t\t\t\t\t// within the html tags.\n\t\t\t\t\t\tif (specialStates.attributeHookups.length) {\n\t\t\t\t\t\t\tattrs = \"attrs: ['\" + specialStates.attributeHookups.join(\"','\") + \"'], \";\n\t\t\t\t\t\t\tspecialStates.attributeHookups = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// this is the > of a special tag\n\t\t\t\t\t\t// comparison to lastTagHookup makes sure the same custom tags can be nested\n\t\t\t\t\t\tif ((tagName + specialStates.tagHookups.length) !== specialStates.lastTagHookup && tagName === top(specialStates.tagHookups)) {\n\t\t\t\t\t\t\t// If it's a self closing tag (like <content/>) make sure we put the / at the end.\n\t\t\t\t\t\t\tif (emptyElement) {\n\t\t\t\t\t\t\t\tcontent = content.substr(0, content.length - 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Put the start of the end\n\t\t\t\t\t\t\tbuff.push(put_cmd,\n\t\t\t\t\t\t\t\t'\"', clean(content), '\"',\n\t\t\t\t\t\t\t\t\",can.view.pending({tagName:'\" + tagName + \"',\" + (attrs) + \"scope: \" + (this.text.scope || \"this\") + this.text.options);\n\n\t\t\t\t\t\t\t// if it's a self closing tag (like <content/>) close and end the tag\n\t\t\t\t\t\t\tif (emptyElement) {\n\t\t\t\t\t\t\t\tbuff.push(\"}));\");\n\t\t\t\t\t\t\t\tcontent = \"/>\";\n\t\t\t\t\t\t\t\tpopTagHookup();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if it's an empty tag\t \n\t\t\t\t\t\t\telse if (tokens[i] === \"<\" && tokens[i + 1] === \"/\" + tagName) {\n\t\t\t\t\t\t\t\tbuff.push(\"}));\");\n\t\t\t\t\t\t\t\tcontent = token;\n\t\t\t\t\t\t\t\tpopTagHookup();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// it has content\n\t\t\t\t\t\t\t\tbuff.push(\",subtemplate: function(\" + this.text.argNames + \"){\\n\" + startTxt + (this.text.start || ''));\n\t\t\t\t\t\t\t\tcontent = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if (magicInTag || (!popTagName && elements.tagToContentPropMap[tagNames[tagNames.length - 1]]) || attrs) {\n\t\t\t\t\t\t\t// make sure / of /> is on the right of pending\n\t\t\t\t\t\t\tvar pendingPart = \",can.view.pending({\" + attrs + \"scope: \" + (this.text.scope || \"this\") + this.text.options + \"}),\\\"\";\n\t\t\t\t\t\t\tif (emptyElement) {\n\t\t\t\t\t\t\t\tput(content.substr(0, content.length - 1), pendingPart + \"/>\\\"\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tput(content, pendingPart + \">\\\"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontent = '';\n\t\t\t\t\t\t\tmagicInTag = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontent += token;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if it's a tag like <input/>\n\t\t\t\t\t\tif (emptyElement || popTagName) {\n\t\t\t\t\t\t\t// remove the current tag in the stack\n\t\t\t\t\t\t\ttagNames.pop();\n\t\t\t\t\t\t\t// set the current tag to the previous parent\n\t\t\t\t\t\t\ttagName = tagNames[tagNames.length - 1];\n\t\t\t\t\t\t\t// Don't pop next time\n\t\t\t\t\t\t\tpopTagName = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tspecialStates.attributeHookups = [];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"'\":\n\t\t\t\t\tcase '\"':\n\t\t\t\t\t\t// If we are in an html tag, finding matching quotes.\n\t\t\t\t\t\tif (htmlTag) {\n\t\t\t\t\t\t\t// We have a quote and it matches.\n\t\t\t\t\t\t\tif (quote && quote === token) {\n\t\t\t\t\t\t\t\t// We are exiting the quote.\n\t\t\t\t\t\t\t\tquote = null;\n\t\t\t\t\t\t\t\t// Otherwise we are creating a quote.\n\t\t\t\t\t\t\t\t// TODO: does this handle `\\`?\n\t\t\t\t\t\t\t\tvar attr = getAttrName();\n\t\t\t\t\t\t\t\tif (viewCallbacks.attr(attr)) {\n\t\t\t\t\t\t\t\t\tspecialStates.attributeHookups.push(attr);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (specialAttribute) {\n\n\t\t\t\t\t\t\t\t\tcontent += token;\n\t\t\t\t\t\t\t\t\tput(content);\n\t\t\t\t\t\t\t\t\tbuff.push(finishTxt, \"}));\\n\");\n\t\t\t\t\t\t\t\t\tcontent = \"\";\n\t\t\t\t\t\t\t\t\tspecialAttribute = false;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else if (quote === null) {\n\t\t\t\t\t\t\t\tquote = token;\n\t\t\t\t\t\t\t\tbeforeQuote = lastToken;\n\t\t\t\t\t\t\t\tattrName = getAttrName();\n\t\t\t\t\t\t\t\t// TODO: check if there's magic!!!!\n\t\t\t\t\t\t\t\tif ((tagName === \"img\" && attrName === \"src\") || attrName === \"style\") {\n\t\t\t\t\t\t\t\t\t// put content that was before the attr name, but don't include the src=\n\t\t\t\t\t\t\t\t\tput(content.replace(attrReg, \"\"));\n\t\t\t\t\t\t\t\t\tcontent = \"\";\n\n\t\t\t\t\t\t\t\t\tspecialAttribute = true;\n\n\t\t\t\t\t\t\t\t\tbuff.push(insert_cmd, \"can.view.txt(2,'\" + getTag(tagName, tokens, i) + \"',\" + status() + \",this,function(){\", startTxt);\n\t\t\t\t\t\t\t\t\tput(attrName + \"=\" + token);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// Track the current tag\n\t\t\t\t\t\tif (lastToken === '<') {\n\n\t\t\t\t\t\t\ttagName = token.substr(0, 3) === \"!--\" ?\n\t\t\t\t\t\t\t\t\"!--\" : token.split(/\\s/)[0];\n\n\t\t\t\t\t\t\tvar isClosingTag = false,\n\t\t\t\t\t\t\t\tcleanedTagName;\n\n\t\t\t\t\t\t\tif (tagName.indexOf(\"/\") === 0) {\n\t\t\t\t\t\t\t\tisClosingTag = true;\n\t\t\t\t\t\t\t\tcleanedTagName = tagName.substr(1);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (isClosingTag) { // </tag>\n\n\t\t\t\t\t\t\t\t// when we enter a new tag, pop the tag name stack\n\t\t\t\t\t\t\t\tif (top(tagNames) === cleanedTagName) {\n\t\t\t\t\t\t\t\t\t// set tagName to the last tagName\n\t\t\t\t\t\t\t\t\t// if there are no more tagNames, we'll rely on getTag.\n\t\t\t\t\t\t\t\t\ttagName = cleanedTagName;\n\t\t\t\t\t\t\t\t\tpopTagName = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// if we are in a closing tag of a custom tag\n\t\t\t\t\t\t\t\tif (top(specialStates.tagHookups) === cleanedTagName) {\n\n\t\t\t\t\t\t\t\t\t// remove the last < from the content\n\t\t\t\t\t\t\t\t\tput(content.substr(0, content.length - 1));\n\n\t\t\t\t\t\t\t\t\t// finish the \"section\"\n\t\t\t\t\t\t\t\t\tbuff.push(finishTxt + \"}}) );\");\n\t\t\t\t\t\t\t\t\t// the < belongs to the outside\n\t\t\t\t\t\t\t\t\tcontent = \"><\";\n\t\t\t\t\t\t\t\t\tpopTagHookup();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (tagName.lastIndexOf(\"/\") === tagName.length - 1) {\n\t\t\t\t\t\t\t\t\ttagName = tagName.substr(0, tagName.length - 1);\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (tagName !== \"!--\" && (viewCallbacks.tag(tagName) )) {\n\t\t\t\t\t\t\t\t\t// if the content tag is inside something it doesn't belong ...\n\t\t\t\t\t\t\t\t\tif (tagName === \"content\" && elements.tagMap[top(tagNames)]) {\n\t\t\t\t\t\t\t\t\t\t// convert it to an element that will work\n\t\t\t\t\t\t\t\t\t\ttoken = token.replace(\"content\", elements.tagMap[top(tagNames)]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// we will hookup at the ending tag>\n\t\t\t\t\t\t\t\t\tspecialStates.tagHookups.push(tagName);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttagNames.push(tagName);\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontent += token;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// We have a start tag.\n\t\t\t\t\tswitch (token) {\n\t\t\t\t\tcase tmap.right:\n\t\t\t\t\tcase tmap.returnRight:\n\t\t\t\t\t\tswitch (startTag) {\n\t\t\t\t\t\tcase tmap.left:\n\t\t\t\t\t\t\t// Get the number of `{ minus }`\n\t\t\t\t\t\t\tbracketCount = bracketNum(content);\n\n\t\t\t\t\t\t\t// We are ending a block.\n\t\t\t\t\t\t\tif (bracketCount === 1) {\n\t\t\t\t\t\t\t\t// We are starting on. \n\t\t\t\t\t\t\t\tbuff.push(insert_cmd, 'can.view.txt(0,\\'' + getTag(tagName, tokens, i) + '\\',' + status() + ',this,function(){', startTxt, content);\n\t\t\t\t\t\t\t\tendStack.push({\n\t\t\t\t\t\t\t\t\tbefore: \"\",\n\t\t\t\t\t\t\t\t\tafter: finishTxt + \"}));\\n\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// How are we ending this statement?\n\t\t\t\t\t\t\t\tlast = // If the stack has value and we are ending a block...\n\t\t\t\t\t\t\t\tendStack.length && bracketCount === -1 ? // Use the last item in the block stack.\n\t\t\t\t\t\t\t\tendStack.pop() : // Or use the default ending.\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tafter: \";\"\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t// If we are ending a returning block,\n\t\t\t\t\t\t\t\t// add the finish text which returns the result of the\n\t\t\t\t\t\t\t\t// block.\n\t\t\t\t\t\t\t\tif (last.before) {\n\t\t\t\t\t\t\t\t\tbuff.push(last.before);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Add the remaining content.\n\t\t\t\t\t\t\t\tbuff.push(content, \";\", last.after);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase tmap.escapeLeft:\n\t\t\t\t\t\tcase tmap.returnLeft:\n\t\t\t\t\t\t\t// We have an extra `{` -> `block`.\n\t\t\t\t\t\t\t// Get the number of `{ minus }`.\n\t\t\t\t\t\t\tbracketCount = bracketNum(content);\n\t\t\t\t\t\t\t// If we have more `{`, it means there is a block.\n\t\t\t\t\t\t\tif (bracketCount) {\n\t\t\t\t\t\t\t\t// When we return to the same # of `{` vs `}` end with a `doubleParent`.\n\t\t\t\t\t\t\t\tendStack.push({\n\t\t\t\t\t\t\t\t\tbefore: finishTxt,\n\t\t\t\t\t\t\t\t\tafter: \"}));\\n\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar escaped = startTag === tmap.escapeLeft ? 1 : 0,\n\t\t\t\t\t\t\t\tcommands = {\n\t\t\t\t\t\t\t\t\tinsert: insert_cmd,\n\t\t\t\t\t\t\t\t\ttagName: getTag(tagName, tokens, i),\n\t\t\t\t\t\t\t\t\tstatus: status(),\n\t\t\t\t\t\t\t\t\tspecialAttribute: specialAttribute\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (var ii = 0; ii < this.helpers.length; ii++) {\n\t\t\t\t\t\t\t\t// Match the helper based on helper\n\t\t\t\t\t\t\t\t// regex name value\n\t\t\t\t\t\t\t\tvar helper = this.helpers[ii];\n\t\t\t\t\t\t\t\tif (helper.name.test(content)) {\n\t\t\t\t\t\t\t\t\tcontent = helper.fn(content, commands);\n\n\t\t\t\t\t\t\t\t\t// dont escape partials\n\t\t\t\t\t\t\t\t\tif (helper.name.source === /^>[\\s]*\\w*/.source) {\n\t\t\t\t\t\t\t\t\t\tescaped = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Handle special cases\n\t\t\t\t\t\t\tif (typeof content === 'object') {\n\n\t\t\t\t\t\t\t\tif (content.startTxt && content.end && specialAttribute) {\n\t\t\t\t\t\t\t\t\tbuff.push(insert_cmd, \"can.view.toStr( \",content.content, '() ) );');\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tif (content.startTxt) {\n\t\t\t\t\t\t\t\t\t\tbuff.push(insert_cmd, \"can.view.txt(\\n\" +\n\t\t\t\t\t\t\t\t\t\t\t(typeof status() === \"string\" || (content.escaped != null ? content.escaped : escaped)) + \",\\n'\" + tagName + \"',\\n\" + status() + \",\\nthis,\\n\");\n\t\t\t\t\t\t\t\t\t} else if (content.startOnlyTxt) {\n\t\t\t\t\t\t\t\t\t\tbuff.push(insert_cmd, 'can.view.onlytxt(this,\\n');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbuff.push(content.content);\n\t\t\t\t\t\t\t\t\tif (content.end) {\n\t\t\t\t\t\t\t\t\t\tbuff.push('));');\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else if (specialAttribute) {\n\n\t\t\t\t\t\t\t\tbuff.push(insert_cmd, content, ');');\n\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// If we have `<%== a(function(){ %>` then we want\n\t\t\t\t\t\t\t\t// `can.EJS.text(0,this, function(){ return a(function(){ var _v1ew = [];`.\n\n\t\t\t\t\t\t\t\tbuff.push(insert_cmd, \"can.view.txt(\\n\" + (typeof status() === \"string\" || escaped) +\n\t\t\t\t\t\t\t\t\t\",\\n'\" + tagName + \"',\\n\" + status() + \",\\nthis,\\nfunction(){ \" +\n\t\t\t\t\t\t\t\t\t(this.text.escape || '') +\n\t\t\t\t\t\t\t\t\t\"return \", content,\n\t\t\t\t\t\t\t\t\t// If we have a block.\n\t\t\t\t\t\t\t\t\tbracketCount ?\n\t\t\t\t\t\t\t\t\t// Start with startTxt `\"var _v1ew = [];\"`.\n\t\t\t\t\t\t\t\t\tstartTxt :\n\t\t\t\t\t\t\t\t\t// If not, add `doubleParent` to close push and text.\n\t\t\t\t\t\t\t\t\t\"}));\\n\"\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t/*buff.push(insert_cmd, \"can.view.txt(\\n\" +\n\t\t\t\t\t\t\t\t\t  + \",\\n'\" +\n\t\t\t\t\t\t\t\t\t  tagName + \"',\\n\" +\n\t\t\t\t\t\t\t\t\t  status() +\",\\n\" +\n\t\t\t\t\t\t\t\t\t  \"this,\\nfunction(){ \" +\n\t\t\t\t\t\t\t\t\t  (this.text.escape || '') +\n\t\t\t\t\t\t\t\t\t  \"return \", content,\n\t\t\t\t\t\t\t\t\t  // If we have a block.\n\t\t\t\t\t\t\t\t\t  bracketCount ?\n\t\t\t\t\t\t\t\t\t  // Start with startTxt `\"var _v1ew = [];\"`.\n\t\t\t\t\t\t\t\t\t  startTxt :\n\t\t\t\t\t\t\t\t\t  // If not, add `doubleParent` to close push and text.\n\t\t\t\t\t\t\t\t\t  \"}));\\n\");*/\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (rescan && rescan.after && rescan.after.length) {\n\t\t\t\t\t\t\t\tput(rescan.after.length);\n\t\t\t\t\t\t\t\trescan = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstartTag = null;\n\t\t\t\t\t\tcontent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase tmap.templateLeft:\n\t\t\t\t\t\tcontent += tmap.left;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tcontent += token;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastToken = token;\n\t\t\t}\n\n\t\t\t// Put it together...\n\t\t\tif (content.length) {\n\t\t\t\t// Should be `content.dump` in Ruby.\n\t\t\t\tput(content);\n\t\t\t}\n\t\t\tbuff.push(\";\");\n\t\t\tvar template = buff.join(''),\n\t\t\t\tout = {\n\t\t\t\t\tout: (this.text.outStart || \"\") + template + \" \" + finishTxt + (this.text.outEnd || \"\")\n\t\t\t\t};\n\n\t\t\t// Use `eval` instead of creating a function, because it is easier to debug.\n\t\t\tmyEval.call(out, 'this.fn = (function(' + this.text.argNames + '){' + out.out + '});\\r\\n//# sourceURL=' + name + '.js');\n\t\t\treturn out;\n\t\t}\n\t};\n\n\t// can.view.attr\n\t\n\t// This is called when there is a special tag\n\tcan.view.pending = function (viewData) {\n\t\t// we need to call any live hookups\n\t\t// so get that and return the hook\n\t\t// a better system will always be called with the same stuff\n\t\tvar hooks = can.view.getHooks();\n\t\treturn can.view.hook(function (el) {\n\t\t\tcan.each(hooks, function (fn) {\n\t\t\t\tfn(el);\n\t\t\t});\n\t\t\tviewData.templateType = \"legacy\";\n\t\t\tif (viewData.tagName) {\n\t\t\t\tviewCallbacks.tagHandler(el, viewData.tagName, viewData);\n\t\t\t}\n\n\t\t\tcan.each(viewData && viewData.attrs || [], function (attributeName) {\n\t\t\t\tviewData.attributeName = attributeName;\n\t\t\t\tvar callback = viewCallbacks.attr(attributeName);\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback(el, viewData);\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\n\t};\n\n\tcan.view.tag(\"content\", function (el, tagData) {\n\t\treturn tagData.scope;\n\t});\n\n\tcan.view.Scanner = Scanner;\n\n\treturn Scanner;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/scanner\";\ndefine([\"can/view\", \"can/view/elements\", \"can/view/callbacks\"], function(can, elements, viewCallbacks) {\n  var newLine = /(\\r|\\n)+/g,\n      notEndTag = /\\//,\n      clean = function(content) {\n        return content.split('\\\\').join(\"\\\\\\\\\").split(\"\\n\").join(\"\\\\n\").split('\"').join('\\\\\"').split(\"\\t\").join(\"\\\\t\");\n      },\n      getTag = function(tagName, tokens, i) {\n        if (tagName) {\n          return tagName;\n        } else {\n          while (i < tokens.length) {\n            if (tokens[i] === \"<\" && !notEndTag.test(tokens[i + 1])) {\n              return elements.reverseTagMap[tokens[i + 1]] || 'span';\n            }\n            i++;\n          }\n        }\n        return '';\n      },\n      bracketNum = function(content) {\n        return (--content.split(\"{\").length) - (--content.split(\"}\").length);\n      },\n      myEval = function(script) {\n        eval(script);\n      },\n      attrReg = /([^\\s]+)[\\s]*=[\\s]*$/,\n      startTxt = 'var ___v1ew = [];',\n      finishTxt = \"return ___v1ew.join('')\",\n      put_cmd = \"___v1ew.push(\\n\",\n      insert_cmd = put_cmd,\n      htmlTag = null,\n      quote = null,\n      beforeQuote = null,\n      rescan = null,\n      getAttrName = function() {\n        var matches = beforeQuote.match(attrReg);\n        return matches && matches[1];\n      },\n      status = function() {\n        return quote ? \"'\" + getAttrName() + \"'\" : (htmlTag ? 1 : 0);\n      },\n      top = function(stack) {\n        return stack[stack.length - 1];\n      },\n      Scanner;\n  can.view.Scanner = Scanner = function(options) {\n    can.extend(this, {\n      text: {},\n      tokens: []\n    }, options);\n    this.text.options = this.text.options || \"\";\n    this.tokenReg = [];\n    this.tokenSimple = {\n      \"<\": \"<\",\n      \">\": \">\",\n      '\"': '\"',\n      \"'\": \"'\"\n    };\n    this.tokenComplex = [];\n    this.tokenMap = {};\n    for (var i = 0,\n        token; token = this.tokens[i]; i++) {\n      if (token[2]) {\n        this.tokenReg.push(token[2]);\n        this.tokenComplex.push({\n          abbr: token[1],\n          re: new RegExp(token[2]),\n          rescan: token[3]\n        });\n      } else {\n        this.tokenReg.push(token[1]);\n        this.tokenSimple[token[1]] = token[0];\n      }\n      this.tokenMap[token[0]] = token[1];\n    }\n    this.tokenReg = new RegExp(\"(\" + this.tokenReg.slice(0).concat([\"<\", \">\", '\"', \"'\"]).join(\"|\") + \")\", \"g\");\n  };\n  Scanner.prototype = {\n    helpers: [],\n    scan: function(source, name) {\n      var tokens = [],\n          last = 0,\n          simple = this.tokenSimple,\n          complex = this.tokenComplex;\n      source = source.replace(newLine, \"\\n\");\n      if (this.transform) {\n        source = this.transform(source);\n      }\n      source.replace(this.tokenReg, function(whole, part) {\n        var offset = arguments[arguments.length - 2];\n        if (offset > last) {\n          tokens.push(source.substring(last, offset));\n        }\n        if (simple[whole]) {\n          tokens.push(whole);\n        } else {\n          for (var i = 0,\n              token; token = complex[i]; i++) {\n            if (token.re.test(whole)) {\n              tokens.push(token.abbr);\n              if (token.rescan) {\n                tokens.push(token.rescan(part));\n              }\n              break;\n            }\n          }\n        }\n        last = offset + part.length;\n      });\n      if (last < source.length) {\n        tokens.push(source.substr(last));\n      }\n      var content = '',\n          buff = [startTxt + (this.text.start || '')],\n          put = function(content, bonus) {\n            buff.push(put_cmd, '\"', clean(content), '\"' + (bonus || '') + ');');\n          },\n          endStack = [],\n          lastToken,\n          startTag = null,\n          magicInTag = false,\n          specialStates = {\n            attributeHookups: [],\n            tagHookups: [],\n            lastTagHookup: ''\n          },\n          popTagHookup = function() {\n            specialStates.lastTagHookup = specialStates.tagHookups.pop() + specialStates.tagHookups.length;\n          },\n          tagName = '',\n          tagNames = [],\n          popTagName = false,\n          bracketCount,\n          specialAttribute = false,\n          i = 0,\n          token,\n          tmap = this.tokenMap,\n          attrName;\n      htmlTag = quote = beforeQuote = null;\n      for (; (token = tokens[i++]) !== undefined; ) {\n        if (startTag === null) {\n          switch (token) {\n            case tmap.left:\n            case tmap.escapeLeft:\n            case tmap.returnLeft:\n              magicInTag = htmlTag && 1;\n            case tmap.commentLeft:\n              startTag = token;\n              if (content.length) {\n                put(content);\n              }\n              content = '';\n              break;\n            case tmap.escapeFull:\n              magicInTag = htmlTag && 1;\n              rescan = 1;\n              startTag = tmap.escapeLeft;\n              if (content.length) {\n                put(content);\n              }\n              rescan = tokens[i++];\n              content = rescan.content || rescan;\n              if (rescan.before) {\n                put(rescan.before);\n              }\n              tokens.splice(i, 0, tmap.right);\n              break;\n            case tmap.commentFull:\n              break;\n            case tmap.templateLeft:\n              content += tmap.left;\n              break;\n            case '<':\n              if (tokens[i].indexOf(\"!--\") !== 0) {\n                htmlTag = 1;\n                magicInTag = 0;\n              }\n              content += token;\n              break;\n            case '>':\n              htmlTag = 0;\n              var emptyElement = (content.substr(content.length - 1) === \"/\" || content.substr(content.length - 2) === \"--\"),\n                  attrs = \"\";\n              if (specialStates.attributeHookups.length) {\n                attrs = \"attrs: ['\" + specialStates.attributeHookups.join(\"','\") + \"'], \";\n                specialStates.attributeHookups = [];\n              }\n              if ((tagName + specialStates.tagHookups.length) !== specialStates.lastTagHookup && tagName === top(specialStates.tagHookups)) {\n                if (emptyElement) {\n                  content = content.substr(0, content.length - 1);\n                }\n                buff.push(put_cmd, '\"', clean(content), '\"', \",can.view.pending({tagName:'\" + tagName + \"',\" + (attrs) + \"scope: \" + (this.text.scope || \"this\") + this.text.options);\n                if (emptyElement) {\n                  buff.push(\"}));\");\n                  content = \"/>\";\n                  popTagHookup();\n                } else if (tokens[i] === \"<\" && tokens[i + 1] === \"/\" + tagName) {\n                  buff.push(\"}));\");\n                  content = token;\n                  popTagHookup();\n                } else {\n                  buff.push(\",subtemplate: function(\" + this.text.argNames + \"){\\n\" + startTxt + (this.text.start || ''));\n                  content = '';\n                }\n              } else if (magicInTag || (!popTagName && elements.tagToContentPropMap[tagNames[tagNames.length - 1]]) || attrs) {\n                var pendingPart = \",can.view.pending({\" + attrs + \"scope: \" + (this.text.scope || \"this\") + this.text.options + \"}),\\\"\";\n                if (emptyElement) {\n                  put(content.substr(0, content.length - 1), pendingPart + \"/>\\\"\");\n                } else {\n                  put(content, pendingPart + \">\\\"\");\n                }\n                content = '';\n                magicInTag = 0;\n              } else {\n                content += token;\n              }\n              if (emptyElement || popTagName) {\n                tagNames.pop();\n                tagName = tagNames[tagNames.length - 1];\n                popTagName = false;\n              }\n              specialStates.attributeHookups = [];\n              break;\n            case \"'\":\n            case '\"':\n              if (htmlTag) {\n                if (quote && quote === token) {\n                  quote = null;\n                  var attr = getAttrName();\n                  if (viewCallbacks.attr(attr)) {\n                    specialStates.attributeHookups.push(attr);\n                  }\n                  if (specialAttribute) {\n                    content += token;\n                    put(content);\n                    buff.push(finishTxt, \"}));\\n\");\n                    content = \"\";\n                    specialAttribute = false;\n                    break;\n                  }\n                } else if (quote === null) {\n                  quote = token;\n                  beforeQuote = lastToken;\n                  attrName = getAttrName();\n                  if ((tagName === \"img\" && attrName === \"src\") || attrName === \"style\") {\n                    put(content.replace(attrReg, \"\"));\n                    content = \"\";\n                    specialAttribute = true;\n                    buff.push(insert_cmd, \"can.view.txt(2,'\" + getTag(tagName, tokens, i) + \"',\" + status() + \",this,function(){\", startTxt);\n                    put(attrName + \"=\" + token);\n                    break;\n                  }\n                }\n              }\n            default:\n              if (lastToken === '<') {\n                tagName = token.substr(0, 3) === \"!--\" ? \"!--\" : token.split(/\\s/)[0];\n                var isClosingTag = false,\n                    cleanedTagName;\n                if (tagName.indexOf(\"/\") === 0) {\n                  isClosingTag = true;\n                  cleanedTagName = tagName.substr(1);\n                }\n                if (isClosingTag) {\n                  if (top(tagNames) === cleanedTagName) {\n                    tagName = cleanedTagName;\n                    popTagName = true;\n                  }\n                  if (top(specialStates.tagHookups) === cleanedTagName) {\n                    put(content.substr(0, content.length - 1));\n                    buff.push(finishTxt + \"}}) );\");\n                    content = \"><\";\n                    popTagHookup();\n                  }\n                } else {\n                  if (tagName.lastIndexOf(\"/\") === tagName.length - 1) {\n                    tagName = tagName.substr(0, tagName.length - 1);\n                  }\n                  if (tagName !== \"!--\" && (viewCallbacks.tag(tagName))) {\n                    if (tagName === \"content\" && elements.tagMap[top(tagNames)]) {\n                      token = token.replace(\"content\", elements.tagMap[top(tagNames)]);\n                    }\n                    specialStates.tagHookups.push(tagName);\n                  }\n                  tagNames.push(tagName);\n                }\n              }\n              content += token;\n              break;\n          }\n        } else {\n          switch (token) {\n            case tmap.right:\n            case tmap.returnRight:\n              switch (startTag) {\n                case tmap.left:\n                  bracketCount = bracketNum(content);\n                  if (bracketCount === 1) {\n                    buff.push(insert_cmd, 'can.view.txt(0,\\'' + getTag(tagName, tokens, i) + '\\',' + status() + ',this,function(){', startTxt, content);\n                    endStack.push({\n                      before: \"\",\n                      after: finishTxt + \"}));\\n\"\n                    });\n                  } else {\n                    last = endStack.length && bracketCount === -1 ? endStack.pop() : {after: \";\"};\n                    if (last.before) {\n                      buff.push(last.before);\n                    }\n                    buff.push(content, \";\", last.after);\n                  }\n                  break;\n                case tmap.escapeLeft:\n                case tmap.returnLeft:\n                  bracketCount = bracketNum(content);\n                  if (bracketCount) {\n                    endStack.push({\n                      before: finishTxt,\n                      after: \"}));\\n\"\n                    });\n                  }\n                  var escaped = startTag === tmap.escapeLeft ? 1 : 0,\n                      commands = {\n                        insert: insert_cmd,\n                        tagName: getTag(tagName, tokens, i),\n                        status: status(),\n                        specialAttribute: specialAttribute\n                      };\n                  for (var ii = 0; ii < this.helpers.length; ii++) {\n                    var helper = this.helpers[ii];\n                    if (helper.name.test(content)) {\n                      content = helper.fn(content, commands);\n                      if (helper.name.source === /^>[\\s]*\\w*/.source) {\n                        escaped = 0;\n                      }\n                      break;\n                    }\n                  }\n                  if (typeof content === 'object') {\n                    if (content.startTxt && content.end && specialAttribute) {\n                      buff.push(insert_cmd, \"can.view.toStr( \", content.content, '() ) );');\n                    } else {\n                      if (content.startTxt) {\n                        buff.push(insert_cmd, \"can.view.txt(\\n\" + (typeof status() === \"string\" || (content.escaped != null ? content.escaped : escaped)) + \",\\n'\" + tagName + \"',\\n\" + status() + \",\\nthis,\\n\");\n                      } else if (content.startOnlyTxt) {\n                        buff.push(insert_cmd, 'can.view.onlytxt(this,\\n');\n                      }\n                      buff.push(content.content);\n                      if (content.end) {\n                        buff.push('));');\n                      }\n                    }\n                  } else if (specialAttribute) {\n                    buff.push(insert_cmd, content, ');');\n                  } else {\n                    buff.push(insert_cmd, \"can.view.txt(\\n\" + (typeof status() === \"string\" || escaped) + \",\\n'\" + tagName + \"',\\n\" + status() + \",\\nthis,\\nfunction(){ \" + (this.text.escape || '') + \"return \", content, bracketCount ? startTxt : \"}));\\n\");\n                  }\n                  if (rescan && rescan.after && rescan.after.length) {\n                    put(rescan.after.length);\n                    rescan = null;\n                  }\n                  break;\n              }\n              startTag = null;\n              content = '';\n              break;\n            case tmap.templateLeft:\n              content += tmap.left;\n              break;\n            default:\n              content += token;\n              break;\n          }\n        }\n        lastToken = token;\n      }\n      if (content.length) {\n        put(content);\n      }\n      buff.push(\";\");\n      var template = buff.join(''),\n          out = {out: (this.text.outStart || \"\") + template + \" \" + finishTxt + (this.text.outEnd || \"\")};\n      myEval.call(out, 'this.fn = (function(' + this.text.argNames + '){' + out.out + '});\\r\\n//# sourceURL=' + name + '.js');\n      return out;\n    }\n  };\n  can.view.pending = function(viewData) {\n    var hooks = can.view.getHooks();\n    return can.view.hook(function(el) {\n      can.each(hooks, function(fn) {\n        fn(el);\n      });\n      viewData.templateType = \"legacy\";\n      if (viewData.tagName) {\n        viewCallbacks.tagHandler(el, viewData.tagName, viewData);\n      }\n      can.each(viewData && viewData.attrs || [], function(attributeName) {\n        viewData.attributeName = attributeName;\n        var callback = viewCallbacks.attr(attributeName);\n        if (callback) {\n          callback(el, viewData);\n        }\n      });\n    });\n  };\n  can.view.tag(\"content\", function(el, tagData) {\n    return tagData.scope;\n  });\n  can.view.Scanner = Scanner;\n  return Scanner;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/util/bind\", \"can/util/batch\"], function (can, bind) {\n\n\t// ## Reading Helpers\n\t//\n\t// The following methods are used to call a function that relies on\n\t// observable data and to track the observable events which should \n\t// be listened to when changes occur.\n\t// To do this, [`can.__reading(observable, event)`](#can-__reading) is called to\n\t// \"broadcast\" the corresponding event on each read.\n\t// \n\t// ### Observed\n\t//\n\t// An \"Observed\" is an object of observable objects and events that\n\t// a function relies on. These objects and events must be listened to\n\t// in order to determine when to check a function for updates.\n\t// This looks like the following:\n\t//\n\t//     { \n\t//       \"map1|first\": {obj: map, event: \"first\"},\n\t//       \"map1|last\" : {obj: map, event: \"last\"}\n\t//     }\n\t// \n\t// Each object-event pair is mapped so no duplicates will be listed.\n\n\t// ### State\n\t// \n\t// `can.__read` may call a function that calls `can.__read` again. For\n\t// example, a compute can read another compute. To track each compute's\n\t// `Observed` object (containing observable objects and events), we maintain\n\t// a stack of Observed values for each call to `__read`.\n\tvar stack = [];\n\n\t// ### can.__read\n\t//\n\t// With a given function and context, calls the function\n\t// and returns the resulting value of the function as well\n\t// as the observable properties and events that were read.\n\tcan.__read = function (func, self) {\n\n\t\t// Add an object that `can.__read` will write to.\n\t\tstack.push({});\n\n\t\tvar value = func.call(self);\n\n\t\t// Example return value:\n\t\t// `{value: 100, observed: Observed}`\n\t\treturn {\n\t\t\tvalue: value,\n\t\t\tobserved: stack.pop()\n\t\t};\n\t};\n\n\t// ### can.__reading\n\t//\n\t// When an observable value is read, it must call `can.__reading` to \n\t// broadcast which object and event should be listened to.\n\tcan.__reading = function (obj, event) {\n\t\t// Add the observable object and the event\n\t\t// that was read to the `Observed` object on\n\t\t// the stack.\n\t\tif (stack.length) {\n\t\t\tstack[stack.length-1][obj._cid + '|' + event] = {\n\t\t\t\tobj: obj,\n\t\t\t\tevent: event + \"\"\n\t\t\t};\n\t\t}\n\n\t};\n\n\t// ### can.__clearReading\n\t//\n\t// Clears and returns the current observables.\n\t// This can be used to access a value without \n\t// it being handled as a regular `read`.\n\tcan.__clearReading = function () {\n\t\tif (stack.length) {\n\t\t\tvar ret = stack[stack.length-1];\n\t\t\tstack[stack.length-1] = {};\n\t\t\treturn ret;\n\t\t}\n\t};\n\t// Specifies current observables.\n\tcan.__setReading = function (o) {\n\t\tif (stack.length) {\n\t\t\tstack[stack.length-1] = o;\n\t\t}\n\t};\n\tcan.__addReading = function(o){\n\t\tif (stack.length) {\n\t\t\tcan.simpleExtend(stack[stack.length-1], o);\n\t\t}\n\t};\n\n\t// ## Section Name\n\n\t// ### getValueAndBind\n\t//\n\t// Calls a function and sets up bindings to call `onchanged`\n\t// when events from its \"Observed\" object are triggered.\n\t// Removes bindings from `oldObserved` that are no longer needed.\n\t// - func - the function to call.\n\t// - context - the `this` of the function.\n\t// - oldObserved - an object that contains what has already been bound to\n\t// - onchanged - the function to call when any change occurs\n\tvar getValueAndBind = function (func, context, oldObserved, onchanged) {\n\t\t// Call the function, get the value as well as the observed objects and events\n\t\tvar info = can.__read(func, context),\n\t\t\t// The objects-event pairs that must be bound to\n\t\t\tnewObserveSet = info.observed,\n\t\t\t// A flag that is used to determine if an event is already being observed.\n\t\t\tobEv,\n\t\t\tname;\n\t\t// Go through what needs to be observed.\n\t\tfor( name in newObserveSet ) {\n\t\t\t\n\t\t\tif( oldObserved[name] ) {\n\t\t\t\t// After binding is set up, values\n\t\t\t\t// in `oldObserved` will be unbound. So if a name\n\t\t\t\t// has already be observed, remove from `oldObserved`\n\t\t\t\t// to prevent this.\n\t\t\t\tdelete oldObserved[name];\n\t\t\t} else {\n\t\t\t\t// If current name has not been observed, listen to it.\n\t\t\t\tobEv = newObserveSet[name];\n\t\t\t\tobEv.obj.bind(obEv.event, onchanged);\n\t\t\t}\n\t\t}\n\n\t\t// Iterate through oldObserved, looking for observe/attributes\n\t\t// that are no longer being bound and unbind them.\n\t\tfor ( name in oldObserved) {\n\t\t\tobEv = oldObserved[name];\n\t\t\tobEv.obj.unbind(obEv.event, onchanged);\n\t\t}\n\t\t\n\t\treturn info;\n\t};\n\t\n\t// ### updateOnChange\n\t//\n\t// Fires a change event when a compute's value changes\n\tvar updateOnChange = function(compute, newValue, oldValue, batchNum){\n\t\t// Only trigger event when value has changed\n\t\tif (newValue !== oldValue) {\n\t\t\tcan.batch.trigger(compute, batchNum ? {type: \"change\", batchNum: batchNum} : 'change', [\n\t\t\t\tnewValue,\n\t\t\t\toldValue\n\t\t\t]);\n\t\t}\n\t};\n\t\n\t// ###setupComputeHandlers\n\t//\n\t// Sets up handlers for a compute.\n\t// - compute - the compute to set up handlers for\n\t// - func - the getter/setter function for the compute\n\t// - context - the `this` for the compute\n\t// - setCachedValue - function for setting cached value\n\t//\n\t// Returns an object with `on` and `off` functions.\n\tvar setupComputeHandlers = function(compute, func, context, setCachedValue) {\n\t\tvar readInfo,\n\t\t\tonchanged,\n\t\t\tbatchNum;\n\t\t\n\t\treturn {\n\t\t\t// Set up handler for when the compute changes\n\t\t\ton: function(updater){\n\t\t\t\tif(!onchanged) {\n\t\t\t\t\tonchanged = function(ev){\n\t\t\t\t\t\tif (compute.bound && (ev.batchNum === undefined || ev.batchNum !== batchNum) ) {\n\t\t\t\t\t\t\t// Keep the old value\n\t\t\t\t\t\t\tvar oldValue = readInfo.value;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Get the new value\n\t\t\t\t\t\t\treadInfo = getValueAndBind(func, context, readInfo.observed, onchanged);\n\n\t\t\t\t\t\t\t// Call the updater with old and new values\n\t\t\t\t\t\t\tupdater(readInfo.value, oldValue, ev.batchNum);\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tbatchNum = batchNum = ev.batchNum;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treadInfo = getValueAndBind(func, context, {}, onchanged);\n\t\t\t\t\n\t\t\t\tsetCachedValue(readInfo.value);\n\t\t\t\t\n\t\t\t\tcompute.hasDependencies = !can.isEmptyObject(readInfo.observed);\n\t\t\t},\n\t\t\t// Remove handler for the compute\n\t\t\toff: function(updater){\n\t\t\t\tfor (var name in readInfo.observed) {\n\t\t\t\t\tvar ob = readInfo.observed[name];\n\t\t\t\t\tob.obj.unbind(ob.event, onchanged);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\t// ###isObserve\n\t//\n\t// Checks if an object is observable\n\tvar isObserve = function (obj) {\n\t\treturn obj instanceof can.Map || obj && obj.__get;\n\t},\n\t// Instead of calculating whether anything is listening every time,\n\t// use a function to do nothing (which may be overwritten)\n\t\tk = function () {};\n\n\t// ## Creating a can.compute\n\t//\n\t// A `can.compute` can be created by\n\t// - [Specifying the getterSeter function](#specifying-gettersetter-function)\n\t// - [Observing a property of an object](#observing-a-property-of-an-object)\n\t// - [Specifying an initial value and a setter function](#specifying-an-initial-value-and-a-setter)\n\t// - [Specifying an initial value and how to read, update, and listen to changes](#specifying-an-initial-value-and-a-settings-object)\n\t// - [Simply specifying an initial value](#specifying-only-a-value)\n\tcan.compute = function (getterSetter, context, eventName) {\n\t// ### Setting up\n\t\t// Do nothing if getterSetter is already a compute\n\t\tif (getterSetter && getterSetter.isComputed) {\n\t\t\treturn getterSetter;\n\t\t}\n\t\t// The computed object\n\t\tvar computed,\n\t\t\t// The following functions are overwritten depending on how compute() is called\n\t\t\t// A method to set up listening\n\t\t\ton = k,\n\t\t\t// A method to teardown listening\n\t\t\toff = k,\n\t\t\t// Current cached value (valid only when bound is true)\n\t\t\tvalue,\n\t\t\t// How the value is read by default\n\t\t\tget = function () {\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t// How the value is set by default\n\t\t\tset = function (newVal) {\n\t\t\t\tvalue = newVal;\n\t\t\t},\n\t\t\tsetCached = set,\n\t\t\t// Save arguments for cloning\n\t\t\targs = can.makeArray(arguments),\n\t\t\t// updater for when value is changed\n\t\t\tupdater = function (newValue, oldValue, batchNum) {\n\t\t\t\tsetCached(newValue);\n\t\t\t\tupdateOnChange(computed, newValue,oldValue, batchNum);\n\t\t\t},\n\t\t\t// the form of the arguments\n\t\t\tform;\n\t\tcomputed = function (newVal) {\n\t\t\t// If the computed function is called with arguments,\n\t\t\t// a value should be set\n\t\t\tif (arguments.length) {\n\t\t\t\t// Save a reference to the old value\n\t\t\t\tvar old = value;\n\t\t\t\t// Setter may return the value if setter\n\t\t\t\t// is for a value maintained exclusively by this compute.\n\t\t\t\tvar setVal = set.call(context, newVal, old);\n\t\t\t\t// If the computed function has dependencies,\n\t\t\t\t// return the current value\n\t\t\t\tif (computed.hasDependencies) {\n\t\t\t\t\treturn get.call(context);\n\t\t\t\t}\n\t\t\t\t// Setting may not fire a change event, in which case\n\t\t\t\t// the value must be read\n\t\t\t\tif (setVal === undefined) {\n\t\t\t\t\tvalue = get.call(context);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = setVal;\n\t\t\t\t}\n\t\t\t\t// Fire the change\n\t\t\t\tupdateOnChange(computed, value, old);\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\t// Another compute may bind to this `computed`\n\t\t\t\tif (stack.length && computed.canReadForChangeEvent !== false) {\n\n\t\t\t\t\t// Tell the compute to listen to change on this computed\n\t\t\t\t\t// Use `can.__reading` to allow other compute to listen\n\t\t\t\t\t// for a change on this `computed`\n\t\t\t\t\tcan.__reading(computed, 'change');\n\t\t\t\t\t// We are going to bind on this compute.\n\t\t\t\t\t// If we are not bound, we should bind so that\n\t\t\t\t\t// we don't have to re-read to get the value of this compute.\n\t\t\t\t\tif (!computed.bound) {\n\t\t\t\t\t\tcan.compute.temporarilyBind(computed);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If computed is bound, use the cached value\n\t\t\t\tif (computed.bound) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\treturn get.call(context);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t// ###Specifying getterSetter function\n\t\t//\n\t\t// If `can.compute` is [called with a getterSetter function](http://canjs.com/docs/can.compute.html#sig_can_compute_getterSetter__context__),\n\t\t// override set and get\n\t\tif (typeof getterSetter === 'function') {\n\t\t\t// `can.compute(getterSetter, [context])`\n\t\t\tset = getterSetter;\n\t\t\tget = getterSetter;\n\t\t\tcomputed.canReadForChangeEvent = eventName === false ? false : true;\n\t\t\t\n\t\t\tvar handlers = setupComputeHandlers(computed, getterSetter, context || this, setCached);\n\t\t\ton = handlers.on;\n\t\t\toff = handlers.off;\n\t\t\n\t\t// ###Observing a property of an object\n\t\t//\n\t\t// If `can.compute` is called with an \n\t\t// [object, property name, and optional event name](http://canjs.com/docs/can.compute.html#sig_can_compute_object_propertyName__eventName__),\n\t\t// create a compute from a property of an object. This allows the\n\t\t// creation of a compute on objects that can be listened to with [`can.bind`](http://canjs.com/docs/can.bind.html)\n\t\t} else if (context) {\n\t\t\tif (typeof context === 'string') {\n\t\t\t\t// `can.compute(obj, \"propertyName\", [eventName])`\n\t\t\t\tvar propertyName = context,\n\t\t\t\t\tisObserve = getterSetter instanceof can.Map;\n\t\t\t\tif (isObserve) {\n\t\t\t\t\tcomputed.hasDependencies = true;\n\t\t\t\t}\n\t\t\t\t// If object is observable, `attr` will be used\n\t\t\t\t// for getting and setting.\n\t\t\t\tget = function () {\n\t\t\t\t\tif (isObserve) {\n\t\t\t\t\t\treturn getterSetter.attr(propertyName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn getterSetter[propertyName];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tset = function (newValue) {\n\t\t\t\t\tif (isObserve) {\n\t\t\t\t\t\tgetterSetter.attr(propertyName, newValue);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetterSetter[propertyName] = newValue;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tvar handler;\n\t\t\t\ton = function (update) {\n\t\t\t\t\thandler = function () {\n\t\t\t\t\t\tupdate(get(), value);\n\t\t\t\t\t};\n\t\t\t\t\tcan.bind.call(getterSetter, eventName || propertyName, handler);\n\t\t\t\t\t// use can.__read because\n\t\t\t\t\t// we should not be indicating that some parent\n\t\t\t\t\t// reads this property if it happens to be binding on it\n\t\t\t\t\tvalue = can.__read(get)\n\t\t\t\t\t\t.value;\n\t\t\t\t};\n\t\t\t\toff = function () {\n\t\t\t\t\tcan.unbind.call(getterSetter, eventName || propertyName, handler);\n\t\t\t\t};\n\t\t\t// ###Specifying an initial value and a setter\n\t\t\t//\n\t\t\t// If `can.compute` is called with an [initial value and a setter function](http://canjs.com/docs/can.compute.html#sig_can_compute_initialValue_setter_newVal_oldVal__),\n\t\t\t// a compute that can adjust incoming values is set up.\n\t\t\t} else {\n\t\t\t\t// `can.compute(initialValue, setter)`\n\t\t\t\tif (typeof context === 'function') {\n\t\t\t\t\t\n\t\t\t\t\tvalue = getterSetter;\n\t\t\t\t\tset = context;\n\t\t\t\t\tcontext = eventName;\n\t\t\t\t\tform = 'setter';\n                    // ###Specifying an initial value and a settings object\n                    //\n                    // If `can.compute` is called with an [initial value and optionally a settings object](http://canjs.com/docs/can.compute.html#sig_can_compute_initialValue__settings__),\n                    // a can.compute is created that can optionally specify how to read,\n                    // update, and listen to changes in dependent values. This form of\n                    // can.compute can be used to derive a compute that derives its\n                    // value from any source\n\t\t\t\t} else {\n\t\t\t\t\t// `can.compute(initialValue,{get:, set:, on:, off:})`\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\tvalue = getterSetter;\n\t\t\t\t\tvar options = context,\n\t\t\t\t\t\toldUpdater = updater;\n\t\t\t\t\t\t\n\t\t\t\t\tcontext = options.context || options;\n\t\t\t\t\tget = options.get || get;\n\t\t\t\t\tset = options.set || function(){\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t};\n\t\t\t\t\t// This is a \"hack\" to allow async computes.\n\t\t\t\t\tif(options.fn) {\n\t\t\t\t\t\tvar fn = options.fn,\n\t\t\t\t\t\t\tdata;\n\t\t\t\t\t\t// make sure get is called with the newVal, but not setter\n\t\t\t\t\t\tget = function(){\n\t\t\t\t\t\t\treturn fn.call(context, value);\n\t\t\t\t\t\t};\n\t\t\t\t\t\t// Check the number of arguments the \n\t\t\t\t\t\t// async function takes.\n\t\t\t\t\t\tif(fn.length === 0) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tdata = setupComputeHandlers(computed, fn, context, setCached);\n\n\t\t\t\t\t\t} else if(fn.length === 1){\n\t\t\t\t\t\t\tdata = setupComputeHandlers(computed, function(){\n\t\t\t\t\t\t\t\treturn fn.call(context, value);\n\t\t\t\t\t\t\t}, context, setCached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tupdater = function(newVal){\n\t\t\t\t\t\t\t\tif(newVal !== undefined) {\n\t\t\t\t\t\t\t\t\toldUpdater(newVal, value);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdata = setupComputeHandlers(computed, function(){\n\t\t\t\t\t\t\t\tvar res = fn.call(context, value, function(newVal){\n\t\t\t\t\t\t\t\t\toldUpdater(newVal, value);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// If undefined is returned, don't update the value.\n\t\t\t\t\t\t\t\treturn res !== undefined ? res : value;\n\t\t\t\t\t\t\t}, context, setCached);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\ton = data.on;\n\t\t\t\t\t\toff = data.off;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdater = function(){\n\t\t\t\t\t\t\tvar newVal = get.call(context);\n\t\t\t\t\t\t\toldUpdater(newVal, value);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ton = options.on || on;\n\t\t\t\t\toff = options.off || off;\n\t\t\t\t}\n\t\t\t}\n\t\t// ###Specifying only a value\n\t\t//\n\t\t// If can.compute is called with an initialValue only,\n\t\t// reads to this value can be observed.\n\t\t} else {\n\t\t\t// `can.compute(initialValue)`\n\t\t\tvalue = getterSetter;\n\t\t}\n\t\tcan.cid(computed, 'compute');\n\t\treturn can.simpleExtend(computed, {\n\t\t\t/**\n\t\t\t * @property {Boolean} can.computed.isComputed compute.isComputed\n\t\t\t * @parent can.compute\n\t\t\t * Whether the value of the compute has been computed yet.\n\t\t\t */\n\t\t\tisComputed: true,\n\t\t\t_bindsetup: function () {\n\t\t\t\tthis.bound = true;\n\t\t\t\t// Set up live-binding\n\t\t\t\t// While binding, this should not count as a read\n\t\t\t\tvar oldReading = can.__clearReading();\n\t\t\t\ton.call(this, updater);\n\t\t\t\t// Restore \"Observed\" for reading\n\t\t\t\tcan.__setReading(oldReading);\n\t\t\t},\n\t\t\t_bindteardown: function () {\n\t\t\t\toff.call(this, updater);\n\t\t\t\tthis.bound = false;\n\t\t\t},\n\t\t\t/**\n\t\t\t * @function can.computed.bind compute.bind\n\t\t\t * @parent can.compute\n\t\t\t * @description Bind an event handler to a compute.\n\t\t\t * @signature `compute.bind(eventType, handler)`\n\t\t\t * @param {String} eventType The event to bind this handler to.\n\t\t\t * The only event type that computes emit is _change_.\n\t\t\t * @param {function({Object},{*},{*})} handler The handler to call when the event happens.\n\t\t\t * The handler should have three parameters:\n\t\t\t *\n\t\t\t * - _event_ is the event object.\n\t\t\t * - _newVal_ is the newly-computed value of the compute.\n\t\t\t * - _oldVal_ is the value of the compute before it changed.\n\t\t\t *\n\t\t\t * `bind` lets you listen to a compute to know when it changes. It works just like\n\t\t\t * can.Map's `[can.Map.prototype.bind bind]`:\n\t\t\t * @codestart\n\t\t\t * var tally = can.compute(0);\n\t\t\t * tally.bind('change', function(ev, newVal, oldVal) {\n\t\t\t *     console.log('The tally is now at ' + newVal + '.');\n\t\t\t * });\n\t\t\t *\n\t\t\t * tally(tally() + 5); // The log reads:\n\t\t\t *                     // 'The tally is now at 5.'\n\t\t\t * @codeend\n\t\t\t */\n\t\t\tbind: can.bindAndSetup,\n\t\t\t/**\n\t\t\t * @function computed.unbind compute.unbind\n\t\t\t * @parent can.compute\n\t\t\t * @description Unbind an event handler from a compute.\n\t\t\t * @signature `compute.unbind(eventType[, handler])`\n\t\t\t * @param {String} eventType The type of event to unbind.\n\t\t\t * The only event type available for computes is _change_.\n\t\t\t * @param {function} [handler] If given, the handler to unbind.\n\t\t\t * If _handler_ is not supplied, all handlers bound to _eventType_\n\t\t\t * will be removed.\n\t\t\t */\n\t\t\tunbind: can.unbindAndTeardown,\n\t\t\tclone: function (context) {\n\t\t\t\tif (context) {\n\t\t\t\t\tif (form === 'setter') {\n\t\t\t\t\t\targs[2] = context;\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs[1] = context;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn can.compute.apply(can, args);\n\t\t\t}\n\t\t});\n\t};\n\t// A list of temporarily bound computes\n\tvar computes, unbindComputes = function () {\n\t\t\tfor (var i = 0, len = computes.length; i < len; i++) {\n\t\t\t\tcomputes[i].unbind('change', k);\n\t\t\t}\n\t\t\tcomputes = null;\n\t\t};\n\t// Binds computes for a moment to retain their value and prevent caching\n\tcan.compute.temporarilyBind = function (compute) {\n\t\tcompute.bind('change', k);\n\t\tif (!computes) {\n\t\t\tcomputes = [];\n\t\t\tsetTimeout(unbindComputes, 10);\n\t\t}\n\t\tcomputes.push(compute);\n\t};\n\t\n\t// Whether a compute is truthy\n\tcan.compute.truthy = function (compute) {\n\t\treturn can.compute(function () {\n\t\t\tvar res = compute();\n\t\t\tif (typeof res === 'function') {\n\t\t\t\tres = res();\n\t\t\t}\n\t\t\treturn !!res;\n\t\t});\n\t};\n\tcan.compute.async = function(initialValue, asyncComputer, context){\n\t\treturn can.compute(initialValue, {\n\t\t\tfn: asyncComputer,\n\t\t\tcontext: context\n\t\t});\n\t};\n\t// {map: new can.Map({first: \"Justin\"})}, [\"map\",\"first\"]\n\tcan.compute.read = function (parent, reads, options) {\n\t\toptions = options || {};\n\t\t// `cur` is the current value.\n\t\tvar cur = parent,\n\t\t\ttype,\n\t\t\t// `prev` is the object we are reading from.\n\t\t\tprev,\n\t\t\t// `foundObs` did we find an observable.\n\t\t\tfoundObs;\n\t\tfor (var i = 0, readLength = reads.length; i < readLength; i++) {\n\t\t\t// Update what we are reading from.\n\t\t\tprev = cur;\n\t\t\t// Read from the compute. We can't read a property yet.\n\t\t\tif (prev && prev.isComputed) {\n\t\t\t\tif (options.foundObservable) {\n\t\t\t\t\toptions.foundObservable(prev, i);\n\t\t\t\t}\n\t\t\t\tprev = prev();\n\t\t\t}\n\t\t\t// Look to read a property from something.\n\t\t\tif (isObserve(prev)) {\n\t\t\t\tif (!foundObs && options.foundObservable) {\n\t\t\t\t\toptions.foundObservable(prev, i);\n\t\t\t\t}\n\t\t\t\tfoundObs = 1;\n\t\t\t\t// is it a method on the prototype?\n\t\t\t\tif (typeof prev[reads[i]] === 'function' && prev.constructor.prototype[reads[i]] === prev[reads[i]]) {\n\t\t\t\t\t// call that method\n\t\t\t\t\tif (options.returnObserveMethods) {\n\t\t\t\t\t\tcur = cur[reads[i]];\n\t\t\t\t\t} else if (reads[i] === 'constructor' && prev instanceof can.Construct) {\n\t\t\t\t\t\tcur = prev[reads[i]];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcur = prev[reads[i]].apply(prev, options.args || []);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// use attr to get that value\n\t\t\t\t\tcur = cur.attr(reads[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// just do the dot operator\n\t\t\t\tcur = prev[reads[i]];\n\t\t\t}\n\t\t\ttype = typeof cur;\n\t\t\t// If it's a compute, get the compute's value\n\t\t\t// unless we are at the end of the \n\t\t\tif (cur && cur.isComputed && (!options.isArgument && i < readLength - 1)) {\n\t\t\t\tif (!foundObs && options.foundObservable) {\n\t\t\t\t\toptions.foundObservable(prev, i + 1);\n\t\t\t\t}\n\t\t\t\tcur = cur();\n\t\t\t}\n\t\t\t// If it's an anonymous function, execute as requested\n\t\t\telse if (i < reads.length - 1 && type === 'function' && options.executeAnonymousFunctions && !(can.Construct && cur.prototype instanceof can.Construct)) {\n\t\t\t\tcur = cur();\n\t\t\t}\n\t\t\t// if there are properties left to read, and we don't have an object, early exit\n\t\t\tif (i < reads.length - 1 && (cur === null || type !== 'function' && type !== 'object')) {\n\t\t\t\tif (options.earlyExit) {\n\t\t\t\t\toptions.earlyExit(prev, i, cur);\n\t\t\t\t}\n\t\t\t\t// return undefined so we know this isn't the right value\n\t\t\t\treturn {\n\t\t\t\t\tvalue: undefined,\n\t\t\t\t\tparent: prev\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t// handle an ending function\n\t\t// unless it is a can.Construct-derived constructor\n\t\tif (typeof cur === 'function' && !(can.Construct && cur.prototype instanceof can.Construct)) {\n\t\t\tif (options.isArgument) {\n\t\t\t\tif (!cur.isComputed && options.proxyMethods !== false) {\n\t\t\t\t\tcur = can.proxy(cur, prev);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (cur.isComputed && !foundObs && options.foundObservable) {\n\t\t\t\t\toptions.foundObservable(cur, i);\n\t\t\t\t}\n\t\t\t\tcur = cur.call(prev);\n\t\t\t}\n\t\t}\n\t\t// if we don't have a value, exit early.\n\t\tif (cur === undefined) {\n\t\t\tif (options.earlyExit) {\n\t\t\t\toptions.earlyExit(prev, i - 1);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tvalue: cur,\n\t\t\tparent: prev\n\t\t};\n\t};\n\n\treturn can.compute;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/compute\";\ndefine([\"can/util/library\", \"can/util/bind\", \"can/util/batch\"], function(can, bind) {\n  var stack = [];\n  can.__read = function(func, self) {\n    stack.push({});\n    var value = func.call(self);\n    return {\n      value: value,\n      observed: stack.pop()\n    };\n  };\n  can.__reading = function(obj, event) {\n    if (stack.length) {\n      stack[stack.length - 1][obj._cid + '|' + event] = {\n        obj: obj,\n        event: event + \"\"\n      };\n    }\n  };\n  can.__clearReading = function() {\n    if (stack.length) {\n      var ret = stack[stack.length - 1];\n      stack[stack.length - 1] = {};\n      return ret;\n    }\n  };\n  can.__setReading = function(o) {\n    if (stack.length) {\n      stack[stack.length - 1] = o;\n    }\n  };\n  can.__addReading = function(o) {\n    if (stack.length) {\n      can.simpleExtend(stack[stack.length - 1], o);\n    }\n  };\n  var getValueAndBind = function(func, context, oldObserved, onchanged) {\n    var info = can.__read(func, context),\n        newObserveSet = info.observed,\n        obEv,\n        name;\n    for (name in newObserveSet) {\n      if (oldObserved[name]) {\n        delete oldObserved[name];\n      } else {\n        obEv = newObserveSet[name];\n        obEv.obj.bind(obEv.event, onchanged);\n      }\n    }\n    for (name in oldObserved) {\n      obEv = oldObserved[name];\n      obEv.obj.unbind(obEv.event, onchanged);\n    }\n    return info;\n  };\n  var updateOnChange = function(compute, newValue, oldValue, batchNum) {\n    if (newValue !== oldValue) {\n      can.batch.trigger(compute, batchNum ? {\n        type: \"change\",\n        batchNum: batchNum\n      } : 'change', [newValue, oldValue]);\n    }\n  };\n  var setupComputeHandlers = function(compute, func, context, setCachedValue) {\n    var readInfo,\n        onchanged,\n        batchNum;\n    return {\n      on: function(updater) {\n        if (!onchanged) {\n          onchanged = function(ev) {\n            if (compute.bound && (ev.batchNum === undefined || ev.batchNum !== batchNum)) {\n              var oldValue = readInfo.value;\n              readInfo = getValueAndBind(func, context, readInfo.observed, onchanged);\n              updater(readInfo.value, oldValue, ev.batchNum);\n              batchNum = batchNum = ev.batchNum;\n            }\n          };\n        }\n        readInfo = getValueAndBind(func, context, {}, onchanged);\n        setCachedValue(readInfo.value);\n        compute.hasDependencies = !can.isEmptyObject(readInfo.observed);\n      },\n      off: function(updater) {\n        for (var name in readInfo.observed) {\n          var ob = readInfo.observed[name];\n          ob.obj.unbind(ob.event, onchanged);\n        }\n      }\n    };\n  };\n  var isObserve = function(obj) {\n    return obj instanceof can.Map || obj && obj.__get;\n  },\n      k = function() {};\n  can.compute = function(getterSetter, context, eventName) {\n    if (getterSetter && getterSetter.isComputed) {\n      return getterSetter;\n    }\n    var computed,\n        on = k,\n        off = k,\n        value,\n        get = function() {\n          return value;\n        },\n        set = function(newVal) {\n          value = newVal;\n        },\n        setCached = set,\n        args = can.makeArray(arguments),\n        updater = function(newValue, oldValue, batchNum) {\n          setCached(newValue);\n          updateOnChange(computed, newValue, oldValue, batchNum);\n        },\n        form;\n    computed = function(newVal) {\n      if (arguments.length) {\n        var old = value;\n        var setVal = set.call(context, newVal, old);\n        if (computed.hasDependencies) {\n          return get.call(context);\n        }\n        if (setVal === undefined) {\n          value = get.call(context);\n        } else {\n          value = setVal;\n        }\n        updateOnChange(computed, value, old);\n        return value;\n      } else {\n        if (stack.length && computed.canReadForChangeEvent !== false) {\n          can.__reading(computed, 'change');\n          if (!computed.bound) {\n            can.compute.temporarilyBind(computed);\n          }\n        }\n        if (computed.bound) {\n          return value;\n        } else {\n          return get.call(context);\n        }\n      }\n    };\n    if (typeof getterSetter === 'function') {\n      set = getterSetter;\n      get = getterSetter;\n      computed.canReadForChangeEvent = eventName === false ? false : true;\n      var handlers = setupComputeHandlers(computed, getterSetter, context || this, setCached);\n      on = handlers.on;\n      off = handlers.off;\n    } else if (context) {\n      if (typeof context === 'string') {\n        var propertyName = context,\n            isObserve = getterSetter instanceof can.Map;\n        if (isObserve) {\n          computed.hasDependencies = true;\n        }\n        get = function() {\n          if (isObserve) {\n            return getterSetter.attr(propertyName);\n          } else {\n            return getterSetter[propertyName];\n          }\n        };\n        set = function(newValue) {\n          if (isObserve) {\n            getterSetter.attr(propertyName, newValue);\n          } else {\n            getterSetter[propertyName] = newValue;\n          }\n        };\n        var handler;\n        on = function(update) {\n          handler = function() {\n            update(get(), value);\n          };\n          can.bind.call(getterSetter, eventName || propertyName, handler);\n          value = can.__read(get).value;\n        };\n        off = function() {\n          can.unbind.call(getterSetter, eventName || propertyName, handler);\n        };\n      } else {\n        if (typeof context === 'function') {\n          value = getterSetter;\n          set = context;\n          context = eventName;\n          form = 'setter';\n        } else {\n          value = getterSetter;\n          var options = context,\n              oldUpdater = updater;\n          context = options.context || options;\n          get = options.get || get;\n          set = options.set || function() {\n            return value;\n          };\n          if (options.fn) {\n            var fn = options.fn,\n                data;\n            get = function() {\n              return fn.call(context, value);\n            };\n            if (fn.length === 0) {\n              data = setupComputeHandlers(computed, fn, context, setCached);\n            } else if (fn.length === 1) {\n              data = setupComputeHandlers(computed, function() {\n                return fn.call(context, value);\n              }, context, setCached);\n            } else {\n              updater = function(newVal) {\n                if (newVal !== undefined) {\n                  oldUpdater(newVal, value);\n                }\n              };\n              data = setupComputeHandlers(computed, function() {\n                var res = fn.call(context, value, function(newVal) {\n                  oldUpdater(newVal, value);\n                });\n                return res !== undefined ? res : value;\n              }, context, setCached);\n            }\n            on = data.on;\n            off = data.off;\n          } else {\n            updater = function() {\n              var newVal = get.call(context);\n              oldUpdater(newVal, value);\n            };\n          }\n          on = options.on || on;\n          off = options.off || off;\n        }\n      }\n    } else {\n      value = getterSetter;\n    }\n    can.cid(computed, 'compute');\n    return can.simpleExtend(computed, {\n      isComputed: true,\n      _bindsetup: function() {\n        this.bound = true;\n        var oldReading = can.__clearReading();\n        on.call(this, updater);\n        can.__setReading(oldReading);\n      },\n      _bindteardown: function() {\n        off.call(this, updater);\n        this.bound = false;\n      },\n      bind: can.bindAndSetup,\n      unbind: can.unbindAndTeardown,\n      clone: function(context) {\n        if (context) {\n          if (form === 'setter') {\n            args[2] = context;\n          } else {\n            args[1] = context;\n          }\n        }\n        return can.compute.apply(can, args);\n      }\n    });\n  };\n  var computes,\n      unbindComputes = function() {\n        for (var i = 0,\n            len = computes.length; i < len; i++) {\n          computes[i].unbind('change', k);\n        }\n        computes = null;\n      };\n  can.compute.temporarilyBind = function(compute) {\n    compute.bind('change', k);\n    if (!computes) {\n      computes = [];\n      setTimeout(unbindComputes, 10);\n    }\n    computes.push(compute);\n  };\n  can.compute.truthy = function(compute) {\n    return can.compute(function() {\n      var res = compute();\n      if (typeof res === 'function') {\n        res = res();\n      }\n      return !!res;\n    });\n  };\n  can.compute.async = function(initialValue, asyncComputer, context) {\n    return can.compute(initialValue, {\n      fn: asyncComputer,\n      context: context\n    });\n  };\n  can.compute.read = function(parent, reads, options) {\n    options = options || {};\n    var cur = parent,\n        type,\n        prev,\n        foundObs;\n    for (var i = 0,\n        readLength = reads.length; i < readLength; i++) {\n      prev = cur;\n      if (prev && prev.isComputed) {\n        if (options.foundObservable) {\n          options.foundObservable(prev, i);\n        }\n        prev = prev();\n      }\n      if (isObserve(prev)) {\n        if (!foundObs && options.foundObservable) {\n          options.foundObservable(prev, i);\n        }\n        foundObs = 1;\n        if (typeof prev[reads[i]] === 'function' && prev.constructor.prototype[reads[i]] === prev[reads[i]]) {\n          if (options.returnObserveMethods) {\n            cur = cur[reads[i]];\n          } else if (reads[i] === 'constructor' && prev instanceof can.Construct) {\n            cur = prev[reads[i]];\n          } else {\n            cur = prev[reads[i]].apply(prev, options.args || []);\n          }\n        } else {\n          cur = cur.attr(reads[i]);\n        }\n      } else {\n        cur = prev[reads[i]];\n      }\n      type = typeof cur;\n      if (cur && cur.isComputed && (!options.isArgument && i < readLength - 1)) {\n        if (!foundObs && options.foundObservable) {\n          options.foundObservable(prev, i + 1);\n        }\n        cur = cur();\n      } else if (i < reads.length - 1 && type === 'function' && options.executeAnonymousFunctions && !(can.Construct && cur.prototype instanceof can.Construct)) {\n        cur = cur();\n      }\n      if (i < reads.length - 1 && (cur === null || type !== 'function' && type !== 'object')) {\n        if (options.earlyExit) {\n          options.earlyExit(prev, i, cur);\n        }\n        return {\n          value: undefined,\n          parent: prev\n        };\n      }\n    }\n    if (typeof cur === 'function' && !(can.Construct && cur.prototype instanceof can.Construct)) {\n      if (options.isArgument) {\n        if (!cur.isComputed && options.proxyMethods !== false) {\n          cur = can.proxy(cur, prev);\n        }\n      } else {\n        if (cur.isComputed && !foundObs && options.foundObservable) {\n          options.foundObservable(cur, i);\n        }\n        cur = cur.call(prev);\n      }\n    }\n    if (cur === undefined) {\n      if (options.earlyExit) {\n        options.earlyExit(prev, i - 1);\n      }\n    }\n    return {\n      value: cur,\n      parent: prev\n    };\n  };\n  return can.compute;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/view\", \"can/view/elements\", \"can/view/live\", \"can/util/string\"], function (can, elements, live) {\n\n\t/**\n\t * Helper(s)\n\t */\n\tvar pendingHookups = [],\n\t\ttagChildren = function (tagName) {\n\t\t\tvar newTag = elements.tagMap[tagName] || \"span\";\n\t\t\tif (newTag === \"span\") {\n\t\t\t\t//innerHTML in IE doesn't honor leading whitespace after empty elements\n\t\t\t\treturn \"@@!!@@\";\n\t\t\t}\n\t\t\treturn \"<\" + newTag + \">\" + tagChildren(newTag) + \"</\" + newTag + \">\";\n\t\t},\n\t\tcontentText = function (input, tag) {\n\n\t\t\t// If it's a string, return.\n\t\t\tif (typeof input === 'string') {\n\t\t\t\treturn input;\n\t\t\t}\n\t\t\t// If has no value, return an empty string.\n\t\t\tif (!input && input !== 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// If it's an object, and it has a hookup method.\n\t\t\tvar hook = (input.hookup &&\n\n\t\t\t\t// Make a function call the hookup method.\n\t\t\t\tfunction (el, id) {\n\t\t\t\t\tinput.hookup.call(input, el, id);\n\t\t\t\t}) ||\n\n\t\t\t// Or if it's a `function`, just use the input.\n\t\t\t(typeof input === 'function' && input);\n\n\t\t\t// Finally, if there is a `function` to hookup on some dom,\n\t\t\t// add it to pending hookups.\n\t\t\tif (hook) {\n\t\t\t\tif (tag) {\n\t\t\t\t\treturn \"<\" + tag + \" \" + can.view.hook(hook) + \"></\" + tag + \">\";\n\t\t\t\t} else {\n\t\t\t\t\tpendingHookups.push(hook);\n\t\t\t\t}\n\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\t// Finally, if all else is `false`, `toString()` it.\n\t\t\treturn \"\" + input;\n\t\t},\n\t\t// Returns escaped/sanatized content for anything other than a live-binding\n\t\tcontentEscape = function (txt, tag) {\n\t\t\treturn (typeof txt === 'string' || typeof txt === 'number') ?\n\t\t\t\tcan.esc(txt) :\n\t\t\t\tcontentText(txt, tag);\n\t\t},\n\t\t// A flag to indicate if .txt was called within a live section within an element like the {{name}}\n\t\t// within `<div {{#person}}{{name}}{{/person}}/>`.\n\t\twithinTemplatedSectionWithinAnElement = false,\n\t\temptyHandler = function () {};\n\n\tvar lastHookups;\n\n\tcan.extend(can.view, {\n\t\tlive: live,\n\t\t// called in text to make a temporary \n\t\t// can.view.lists function that can be called with\n\t\t// the list to iterate over and the template\n\t\t// used to produce the content within the list\n\t\tsetupLists: function () {\n\n\t\t\tvar old = can.view.lists,\n\t\t\t\tdata;\n\n\t\t\tcan.view.lists = function (list, renderer) {\n\t\t\t\tdata = {\n\t\t\t\t\tlist: list,\n\t\t\t\t\trenderer: renderer\n\t\t\t\t};\n\t\t\t\treturn Math.random();\n\t\t\t};\n\t\t\t// sets back to the old data\n\t\t\treturn function () {\n\t\t\t\tcan.view.lists = old;\n\t\t\t\treturn data;\n\t\t\t};\n\t\t},\n\t\tgetHooks: function () {\n\t\t\tvar hooks = pendingHookups.slice(0);\n\t\t\tlastHookups = hooks;\n\t\t\tpendingHookups = [];\n\t\t\treturn hooks;\n\t\t},\n\t\tonlytxt: function (self, func) {\n\t\t\treturn contentEscape(func.call(self));\n\t\t},\n\t\t/**\n\t\t * @function can.view.txt\n\t\t * @hide\n\t\t *\n\t\t * A helper function used to insert the\n\t\t * value of the contents of a magic tag into\n\t\t * a template's output. It detects if an observable value is\n\t\t * read and will setup live binding.\n\t\t *\n\t\t * @signature `can.view.txt(escape, tagName, status, self, func)`\n\t\t *\n\t\t * @param {Number} 1 if the content returned should be escaped, 0 if otherwise.\n\t\t * @param {String} tagName the name of the tag the magic tag is most immediately\n\t\t * within. Ex: `\"li\"`.\n\t\t * @param {String|Number} status A flag indicates which part of a tag the\n\t\t * magic tag is within. Status can be:\n\t\t *\n\t\t *  - _STRING_ - The name of the attribute the magic tag is within. Ex: `\"class\"`\n\t\t *  - `1` - The magic tag is within a tag like `<div <%= %>>`\n\t\t *  - `0` - The magic tag is outside (or between) tags like `<div><%= %></div>`\n\t\t *\n\t\t * @param {*} self The `this` of the current context template. `func` is called with\n\t\t * self as this.\n\t\t *\n\t\t * @param {function} func The \"wrapping\" function. For\n\t\t * example:  `<%= task.attr('name') %>` becomes\n\t\t *   `(function(){return task.attr('name')})\n\t\t *\n\t\t */\n\t\ttxt: function (escape, tagName, status, self, func) {\n\t\t\t// the temporary tag needed for any live setup\n\t\t\tvar tag = (elements.tagMap[tagName] || \"span\"),\n\t\t\t\t// should live-binding be setup\n\t\t\t\tsetupLiveBinding = false,\n\t\t\t\t// the compute's value\n\t\t\t\tvalue,\n\t\t\t\tlistData,\n\t\t\t\tcompute,\n\t\t\t\tunbind = emptyHandler,\n\t\t\t\tattributeName;\n\n\t\t\t// Are we currently within a live section within an element like the {{name}}\n\t\t\t// within `<div {{#person}}{{name}}{{/person}}/>`.\n\t\t\tif (withinTemplatedSectionWithinAnElement) {\n\t\t\t\tvalue = func.call(self);\n\t\t\t} else {\n\n\t\t\t\t// If this magic tag is within an attribute or an html element,\n\t\t\t\t// set the flag to true so we avoid trying to live bind\n\t\t\t\t// anything that func might be setup.\n\t\t\t\t// TODO: the scanner should be able to set this up.\n\t\t\t\tif (typeof status === \"string\" || status === 1) {\n\t\t\t\t\twithinTemplatedSectionWithinAnElement = true;\n\t\t\t\t}\n\n\t\t\t\t// Sets up a listener so we know any can.view.lists called \n\t\t\t\t// when func is called\n\t\t\t\tvar listTeardown = can.view.setupLists();\n\t\t\t\t// \n\t\t\t\tunbind = function () {\n\t\t\t\t\tcompute.unbind(\"change\", emptyHandler);\n\t\t\t\t};\n\t\t\t\t// Create a compute that calls func and looks for dependencies.\n\t\t\t\t// By passing `false`, this compute can not be a dependency of other \n\t\t\t\t// computes.  This is because live-bits are nested, but \n\t\t\t\t// handle their own updating. For example:\n\t\t\t\t//     {{#if items.length}}{{#items}}{{.}}{{/items}}{{/if}}\n\t\t\t\t// We do not want `{{#if items.length}}` changing the DOM if\n\t\t\t\t// `{{#items}}` text changes.\n\t\t\t\tcompute = can.compute(func, self, false);\n\n\t\t\t\t// Bind to get and temporarily cache the value of the compute.\n\t\t\t\tcompute.bind(\"change\", emptyHandler);\n\n\t\t\t\t// Call the \"wrapping\" function and get the binding information\n\t\t\t\tlistData = listTeardown();\n\n\t\t\t\t// Get the value of the compute\n\t\t\t\tvalue = compute();\n\n\t\t\t\t// Let people know we are no longer within an element.\n\t\t\t\twithinTemplatedSectionWithinAnElement = false;\n\n\t\t\t\t// If we should setup live-binding.\n\t\t\t\tsetupLiveBinding = compute.hasDependencies;\n\t\t\t}\n\n\t\t\tif (listData) {\n\t\t\t\tunbind();\n\t\t\t\treturn \"<\" + tag + can.view.hook(function (el, parentNode) {\n\t\t\t\t\tlive.list(el, listData.list, listData.renderer, self, parentNode);\n\t\t\t\t}) + \"></\" + tag + \">\";\n\t\t\t}\n\n\t\t\t// If we had no observes just return the value returned by func.\n\t\t\tif (!setupLiveBinding || typeof value === \"function\") {\n\t\t\t\tunbind();\n\t\t\t\treturn ((withinTemplatedSectionWithinAnElement || escape === 2 || !escape) ?\n\t\t\t\t\tcontentText :\n\t\t\t\t\tcontentEscape)(value, status === 0 && tag);\n\t\t\t}\n\n\t\t\t// the property (instead of innerHTML elements) to adjust. For\n\t\t\t// example options should use textContent\n\t\t\tvar contentProp = elements.tagToContentPropMap[tagName];\n\n\t\t\t// The magic tag is outside or between tags.\n\t\t\tif (status === 0 && !contentProp) {\n\t\t\t\t// Return an element tag with a hookup in place of the content\n\t\t\t\treturn \"<\" + tag + can.view.hook(\n\t\t\t\t\t// if value is an object, it's likely something returned by .safeString\n\t\t\t\t\tescape && typeof value !== \"object\" ?\n\t\t\t\t\t// If we are escaping, replace the parentNode with \n\t\t\t\t\t// a text node who's value is `func`'s return value.\n\t\t\t\t\tfunction (el, parentNode) {\n\t\t\t\t\t\tlive.text(el, compute, parentNode);\n\t\t\t\t\t\tunbind();\n\t\t\t\t\t} :\n\t\t\t\t\t// If we are not escaping, replace the parentNode with a\n\t\t\t\t\t// documentFragment created as with `func`'s return value.\n\t\t\t\t\tfunction (el, parentNode) {\n\t\t\t\t\t\tlive.html(el, compute, parentNode);\n\t\t\t\t\t\tunbind();\n\t\t\t\t\t\t//children have to be properly nested HTML for buildFragment to work properly\n\t\t\t\t\t}) + \">\" + tagChildren(tag) + \"</\" + tag + \">\";\n\t\t\t\t// In a tag, but not in an attribute\n\t\t\t} else if (status === 1) {\n\t\t\t\t// remember the old attr name\n\t\t\t\tpendingHookups.push(function (el) {\n\t\t\t\t\tlive.attributes(el, compute, compute());\n\t\t\t\t\tunbind();\n\t\t\t\t});\n\n\t\t\t\treturn compute();\n\t\t\t} else if (escape === 2) { // In a special attribute like src or style\n\n\t\t\t\tattributeName = status;\n\t\t\t\tpendingHookups.push(function (el) {\n\t\t\t\t\tlive.specialAttribute(el, attributeName, compute);\n\t\t\t\t\tunbind();\n\t\t\t\t});\n\t\t\t\treturn compute();\n\t\t\t} else { // In an attribute...\n\t\t\t\tattributeName = status === 0 ? contentProp : status;\n\t\t\t\t// if the magic tag is inside the element, like `<option><% TAG %></option>`,\n\t\t\t\t// we add this hookup to the last element (ex: `option`'s) hookups.\n\t\t\t\t// Otherwise, the magic tag is in an attribute, just add to the current element's\n\t\t\t\t// hookups.\n\t\t\t\t(status === 0 ? lastHookups : pendingHookups)\n\t\t\t\t\t.push(function (el) {\n\t\t\t\t\t\tlive.attribute(el, attributeName, compute);\n\t\t\t\t\t\tunbind();\n\t\t\t\t\t});\n\t\t\t\treturn live.attributePlaceholder;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/render\";\ndefine([\"can/view\", \"can/view/elements\", \"can/view/live\", \"can/util/string\"], function(can, elements, live) {\n  var pendingHookups = [],\n      tagChildren = function(tagName) {\n        var newTag = elements.tagMap[tagName] || \"span\";\n        if (newTag === \"span\") {\n          return \"@@!!@@\";\n        }\n        return \"<\" + newTag + \">\" + tagChildren(newTag) + \"</\" + newTag + \">\";\n      },\n      contentText = function(input, tag) {\n        if (typeof input === 'string') {\n          return input;\n        }\n        if (!input && input !== 0) {\n          return '';\n        }\n        var hook = (input.hookup && function(el, id) {\n          input.hookup.call(input, el, id);\n        }) || (typeof input === 'function' && input);\n        if (hook) {\n          if (tag) {\n            return \"<\" + tag + \" \" + can.view.hook(hook) + \"></\" + tag + \">\";\n          } else {\n            pendingHookups.push(hook);\n          }\n          return '';\n        }\n        return \"\" + input;\n      },\n      contentEscape = function(txt, tag) {\n        return (typeof txt === 'string' || typeof txt === 'number') ? can.esc(txt) : contentText(txt, tag);\n      },\n      withinTemplatedSectionWithinAnElement = false,\n      emptyHandler = function() {};\n  var lastHookups;\n  can.extend(can.view, {\n    live: live,\n    setupLists: function() {\n      var old = can.view.lists,\n          data;\n      can.view.lists = function(list, renderer) {\n        data = {\n          list: list,\n          renderer: renderer\n        };\n        return Math.random();\n      };\n      return function() {\n        can.view.lists = old;\n        return data;\n      };\n    },\n    getHooks: function() {\n      var hooks = pendingHookups.slice(0);\n      lastHookups = hooks;\n      pendingHookups = [];\n      return hooks;\n    },\n    onlytxt: function(self, func) {\n      return contentEscape(func.call(self));\n    },\n    txt: function(escape, tagName, status, self, func) {\n      var tag = (elements.tagMap[tagName] || \"span\"),\n          setupLiveBinding = false,\n          value,\n          listData,\n          compute,\n          unbind = emptyHandler,\n          attributeName;\n      if (withinTemplatedSectionWithinAnElement) {\n        value = func.call(self);\n      } else {\n        if (typeof status === \"string\" || status === 1) {\n          withinTemplatedSectionWithinAnElement = true;\n        }\n        var listTeardown = can.view.setupLists();\n        unbind = function() {\n          compute.unbind(\"change\", emptyHandler);\n        };\n        compute = can.compute(func, self, false);\n        compute.bind(\"change\", emptyHandler);\n        listData = listTeardown();\n        value = compute();\n        withinTemplatedSectionWithinAnElement = false;\n        setupLiveBinding = compute.hasDependencies;\n      }\n      if (listData) {\n        unbind();\n        return \"<\" + tag + can.view.hook(function(el, parentNode) {\n          live.list(el, listData.list, listData.renderer, self, parentNode);\n        }) + \"></\" + tag + \">\";\n      }\n      if (!setupLiveBinding || typeof value === \"function\") {\n        unbind();\n        return ((withinTemplatedSectionWithinAnElement || escape === 2 || !escape) ? contentText : contentEscape)(value, status === 0 && tag);\n      }\n      var contentProp = elements.tagToContentPropMap[tagName];\n      if (status === 0 && !contentProp) {\n        return \"<\" + tag + can.view.hook(escape && typeof value !== \"object\" ? function(el, parentNode) {\n          live.text(el, compute, parentNode);\n          unbind();\n        } : function(el, parentNode) {\n          live.html(el, compute, parentNode);\n          unbind();\n        }) + \">\" + tagChildren(tag) + \"</\" + tag + \">\";\n      } else if (status === 1) {\n        pendingHookups.push(function(el) {\n          live.attributes(el, compute, compute());\n          unbind();\n        });\n        return compute();\n      } else if (escape === 2) {\n        attributeName = status;\n        pendingHookups.push(function(el) {\n          live.specialAttribute(el, attributeName, compute);\n          unbind();\n        });\n        return compute();\n      } else {\n        attributeName = status === 0 ? contentProp : status;\n        (status === 0 ? lastHookups : pendingHookups).push(function(el) {\n          live.attribute(el, attributeName, compute);\n          unbind();\n        });\n        return live.attributePlaceholder;\n      }\n    }\n  });\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"jquery\", \"can/util/can\", \"can/util/attr\", \"can/event\", \"can/util/array/each\", \"can/util/inserted\"], function ($, can, attr, event) {\n\tvar isBindableElement = function (node) {\n\t\t// In IE8 window.window !== window.window, so we allow == here.\n\t\t/*jshint eqeqeq:false*/\n\t\treturn ( node.nodeName && (node.nodeType === 1 || node.nodeType === 9) )|| node == window;\n\t};\n\t// _jQuery node list._\n\t$.extend(can, $, {\n\t\ttrigger: function (obj, event, args, bubbles) {\n\t\t\tif (isBindableElement( obj ) ) {\n\t\t\t\t$.event.trigger(event, args, obj, !bubbles);\n\t\t\t} else if (obj.trigger) {\n\t\t\t\tobj.trigger(event, args);\n\t\t\t} else {\n\t\t\t\tif (typeof event === 'string') {\n\t\t\t\t\tevent = {\n\t\t\t\t\t\ttype: event\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tevent.target = event.target || obj;\n\t\t\t\tcan.dispatch.call(obj, event, args);\n\t\t\t}\n\t\t},\n\t\tevent: can.event,\n\t\taddEvent: can.addEvent,\n\t\tremoveEvent: can.removeEvent,\n\t\tbuildFragment: function (elems, context) {\n\t\t\t// Check if this has any html nodes on our own.\n\t\t\tvar ret;\n\t\t\telems = [elems];\n\t\t\t// Set context per 1.8 logic\n\t\t\tcontext = context || document;\n\t\t\tcontext = !context.nodeType && context[0] || context;\n\t\t\tcontext = context.ownerDocument || context;\n\t\t\tret = $.buildFragment(elems, context);\n\t\t\treturn ret.cacheable ? $.clone(ret.fragment) : ret.fragment || ret;\n\t\t},\n\t\t$: $,\n\t\teach: can.each,\n\t\tbind: function (ev, cb) {\n\t\t\t// If we can bind to it...\n\t\t\tif (this.bind && this.bind !== can.bind) {\n\t\t\t\tthis.bind(ev, cb);\n\t\t\t} else if (isBindableElement(this)) {\n\t\t\t\t$.event.add(this, ev, cb);\n\t\t\t} else {\n\t\t\t\t// Make it bind-able...\n\t\t\t\tcan.addEvent.call(this, ev, cb);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tunbind: function (ev, cb) {\n\t\t\t// If we can bind to it...\n\t\t\tif (this.unbind && this.unbind !== can.unbind) {\n\t\t\t\tthis.unbind(ev, cb);\n\t\t\t} else if (isBindableElement(this)) {\n\t\t\t\t$.event.remove(this, ev, cb);\n\t\t\t} else {\n\t\t\t\t// Make it bind-able...\n\t\t\t\tcan.removeEvent.call(this, ev, cb);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tdelegate: function (selector, ev, cb) {\n\t\t\tif (this.delegate) {\n\t\t\t\tthis.delegate(selector, ev, cb);\n\t\t\t} else if (isBindableElement(this)) {\n\t\t\t\t$(this)\n\t\t\t\t\t.delegate(selector, ev, cb);\n\t\t\t} else {\n\t\t\t\t// make it bind-able ...\n\t\t\t\tcan.bind.call(this, ev, cb);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tundelegate: function (selector, ev, cb) {\n\t\t\tif (this.undelegate) {\n\t\t\t\tthis.undelegate(selector, ev, cb);\n\t\t\t} else if (isBindableElement(this)) {\n\t\t\t\t$(this)\n\t\t\t\t\t.undelegate(selector, ev, cb);\n\t\t\t} else {\n\t\t\t\tcan.unbind.call(this, ev, cb);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tproxy: function (fn, context) {\n\t\t\treturn function () {\n\t\t\t\treturn fn.apply(context, arguments);\n\t\t\t};\n\t\t},\n\t\tattr: attr\n\t});\n\t// Wrap binding functions.\n\t/*$.each(['bind','unbind','undelegate','delegate'],function(i,func){\n\t\tcan[func] = function(){\n\t\t\tvar t = this[func] ? this : $([this]);\n\t\t\tt[func].apply(t, arguments);\n\t\t\treturn this;\n\t\t};\n\t});*/\n\t// Aliases\n\tcan.on = can.bind;\n\tcan.off = can.unbind;\n\t// Wrap modifier functions.\n\t$.each([\n\t\t'append',\n\t\t'filter',\n\t\t'addClass',\n\t\t'remove',\n\t\t'data',\n\t\t'get',\n\t\t'has'\n\t], function (i, name) {\n\t\tcan[name] = function (wrapped) {\n\t\t\treturn wrapped[name].apply(wrapped, can.makeArray(arguments)\n\t\t\t\t.slice(1));\n\t\t};\n\t});\n\t// Memory safe destruction.\n\tvar oldClean = $.cleanData;\n\t$.cleanData = function (elems) {\n\t\t$.each(elems, function (i, elem) {\n\t\t\tif (elem) {\n\t\t\t\tcan.trigger(elem, 'removed', [], false);\n\t\t\t}\n\t\t});\n\t\toldClean(elems);\n\t};\n\tvar oldDomManip = $.fn.domManip,\n\t\tcbIndex;\n\t// feature detect which domManip we are using\n\t$.fn.domManip = function (args, cb1, cb2) {\n\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\tif (typeof arguments[i] === 'function') {\n\t\t\t\tcbIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn oldDomManip.apply(this, arguments);\n\t};\n\t$(document.createElement(\"div\"))\n\t\t.append(document.createElement(\"div\"));\n\n\t$.fn.domManip = (cbIndex === 2 ?\n\t\tfunction (args, table, callback) {\n\t\t\treturn oldDomManip.call(this, args, table, function (elem) {\n\t\t\t\tvar elems;\n\t\t\t\tif (elem.nodeType === 11) {\n\t\t\t\t\telems = can.makeArray(elem.childNodes);\n\t\t\t\t}\n\t\t\t\tvar ret = callback.apply(this, arguments);\n\t\t\t\tcan.inserted(elems ? elems : [elem]);\n\t\t\t\treturn ret;\n\t\t\t});\n\t\t} :\n\t\tfunction (args, callback) {\n\t\t\treturn oldDomManip.call(this, args, function (elem) {\n\t\t\t\tvar elems;\n\t\t\t\tif (elem.nodeType === 11) {\n\t\t\t\t\telems = can.makeArray(elem.childNodes);\n\t\t\t\t}\n\t\t\t\tvar ret = callback.apply(this, arguments);\n\t\t\t\tcan.inserted(elems ? elems : [elem]);\n\t\t\t\treturn ret;\n\t\t\t});\n\t\t});\n\n\tif (!can.attr.MutationObserver) {\n\t\t// handle via calls to attr\n\t\tvar oldAttr = $.attr;\n\t\t$.attr = function (el, attrName) {\n\t\t\tvar oldValue, newValue;\n\t\t\tif (arguments.length >= 3) {\n\t\t\t\toldValue = oldAttr.call(this, el, attrName);\n\t\t\t}\n\t\t\tvar res = oldAttr.apply(this, arguments);\n\t\t\tif (arguments.length >= 3) {\n\t\t\t\tnewValue = oldAttr.call(this, el, attrName);\n\t\t\t}\n\t\t\tif (newValue !== oldValue) {\n\t\t\t\tcan.attr.trigger(el, attrName, oldValue);\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\tvar oldRemove = $.removeAttr;\n\t\t$.removeAttr = function (el, attrName) {\n\t\t\tvar oldValue = oldAttr.call(this, el, attrName),\n\t\t\t\tres = oldRemove.apply(this, arguments);\n\n\t\t\tif (oldValue != null) {\n\t\t\t\tcan.attr.trigger(el, attrName, oldValue);\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\t$.event.special.attributes = {\n\t\t\tsetup: function () {\n\t\t\t\tcan.data(can.$(this), \"canHasAttributesBindings\", true);\n\t\t\t},\n\t\t\tteardown: function () {\n\t\t\t\t$.removeData(this, \"canHasAttributesBindings\");\n\t\t\t}\n\t\t};\n\t} else {\n\t\t// setup a special events\n\t\t$.event.special.attributes = {\n\t\t\tsetup: function () {\n\t\t\t\tvar self = this;\n\t\t\t\tvar observer = new can.attr.MutationObserver(function (mutations) {\n\t\t\t\t\tmutations.forEach(function (mutation) {\n\t\t\t\t\t\tvar copy = can.simpleExtend({}, mutation);\n\t\t\t\t\t\tcan.trigger(self, copy, []);\n\t\t\t\t\t});\n\n\t\t\t\t});\n\t\t\t\tobserver.observe(this, {\n\t\t\t\t\tattributes: true,\n\t\t\t\t\tattributeOldValue: true\n\t\t\t\t});\n\t\t\t\tcan.data(can.$(this), \"canAttributesObserver\", observer);\n\t\t\t},\n\t\t\tteardown: function () {\n\t\t\t\tcan.data(can.$(this), \"canAttributesObserver\")\n\t\t\t\t\t.disconnect();\n\t\t\t\t$.removeData(this, \"canAttributesObserver\");\n\n\t\t\t}\n\t\t};\n\t}\n\t\n\t// ## Fix build fragment.\n\t// In IE8, we can pass jQuery a fragment and it removes newlines.\n\t// This checks for that and replaces can.buildFragment with something\n\t// that if only a single text node is returned, returns a fragment with\n\t// a text node that is set to the content.\n\t(function(){\n\t\t\n\t\tvar text = \"<-\\n>\",\n\t\t\tfrag = can.buildFragment(text, document);\n\t\tif(text !== frag.childNodes[0].nodeValue) {\n\t\t\t\n\t\t\tvar oldBuildFragment  = can.buildFragment;\n\t\t\tcan.buildFragment = function(content, context){\n\t\t\t\tvar res = oldBuildFragment(content, context);\n\t\t\t\tif(res.childNodes.length === 1 && res.childNodes[0].nodeType === 3) {\n\t\t\t\t\tres.childNodes[0].nodeValue = content;\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t};\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t\t\n\t})();\n\n\t$.event.special.inserted = {};\n\t$.event.special.removed = {};\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/jquery\";\ndefine([\"jquery\", \"can/util/can\", \"can/util/attr\", \"can/event\", \"can/util/array/each\", \"can/util/inserted\"], function($, can, attr, event) {\n  var isBindableElement = function(node) {\n    return (node.nodeName && (node.nodeType === 1 || node.nodeType === 9)) || node == window;\n  };\n  $.extend(can, $, {\n    trigger: function(obj, event, args, bubbles) {\n      if (isBindableElement(obj)) {\n        $.event.trigger(event, args, obj, !bubbles);\n      } else if (obj.trigger) {\n        obj.trigger(event, args);\n      } else {\n        if (typeof event === 'string') {\n          event = {type: event};\n        }\n        event.target = event.target || obj;\n        can.dispatch.call(obj, event, args);\n      }\n    },\n    event: can.event,\n    addEvent: can.addEvent,\n    removeEvent: can.removeEvent,\n    buildFragment: function(elems, context) {\n      var ret;\n      elems = [elems];\n      context = context || document;\n      context = !context.nodeType && context[0] || context;\n      context = context.ownerDocument || context;\n      ret = $.buildFragment(elems, context);\n      return ret.cacheable ? $.clone(ret.fragment) : ret.fragment || ret;\n    },\n    $: $,\n    each: can.each,\n    bind: function(ev, cb) {\n      if (this.bind && this.bind !== can.bind) {\n        this.bind(ev, cb);\n      } else if (isBindableElement(this)) {\n        $.event.add(this, ev, cb);\n      } else {\n        can.addEvent.call(this, ev, cb);\n      }\n      return this;\n    },\n    unbind: function(ev, cb) {\n      if (this.unbind && this.unbind !== can.unbind) {\n        this.unbind(ev, cb);\n      } else if (isBindableElement(this)) {\n        $.event.remove(this, ev, cb);\n      } else {\n        can.removeEvent.call(this, ev, cb);\n      }\n      return this;\n    },\n    delegate: function(selector, ev, cb) {\n      if (this.delegate) {\n        this.delegate(selector, ev, cb);\n      } else if (isBindableElement(this)) {\n        $(this).delegate(selector, ev, cb);\n      } else {\n        can.bind.call(this, ev, cb);\n      }\n      return this;\n    },\n    undelegate: function(selector, ev, cb) {\n      if (this.undelegate) {\n        this.undelegate(selector, ev, cb);\n      } else if (isBindableElement(this)) {\n        $(this).undelegate(selector, ev, cb);\n      } else {\n        can.unbind.call(this, ev, cb);\n      }\n      return this;\n    },\n    proxy: function(fn, context) {\n      return function() {\n        return fn.apply(context, arguments);\n      };\n    },\n    attr: attr\n  });\n  can.on = can.bind;\n  can.off = can.unbind;\n  $.each(['append', 'filter', 'addClass', 'remove', 'data', 'get', 'has'], function(i, name) {\n    can[name] = function(wrapped) {\n      return wrapped[name].apply(wrapped, can.makeArray(arguments).slice(1));\n    };\n  });\n  var oldClean = $.cleanData;\n  $.cleanData = function(elems) {\n    $.each(elems, function(i, elem) {\n      if (elem) {\n        can.trigger(elem, 'removed', [], false);\n      }\n    });\n    oldClean(elems);\n  };\n  var oldDomManip = $.fn.domManip,\n      cbIndex;\n  $.fn.domManip = function(args, cb1, cb2) {\n    for (var i = 1; i < arguments.length; i++) {\n      if (typeof arguments[i] === 'function') {\n        cbIndex = i;\n        break;\n      }\n    }\n    return oldDomManip.apply(this, arguments);\n  };\n  $(document.createElement(\"div\")).append(document.createElement(\"div\"));\n  $.fn.domManip = (cbIndex === 2 ? function(args, table, callback) {\n    return oldDomManip.call(this, args, table, function(elem) {\n      var elems;\n      if (elem.nodeType === 11) {\n        elems = can.makeArray(elem.childNodes);\n      }\n      var ret = callback.apply(this, arguments);\n      can.inserted(elems ? elems : [elem]);\n      return ret;\n    });\n  } : function(args, callback) {\n    return oldDomManip.call(this, args, function(elem) {\n      var elems;\n      if (elem.nodeType === 11) {\n        elems = can.makeArray(elem.childNodes);\n      }\n      var ret = callback.apply(this, arguments);\n      can.inserted(elems ? elems : [elem]);\n      return ret;\n    });\n  });\n  if (!can.attr.MutationObserver) {\n    var oldAttr = $.attr;\n    $.attr = function(el, attrName) {\n      var oldValue,\n          newValue;\n      if (arguments.length >= 3) {\n        oldValue = oldAttr.call(this, el, attrName);\n      }\n      var res = oldAttr.apply(this, arguments);\n      if (arguments.length >= 3) {\n        newValue = oldAttr.call(this, el, attrName);\n      }\n      if (newValue !== oldValue) {\n        can.attr.trigger(el, attrName, oldValue);\n      }\n      return res;\n    };\n    var oldRemove = $.removeAttr;\n    $.removeAttr = function(el, attrName) {\n      var oldValue = oldAttr.call(this, el, attrName),\n          res = oldRemove.apply(this, arguments);\n      if (oldValue != null) {\n        can.attr.trigger(el, attrName, oldValue);\n      }\n      return res;\n    };\n    $.event.special.attributes = {\n      setup: function() {\n        can.data(can.$(this), \"canHasAttributesBindings\", true);\n      },\n      teardown: function() {\n        $.removeData(this, \"canHasAttributesBindings\");\n      }\n    };\n  } else {\n    $.event.special.attributes = {\n      setup: function() {\n        var self = this;\n        var observer = new can.attr.MutationObserver(function(mutations) {\n          mutations.forEach(function(mutation) {\n            var copy = can.simpleExtend({}, mutation);\n            can.trigger(self, copy, []);\n          });\n        });\n        observer.observe(this, {\n          attributes: true,\n          attributeOldValue: true\n        });\n        can.data(can.$(this), \"canAttributesObserver\", observer);\n      },\n      teardown: function() {\n        can.data(can.$(this), \"canAttributesObserver\").disconnect();\n        $.removeData(this, \"canAttributesObserver\");\n      }\n    };\n  }\n  (function() {\n    var text = \"<-\\n>\",\n        frag = can.buildFragment(text, document);\n    if (text !== frag.childNodes[0].nodeValue) {\n      var oldBuildFragment = can.buildFragment;\n      can.buildFragment = function(content, context) {\n        var res = oldBuildFragment(content, context);\n        if (res.childNodes.length === 1 && res.childNodes[0].nodeType === 3) {\n          res.childNodes[0].nodeValue = content;\n        }\n        return res;\n      };\n    }\n  })();\n  $.event.special.inserted = {};\n  $.event.special.removed = {};\n  return can;\n});\n\n","var map = {};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/string\"], function (can) {\n\t// ## construct.js\n\t// `can.Construct`  \n\t// _This is a modified version of\n\t// [John Resig's class](http://ejohn.org/blog/simple-javascript-inheritance/).  \n\t// It provides class level inheritance and callbacks._\n\t// A private flag used to initialize a new class instance without\n\t// initializing it's bindings.\n\tvar initializing = 0;\n\t/**\n\t * @add can.Construct\n\t */\n\tcan.Construct = function () {\n\t\tif (arguments.length) {\n\t\t\treturn can.Construct.extend.apply(can.Construct, arguments);\n\t\t}\n\t};\n\t/**\n\t * @static\n\t */\n\tcan.extend(can.Construct, {\n\t\t/**\n\t\t * @property {Boolean} can.Construct.constructorExtends constructorExtends\n\t\t * @parent can.Construct.static\n\t\t *\n\t\t * @description\n\t\t *\n\t\t * Toggles the behavior of a constructor function called\n\t\t * without `new` to extend the constructor function or\n\t\t * create a new instance.\n\t\t *\n\t\t * @body\n\t\t *\n\t\t * If `constructorExtends` is:\n\t\t *\n\t\t *  - `true` - the constructor extends\n\t\t *  - `false` - a new instance of the constructor is created\n\t\t *\n\t\t * For 1.1, `constructorExtends` defaults to true. For\n\t\t * 1.2, `constructorExtends` will default to false.\n\t\t */\n\t\tconstructorExtends: true,\n\t\t/**\n\t\t * @function can.Construct.newInstance newInstance\n\t\t * @parent can.Construct.static\n\t\t *\n\t\t * @description Returns an instance of `can.Construct`. This method\n\t\t * can be overridden to return a cached instance.\n\t\t *\n\t\t * @signature `can.Construct.newInstance([...args])`\n\t\t *\n\t\t * @param {*} [args] arguments that get passed to [can.Construct::setup] and [can.Construct::init]. Note\n\t\t * that if [can.Construct::setup] returns an array, those arguments will be passed to [can.Construct::init]\n\t\t * instead.\n\t\t * @return {class} instance of the class\n\t\t *\n\t\t * @body\n\t\t * Creates a new instance of the constructor function. This method is useful for creating new instances\n\t\t * with arbitrary parameters. Typically, however, you will simply want to call the constructor with the\n\t\t * __new__ operator.\n\t\t *\n\t\t * ## Example\n\t\t *\n\t\t * The following creates a `Person` Construct and then creates a new instance of Person,\n\t\t * using `apply` on newInstance to pass arbitrary parameters.\n\t\t *\n\t\t * @codestart\n\t\t * var Person = can.Construct.extend({\n\t\t *   init : function(first, middle, last) {\n\t\t *     this.first = first;\n\t\t *     this.middle = middle;\n\t\t *     this.last = last;\n\t\t *   }\n\t\t * });\n\t\t *\n\t\t * var args = [\"Justin\",\"Barry\",\"Meyer\"],\n\t\t *     justin = new Person.newInstance.apply(null, args);\n\t\t * @codeend\n\t\t */\n\t\tnewInstance: function () {\n\t\t\t// Get a raw instance object (`init` is not called).\n\t\t\tvar inst = this.instance(),\n\t\t\t\targs;\n\t\t\t// Call `setup` if there is a `setup`\n\t\t\tif (inst.setup) {\n\t\t\t\targs = inst.setup.apply(inst, arguments);\n\t\t\t}\n\t\t\t// Call `init` if there is an `init`  \n\t\t\t// If `setup` returned `args`, use those as the arguments\n\t\t\tif (inst.init) {\n\t\t\t\tinst.init.apply(inst, args || arguments);\n\t\t\t}\n\t\t\treturn inst;\n\t\t},\n\t\t// Overwrites an object with methods. Used in the `super` plugin.\n\t\t// `newProps` - New properties to add.\n\t\t// `oldProps` - Where the old properties might be (used with `super`).\n\t\t// `addTo` - What we are adding to.\n\t\t_inherit: function (newProps, oldProps, addTo) {\n\t\t\tcan.extend(addTo || newProps, newProps || {});\n\t\t},\n\t\t// used for overwriting a single property.\n\t\t// this should be used for patching other objects\n\t\t// the super plugin overwrites this\n\t\t_overwrite: function (what, oldProps, propName, val) {\n\t\t\twhat[propName] = val;\n\t\t},\n\t\t// Set `defaults` as the merger of the parent `defaults` and this\n\t\t// object's `defaults`. If you overwrite this method, make sure to\n\t\t// include option merging logic.\n\t\t/**\n\t\t * @function can.Construct.setup setup\n\t\t * @parent can.Construct.static\n\t\t *\n\t\t * @description Perform initialization logic for a constructor function.\n\t\t *\n\t\t * @signature `can.Construct.setup(base, fullName, staticProps, protoProps)`\n\t\t *\n\t\t * A static `setup` method provides inheritable setup functionality\n\t\t * for a Constructor function. The following example\n\t\t * creates a Group constructor function.  Any constructor\n\t\t * functions that inherit from Group will be added to\n\t\t * `Group.childGroups`.\n\t\t *\n\t\t *\n\t\t *     Group = can.Construct.extend({\n\t\t *       setup: function(Construct, fullName, staticProps, protoProps){\n\t\t *         this.childGroups = [];\n\t\t *         if(Construct !== can.Construct){\n\t\t *           this.childGroups(Construct)\n\t\t *         }\n\t\t *         Construct.setup.apply(this, arguments)\n\t\t *       }\n\t\t *     },{})\n\t\t *     var Flock = Group.extend(...)\n\t\t *     Group.childGroups[0] //-> Flock\n\t\t *\n\t\t * @param {constructor} base The base constructor that is being inherited from.\n\t\t * @param {String} fullName The name of the new constructor.\n\t\t * @param {Object} staticProps The static properties of the new constructor.\n\t\t * @param {Object} protoProps The prototype properties of the new constructor.\n\t\t *\n\t\t * @body\n\t\t * The static `setup` method is called immediately after a constructor\n\t\t * function is created and\n\t\t * set to inherit from its base constructor. It is useful for setting up\n\t\t * additional inheritance work.\n\t\t * Do not confuse this with the prototype `[can.Construct::setup]` method.\n\t\t *\n\t\t * ## Setup Extends Defaults\n\t\t *\n\t\t * Setup deeply extends the static `defaults` property of the base constructor with\n\t\t * properties of the inheriting constructor.  For example:\n\t\t *\n\t\t * @codestart\n\t\t * Parent = can.Construct.extend({\n\t\t *   defaults : {\n\t\t *     parentProp: 'foo'\n\t\t *   }\n\t\t * },{})\n\t\t *\n\t\t * Child = Parent.extend({\n\t\t *   defaults : {\n\t\t *     childProp : 'bar'\n\t\t *   }\n\t\t * },{}\n\t\t *\n\t\t * Child.defaults // {parentProp: 'foo', 'childProp': 'bar'}\n\t\t * @codeend\n\t\t *\n\t\t * ## Example\n\t\t *\n\t\t * This `Parent` class adds a reference to its base class to itself, and\n\t\t * so do all the classes that inherit from it.\n\t\t *\n\t\t * @codestart\n\t\t * Parent = can.Construct.extend({\n\t\t *   setup : function(base, fullName, staticProps, protoProps){\n\t\t *     this.base = base;\n\t\t *\n\t\t *     // call base functionality\n\t\t *     can.Construct.setup.apply(this, arguments)\n\t\t *   }\n\t\t * },{});\n\t\t *\n\t\t * Parent.base; // can.Construct\n\t\t *\n\t\t * Child = Parent({});\n\t\t *\n\t\t * Child.base; // Parent\n\t\t * @codeend\n\t\t */\n\t\tsetup: function (base, fullName) {\n\t\t\tthis.defaults = can.extend(true, {}, base.defaults, this.defaults);\n\t\t},\n\t\t// Create's a new `class` instance without initializing by setting the\n\t\t// `initializing` flag.\n\t\tinstance: function () {\n\t\t\t// Prevents running `init`.\n\t\t\tinitializing = 1;\n\t\t\tvar inst = new this();\n\t\t\t// Allow running `init`.\n\t\t\tinitializing = 0;\n\t\t\treturn inst;\n\t\t},\n\t\t// Extends classes.\n\t\t/**\n\t\t * @function can.Construct.extend extend\n\t\t * @parent can.Construct.static\n\t\t *\n\t\t * @signature `can.Construct.extend([name,] [staticProperties,] instanceProperties)`\n\t\t *\n\t\t * Extends `can.Construct`, or constructor functions derived from `can.Construct`,\n\t\t * to create a new constructor function. Example:\n\t\t *\n\t\t *     Animal = can.Construct.extend({\n\t\t *       sayHi: function(){\n\t\t *         console.log(\"hi\")\n\t\t *       }\n\t\t *     })\n\t\t *     var animal = new Animal()\n\t\t *     animal.sayHi();\n\t\t *\n\t\t * @param {String} [name] Creates the necessary properties and\n\t\t * objects that point from the `window` to the created constructor function. The following:\n\t\t *\n\t\t *     can.Construct.extend(\"company.project.Constructor\",{})\n\t\t *\n\t\t * creates a `company` object on window if it does not find one, a\n\t\t * `project` object on `company` if it does not find one, and it will set the\n\t\t * `Constructor` property on the `project` object to point to the constructor function.\n\t\t *\n\t\t * Finally, it sets \"company.project.Constructor\" as [can.Construct.fullName fullName]\n\t\t * and \"Constructor\" as [can.Construct.shortName shortName].\n\t\t *\n\t\t * @param {Object} [staticProperties] Properties that are added the constructor\n\t\t * function directly. For example:\n\t\t *\n\t\t *     Animal = can.Construct.extend({\n\t\t *       findAll: function(){\n\t\t *         return can.ajax({url: \"/animals\"})\n\t\t *       }\n\t\t *     },{});\n\t\t *\n\t\t *     Animal.findAll().then(function(json){ ... })\n\t\t *\n\t\t * The [can.Construct.setup static setup] method can be used to\n\t\t * specify inheritable behavior when a Constructor function is created.\n\t\t *\n\t\t * @param {Object} instanceProperties Properties that belong to\n\t\t * instances made with the constructor. These properties are added to the\n\t\t * constructor's `prototype` object. Example:\n\t\t *\n\t\t *     Animal = can.Construct.extend({\n\t\t *       init: function(name){\n\t\t *         this.name = name;\n\t\t *       },\n\t\t *       sayHi: function(){\n\t\t *         console.log(this.name,\"says hi\")\n\t\t *       }\n\t\t *     })\n\t\t *     var animal = new Animal()\n\t\t *     animal.sayHi();\n\t\t *\n\t\t * The [can.Construct::init init] and [can.Construct::setup setup] properties\n\t\t * are used for initialization.\n\t\t *\n\t\t * @return {function} The constructor function.\n\t\t *\n\t\t */\n\t\textend: function (fullName, klass, proto) {\n\t\t\t// Figure out what was passed and normalize it.\n\t\t\tif (typeof fullName !== 'string') {\n\t\t\t\tproto = klass;\n\t\t\t\tklass = fullName;\n\t\t\t\tfullName = null;\n\t\t\t}\n\t\t\tif (!proto) {\n\t\t\t\tproto = klass;\n\t\t\t\tklass = null;\n\t\t\t}\n\t\t\tproto = proto || {};\n\t\t\tvar _super_class = this,\n\t\t\t\t_super = this.prototype,\n\t\t\t\tparts, current, _fullName, _shortName, name, shortName, namespace, prototype;\n\t\t\t// Instantiate a base class (but only create the instance,\n\t\t\t// don't run the init constructor).\n\t\t\tprototype = this.instance();\n\t\t\t// Copy the properties over onto the new prototype.\n\t\t\tcan.Construct._inherit(proto, _super, prototype);\n\t\t\t// The dummy class constructor.\n\t\t\tfunction Constructor() {\n\t\t\t\t// All construction is actually done in the init method.\n\t\t\t\tif (!initializing) {\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\treturn this.constructor !== Constructor &&\n\t\t\t\t\t// We are being called without `new` or we are extending.\n\t\t\t\t\targuments.length && Constructor.constructorExtends ? Constructor.extend.apply(Constructor, arguments) :\n\t\t\t\t\t// We are being called with `new`.\n\t\t\t\t\tConstructor.newInstance.apply(Constructor, arguments);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Copy old stuff onto class (can probably be merged w/ inherit)\n\t\t\tfor (name in _super_class) {\n\t\t\t\tif (_super_class.hasOwnProperty(name)) {\n\t\t\t\t\tConstructor[name] = _super_class[name];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Copy new static properties on class.\n\t\t\tcan.Construct._inherit(klass, _super_class, Constructor);\n\t\t\t// Setup namespaces.\n\t\t\tif (fullName) {\n\n\t\t\t\tparts = fullName.split('.');\n\t\t\t\tshortName = parts.pop();\n\t\t\t\tcurrent = can.getObject(parts.join('.'), window, true);\n\t\t\t\tnamespace = current;\n\t\t\t\t_fullName = can.underscore(fullName.replace(/\\./g, \"_\"));\n\t\t\t\t_shortName = can.underscore(shortName);\n\n\t\t\t\n\n\t\t\t\tcurrent[shortName] = Constructor;\n\t\t\t}\n\t\t\t// Set things that shouldn't be overwritten.\n\t\t\tcan.extend(Constructor, {\n\t\t\t\tconstructor: Constructor,\n\t\t\t\tprototype: prototype,\n\t\t\t\t/**\n\t\t\t\t * @property {String} can.Construct.namespace namespace\n\t\t\t\t * @parent can.Construct.static\n\t\t\t\t *\n\t\t\t\t * The `namespace` property returns the namespace your constructor is in.\n\t\t\t\t * This provides a way organize code and ensure globally unique types. The\n\t\t\t\t * `namespace` is the [can.Construct.fullName fullName] you passed without the [can.Construct.shortName shortName].\n\t\t\t\t *\n\t\t\t\t * @codestart\n\t\t\t\t * can.Construct(\"MyApplication.MyConstructor\",{},{});\n\t\t\t\t * MyApplication.MyConstructor.namespace // \"MyApplication\"\n\t\t\t\t * MyApplication.MyConstructor.shortName // \"MyConstructor\"\n\t\t\t\t * MyApplication.MyConstructor.fullName  // \"MyApplication.MyConstructor\"\n\t\t\t\t * @codeend\n\t\t\t\t */\n\t\t\t\tnamespace: namespace,\n\t\t\t\t/**\n\t\t\t\t * @property {String} can.Construct.shortName shortName\n\t\t\t\t * @parent can.Construct.static\n\t\t\t\t *\n\t\t\t\t * If you pass a name when creating a Construct, the `shortName` property will be set to the\n\t\t\t\t * name you passed without the [can.Construct.namespace namespace].\n\t\t\t\t *\n\t\t\t\t * @codestart\n\t\t\t\t * can.Construct(\"MyApplication.MyConstructor\",{},{});\n\t\t\t\t * MyApplication.MyConstructor.namespace // \"MyApplication\"\n\t\t\t\t * MyApplication.MyConstructor.shortName // \"MyConstructor\"\n\t\t\t\t * MyApplication.MyConstructor.fullName  // \"MyApplication.MyConstructor\"\n\t\t\t\t * @codeend\n\t\t\t\t */\n\t\t\t\t_shortName: _shortName,\n\t\t\t\t/**\n\t\t\t\t * @property {String} can.Construct.fullName fullName\n\t\t\t\t * @parent can.Construct.static\n\t\t\t\t *\n\t\t\t\t * If you pass a name when creating a Construct, the `fullName` property will be set to\n\t\t\t\t * the name you passed. The `fullName` consists of the [can.Construct.namespace namespace] and\n\t\t\t\t * the [can.Construct.shortName shortName].\n\t\t\t\t *\n\t\t\t\t * @codestart\n\t\t\t\t * can.Construct(\"MyApplication.MyConstructor\",{},{});\n\t\t\t\t * MyApplication.MyConstructor.namespace // \"MyApplication\"\n\t\t\t\t * MyApplication.MyConstructor.shortName // \"MyConstructor\"\n\t\t\t\t * MyApplication.MyConstructor.fullName  // \"MyApplication.MyConstructor\"\n\t\t\t\t * @codeend\n\t\t\t\t */\n\t\t\t\tfullName: fullName,\n\t\t\t\t_fullName: _fullName\n\t\t\t});\n\t\t\t// Dojo and YUI extend undefined\n\t\t\tif (shortName !== undefined) {\n\t\t\t\tConstructor.shortName = shortName;\n\t\t\t}\n\t\t\t// Make sure our prototype looks nice.\n\t\t\tConstructor.prototype.constructor = Constructor;\n\t\t\t// Call the class `setup` and `init`\n\t\t\tvar t = [_super_class].concat(can.makeArray(arguments)),\n\t\t\t\targs = Constructor.setup.apply(Constructor, t);\n\t\t\tif (Constructor.init) {\n\t\t\t\tConstructor.init.apply(Constructor, args || t);\n\t\t\t}\n\t\t\t/**\n\t\t\t * @prototype\n\t\t\t */\n\t\t\treturn Constructor; //  \n\t\t\t/**\n\t\t\t * @property {Object} can.Construct.prototype.constructor constructor\n\t\t\t * @parent can.Construct.prototype\n\t\t\t *\n\t\t\t * A reference to the constructor function that created the instance. This allows you to access\n\t\t\t * the constructor's static properties from an instance.\n\t\t\t *\n\t\t\t * ## Example\n\t\t\t *\n\t\t\t * This can.Construct has a static counter that counts how many instances have been created:\n\t\t\t *\n\t\t\t * @codestart\n\t\t\t * can.Construct.extend(\"Counter\", {\n\t\t\t *     count: 0\n\t\t\t * }, {\n\t\t\t *     init: function() {\n\t\t\t *         this.constructor.count++;\n\t\t\t *     }\n\t\t\t * });\n\t\t\t *\n\t\t\t * new Counter();\n\t\t\t * Counter.count; // 1\n\t\t\t * @codeend\n\t\t\t */\n\t\t}\n\t});\n\t/**\n\t * @function can.Construct.prototype.setup setup\n\t * @parent can.Construct.prototype\n\t *\n\t * @signature `construct.setup(...args)`\n\t *\n\t * A setup function for the instantiation of a constructor function.\n\t *\n\t * @param {*} args The arguments passed to the constructor.\n\t *\n\t * @return {Array|undefined} If an array is returned, the array's items are passed as\n\t * arguments to [can.Construct::init init]. The following example always makes\n\t * sure that init is called with a jQuery wrapped element:\n\t *\n\t *     WidgetFactory = can.Construct.extend({\n\t *         setup: function(element){\n\t *             return [$(element)]\n\t *         }\n\t *     })\n\t *\n\t *     MyWidget = WidgetFactory.extend({\n\t *         init: function($el){\n\t *             $el.html(\"My Widget!!\")\n\t *         }\n\t *     })\n\t *\n\t * Otherwise, the arguments to the\n\t * constructor are passed to [can.Construct::init] and the return value of `setup` is discarded.\n\t *\n\t * @body\n\t *\n\t * ## Deciding between `setup` and `init`\n\t *\n\t *\n\t * Usually, you should use [can.Construct::init init] to do your constructor function's initialization.\n\t * Use `setup` instead for:\n\t *\n\t *   - initialization code that you want to run before the inheriting constructor's\n\t *     `init` method is called.\n\t *   - initialization code that should run whether or not inheriting constructors\n\t *     call their base's `init` methods.\n\t *   - modifying the arguments that will get passed to `init`.\n\t *\n\t * ## Example\n\t *\n\t * This code is a simplified version of the code in [can.Control]'s setup\n\t * method. It converts the first argument to a jQuery collection and\n\t * extends the controller's defaults with the options that were passed.\n\t *\n\t *\n\t *     can.Control = can.Construct.extend({\n\t *         setup: function(domElement, rawOptions) {\n\t *             // set up this.element\n\t *             this.element = $(domElement);\n\t *\n\t *             // set up this.options\n\t *             this.options = can.extend({},\n\t *                                   this.constructor.defaults,\n\t *                                   rawOptions\n\t *                                  );\n\t *\n\t *             // pass this.element and this.options to init.\n\t *             return [this.element, this.options];\n\t *         }\n\t *     });\n\t *\n\t */\n\tcan.Construct.prototype.setup = function () {};\n\t/**\n\t * @function can.Construct.prototype.init init\n\t * @parent can.Construct.prototype\n\t *\n\t * @description Called when a new instance of a can.Construct is created.\n\t *\n\t * @signature `construct.init(...args)`\n\t * @param {*} args the arguments passed to the constructor (or the items of the array returned from [can.Construct::setup])\n\t *\n\t * @body\n\t * If a prototype `init` method is provided, it is called when a new Construct is created,\n\t * after [can.Construct::setup]. The `init` method is where the bulk of your initialization code\n\t * should go, and a common thing to do in `init` is to save the arguments passed into the constructor.\n\t *\n\t * ## Examples\n\t *\n\t * First, we'll make a Person constructor that has a first and last name:\n\t *\n\t * @codestart\n\t * var Person = can.Construct.extend({\n\t *     init: function(first, last) {\n\t *         this.first = first;\n\t *         this.last  = last;\n\t *     }\n\t * });\n\t *\n\t * var justin = new Person(\"Justin\", \"Meyer\");\n\t * justin.first; // \"Justin\"\n\t * justin.last; // \"Meyer\"\n\t * @codeend\n\t *\n\t * Then we'll extend Person into Programmer and add a favorite language:\n\t *\n\t * @codestart\n\t * var Programmer = Person.extend({\n\t *     init: function(first, last, language) {\n\t *         // call base's init\n\t *         Person.prototype.init.apply(this, arguments);\n\t *\n\t *         // other initialization code\n\t *         this.language = language;\n\t *     },\n\t *     bio: function() {\n\t *         return \"Hi! I'm \"\" + this.first + \" \" + this.last +\n\t *             \" and I write \" + this.language + \".\";\n\t *     }\n\t * });\n\t *\n\t * var brian = new Programmer(\"Brian\", \"Moschel\", 'ECMAScript');\n\t * brian.bio(); // \"Hi! I'm Brian Moschel and I write ECMAScript.\";\n\t * @codeend\n\t *\n\t * ## Modified Arguments\n\t *\n\t * [can.Construct::setup] is able to modify the arguments passed to `init`.\n\t * If you aren't receiving the exact arguments as those passed to `new Construct(args)`,\n\t * check to make sure that they aren't being changed by `setup` somewhere along\n\t * the inheritance chain.\n\t */\n\tcan.Construct.prototype.init = function () {};\n\treturn can.Construct;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/construct\";\ndefine([\"can/util/string\"], function(can) {\n  var initializing = 0;\n  can.Construct = function() {\n    if (arguments.length) {\n      return can.Construct.extend.apply(can.Construct, arguments);\n    }\n  };\n  can.extend(can.Construct, {\n    constructorExtends: true,\n    newInstance: function() {\n      var inst = this.instance(),\n          args;\n      if (inst.setup) {\n        args = inst.setup.apply(inst, arguments);\n      }\n      if (inst.init) {\n        inst.init.apply(inst, args || arguments);\n      }\n      return inst;\n    },\n    _inherit: function(newProps, oldProps, addTo) {\n      can.extend(addTo || newProps, newProps || {});\n    },\n    _overwrite: function(what, oldProps, propName, val) {\n      what[propName] = val;\n    },\n    setup: function(base, fullName) {\n      this.defaults = can.extend(true, {}, base.defaults, this.defaults);\n    },\n    instance: function() {\n      initializing = 1;\n      var inst = new this();\n      initializing = 0;\n      return inst;\n    },\n    extend: function(fullName, klass, proto) {\n      if (typeof fullName !== 'string') {\n        proto = klass;\n        klass = fullName;\n        fullName = null;\n      }\n      if (!proto) {\n        proto = klass;\n        klass = null;\n      }\n      proto = proto || {};\n      var _super_class = this,\n          _super = this.prototype,\n          parts,\n          current,\n          _fullName,\n          _shortName,\n          name,\n          shortName,\n          namespace,\n          prototype;\n      prototype = this.instance();\n      can.Construct._inherit(proto, _super, prototype);\n      function Constructor() {\n        if (!initializing) {\n          return this.constructor !== Constructor && arguments.length && Constructor.constructorExtends ? Constructor.extend.apply(Constructor, arguments) : Constructor.newInstance.apply(Constructor, arguments);\n        }\n      }\n      for (name in _super_class) {\n        if (_super_class.hasOwnProperty(name)) {\n          Constructor[name] = _super_class[name];\n        }\n      }\n      can.Construct._inherit(klass, _super_class, Constructor);\n      if (fullName) {\n        parts = fullName.split('.');\n        shortName = parts.pop();\n        current = can.getObject(parts.join('.'), window, true);\n        namespace = current;\n        _fullName = can.underscore(fullName.replace(/\\./g, \"_\"));\n        _shortName = can.underscore(shortName);\n        current[shortName] = Constructor;\n      }\n      can.extend(Constructor, {\n        constructor: Constructor,\n        prototype: prototype,\n        namespace: namespace,\n        _shortName: _shortName,\n        fullName: fullName,\n        _fullName: _fullName\n      });\n      if (shortName !== undefined) {\n        Constructor.shortName = shortName;\n      }\n      Constructor.prototype.constructor = Constructor;\n      var t = [_super_class].concat(can.makeArray(arguments)),\n          args = Constructor.setup.apply(Constructor, t);\n      if (Constructor.init) {\n        Constructor.init.apply(Constructor, args || t);\n      }\n      return Constructor;\n    }\n  });\n  can.Construct.prototype.setup = function() {};\n  can.Construct.prototype.init = function() {};\n  return can.Construct;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\"], function (can) {\n\t/**\n\t * @typedef {{bind:function():*,unbind:function():*}} can/util/bind\n\t *\n\t * Provides mixin-able bind and unbind methods. `bind()` calls `this._bindsetup`\n\t * when the first bind happens and.  `unbind()` calls `this._bindteardown` when there\n\t * are no more event handlers.\n\t *\n\t */\n\t// ## Bind helpers\n\tcan.bindAndSetup = function () {\n\t\t// Add the event to this object\n\t\tcan.addEvent.apply(this, arguments);\n\t\t// If not initializing, and the first binding\n\t\t// call bindsetup if the function exists.\n\t\tif (!this._init) {\n\t\t\tif (!this._bindings) {\n\t\t\t\tthis._bindings = 1;\n\t\t\t\t// setup live-binding\n\t\t\t\tif (this._bindsetup) {\n\t\t\t\t\tthis._bindsetup();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._bindings++;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\tcan.unbindAndTeardown = function (ev, handler) {\n\t\t// Remove the event handler\n\t\tcan.removeEvent.apply(this, arguments);\n\t\tif (this._bindings === null) {\n\t\t\tthis._bindings = 0;\n\t\t} else {\n\t\t\tthis._bindings--;\n\t\t}\n\t\t// If there are no longer any bindings and\n\t\t// there is a bindteardown method, call it.\n\t\tif (!this._bindings && this._bindteardown) {\n\t\t\tthis._bindteardown();\n\t\t}\n\t\treturn this;\n\t};\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/bind\";\ndefine([\"can/util/library\"], function(can) {\n  can.bindAndSetup = function() {\n    can.addEvent.apply(this, arguments);\n    if (!this._init) {\n      if (!this._bindings) {\n        this._bindings = 1;\n        if (this._bindsetup) {\n          this._bindsetup();\n        }\n      } else {\n        this._bindings++;\n      }\n    }\n    return this;\n  };\n  can.unbindAndTeardown = function(ev, handler) {\n    can.removeEvent.apply(this, arguments);\n    if (this._bindings === null) {\n      this._bindings = 0;\n    } else {\n      this._bindings--;\n    }\n    if (!this._bindings && this._bindteardown) {\n      this._bindteardown();\n    }\n    return this;\n  };\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\"], function(can){\n\t\n\t\n\n\tvar bubble = can.bubble = {\n\t\t\t// Given a binding, returns a string event name used to set up bubbline.\n\t\t\t// If no binding should be done, undefined or null should be returned\n\t\t\tevent: function(map, eventName) {\n\t\t\t\treturn map.constructor._bubbleRule(eventName, map);\n\t\t\t},\n\t\t\tchildrenOf: function (parentMap, eventName) {\n\t\n\t\t\t\tparentMap._each(function (child, prop) {\n\t\t\t\t\tif (child && child.bind) {\n\t\t\t\t\t\tbubble.toParent(child, parentMap, prop, eventName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t},\n\t\t\tteardownChildrenFrom: function(parentMap, eventName){\n\t\t\t\tparentMap._each(function (child) {\n\t\t\t\t\t\n\t\t\t\t\tbubble.teardownFromParent(parentMap, child, eventName);\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t},\n\t\t\ttoParent: function(child, parent, prop, eventName) {\n\t\t\t\tcan.listenTo.call(parent, child, eventName, function ( /* ev, attr */ ) {\n\t\t\t\t\t// `batchTrigger` the type on this...\n\t\t\t\t\tvar args = can.makeArray(arguments),\n\t\t\t\t\t\tev = args.shift();\n\t\t\t\t\t\n\t\t\t\t\targs[0] =\n\t\t\t\t\t\t(can.List && parent instanceof can.List ?\n\t\t\t\t\t\t\tparent.indexOf(child) :\n\t\t\t\t\t\t\tprop ) + (args[0] ? \".\"+args[0] : \"\");\n\t\t\n\t\t\t\t\t// track objects dispatched on this map\t\t\n\t\t\t\t\tev.triggeredNS = ev.triggeredNS || {};\n\t\t\n\t\t\t\t\t// if it has already been dispatched exit\n\t\t\t\t\tif (ev.triggeredNS[parent._cid]) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tev.triggeredNS[parent._cid] = true;\n\t\t\t\t\t// send change event with modified attr to parent\t\n\t\t\t\t\tcan.trigger(parent, ev, args);\n\t\t\t\t});\n\t\t\t},\n\t\t\tteardownFromParent: function (parent, child, eventName ) {\n\t\t\t\tif(child && child.unbind ) {\n\t\t\t\t\tcan.stopListening.call(parent, child, eventName);\n\t\t\t\t}\n\t\t\t},\n\t\t\tbind: function(parent, eventName) {\n\t\t\t\tif (!parent._init ) {\n\t\t\t\t\tvar bubbleEvent = bubble.event(parent, eventName);\n\t\t\t\t\tif(bubbleEvent) {\n\t\t\t\t\t\tif(!parent._bubbleBindings) {\n\t\t\t\t\t\t\tparent._bubbleBindings = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!parent._bubbleBindings[bubbleEvent]) {\n\t\t\t\t\t\t\tparent._bubbleBindings[bubbleEvent] = 1;\n\t\t\t\t\t\t\t// setup live-binding\n\t\t\t\t\t\t\tbubble.childrenOf(parent, bubbleEvent);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparent._bubbleBindings[bubbleEvent]++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tunbind: function(parent, eventName) {\n\t\t\t\tvar bubbleEvent = bubble.event(parent, eventName);\n\t\t\t\tif(bubbleEvent) {\n\t\t\t\t\tif (parent._bubbleBindings ) {\n\t\t\t\t\t\tparent._bubbleBindings[bubbleEvent]--;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (! parent._bubbleBindings[bubbleEvent] ) {\n\t\t\t\t\t\tdelete parent._bubbleBindings[bubbleEvent];\n\t\t\t\t\t\tbubble.teardownChildrenFrom(parent, bubbleEvent);\n\t\t\t\t\t\tif(can.isEmptyObject(parent._bubbleBindings)) {\n\t\t\t\t\t\t\tdelete parent._bubbleBindings;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tadd: function(parent, child, prop){\n\t\t\t\tif(child instanceof can.Map && parent._bubbleBindings) {\n\t\t\t\t\tfor(var eventName in parent._bubbleBindings) {\n\t\t\t\t\t\tif( parent._bubbleBindings[eventName] ) {\n\t\t\t\t\t\t\tbubble.teardownFromParent(parent, child, eventName);\n\t\t\t\t\t\t\tbubble.toParent(child, parent, prop, eventName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoveMany: function(parent, children){\n\t\t\t\tfor(var i = 0, len = children.length; i < len; i++) {\n\t\t\t\t\tbubble.remove(parent, children[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\tremove: function(parent, child){\n\t\t\t\tif(child instanceof can.Map && parent._bubbleBindings) {\n\t\t\t\t\tfor(var eventName in parent._bubbleBindings) {\n\t\t\t\t\t\tif( parent._bubbleBindings[eventName] ) {\n\t\t\t\t\t\t\tbubble.teardownFromParent(parent, child, eventName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tset: function(parent, prop, value, current){\n\t\t\t\t\n\t\t\t\t//var res = parent.__type(value, prop);\n\t\t\t\tif( can.Map.helpers.isObservable(value) ) {\n\t\t\t\t\tbubble.add(parent, value, prop);\n\t\t\t\t}\n\t\t\t\t// bubble.add will remove, so only remove if we are replacing another object\n\t\t\t\tif( can.Map.helpers.isObservable(current) ) {\n\t\t\t\t\tbubble.remove(parent, current);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t};\n\t\n\treturn bubble;\n\t\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/map/bubble\";\ndefine([\"can/util/library\"], function(can) {\n  var bubble = can.bubble = {\n    event: function(map, eventName) {\n      return map.constructor._bubbleRule(eventName, map);\n    },\n    childrenOf: function(parentMap, eventName) {\n      parentMap._each(function(child, prop) {\n        if (child && child.bind) {\n          bubble.toParent(child, parentMap, prop, eventName);\n        }\n      });\n    },\n    teardownChildrenFrom: function(parentMap, eventName) {\n      parentMap._each(function(child) {\n        bubble.teardownFromParent(parentMap, child, eventName);\n      });\n    },\n    toParent: function(child, parent, prop, eventName) {\n      can.listenTo.call(parent, child, eventName, function() {\n        var args = can.makeArray(arguments),\n            ev = args.shift();\n        args[0] = (can.List && parent instanceof can.List ? parent.indexOf(child) : prop) + (args[0] ? \".\" + args[0] : \"\");\n        ev.triggeredNS = ev.triggeredNS || {};\n        if (ev.triggeredNS[parent._cid]) {\n          return;\n        }\n        ev.triggeredNS[parent._cid] = true;\n        can.trigger(parent, ev, args);\n      });\n    },\n    teardownFromParent: function(parent, child, eventName) {\n      if (child && child.unbind) {\n        can.stopListening.call(parent, child, eventName);\n      }\n    },\n    bind: function(parent, eventName) {\n      if (!parent._init) {\n        var bubbleEvent = bubble.event(parent, eventName);\n        if (bubbleEvent) {\n          if (!parent._bubbleBindings) {\n            parent._bubbleBindings = {};\n          }\n          if (!parent._bubbleBindings[bubbleEvent]) {\n            parent._bubbleBindings[bubbleEvent] = 1;\n            bubble.childrenOf(parent, bubbleEvent);\n          } else {\n            parent._bubbleBindings[bubbleEvent]++;\n          }\n        }\n      }\n    },\n    unbind: function(parent, eventName) {\n      var bubbleEvent = bubble.event(parent, eventName);\n      if (bubbleEvent) {\n        if (parent._bubbleBindings) {\n          parent._bubbleBindings[bubbleEvent]--;\n        }\n        if (!parent._bubbleBindings[bubbleEvent]) {\n          delete parent._bubbleBindings[bubbleEvent];\n          bubble.teardownChildrenFrom(parent, bubbleEvent);\n          if (can.isEmptyObject(parent._bubbleBindings)) {\n            delete parent._bubbleBindings;\n          }\n        }\n      }\n    },\n    add: function(parent, child, prop) {\n      if (child instanceof can.Map && parent._bubbleBindings) {\n        for (var eventName in parent._bubbleBindings) {\n          if (parent._bubbleBindings[eventName]) {\n            bubble.teardownFromParent(parent, child, eventName);\n            bubble.toParent(child, parent, prop, eventName);\n          }\n        }\n      }\n    },\n    removeMany: function(parent, children) {\n      for (var i = 0,\n          len = children.length; i < len; i++) {\n        bubble.remove(parent, children[i]);\n      }\n    },\n    remove: function(parent, child) {\n      if (child instanceof can.Map && parent._bubbleBindings) {\n        for (var eventName in parent._bubbleBindings) {\n          if (parent._bubbleBindings[eventName]) {\n            bubble.teardownFromParent(parent, child, eventName);\n          }\n        }\n      }\n    },\n    set: function(parent, prop, value, current) {\n      if (can.Map.helpers.isObservable(value)) {\n        bubble.add(parent, value, prop);\n      }\n      if (can.Map.helpers.isObservable(current)) {\n        bubble.remove(parent, current);\n      }\n      return value;\n    }\n  };\n  return bubble;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/can\"], function (can) {\n\t// Which batch of events this is for -- might not want to send multiple\n\t// messages on the same batch.  This is mostly for event delegation.\n\tvar batchNum = 1,\n\t\t// how many times has start been called without a stop\n\t\ttransactions = 0,\n\t\t// an array of events within a transaction\n\t\tbatchEvents = [],\n\t\tstopCallbacks = [];\n\tcan.batch = {\n\t\t/**\n\t\t * @function can.batch.start\n\t\t * @parent can.batch\n\t\t * @description Begin an event batch.\n\t\t *\n\t\t * @signature `can.batch.start([batchStopHandler])`\n\t\t *\n\t\t * @param {Function} [batchStopHandler] a callback that gets called after all batched events have been called\n\t\t *\n\t\t * @body\n\t\t * `can.batch.start` causes can.Map to begin an event batch. Until `[can.batch.stop]` is called, any\n\t\t * events that would result from calls to `[can.Map::attr attr]` are held back from firing. If you have\n\t\t * lots of changes to make to can.Maps, batching them together can help performance &emdash; especially if\n\t\t * those can.Maps are live-bound to the DOM.\n\t\t *\n\t\t * In this example, you can see how the _first_ and _change_ events are not fired (and their handlers\n\t\t * are not called) until `can.batch.stop` is called.\n\t\t *\n\t\t * @codestart\n\t\t * var person = new can.Map({\n\t\t *     first: 'Alexis',\n\t\t *     last: 'Abril'\n\t\t * });\n\t\t *\n\t\t * person.bind('first', function() {\n\t\t *     console.log(\"First name changed.\"\");\n\t\t * }).bind('change', function() {\n\t\t *     console.log(\"Something changed.\");\n\t\t * });\n\t\t *\n\t\t * can.batch.start();\n\t\t * person.attr('first', 'Alex');\n\t\t * console.log('Still in the batch.');\n\t\t * can.batch.stop();\n\t\t *\n\t\t * // the log has:\n\t\t * // Still in the batch.\n\t\t * // First name changed.\n\t\t * // Something changed.\n\t\t * @codeend\n\t\t *\n\t\t * You can also pass a callback to `can.batch.start` which will be called after all the events have\n\t\t * been fired:\n\t\t * @codestart\n\t\t * can.batch.start(function() {\n\t\t *     console.log('The batch is over.');\n\t\t * });\n\t\t * person.attr('first', 'Izzy');\n\t\t * console.log('Still in the batch.');\n\t\t * can.batch.stop();\n\t\t *\n\t\t * // The console has:\n\t\t * // Still in the batch.\n\t\t * // First name changed.\n\t\t * // Something changed.\n\t\t * // The batch is over.\n\t\t * @codeend\n\t\t *\n\t\t * ## Calling `can.batch.start` multiple times\n\t\t *\n\t\t * If you call `can.batch.start` more than once, `can.batch.stop` needs to be called\n\t\t * the same number of times before any batched events will fire. For ways\n\t\t * to circumvent this process, see [can.batch.stop].\n\t\t *\n\t\t * Here is an example that demonstrates how events are affected by calling\n\t\t * `can.batch.start` multiple times.\n\t\t *\n\t\t * @codestart\n\t\t * var addPeople = function(observable) {\n\t\t *     can.batch.start();\n\t\t *     observable.attr('a', 'Alice');\n\t\t *     observable.attr('b', 'Bob');\n\t\t *     observable.attr('e', 'Eve');\n\t\t *     can.batch.stop();\n\t\t * };\n\t\t *\n\t\t * // In a completely different place:\n\t\t * var list = new can.Map();\n\t\t * list.bind('change', function() {\n\t\t *     console.log('The list changed.');\n\t\t * });\n\t\t *\n\t\t * can.batch.start();\n\t\t * addPeople(list);\n\t\t * console.log('Still in the batch.');\n\t\t *\n\t\t * // Here, the console has:\n\t\t * // Still in the batch.\n\t\t *\n\t\t * can.batch.stop();\n\t\t *\n\t\t * // Here, the console has:\n\t\t * // Still in the batch.\n\t\t * // The list changed.\n\t\t * // The list changed.\n\t\t * // The list changed.\n\t\t * @codeend\n\t\t */\n\t\tstart: function (batchStopHandler) {\n\t\t\ttransactions++;\n\t\t\tif (batchStopHandler) {\n\t\t\t\tstopCallbacks.push(batchStopHandler);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @function can.batch.stop\n\t\t * @parent can.batch\n\t\t * @description End an event batch.\n\t\t * @signature `can.batch.stop([force[, callStart]])`\n\t\t * @param {bool} [force=false] whether to stop batching events immediately\n\t\t * @param {bool} [callStart=false] whether to call `[can.batch.start can.batch.start]` after firing batched events\n\t\t *\n\t\t * @body\n\t\t * `can.batch.stop` matches an earlier `[can.batch.start]` call. If `can.batch.stop` has been\n\t\t * called as many times as `can.batch.start` (or if _force_ is true), all batched events will be\n\t\t * fired and any callbacks passed to `can.batch.start` since the beginning of the batch will be\n\t\t * called. If _force and _callStart_ are both true, a new batch will be started when all\n\t\t * the events and callbacks have been fired.\n\t\t *\n\t\t * See `[can.batch.start]` for examples of `can.batch.start` and `can.batch.stop` in normal use.\n\t\t *\n\t\t * In this example, the batch is forceably ended in the `addPeople` function.\n\t\t * @codestart\n\t\t * var addPeople = function(observable) {\n\t\t *     can.batch.start();\n\t\t *     observable.attr('a', 'Alice');\n\t\t *     observable.attr('b', 'Bob');\n\t\t *     observable.attr('e', 'Eve');\n\t\t *     can.batch.stop(true);\n\t\t * };\n\t\t *\n\t\t * // In a completely different place:\n\t\t * var list = new can.Map();\n\t\t * list.bind('change', function() {\n\t\t *     console.log('The list changed.');\n\t\t * });\n\t\t *\n\t\t * can.batch.start();\n\t\t * addPeople(list);\n\t\t * console.log('Still in the batch.');\n\t\t *\n\t\t * // Here, the console has:\n\t\t * // Still in the batch.\n\t\t *\n\t\t * can.batch.stop();\n\t\t *\n\t\t * // Here, the console has:\n\t\t * // The list changed.\n\t\t * // The list changed.\n\t\t * // The list changed.\n\t\t * // Still in the batch.\n\t\t * @codeend\n\t\t */\n\t\tstop: function (force, callStart) {\n\t\t\tif (force) {\n\t\t\t\ttransactions = 0;\n\t\t\t} else {\n\t\t\t\ttransactions--;\n\t\t\t}\n\t\t\tif (transactions === 0) {\n\t\t\t\tvar items = batchEvents.slice(0),\n\t\t\t\t\tcallbacks = stopCallbacks.slice(0),\n\t\t\t\t\ti, len;\n\t\t\t\tbatchEvents = [];\n\t\t\t\tstopCallbacks = [];\n\t\t\t\tbatchNum++;\n\t\t\t\tif (callStart) {\n\t\t\t\t\tcan.batch.start();\n\t\t\t\t}\n\t\t\t\tfor(i = 0, len = items.length; i < len; i++) {\n\t\t\t\t\tcan.trigger.apply(can, items[i]);\n\t\t\t\t}\n\t\t\t\tfor(i = 0, len = callbacks.length; i < callbacks.length; i++) {\n\t\t\t\t\tcallbacks[i]();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @function can.batch.trigger\n\t\t * @parent can.batch\n\t\t * @description Trigger an event to be added to the current batch.\n\t\t * @signature `can.batch.trigger(item, event [, args])`\n\t\t * @param {can.Map} item the target of the event\n\t\t * @param {String|{type: String}} event the type of event, or an event object with a type given\n\t\t * @param {Array} [args] the parameters to trigger the event with.\n\t\t *\n\t\t * @body\n\t\t * If events are currently being batched, calling `can.batch.trigger` adds an event\n\t\t * to the batch. If events are not currently being batched, the event is triggered\n\t\t * immediately.\n\t\t */\n\t\ttrigger: function (item, event, args) {\n\t\t\t// Don't send events if initalizing.\n\t\t\tif (!item._init) {\n\t\t\t\tif (transactions === 0) {\n\t\t\t\t\treturn can.trigger(item, event, args);\n\t\t\t\t} else {\n\t\t\t\t\tevent = typeof event === 'string' ? {\n\t\t\t\t\t\ttype: event\n\t\t\t\t\t} : event;\n\t\t\t\t\tevent.batchNum = batchNum;\n\t\t\t\t\tbatchEvents.push([\n\t\t\t\t\t\titem,\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\targs\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/batch\";\ndefine([\"can/util/can\"], function(can) {\n  var batchNum = 1,\n      transactions = 0,\n      batchEvents = [],\n      stopCallbacks = [];\n  can.batch = {\n    start: function(batchStopHandler) {\n      transactions++;\n      if (batchStopHandler) {\n        stopCallbacks.push(batchStopHandler);\n      }\n    },\n    stop: function(force, callStart) {\n      if (force) {\n        transactions = 0;\n      } else {\n        transactions--;\n      }\n      if (transactions === 0) {\n        var items = batchEvents.slice(0),\n            callbacks = stopCallbacks.slice(0),\n            i,\n            len;\n        batchEvents = [];\n        stopCallbacks = [];\n        batchNum++;\n        if (callStart) {\n          can.batch.start();\n        }\n        for (i = 0, len = items.length; i < len; i++) {\n          can.trigger.apply(can, items[i]);\n        }\n        for (i = 0, len = callbacks.length; i < callbacks.length; i++) {\n          callbacks[i]();\n        }\n      }\n    },\n    trigger: function(item, event, args) {\n      if (!item._init) {\n        if (transactions === 0) {\n          return can.trigger(item, event, args);\n        } else {\n          event = typeof event === 'string' ? {type: event} : event;\n          event.batchNum = batchNum;\n          batchEvents.push([item, event, args]);\n        }\n      }\n    }\n  };\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/view\"], function (can) {\n\n\tvar selectsCommentNodes = (function(){\n\t\treturn can.$(document.createComment('~')).length === 1;\n\t})();\n\n\t/**\n\t * @property {Object} can.view.elements\n\t * @parent can.view\n\t *\n\t * Provides helper methods for and information about the behavior\n\t * of DOM elements.\n\t */\n\tvar elements = {\n\t\ttagToContentPropMap: {\n\t\t\toption: 'textContent' in document.createElement('option') ? 'textContent' : 'innerText',\n\t\t\ttextarea: 'value'\n\t\t},\n\t\t/**\n\t\t * @property {Object.<String,(String|Boolean|function)>} can.view.elements.attrMap\n\t\t * @parent can.view.elements\n\t\t *\n\t\t *\n\t\t * A mapping of\n\t\t * special attributes to their JS property. For example:\n\t\t *\n\t\t *     \"class\" : \"className\"\n\t\t *\n\t\t * means get or set `element.className`. And:\n\t\t *\n\t\t *      \"checked\" : true\n\t\t *\n\t\t * means set `element.checked = true`.\n\t\t *\n\t\t *\n\t\t * If the attribute name is not found, it's assumed to use\n\t\t * `element.getAttribute` and `element.setAttribute`.\n\t\t */\n\t\t// 3.0 TODO: remove\n\t\tattrMap: can.attr.map,\n\t\t// matches the attrName of a regexp\n\t\tattrReg: /([^\\s=]+)[\\s]*=[\\s]*/,\n\t\t// 3.0 TODO: remove\n\t\tdefaultValue: can.attr.defaultValue,\n\t\t// a map of parent element to child elements\n\t\t/**\n\t\t * @property {Object.<String,String>} can.view.elements.tagMap\n\t\t * @parent can.view.elements\n\t\t *\n\t\t * A mapping of parent node names to child node names that can be inserted within\n\t\t * the parent node name.  For example: `table: \"tbody\"` means that\n\t\t * if you want a placeholder element within a `table`, a `tbody` will be\n\t\t * created.\n\t\t */\n\t\ttagMap: {\n\t\t\t'': 'span',\n\t\t\ttable: 'tbody',\n\t\t\ttr: 'td',\n\t\t\tol: 'li',\n\t\t\tul: 'li',\n\t\t\ttbody: 'tr',\n\t\t\tthead: 'tr',\n\t\t\ttfoot: 'tr',\n\t\t\tselect: 'option',\n\t\t\toptgroup: 'option'\n\t\t},\n\t\t// a tag's parent element\n\t\treverseTagMap: {\n\t\t\ttr: 'tbody',\n\t\t\toption: 'select',\n\t\t\ttd: 'tr',\n\t\t\tth: 'tr',\n\t\t\tli: 'ul'\n\t\t},\n\t\t// Used to determine the parentNode if el is directly within a documentFragment\n\t\tgetParentNode: function (el, defaultParentNode) {\n\t\t\treturn defaultParentNode && el.parentNode.nodeType === 11 ? defaultParentNode : el.parentNode;\n\t\t},\n\t\t// 3.0 TODO: remove\n\t\tsetAttr: can.attr.set,\n\t\t// 3.0 TODO: remove\n\t\tgetAttr: can.attr.get,\n\t\t// 3.0 TODO: remove\n\t\tremoveAttr: can.attr.remove,\n\t\t// Gets a \"pretty\" value for something\n\t\tcontentText: function (text) {\n\t\t\tif (typeof text === 'string') {\n\t\t\t\treturn text;\n\t\t\t}\n\t\t\t// If has no value, return an empty string.\n\t\t\tif (!text && text !== 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn '' + text;\n\t\t},\n\t\t/**\n\t\t * @function can.view.elements.after\n\t\t * @parent can.view.elements\n\t\t *\n\t\t * Inserts newFrag after oldElements.\n\t\t *\n\t\t * @param {Array.<HTMLElement>} oldElements\n\t\t * @param {DocumentFragment} newFrag\n\t\t */\n\t\tafter: function (oldElements, newFrag) {\n\t\t\tvar last = oldElements[oldElements.length - 1];\n\t\t\t// Insert it in the `document` or `documentFragment`\n\t\t\tif (last.nextSibling) {\n\t\t\t\tcan.insertBefore(last.parentNode, newFrag, last.nextSibling);\n\t\t\t} else {\n\t\t\t\tcan.appendChild(last.parentNode, newFrag);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @function can.view.elements.replace\n\t\t * @parent can.view.elements\n\t\t *\n\t\t * Replaces `oldElements` with `newFrag`\n\t\t *\n\t\t * @param {Array.<HTMLElement>} oldElements\n\t\t * @param {DocumentFragment} newFrag\n\t\t */\n\t\treplace: function (oldElements, newFrag) {\n\t\t\telements.after(oldElements, newFrag);\n\t\t\tif(can.remove(can.$(oldElements)).length < oldElements.length && !selectsCommentNodes) {\n\t\t\t\tcan.each(oldElements, function(el) {\n\t\t\t\t\tif(el.nodeType === 8) {\n\t\t\t\t\t\tel.parentNode.removeChild(el);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tcan.view.elements = elements;\n\n\treturn elements;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/elements\";\ndefine([\"can/util/library\", \"can/view\"], function(can) {\n  var selectsCommentNodes = (function() {\n    return can.$(document.createComment('~')).length === 1;\n  })();\n  var elements = {\n    tagToContentPropMap: {\n      option: 'textContent' in document.createElement('option') ? 'textContent' : 'innerText',\n      textarea: 'value'\n    },\n    attrMap: can.attr.map,\n    attrReg: /([^\\s=]+)[\\s]*=[\\s]*/,\n    defaultValue: can.attr.defaultValue,\n    tagMap: {\n      '': 'span',\n      table: 'tbody',\n      tr: 'td',\n      ol: 'li',\n      ul: 'li',\n      tbody: 'tr',\n      thead: 'tr',\n      tfoot: 'tr',\n      select: 'option',\n      optgroup: 'option'\n    },\n    reverseTagMap: {\n      tr: 'tbody',\n      option: 'select',\n      td: 'tr',\n      th: 'tr',\n      li: 'ul'\n    },\n    getParentNode: function(el, defaultParentNode) {\n      return defaultParentNode && el.parentNode.nodeType === 11 ? defaultParentNode : el.parentNode;\n    },\n    setAttr: can.attr.set,\n    getAttr: can.attr.get,\n    removeAttr: can.attr.remove,\n    contentText: function(text) {\n      if (typeof text === 'string') {\n        return text;\n      }\n      if (!text && text !== 0) {\n        return '';\n      }\n      return '' + text;\n    },\n    after: function(oldElements, newFrag) {\n      var last = oldElements[oldElements.length - 1];\n      if (last.nextSibling) {\n        can.insertBefore(last.parentNode, newFrag, last.nextSibling);\n      } else {\n        can.appendChild(last.parentNode, newFrag);\n      }\n    },\n    replace: function(oldElements, newFrag) {\n      elements.after(oldElements, newFrag);\n      if (can.remove(can.$(oldElements)).length < oldElements.length && !selectsCommentNodes) {\n        can.each(oldElements, function(el) {\n          if (el.nodeType === 8) {\n            el.parentNode.removeChild(el);\n          }\n        });\n      }\n    }\n  };\n  can.view.elements = elements;\n  return elements;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/view/elements\", \"can/view\", \"can/view/node_lists\", \"can/view/parser\"], function (can, elements, view, nodeLists, parser) {\n\n\telements = elements || can.view.elements;\n\tnodeLists = nodeLists || can.view.NodeLists;\n\tparser = parser || can.view.parser;\n\n\t// ## live.js\n\t//\n\t// The live module provides live binding for computes\n\t// and can.List.\n\t//\n\t// Currently, it's API is designed for `can/view/render`, but\n\t// it could easily be used for other purposes.\n\t// ### Helper methods\n\t//\n\t// #### setup\n\t//\n\t// `setup(HTMLElement, bind(data), unbind(data)) -> data`\n\t//\n\t// Calls bind right away, but will call unbind\n\t// if the element is \"destroyed\" (removed from the DOM).\n\tvar setup = function (el, bind, unbind) {\n\t\t// Removing an element can call teardown which\n\t\t// unregister the nodeList which calls teardown\n\t\tvar tornDown = false,\n\t\t\tteardown = function () {\n\t\t\t\tif (!tornDown) {\n\t\t\t\t\ttornDown = true;\n\t\t\t\t\tunbind(data);\n\t\t\t\t\tcan.unbind.call(el, 'removed', teardown);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}, data = {\n\t\t\t\tteardownCheck: function (parent) {\n\t\t\t\t\treturn parent ? false : teardown();\n\t\t\t\t}\n\t\t\t};\n\t\tcan.bind.call(el, 'removed', teardown);\n\t\tbind(data);\n\t\treturn data;\n\t},\n\t\t// #### listen\n\t\t// Calls setup, but presets bind and unbind to\n\t\t// operate on a compute\n\t\tlisten = function (el, compute, change) {\n\t\t\treturn setup(el, function () {\n\t\t\t\tcompute.bind('change', change);\n\t\t\t}, function (data) {\n\t\t\t\tcompute.unbind('change', change);\n\t\t\t\tif (data.nodeList) {\n\t\t\t\t\tnodeLists.unregister(data.nodeList);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t// #### getAttributeParts\n\t\t// Breaks up a string like foo='bar' into [\"foo\",\"'bar'\"\"]\n\t\tgetAttributeParts = function (newVal) {\n\t\t\tvar attrs = {},\n\t\t\t\tattr;\n\t\t\tparser.parseAttrs(newVal,{\n\t\t\t\tattrStart: function(name){\n\t\t\t\t\tattrs[name] = \"\";\n\t\t\t\t\tattr = name;\n\t\t\t\t},\n\t\t\t\tattrValue: function(value){\n\t\t\t\t\tattrs[attr] += value;\n\t\t\t\t},\n\t\t\t\tattrEnd: function(){}\n\t\t\t});\n\t\t\treturn attrs;\n\t\t},\n\t\tsplice = [].splice,\n\t\tisNode = function(obj){\n\t\t\treturn obj && obj.nodeType;\n\t\t},\n\t\taddTextNodeIfNoChildren = function(frag){\n\t\t\tif(!frag.childNodes.length) {\n\t\t\t\tfrag.appendChild(document.createTextNode(\"\"));\n\t\t\t}\n\t\t};\n\t/**\n\t * @property {Object} can.view.live\n\t * @parent can.view.static\n\t * @release 2.0.4\n\t *\n\t * Setup live-binding between the DOM and a compute manually.\n\t * \n\t * @option {Object} An object with the live-binding methods:\n\t * [can.view.live.html], [can.view.live.list], [can.view.live.text], \n\t * [can.view.live.attr] and [can.view.live.attrs].\n\t * \n\t * @body\n\t *\n\t * ## Use\n\t *\n\t * `can.view.live` is an object with utlitiy methods for setting up\n\t * live-binding in relation to different parts of the DOM and DOM elements.  For \n\t * example, to make an `<h2>`'s text stay live with\n\t * a compute:\n\t * \n\t *     var text = can.compute(\"Hello World\");\n\t *     var textNode = $(\"h2\").text(\" \")[0].childNodes[0];\n\t *     can.view.live.text(textNode, text);\n\t *\n\t *\n\t */\n\tvar live = {\n\t\t/**\n\t\t * @function can.view.live.list\n\t\t * @parent can.view.live\n\t\t * @release 2.0.4\n\t\t *\n\t\t * Live binds a compute's [can.List] incrementally.\n\t\t *\n\t\t *\n\t\t * @param {HTMLElement} el An html element to replace with the live-section.\n\t\t *\n\t\t * @param {can.compute|can.List} list A [can.List] or [can.compute] whose value is a [can.List].\n\t\t *\n\t\t * @param {function(this:*,*,index):String} render(index, index) A function that when called with\n\t\t * the incremental item to render and the index of the item in the list.\n\t\t *\n\t\t * @param {Object} context The `this` the `render` function will be called with.\n\t\t *\n\t\t * @param {HTMLElement} [parentNode] An overwritable parentNode if `el`'s parent is\n\t\t * a documentFragment.\n\t\t *\n\t\t * ## Use\n\t\t *\n\t\t * `can.view.live.list` is used to setup incremental live-binding.\n\t\t *\n\t\t *     // a compute that change's it's list\n\t\t *     var todos = can.compute(function(){\n\t\t *       return new Todo.List({page: can.route.attr(\"page\")})\n\t\t *     })\n\t\t *\n\t\t *     var placeholder = document.createTextNode(\" \")\n\t\t *     $(\"ul#todos\").append(placeholder)\n\t\t *\n\t\t *\n\t\t *\n\t\t *     can.view.live.list(\n\t\t *       placeholder,\n\t\t *       todos,\n\t\t *       function(todo, index){\n\t\t *         return \"<li>\"+todo.attr(\"name\")+\"</li>\"\n\t\t *       })\n\t\t *\n\t\t */\n\t\tlist: function (el, compute, render, context, parentNode) {\n\t\t\t\n\t\t\t// A nodeList of all elements this live-list manages.\n\t\t\t// This is here so that if this live list is within another section\n\t\t\t// that section is able to remove the items in this list.\n\t\t\tvar masterNodeList = [el],\n\t\t\t\t// A mapping of items to their indicies'\n\t\t\t\tindexMap = [],\n\t\t\t\t// Called when items are added to the list.\n\t\t\t\tadd = function (ev, items, index) {\n\t\t\t\t\t// Collect new html and mappings\n\t\t\t\t\tvar frag = document.createDocumentFragment(),\n\t\t\t\t\t\tnewNodeLists = [],\n\t\t\t\t\t\tnewIndicies = [];\n\t\t\t\t\t// For each new item,\n\t\t\t\t\tcan.each(items, function (item, key) {\n\t\t\t\t\t\tvar itemIndex = can.compute(key + index),\n\t\t\t\t\t\t\t// get its string content\n\t\t\t\t\t\t\titemHTML = render.call(context, item, itemIndex),\n\t\t\t\t\t\t\tgotText = typeof itemHTML === \"string\",\n\t\t\t\t\t\t\t// and convert it into elements.\n\t\t\t\t\t\t\titemFrag = can.frag(itemHTML);\n\t\t\t\t\t\t// Add those elements to the mappings.\n\t\t\t\t\t\t\n\t\t\t\t\t\titemFrag = gotText ? can.view.hookup(itemFrag) : itemFrag;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar childNodes = can.makeArray(itemFrag.childNodes);\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tnewNodeLists.push(nodeLists.register(childNodes));\n\t\t\t\t\t\t// Hookup the fragment (which sets up child live-bindings) and\n\t\t\t\t\t\t// add it to the collection of all added elements.\n\t\t\t\t\t\tfrag.appendChild(itemFrag);\n\t\t\t\t\t\t// track indicies;\n\t\t\t\t\t\tnewIndicies.push(itemIndex);\n\t\t\t\t\t});\n\t\t\t\t\t// The position of elements is always after the initial text placeholder node\n\t\t\t\t\tvar masterListIndex = index+1;\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Check if we are adding items at the end\n\t\t\t\t\tif (!masterNodeList[masterListIndex]) {\n\t\t\t\t\t\telements.after(masterListIndex === 1 ? [text] : [nodeLists.last(masterNodeList[masterListIndex - 1])], frag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Add elements before the next index's first element.\n\t\t\t\t\t\tvar el = nodeLists.first(masterNodeList[masterListIndex]);\n\t\t\t\t\t\tcan.insertBefore(el.parentNode, frag, el);\n\t\t\t\t\t}\n\t\t\t\t\tsplice.apply(masterNodeList, [\n\t\t\t\t\t\tmasterListIndex,\n\t\t\t\t\t\t0\n\t\t\t\t\t].concat(newNodeLists));\n\t\t\t\t\t\n\t\t\t\t\t// update indices after insert point\n\t\t\t\t\tsplice.apply(indexMap, [\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\t0\n\t\t\t\t\t].concat(newIndicies));\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = index + newIndicies.length, len = indexMap.length; i < len; i++) {\n\t\t\t\t\t\tindexMap[i](i);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// Called when items are removed or when the bindings are torn down.\n\t\t\t\tremove = function (ev, items, index, duringTeardown, fullTeardown) {\n\t\t\t\t\t// If this is because an element was removed, we should\n\t\t\t\t\t// check to make sure the live elements are still in the page.\n\t\t\t\t\t// If we did this during a teardown, it would cause an infinite loop.\n\t\t\t\t\tif (!duringTeardown && data.teardownCheck(text.parentNode)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar removedMappings = masterNodeList.splice(index+1, items.length),\n\t\t\t\t\t\titemsToRemove = [];\n\t\t\t\t\tcan.each(removedMappings, function (nodeList) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Unregister to free up event bindings.\n\t\t\t\t\t\tvar nodesToRemove = nodeLists.unregister(nodeList);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// add items that we will remove all at once\n\t\t\t\t\t\t[].push.apply(itemsToRemove, nodesToRemove);\n\t\t\t\t\t});\n\t\t\t\t\t// update indices after remove point\n\t\t\t\t\tindexMap.splice(index, items.length);\n\t\t\t\t\tfor (var i = index, len = indexMap.length; i < len; i++) {\n\t\t\t\t\t\tindexMap[i](i);\n\t\t\t\t\t}\n\t\t\t\t\t// don't remove elements during teardown.  Something else will probably be doing that.\n\t\t\t\t\tif(!fullTeardown) {\n\t\t\t\t\t\tcan.remove(can.$(itemsToRemove));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t// A text node placeholder\n\t\t\t\ttext = document.createTextNode(''),\n\t\t\t\t// The current list.\n\t\t\t\tlist,\n\t\t\t\t// Called when the list is replaced with a new list or the binding is torn-down.\n\t\t\t\tteardownList = function (fullTeardown) {\n\t\t\t\t\t// there might be no list right away, and the list might be a plain\n\t\t\t\t\t// array\n\t\t\t\t\tif (list && list.unbind) {\n\t\t\t\t\t\tlist.unbind('add', add)\n\t\t\t\t\t\t\t.unbind('remove', remove);\n\t\t\t\t\t}\n\t\t\t\t\t// use remove to clean stuff up for us\n\t\t\t\t\tremove({}, {\n\t\t\t\t\t\tlength: masterNodeList.length - 1\n\t\t\t\t\t}, 0, true, fullTeardown);\n\t\t\t\t},\n\t\t\t\t// Called when the list is replaced or setup.\n\t\t\t\tupdateList = function (ev, newList, oldList) {\n\t\t\t\t\tteardownList();\n\t\t\t\t\t// make an empty list if the compute returns null or undefined\n\t\t\t\t\tlist = newList || [];\n\t\t\t\t\t// list might be a plain array\n\t\t\t\t\tif (list.bind) {\n\t\t\t\t\t\tlist.bind('add', add)\n\t\t\t\t\t\t\t.bind('remove', remove);\n\t\t\t\t\t}\n\t\t\t\t\tadd({}, list, 0);\n\t\t\t\t};\n\t\t\tparentNode = elements.getParentNode(el, parentNode);\n\t\t\t// Setup binding and teardown to add and remove events\n\t\t\tvar data = setup(parentNode, function () {\n\t\t\t\tif (can.isFunction(compute)) {\n\t\t\t\t\tcompute.bind('change', updateList);\n\t\t\t\t}\n\t\t\t}, function () {\n\t\t\t\tif (can.isFunction(compute)) {\n\t\t\t\t\tcompute.unbind('change', updateList);\n\t\t\t\t}\n\t\t\t\tteardownList(true);\n\t\t\t});\n\t\t\t\n\t\t\tlive.replace(masterNodeList, text, data.teardownCheck);\n\t\t\t// run the list setup\n\t\t\tupdateList({}, can.isFunction(compute) ? compute() : compute);\n\t\t},\n\t\t/**\n\t\t * @function can.view.live.html\n\t\t * @parent can.view.live\n\t\t * @release 2.0.4\n\t\t *\n\t\t * Live binds a compute's value to a collection of elements.\n\t\t *\n\t\t *\n\t\t * @param {HTMLElement} el An html element to replace with the live-section.\n\t\t *\n\t\t * @param {can.compute} compute A [can.compute] whose value is HTML.\n\t\t *\n\t\t * @param {HTMLElement} [parentNode] An overwritable parentNode if `el`'s parent is\n\t\t * a documentFragment.\n\t\t *\n\t\t * ## Use\n\t\t *\n\t\t * `can.view.live.html` is used to setup incremental live-binding.\n\t\t *\n\t\t *     // a compute that change's it's list\n\t\t *     var greeting = can.compute(function(){\n\t\t *       return \"Welcome <i>\"+me.attr(\"name\")+\"</i>\"\n\t\t *     });\n\t\t *\n\t\t *     var placeholder = document.createTextNode(\" \");\n\t\t *     $(\"#greeting\").append(placeholder);\n\t\t *\n\t\t *     can.view.live.html( placeholder,  greeting );\n\t\t *\n\t\t */\n\t\thtml: function (el, compute, parentNode) {\n\t\t\tvar data;\n\t\t\tparentNode = elements.getParentNode(el, parentNode);\n\t\t\tdata = listen(parentNode, compute, function (ev, newVal, oldVal) {\n\t\t\t\t\n\t\t\t\t// TODO: remove teardownCheck in 2.1\n\t\t\t\tvar attached = nodeLists.first(nodes).parentNode;\n\t\t\t\t// update the nodes in the DOM with the new rendered value\n\t\t\t\tif (attached) {\n\t\t\t\t\tmakeAndPut(newVal);\n\t\t\t\t}\n\t\t\t\tdata.teardownCheck(nodeLists.first(nodes).parentNode);\n\t\t\t});\n\n\t\t\tvar nodes = [el],\n\t\t\t\tmakeAndPut = function (val) {\n\t\t\t\t\tvar isString = !isNode(val),\n\t\t\t\t\t\tfrag = can.frag(val),\n\t\t\t\t\t\toldNodes = can.makeArray(nodes);\n\t\t\t\t\t\n\t\t\t\t\t// Add a placeholder textNode if necessary.\n\t\t\t\t\taddTextNodeIfNoChildren(frag);\n\t\t\t\t\t\n\t\t\t\t\tif(isString){\n\t\t\t\t\t\tfrag = can.view.hookup(frag, parentNode);\n\t\t\t\t\t}\n\t\t\t\t\t// We need to mark each node as belonging to the node list.\n\t\t\t\t\toldNodes = nodeLists.update(nodes, frag.childNodes);\n\t\t\t\t\telements.replace(oldNodes, frag);\n\t\t\t\t};\n\t\t\tdata.nodeList = nodes;\n\t\t\t\n\t\t\t// register the span so nodeLists knows the parentNodeList\n\t\t\tnodeLists.register(nodes, data.teardownCheck);\n\t\t\tmakeAndPut(compute());\n\t\t},\n\t\t/**\n\t\t * @function can.view.live.replace\n\t\t * @parent can.view.live\n\t\t * @release 2.0.4\n\t\t *\n\t\t * Replaces one element with some content while keeping [can.view.live.nodeLists nodeLists] data\n\t\t * correct.\n\t\t *\n\t\t * @param {Array.<HTMLElement>} nodes An array of elements.  There should typically be one element.\n\t\t * @param {String|HTMLElement|DocumentFragment} val The content that should replace\n\t\t * `nodes`.  If a string is passed, it will be [can.view.hookup hookedup].\n\t\t *\n\t\t * @param {function} [teardown] A callback if these elements are torn down.\n\t\t */\n\t\treplace: function (nodes, val, teardown) {\n\t\t\tvar oldNodes = nodes.slice(0),\n\t\t\t\tfrag = can.frag(val);\n\t\t\tnodeLists.register(nodes, teardown);\n\t\t\t\n\t\t\t\n\t\t\tif (typeof val === 'string') {\n\t\t\t\t// if it was a string, check for hookups\n\t\t\t\tfrag = can.view.hookup(frag, nodes[0].parentNode);\n\t\t\t}\n\t\t\t// We need to mark each node as belonging to the node list.\n\t\t\tnodeLists.update(nodes, frag.childNodes);\n\t\t\telements.replace(oldNodes, frag);\n\t\t\treturn nodes;\n\t\t},\n\t\t/**\n\t\t * @function can.view.live.text\n\t\t * @parent can.view.live\n\t\t * @release 2.0.4\n\t\t *\n\t\t * Replaces one element with some content while keeping [can.view.live.nodeLists nodeLists] data\n\t\t * correct.\n\t\t */\n\t\ttext: function (el, compute, parentNode) {\n\t\t\tvar parent = elements.getParentNode(el, parentNode);\n\t\t\t// setup listening right away so we don't have to re-calculate value\n\t\t\tvar data = listen(parent, compute, function (ev, newVal, oldVal) {\n\t\t\t\t// Sometimes this is 'unknown' in IE and will throw an exception if it is\n\t\t\t\t/* jshint ignore:start */\n\t\t\t\tif (typeof node.nodeValue !== 'unknown') {\n\t\t\t\t\tnode.nodeValue = can.view.toStr(newVal);\n\t\t\t\t}\n\t\t\t\t/* jshint ignore:end */\n\t\t\t\t// TODO: remove in 2.1\n\t\t\t\tdata.teardownCheck(node.parentNode);\n\t\t\t}),\n\t\t\t\t// The text node that will be updated\n\t\t\t\tnode = document.createTextNode(can.view.toStr(compute()));\n\t\t\t// Replace the placeholder with the live node and do the nodeLists thing.\n\t\t\t// Add that node to nodeList so we can remove it when the parent element is removed from the page\n\t\t\tdata.nodeList = live.replace([el], node, data.teardownCheck);\n\t\t},\n\t\tsetAttributes: function(el, newVal) {\n\t\t\tvar attrs = getAttributeParts(newVal);\n\t\t\tfor(var name in attrs) {\n\t\t\t\tcan.attr.set(el, name, attrs[name]);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @function can.view.live.attrs\n\t\t * @parent can.view.live\n\t\t * \n\t\t * Keep attributes live to a [can.compute].\n\t\t * \n\t\t * @param {HTMLElement} el The element whos attributes will be kept live.\n\t\t * @param {can.compute} compute The compute.\n\t\t * \n\t\t * @body\n\t\t * \n\t\t * ## Use\n\t\t * \n\t\t *     var div = document.createElement('div');\n\t\t *     var compute = can.compute(\"foo='bar' zed='ted'\");\n\t\t *     can.view.live.attr(div,compute);\n\t\t * \n\t\t */\n\t\tattributes: function (el, compute, currentValue) {\n\t\t\tvar oldAttrs = {};\n\t\t\t\n\t\t\tvar setAttrs = function (newVal) {\n\t\t\t\tvar newAttrs = getAttributeParts(newVal),\n\t\t\t\t\tname;\n\t\t\t\tfor( name in newAttrs ) {\n\t\t\t\t\tvar newValue = newAttrs[name],\n\t\t\t\t\t\toldValue = oldAttrs[name];\n\t\t\t\t\tif(newValue !== oldValue) {\n\t\t\t\t\t\tcan.attr.set(el, name, newValue);\n\t\t\t\t\t}\n\t\t\t\t\tdelete oldAttrs[name];\n\t\t\t\t}\n\t\t\t\tfor( name in oldAttrs ) {\n\t\t\t\t\telements.removeAttr(el, name);\n\t\t\t\t}\n\t\t\t\toldAttrs = newAttrs;\n\t\t\t};\n\t\t\tlisten(el, compute, function (ev, newVal) {\n\t\t\t\tsetAttrs(newVal);\n\t\t\t});\n\t\t\t// current value has been set\n\t\t\tif (arguments.length >= 3) {\n\t\t\t\toldAttrs = getAttributeParts(currentValue);\n\t\t\t} else {\n\t\t\t\tsetAttrs(compute());\n\t\t\t}\n\t\t},\n\t\tattributePlaceholder: '__!!__',\n\t\tattributeReplace: /__!!__/g,\n\t\tattribute: function (el, attributeName, compute) {\n\t\t\tlisten(el, compute, function (ev, newVal) {\n\t\t\t\telements.setAttr(el, attributeName, hook.render());\n\t\t\t});\n\t\t\tvar wrapped = can.$(el),\n\t\t\t\thooks;\n\t\t\t// Get the list of hookups or create one for this element.\n\t\t\t// Hooks is a map of attribute names to hookup `data`s.\n\t\t\t// Each hookup data has:\n\t\t\t// `render` - A `function` to render the value of the attribute.\n\t\t\t// `funcs` - A list of hookup `function`s on that attribute.\n\t\t\t// `batchNum` - The last event `batchNum`, used for performance.\n\t\t\thooks = can.data(wrapped, 'hooks');\n\t\t\tif (!hooks) {\n\t\t\t\tcan.data(wrapped, 'hooks', hooks = {});\n\t\t\t}\n\t\t\t// Get the attribute value.\n\t\t\tvar attr = elements.getAttr(el, attributeName),\n\t\t\t\t// Split the attribute value by the template.\n\t\t\t\t// Only split out the first __!!__ so if we have multiple hookups in the same attribute,\n\t\t\t\t// they will be put in the right spot on first render\n\t\t\t\tparts = attr.split(live.attributePlaceholder),\n\t\t\t\tgoodParts = [],\n\t\t\t\thook;\n\t\t\tgoodParts.push(parts.shift(), parts.join(live.attributePlaceholder));\n\t\t\t// If we already had a hookup for this attribute...\n\t\t\tif (hooks[attributeName]) {\n\t\t\t\t// Just add to that attribute's list of `function`s.\n\t\t\t\thooks[attributeName].computes.push(compute);\n\t\t\t} else {\n\t\t\t\t// Create the hookup data.\n\t\t\t\thooks[attributeName] = {\n\t\t\t\t\trender: function () {\n\t\t\t\t\t\tvar i = 0,\n\t\t\t\t\t\t\t// attr doesn't have a value in IE\n\t\t\t\t\t\t\tnewAttr = attr ? attr.replace(live.attributeReplace, function () {\n\t\t\t\t\t\t\t\treturn elements.contentText(hook.computes[i++]());\n\t\t\t\t\t\t\t}) : elements.contentText(hook.computes[i++]());\n\t\t\t\t\t\treturn newAttr;\n\t\t\t\t\t},\n\t\t\t\t\tcomputes: [compute],\n\t\t\t\t\tbatchNum: undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t// Save the hook for slightly faster performance.\n\t\t\thook = hooks[attributeName];\n\t\t\t// Insert the value in parts.\n\t\t\tgoodParts.splice(1, 0, compute());\n\n\t\t\t// Set the attribute.\n\t\t\telements.setAttr(el, attributeName, goodParts.join(''));\n\t\t},\n\t\tspecialAttribute: function (el, attributeName, compute) {\n\t\t\tlisten(el, compute, function (ev, newVal) {\n\t\t\t\telements.setAttr(el, attributeName, getValue(newVal));\n\t\t\t});\n\t\t\telements.setAttr(el, attributeName, getValue(compute()));\n\t\t},\n\t\t/**\n\t\t * @function can.view.live.attr\n\t\t * @parent can.view.live\n\t\t * \n\t\t * Keep an attribute live to a [can.compute].\n\t\t * \n\t\t * @param {HTMLElement} el The element whos attribute will be kept live.\n\t\t * @param {String} attributeName The attribute name.\n\t\t * @param {can.compute} compute The compute.\n\t\t * \n\t\t * @body\n\t\t * \n\t\t * ## Use\n\t\t * \n\t\t *     var div = document.createElement('div');\n\t\t *     var compute = can.compute(\"foo bar\");\n\t\t *     can.view.live.attr(div,\"class\", compute);\n\t\t */\n\t\tsimpleAttribute: function(el, attributeName, compute){\n\t\t\tlisten(el, compute, function (ev, newVal) {\n\t\t\t\telements.setAttr(el, attributeName, newVal);\n\t\t\t});\n\t\t\telements.setAttr(el, attributeName, compute());\n\t\t}\n\t};\n\tlive.attr = live.simpleAttribute;\n\tlive.attrs = live.attributes;\n\tvar newLine = /(\\r|\\n)+/g;\n\tvar getValue = function (val) {\n\t\tvar regexp = /^[\"'].*[\"']$/;\n\t\tval = val.replace(elements.attrReg, '')\n\t\t\t.replace(newLine, '');\n\t\t// check if starts and ends with \" or '\n\t\treturn regexp.test(val) ? val.substr(1, val.length - 2) : val;\n\t};\n\tcan.view.live = live;\n\n\treturn live;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/live\";\ndefine([\"can/util/library\", \"can/view/elements\", \"can/view\", \"can/view/node_lists\", \"can/view/parser\"], function(can, elements, view, nodeLists, parser) {\n  elements = elements || can.view.elements;\n  nodeLists = nodeLists || can.view.NodeLists;\n  parser = parser || can.view.parser;\n  var setup = function(el, bind, unbind) {\n    var tornDown = false,\n        teardown = function() {\n          if (!tornDown) {\n            tornDown = true;\n            unbind(data);\n            can.unbind.call(el, 'removed', teardown);\n          }\n          return true;\n        },\n        data = {teardownCheck: function(parent) {\n            return parent ? false : teardown();\n          }};\n    can.bind.call(el, 'removed', teardown);\n    bind(data);\n    return data;\n  },\n      listen = function(el, compute, change) {\n        return setup(el, function() {\n          compute.bind('change', change);\n        }, function(data) {\n          compute.unbind('change', change);\n          if (data.nodeList) {\n            nodeLists.unregister(data.nodeList);\n          }\n        });\n      },\n      getAttributeParts = function(newVal) {\n        var attrs = {},\n            attr;\n        parser.parseAttrs(newVal, {\n          attrStart: function(name) {\n            attrs[name] = \"\";\n            attr = name;\n          },\n          attrValue: function(value) {\n            attrs[attr] += value;\n          },\n          attrEnd: function() {}\n        });\n        return attrs;\n      },\n      splice = [].splice,\n      isNode = function(obj) {\n        return obj && obj.nodeType;\n      },\n      addTextNodeIfNoChildren = function(frag) {\n        if (!frag.childNodes.length) {\n          frag.appendChild(document.createTextNode(\"\"));\n        }\n      };\n  var live = {\n    list: function(el, compute, render, context, parentNode) {\n      var masterNodeList = [el],\n          indexMap = [],\n          add = function(ev, items, index) {\n            var frag = document.createDocumentFragment(),\n                newNodeLists = [],\n                newIndicies = [];\n            can.each(items, function(item, key) {\n              var itemIndex = can.compute(key + index),\n                  itemHTML = render.call(context, item, itemIndex),\n                  gotText = typeof itemHTML === \"string\",\n                  itemFrag = can.frag(itemHTML);\n              itemFrag = gotText ? can.view.hookup(itemFrag) : itemFrag;\n              var childNodes = can.makeArray(itemFrag.childNodes);\n              newNodeLists.push(nodeLists.register(childNodes));\n              frag.appendChild(itemFrag);\n              newIndicies.push(itemIndex);\n            });\n            var masterListIndex = index + 1;\n            if (!masterNodeList[masterListIndex]) {\n              elements.after(masterListIndex === 1 ? [text] : [nodeLists.last(masterNodeList[masterListIndex - 1])], frag);\n            } else {\n              var el = nodeLists.first(masterNodeList[masterListIndex]);\n              can.insertBefore(el.parentNode, frag, el);\n            }\n            splice.apply(masterNodeList, [masterListIndex, 0].concat(newNodeLists));\n            splice.apply(indexMap, [index, 0].concat(newIndicies));\n            for (var i = index + newIndicies.length,\n                len = indexMap.length; i < len; i++) {\n              indexMap[i](i);\n            }\n          },\n          remove = function(ev, items, index, duringTeardown, fullTeardown) {\n            if (!duringTeardown && data.teardownCheck(text.parentNode)) {\n              return;\n            }\n            var removedMappings = masterNodeList.splice(index + 1, items.length),\n                itemsToRemove = [];\n            can.each(removedMappings, function(nodeList) {\n              var nodesToRemove = nodeLists.unregister(nodeList);\n              [].push.apply(itemsToRemove, nodesToRemove);\n            });\n            indexMap.splice(index, items.length);\n            for (var i = index,\n                len = indexMap.length; i < len; i++) {\n              indexMap[i](i);\n            }\n            if (!fullTeardown) {\n              can.remove(can.$(itemsToRemove));\n            }\n          },\n          text = document.createTextNode(''),\n          list,\n          teardownList = function(fullTeardown) {\n            if (list && list.unbind) {\n              list.unbind('add', add).unbind('remove', remove);\n            }\n            remove({}, {length: masterNodeList.length - 1}, 0, true, fullTeardown);\n          },\n          updateList = function(ev, newList, oldList) {\n            teardownList();\n            list = newList || [];\n            if (list.bind) {\n              list.bind('add', add).bind('remove', remove);\n            }\n            add({}, list, 0);\n          };\n      parentNode = elements.getParentNode(el, parentNode);\n      var data = setup(parentNode, function() {\n        if (can.isFunction(compute)) {\n          compute.bind('change', updateList);\n        }\n      }, function() {\n        if (can.isFunction(compute)) {\n          compute.unbind('change', updateList);\n        }\n        teardownList(true);\n      });\n      live.replace(masterNodeList, text, data.teardownCheck);\n      updateList({}, can.isFunction(compute) ? compute() : compute);\n    },\n    html: function(el, compute, parentNode) {\n      var data;\n      parentNode = elements.getParentNode(el, parentNode);\n      data = listen(parentNode, compute, function(ev, newVal, oldVal) {\n        var attached = nodeLists.first(nodes).parentNode;\n        if (attached) {\n          makeAndPut(newVal);\n        }\n        data.teardownCheck(nodeLists.first(nodes).parentNode);\n      });\n      var nodes = [el],\n          makeAndPut = function(val) {\n            var isString = !isNode(val),\n                frag = can.frag(val),\n                oldNodes = can.makeArray(nodes);\n            addTextNodeIfNoChildren(frag);\n            if (isString) {\n              frag = can.view.hookup(frag, parentNode);\n            }\n            oldNodes = nodeLists.update(nodes, frag.childNodes);\n            elements.replace(oldNodes, frag);\n          };\n      data.nodeList = nodes;\n      nodeLists.register(nodes, data.teardownCheck);\n      makeAndPut(compute());\n    },\n    replace: function(nodes, val, teardown) {\n      var oldNodes = nodes.slice(0),\n          frag = can.frag(val);\n      nodeLists.register(nodes, teardown);\n      if (typeof val === 'string') {\n        frag = can.view.hookup(frag, nodes[0].parentNode);\n      }\n      nodeLists.update(nodes, frag.childNodes);\n      elements.replace(oldNodes, frag);\n      return nodes;\n    },\n    text: function(el, compute, parentNode) {\n      var parent = elements.getParentNode(el, parentNode);\n      var data = listen(parent, compute, function(ev, newVal, oldVal) {\n        if (typeof node.nodeValue !== 'unknown') {\n          node.nodeValue = can.view.toStr(newVal);\n        }\n        data.teardownCheck(node.parentNode);\n      }),\n          node = document.createTextNode(can.view.toStr(compute()));\n      data.nodeList = live.replace([el], node, data.teardownCheck);\n    },\n    setAttributes: function(el, newVal) {\n      var attrs = getAttributeParts(newVal);\n      for (var name in attrs) {\n        can.attr.set(el, name, attrs[name]);\n      }\n    },\n    attributes: function(el, compute, currentValue) {\n      var oldAttrs = {};\n      var setAttrs = function(newVal) {\n        var newAttrs = getAttributeParts(newVal),\n            name;\n        for (name in newAttrs) {\n          var newValue = newAttrs[name],\n              oldValue = oldAttrs[name];\n          if (newValue !== oldValue) {\n            can.attr.set(el, name, newValue);\n          }\n          delete oldAttrs[name];\n        }\n        for (name in oldAttrs) {\n          elements.removeAttr(el, name);\n        }\n        oldAttrs = newAttrs;\n      };\n      listen(el, compute, function(ev, newVal) {\n        setAttrs(newVal);\n      });\n      if (arguments.length >= 3) {\n        oldAttrs = getAttributeParts(currentValue);\n      } else {\n        setAttrs(compute());\n      }\n    },\n    attributePlaceholder: '__!!__',\n    attributeReplace: /__!!__/g,\n    attribute: function(el, attributeName, compute) {\n      listen(el, compute, function(ev, newVal) {\n        elements.setAttr(el, attributeName, hook.render());\n      });\n      var wrapped = can.$(el),\n          hooks;\n      hooks = can.data(wrapped, 'hooks');\n      if (!hooks) {\n        can.data(wrapped, 'hooks', hooks = {});\n      }\n      var attr = elements.getAttr(el, attributeName),\n          parts = attr.split(live.attributePlaceholder),\n          goodParts = [],\n          hook;\n      goodParts.push(parts.shift(), parts.join(live.attributePlaceholder));\n      if (hooks[attributeName]) {\n        hooks[attributeName].computes.push(compute);\n      } else {\n        hooks[attributeName] = {\n          render: function() {\n            var i = 0,\n                newAttr = attr ? attr.replace(live.attributeReplace, function() {\n                  return elements.contentText(hook.computes[i++]());\n                }) : elements.contentText(hook.computes[i++]());\n            return newAttr;\n          },\n          computes: [compute],\n          batchNum: undefined\n        };\n      }\n      hook = hooks[attributeName];\n      goodParts.splice(1, 0, compute());\n      elements.setAttr(el, attributeName, goodParts.join(''));\n    },\n    specialAttribute: function(el, attributeName, compute) {\n      listen(el, compute, function(ev, newVal) {\n        elements.setAttr(el, attributeName, getValue(newVal));\n      });\n      elements.setAttr(el, attributeName, getValue(compute()));\n    },\n    simpleAttribute: function(el, attributeName, compute) {\n      listen(el, compute, function(ev, newVal) {\n        elements.setAttr(el, attributeName, newVal);\n      });\n      elements.setAttr(el, attributeName, compute());\n    }\n  };\n  live.attr = live.simpleAttribute;\n  live.attrs = live.attributes;\n  var newLine = /(\\r|\\n)+/g;\n  var getValue = function(val) {\n    var regexp = /^[\"'].*[\"']$/;\n    val = val.replace(elements.attrReg, '').replace(newLine, '');\n    return regexp.test(val) ? val.substr(1, val.length - 2) : val;\n  };\n  can.view.live = live;\n  return live;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\"], function (can) {\n\t// ##string.js\n\t// _Miscellaneous string utility functions._  \n\t// Several of the methods in this plugin use code adapated from Prototype\n\t// Prototype JavaScript framework, version 1.6.0.1.\n\t// © 2005-2007 Sam Stephenson\n\tvar strUndHash = /_|-/,\n\t\tstrColons = /\\=\\=/,\n\t\tstrWords = /([A-Z]+)([A-Z][a-z])/g,\n\t\tstrLowUp = /([a-z\\d])([A-Z])/g,\n\t\tstrDash = /([a-z\\d])([A-Z])/g,\n\t\tstrReplacer = /\\{([^\\}]+)\\}/g,\n\t\tstrQuote = /\"/g,\n\t\tstrSingleQuote = /'/g,\n\t\tstrHyphenMatch = /-+(.)?/g,\n\t\tstrCamelMatch = /[a-z][A-Z]/g,\n\t\t// Returns the `prop` property from `obj`.\n\t\t// If `add` is true and `prop` doesn't exist in `obj`, create it as an\n\t\t// empty object.\n\t\tgetNext = function (obj, prop, add) {\n\t\t\tvar result = obj[prop];\n\t\t\tif (result === undefined && add === true) {\n\t\t\t\tresult = obj[prop] = {};\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t// Returns `true` if the object can have properties (no `null`s).\n\t\tisContainer = function (current) {\n\t\t\treturn /^f|^o/.test(typeof current);\n\t\t}, convertBadValues = function (content) {\n\t\t\t// Convert bad values into empty strings\n\t\t\tvar isInvalid = content === null || content === undefined || isNaN(content) && '' + content === 'NaN';\n\t\t\treturn '' + (isInvalid ? '' : content);\n\t\t};\n\tcan.extend(can, {\n\t\tesc: function (content) {\n\t\t\treturn convertBadValues(content)\n\t\t\t\t.replace(/&/g, '&amp;')\n\t\t\t\t.replace(/</g, '&lt;')\n\t\t\t\t.replace(/>/g, '&gt;')\n\t\t\t\t.replace(strQuote, '&#34;')\n\t\t\t\t.replace(strSingleQuote, '&#39;');\n\t\t},\n\t\tgetObject: function (name, roots, add) {\n\t\t\t// The parts of the name we are looking up\n\t\t\t// `['App','Models','Recipe']`\n\t\t\tvar parts = name ? name.split('.') : [],\n\t\t\t\tlength = parts.length,\n\t\t\t\tcurrent, r = 0,\n\t\t\t\ti, container, rootsLength;\n\t\t\t// Make sure roots is an `array`.\n\t\t\troots = can.isArray(roots) ? roots : [roots || window];\n\t\t\trootsLength = roots.length;\n\t\t\tif (!length) {\n\t\t\t\treturn roots[0];\n\t\t\t}\n\t\t\t// For each root, mark it as current.\n\t\t\tfor (r; r < rootsLength; r++) {\n\t\t\t\tcurrent = roots[r];\n\t\t\t\tcontainer = undefined;\n\t\t\t\t// Walk current to the 2nd to last object or until there\n\t\t\t\t// is not a container.\n\t\t\t\tfor (i = 0; i < length && isContainer(current); i++) {\n\t\t\t\t\tcontainer = current;\n\t\t\t\t\tcurrent = getNext(container, parts[i]);\n\t\t\t\t}\n\t\t\t\t// If we found property break cycle\n\t\t\t\tif (container !== undefined && current !== undefined) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Remove property from found container\n\t\t\tif (add === false && current !== undefined) {\n\t\t\t\tdelete container[parts[i - 1]];\n\t\t\t}\n\t\t\t// When adding property add it to the first root\n\t\t\tif (add === true && current === undefined) {\n\t\t\t\tcurrent = roots[0];\n\t\t\t\tfor (i = 0; i < length && isContainer(current); i++) {\n\t\t\t\t\tcurrent = getNext(current, parts[i], true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn current;\n\t\t},\n\t\tcapitalize: function (s, cache) {\n\t\t\t// Used to make newId.\n\t\t\treturn s.charAt(0)\n\t\t\t\t.toUpperCase() + s.slice(1);\n\t\t},\n\t\tcamelize: function (str) {\n\t\t\treturn convertBadValues(str)\n\t\t\t\t.replace(strHyphenMatch, function (match, chr) {\n\t\t\t\t\treturn chr ? chr.toUpperCase() : '';\n\t\t\t\t});\n\t\t},\n\t\thyphenate: function (str) {\n\t\t\treturn convertBadValues(str)\n\t\t\t\t.replace(strCamelMatch, function (str, offset) {\n\t\t\t\t\treturn str.charAt(0) + '-' + str.charAt(1)\n\t\t\t\t\t\t.toLowerCase();\n\t\t\t\t});\n\t\t},\n\t\tunderscore: function (s) {\n\t\t\treturn s.replace(strColons, '/')\n\t\t\t\t.replace(strWords, '$1_$2')\n\t\t\t\t.replace(strLowUp, '$1_$2')\n\t\t\t\t.replace(strDash, '_')\n\t\t\t\t.toLowerCase();\n\t\t},\n\t\tsub: function (str, data, remove) {\n\t\t\tvar obs = [];\n\t\t\tstr = str || '';\n\t\t\tobs.push(str.replace(strReplacer, function (whole, inside) {\n\t\t\t\t// Convert inside to type.\n\t\t\t\tvar ob = can.getObject(inside, data, remove === true ? false : undefined);\n\t\t\t\tif (ob === undefined || ob === null) {\n\t\t\t\t\tobs = null;\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\t// If a container, push into objs (which will return objects found).\n\t\t\t\tif (isContainer(ob) && obs) {\n\t\t\t\t\tobs.push(ob);\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\treturn '' + ob;\n\t\t\t}));\n\t\t\treturn obs === null ? obs : obs.length <= 1 ? obs[0] : obs;\n\t\t},\n\t\treplacer: strReplacer,\n\t\tundHash: strUndHash\n\t});\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/string\";\ndefine([\"can/util/library\"], function(can) {\n  var strUndHash = /_|-/,\n      strColons = /\\=\\=/,\n      strWords = /([A-Z]+)([A-Z][a-z])/g,\n      strLowUp = /([a-z\\d])([A-Z])/g,\n      strDash = /([a-z\\d])([A-Z])/g,\n      strReplacer = /\\{([^\\}]+)\\}/g,\n      strQuote = /\"/g,\n      strSingleQuote = /'/g,\n      strHyphenMatch = /-+(.)?/g,\n      strCamelMatch = /[a-z][A-Z]/g,\n      getNext = function(obj, prop, add) {\n        var result = obj[prop];\n        if (result === undefined && add === true) {\n          result = obj[prop] = {};\n        }\n        return result;\n      },\n      isContainer = function(current) {\n        return /^f|^o/.test(typeof current);\n      },\n      convertBadValues = function(content) {\n        var isInvalid = content === null || content === undefined || isNaN(content) && '' + content === 'NaN';\n        return '' + (isInvalid ? '' : content);\n      };\n  can.extend(can, {\n    esc: function(content) {\n      return convertBadValues(content).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(strQuote, '&#34;').replace(strSingleQuote, '&#39;');\n    },\n    getObject: function(name, roots, add) {\n      var parts = name ? name.split('.') : [],\n          length = parts.length,\n          current,\n          r = 0,\n          i,\n          container,\n          rootsLength;\n      roots = can.isArray(roots) ? roots : [roots || window];\n      rootsLength = roots.length;\n      if (!length) {\n        return roots[0];\n      }\n      for (r; r < rootsLength; r++) {\n        current = roots[r];\n        container = undefined;\n        for (i = 0; i < length && isContainer(current); i++) {\n          container = current;\n          current = getNext(container, parts[i]);\n        }\n        if (container !== undefined && current !== undefined) {\n          break;\n        }\n      }\n      if (add === false && current !== undefined) {\n        delete container[parts[i - 1]];\n      }\n      if (add === true && current === undefined) {\n        current = roots[0];\n        for (i = 0; i < length && isContainer(current); i++) {\n          current = getNext(current, parts[i], true);\n        }\n      }\n      return current;\n    },\n    capitalize: function(s, cache) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    },\n    camelize: function(str) {\n      return convertBadValues(str).replace(strHyphenMatch, function(match, chr) {\n        return chr ? chr.toUpperCase() : '';\n      });\n    },\n    hyphenate: function(str) {\n      return convertBadValues(str).replace(strCamelMatch, function(str, offset) {\n        return str.charAt(0) + '-' + str.charAt(1).toLowerCase();\n      });\n    },\n    underscore: function(s) {\n      return s.replace(strColons, '/').replace(strWords, '$1_$2').replace(strLowUp, '$1_$2').replace(strDash, '_').toLowerCase();\n    },\n    sub: function(str, data, remove) {\n      var obs = [];\n      str = str || '';\n      obs.push(str.replace(strReplacer, function(whole, inside) {\n        var ob = can.getObject(inside, data, remove === true ? false : undefined);\n        if (ob === undefined || ob === null) {\n          obs = null;\n          return '';\n        }\n        if (isContainer(ob) && obs) {\n          obs.push(ob);\n          return '';\n        }\n        return '' + ob;\n      }));\n      return obs === null ? obs : obs.length <= 1 ? obs[0] : obs;\n    },\n    replacer: strReplacer,\n    undHash: strUndHash\n  });\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/util/string\"], function (can) {\n\t// ## deparam.js  \n\t// `can.deparam`  \n\t// _Takes a string of name value pairs and returns a Object literal that represents those params._\n\tvar digitTest = /^\\d+$/,\n\t\tkeyBreaker = /([^\\[\\]]+)|(\\[\\])/g,\n\t\tparamTest = /([^?#]*)(#.*)?$/,\n\t\tprep = function (str) {\n\t\t\treturn decodeURIComponent(str.replace(/\\+/g, ' '));\n\t\t};\n\tcan.extend(can, {\n\t\tdeparam: function (params) {\n\t\t\tvar data = {}, pairs, lastPart;\n\t\t\tif (params && paramTest.test(params)) {\n\t\t\t\tpairs = params.split('&');\n\t\t\t\tcan.each(pairs, function (pair) {\n\t\t\t\t\tvar parts = pair.split('='),\n\t\t\t\t\t\tkey = prep(parts.shift()),\n\t\t\t\t\t\tvalue = prep(parts.join('=')),\n\t\t\t\t\t\tcurrent = data;\n\t\t\t\t\tif (key) {\n\t\t\t\t\t\tparts = key.match(keyBreaker);\n\t\t\t\t\t\tfor (var j = 0, l = parts.length - 1; j < l; j++) {\n\t\t\t\t\t\t\tif (!current[parts[j]]) {\n\t\t\t\t\t\t\t\t// If what we are pointing to looks like an `array`\n\t\t\t\t\t\t\t\tcurrent[parts[j]] = digitTest.test(parts[j + 1]) || parts[j + 1] === '[]' ? [] : {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrent = current[parts[j]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPart = parts.pop();\n\t\t\t\t\t\tif (lastPart === '[]') {\n\t\t\t\t\t\t\tcurrent.push(value);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrent[lastPart] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn data;\n\t\t}\n\t});\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/string/deparam\";\ndefine([\"can/util/library\", \"can/util/string\"], function(can) {\n  var digitTest = /^\\d+$/,\n      keyBreaker = /([^\\[\\]]+)|(\\[\\])/g,\n      paramTest = /([^?#]*)(#.*)?$/,\n      prep = function(str) {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n      };\n  can.extend(can, {deparam: function(params) {\n      var data = {},\n          pairs,\n          lastPart;\n      if (params && paramTest.test(params)) {\n        pairs = params.split('&');\n        can.each(pairs, function(pair) {\n          var parts = pair.split('='),\n              key = prep(parts.shift()),\n              value = prep(parts.join('=')),\n              current = data;\n          if (key) {\n            parts = key.match(keyBreaker);\n            for (var j = 0,\n                l = parts.length - 1; j < l; j++) {\n              if (!current[parts[j]]) {\n                current[parts[j]] = digitTest.test(parts[j + 1]) || parts[j + 1] === '[]' ? [] : {};\n              }\n              current = current[parts[j]];\n            }\n            lastPart = parts.pop();\n            if (lastPart === '[]') {\n              current.push(value);\n            } else {\n              current[lastPart] = value;\n            }\n          }\n        });\n      }\n      return data;\n    }});\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine(function () {\n\t/* global GLOBALCAN */\n\tvar can = window.can || {};\n\tif (typeof GLOBALCAN === 'undefined' || GLOBALCAN !== false) {\n\t\twindow.can = can;\n\t}\n\n\t// An empty function useful for where you need a dummy callback.\n\tcan.k = function(){};\n\n\tcan.isDeferred = function (obj) {\n\t\tvar isFunction = this.isFunction;\n\t\t// Returns `true` if something looks like a deferred.\n\t\treturn obj && isFunction(obj.then) && isFunction(obj.pipe);\n\t};\n\n\tvar cid = 0;\n\tcan.cid = function (object, name) {\n\t\tif (!object._cid) {\n\t\t\tcid++;\n\t\t\tobject._cid = (name || '') + cid;\n\t\t}\n\t\treturn object._cid;\n\t};\n\tcan.VERSION = '2.1.0';\n\n\tcan.simpleExtend = function (d, s) {\n\t\tfor (var prop in s) {\n\t\t\td[prop] = s[prop];\n\t\t}\n\t\treturn d;\n\t};\n\n\n\tcan.frag = function(item){\n\t\tvar frag;\n\t\tif(!item || typeof item === \"string\"){\n\t\t\tfrag = can.buildFragment(item == null ? \"\" : \"\"+item, document.body);\n\t\t\t// If we have an empty frag...\n\t\t\tif (!frag.childNodes.length) {\n\t\t\t\tfrag.appendChild(document.createTextNode(''));\n\t\t\t}\n\t\t\treturn frag;\n\t\t} else if(item.nodeType === 11) {\n\t\t\treturn item;\n\t\t} else if(typeof item.nodeType === \"number\") {\n\t\t\tfrag = document.createDocumentFragment();\n\t\t\tfrag.appendChild(item);\n\t\t\treturn frag;\n\t\t} else if(typeof item.length === \"number\") {\n\t\t\tfrag = document.createDocumentFragment();\n\t\t\tcan.each(item, function(item){\n\t\t\t\tfrag.appendChild( can.frag(item) );\n\t\t\t});\n\t\t\treturn frag;\n\t\t} else {\n\t\t\tfrag = can.buildFragment( \"\"+item, document.body);\n\t\t\t// If we have an empty frag...\n\t\t\tif (!frag.childNodes.length) {\n\t\t\t\tfrag.appendChild(document.createTextNode(''));\n\t\t\t}\n\t\t\treturn frag;\n\t\t}\n\t};\n\t\n\t// this is here in case can.compute hasn't loaded\n\tcan.__reading = function () {};\n\n\n\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/can\";\ndefine(function() {\n  var can = window.can || {};\n  if (typeof GLOBALCAN === 'undefined' || GLOBALCAN !== false) {\n    window.can = can;\n  }\n  can.k = function() {};\n  can.isDeferred = function(obj) {\n    var isFunction = this.isFunction;\n    return obj && isFunction(obj.then) && isFunction(obj.pipe);\n  };\n  var cid = 0;\n  can.cid = function(object, name) {\n    if (!object._cid) {\n      cid++;\n      object._cid = (name || '') + cid;\n    }\n    return object._cid;\n  };\n  can.VERSION = '2.1.0';\n  can.simpleExtend = function(d, s) {\n    for (var prop in s) {\n      d[prop] = s[prop];\n    }\n    return d;\n  };\n  can.frag = function(item) {\n    var frag;\n    if (!item || typeof item === \"string\") {\n      frag = can.buildFragment(item == null ? \"\" : \"\" + item, document.body);\n      if (!frag.childNodes.length) {\n        frag.appendChild(document.createTextNode(''));\n      }\n      return frag;\n    } else if (item.nodeType === 11) {\n      return item;\n    } else if (typeof item.nodeType === \"number\") {\n      frag = document.createDocumentFragment();\n      frag.appendChild(item);\n      return frag;\n    } else if (typeof item.length === \"number\") {\n      frag = document.createDocumentFragment();\n      can.each(item, function(item) {\n        frag.appendChild(can.frag(item));\n      });\n      return frag;\n    } else {\n      frag = can.buildFragment(\"\" + item, document.body);\n      if (!frag.childNodes.length) {\n        frag.appendChild(document.createTextNode(''));\n      }\n      return frag;\n    }\n  };\n  can.__reading = function() {};\n  return can;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/can\"], function (can) {\n\n\t// Acts as a polyfill for setImmediate which only works in IE 10+. Needed to make\n\t// the triggering of `attributes` event async.\n\tvar setImmediate = window.setImmediate || function (cb) {\n\t\t\treturn setTimeout(cb, 0);\n\t\t},\n\t\tattr = {\n\t\t\t// This property lets us know if the browser supports mutation observers.\n\t\t\t// If they are supported then that will be setup in can/util/jquery and those native events will be used to inform observers of attribute changes.\n\t\t\t// Otherwise this module handles triggering an `attributes` event on the element.\n\t\t\tMutationObserver: window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver,\n\n\t\t\t/**\n\t\t\t * @property {Object.<String,(String|Boolean|function)>} can.view.attr.map\n\t\t\t * @parent can.view.elements\n\t\t\t * @hide\n\t\t\t *\n\t\t\t *\n\t\t\t * A mapping of\n\t\t\t * special attributes to their JS property. For example:\n\t\t\t *\n\t\t\t *     \"class\" : \"className\"\n\t\t\t *\n\t\t\t * means get or set `element.className`. And:\n\t\t\t *\n\t\t\t *      \"checked\" : true\n\t\t\t *\n\t\t\t * means set `element.checked = true`.\n\t\t\t *\n\t\t\t *\n\t\t\t * If the attribute name is not found, it's assumed to use\n\t\t\t * `element.getAttribute` and `element.setAttribute`.\n\t\t\t */\n\t\t\tmap: {\n\t\t\t\t\"class\": \"className\",\n\t\t\t\t\"value\": \"value\",\n\t\t\t\t\"innerText\": \"innerText\",\n\t\t\t\t\"textContent\": \"textContent\",\n\t\t\t\t\"checked\": true,\n\t\t\t\t\"disabled\": true,\n\t\t\t\t\"readonly\": true,\n\t\t\t\t\"required\": true,\n\t\t\t\t// For the `src` attribute we are using a setter function to prevent values such as an empty string or null from being set.\n\t\t\t\t// An `img` tag attempts to fetch the `src` when it is set, so we need to prevent that from happening by removing the attribute instead.\n\t\t\t\tsrc: function (el, val) {\n\t\t\t\t\tif (val == null || val === \"\") {\n\t\t\t\t\t\tel.removeAttribute(\"src\");\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel.setAttribute(\"src\", val);\n\t\t\t\t\t\treturn val;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstyle: function (el, val) {\n\t\t\t\t\treturn el.style.cssText = val || \"\";\n\t\t\t\t}\n\t\t\t},\n\t\t\t// These are elements whos default value we should set.\n\t\t\tdefaultValue: [\"input\", \"textarea\"],\n\t\t\t// ## attr.set\n\t\t\t// Set the value an attribute on an element.\n\t\t\tset: function (el, attrName, val) {\n\t\t\t\tvar oldValue;\n\t\t\t\t// In order to later trigger an event we need to compare the new value to the old value, so here we go ahead and retrieve the old value for browsers that don't have native MutationObservers.\n\t\t\t\tif (!attr.MutationObserver) {\n\t\t\t\t\toldValue = attr.get(el, attrName);\n\t\t\t\t}\n\n\t\t\t\tvar tagName = el.nodeName.toString()\n\t\t\t\t\t.toLowerCase(),\n\t\t\t\t\tprop = attr.map[attrName],\n\t\t\t\t\tnewValue;\n\t\t\t\t\n\t\t\t\t// Using the property of `attr.map`, go through and check if the property is a function, and if so call it. Then check if the property is `true`, and if so set the value to `true`, also making sure to set `defaultChecked` to `true` for elements of `attr.defaultValue`. We always set the value to true because for these boolean properties, setting them to false would be the same as removing the attribute.\n\t\t\t\t//\n\t\t\t\t// For all other attributes use `setAttribute` to set the new value.\n\t\t\t\tif (typeof prop === \"function\") {\n\t\t\t\t\tnewValue = prop(el, val);\n\t\t\t\t} else if (prop === true) {\n\t\t\t\t\tnewValue = el[attrName] = true;\n\n\t\t\t\t\tif (attrName === \"checked\" && el.type === \"radio\") {\n\t\t\t\t\t\tif (can.inArray(tagName, attr.defaultValue) >= 0) {\n\t\t\t\t\t\t\tel.defaultChecked = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else if (prop) {\n\t\t\t\t\tnewValue = el[prop] = val;\n\t\t\t\t\tif (prop === \"value\" && can.inArray(tagName, attr.defaultValue) >= 0) {\n\t\t\t\t\t\tel.defaultValue = val;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tel.setAttribute(attrName, val);\n\t\t\t\t\tnewValue = val;\n\t\t\t\t}\n\n\t\t\t\t// Now that the value has been set, for browsers without MutationObservers, check to see that value has changed and if so trigger the \"attributes\" event on the element.\n\t\t\t\tif (!attr.MutationObserver && newValue !== oldValue) {\n\t\t\t\t\tattr.trigger(el, attrName, oldValue);\n\t\t\t\t}\n\t\t\t},\n\t\t\t// ## attr.trigger\n\t\t\t// Used to trigger an \"attributes\" event on an element. Checks to make sure that someone is listening for the event and then queues a function to be called asynchronously using `setImmediate.\n\t\t\ttrigger: function (el, attrName, oldValue) {\n\t\t\t\tif (can.data(can.$(el), \"canHasAttributesBindings\")) {\n\t\t\t\t\treturn setImmediate(function () {\n\t\t\t\t\t\tcan.trigger(el, {\n\t\t\t\t\t\t\ttype: \"attributes\",\n\t\t\t\t\t\t\tattributeName: attrName,\n\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\toldValue: oldValue,\n\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t}, []);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t// ## attr.get\n\t\t\t// Gets the value of an attribute. First checks to see if the property is a string on `attr.map` and if so returns the value from the element's property. Otherwise uses `getAttribute` to retrieve the value.\n\t\t\tget: function (el, attrName) {\n\t\t\t\tvar prop = attr.map[attrName];\n\t\t\t\tif(typeof prop === \"string\" && el[prop]) {\n\t\t\t\t\treturn el[prop];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn el.getAttribute(attrName);\n\t\t\t},\n\t\t\t// ## attr.remove\n\t\t\t// Removes an attribute from an element. Works by using the `attr.map` to see if the attribute is a special type of property. If the property is a function then the fuction is called with `undefined` as the value. If the property is `true` then the attribute is set to false. If the property is a string then the attribute is set to an empty string. Otherwise `removeAttribute` is used.\n\t\t\t//\n\t\t\t// If the attribute previously had a value and the browser doesn't support MutationObservers we then trigger an \"attributes\" event.\n\t\t\tremove: function (el, attrName) {\n\t\t\t\tvar oldValue;\n\t\t\t\tif (!attr.MutationObserver) {\n\t\t\t\t\toldValue = attr.get(el, attrName);\n\t\t\t\t}\n\n\t\t\t\tvar setter = attr.map[attrName];\n\t\t\t\tif (typeof setter === \"function\") {\n\t\t\t\t\tsetter(el, undefined);\n\t\t\t\t}\n\t\t\t\tif (setter === true) {\n\t\t\t\t\tel[attrName] = false;\n\t\t\t\t} else if (typeof setter === \"string\") {\n\t\t\t\t\tel[setter] = \"\";\n\t\t\t\t} else {\n\t\t\t\t\tel.removeAttribute(attrName);\n\t\t\t\t}\n\t\t\t\tif (!attr.MutationObserver && oldValue != null) {\n\t\t\t\t\tattr.trigger(el, attrName, oldValue);\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t// ## attr.has\n\t\t\t// Checks if an element contains an attribute.\n\t\t\t// For browsers that support `hasAttribute`, creates a function that calls hasAttribute, otherwise creates a function that uses `getAttribute` to check that the attribute is not null.\n\t\t\thas: (function () {\n\t\t\t\tvar el = document.createElement('div');\n\t\t\t\tif (el.hasAttribute) {\n\t\t\t\t\treturn function (el, name) {\n\t\t\t\t\t\treturn el.hasAttribute(name);\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn function (el, name) {\n\t\t\t\t\t\treturn el.getAttribute(name) !== null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t})()\n\t\t};\n\n\treturn attr;\n\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/attr\";\ndefine([\"can/util/can\"], function(can) {\n  var setImmediate = window.setImmediate || function(cb) {\n    return setTimeout(cb, 0);\n  },\n      attr = {\n        MutationObserver: window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver,\n        map: {\n          \"class\": \"className\",\n          \"value\": \"value\",\n          \"innerText\": \"innerText\",\n          \"textContent\": \"textContent\",\n          \"checked\": true,\n          \"disabled\": true,\n          \"readonly\": true,\n          \"required\": true,\n          src: function(el, val) {\n            if (val == null || val === \"\") {\n              el.removeAttribute(\"src\");\n              return null;\n            } else {\n              el.setAttribute(\"src\", val);\n              return val;\n            }\n          },\n          style: function(el, val) {\n            return el.style.cssText = val || \"\";\n          }\n        },\n        defaultValue: [\"input\", \"textarea\"],\n        set: function(el, attrName, val) {\n          var oldValue;\n          if (!attr.MutationObserver) {\n            oldValue = attr.get(el, attrName);\n          }\n          var tagName = el.nodeName.toString().toLowerCase(),\n              prop = attr.map[attrName],\n              newValue;\n          if (typeof prop === \"function\") {\n            newValue = prop(el, val);\n          } else if (prop === true) {\n            newValue = el[attrName] = true;\n            if (attrName === \"checked\" && el.type === \"radio\") {\n              if (can.inArray(tagName, attr.defaultValue) >= 0) {\n                el.defaultChecked = true;\n              }\n            }\n          } else if (prop) {\n            newValue = el[prop] = val;\n            if (prop === \"value\" && can.inArray(tagName, attr.defaultValue) >= 0) {\n              el.defaultValue = val;\n            }\n          } else {\n            el.setAttribute(attrName, val);\n            newValue = val;\n          }\n          if (!attr.MutationObserver && newValue !== oldValue) {\n            attr.trigger(el, attrName, oldValue);\n          }\n        },\n        trigger: function(el, attrName, oldValue) {\n          if (can.data(can.$(el), \"canHasAttributesBindings\")) {\n            return setImmediate(function() {\n              can.trigger(el, {\n                type: \"attributes\",\n                attributeName: attrName,\n                target: el,\n                oldValue: oldValue,\n                bubbles: false\n              }, []);\n            });\n          }\n        },\n        get: function(el, attrName) {\n          var prop = attr.map[attrName];\n          if (typeof prop === \"string\" && el[prop]) {\n            return el[prop];\n          }\n          return el.getAttribute(attrName);\n        },\n        remove: function(el, attrName) {\n          var oldValue;\n          if (!attr.MutationObserver) {\n            oldValue = attr.get(el, attrName);\n          }\n          var setter = attr.map[attrName];\n          if (typeof setter === \"function\") {\n            setter(el, undefined);\n          }\n          if (setter === true) {\n            el[attrName] = false;\n          } else if (typeof setter === \"string\") {\n            el[setter] = \"\";\n          } else {\n            el.removeAttribute(attrName);\n          }\n          if (!attr.MutationObserver && oldValue != null) {\n            attr.trigger(el, attrName, oldValue);\n          }\n        },\n        has: (function() {\n          var el = document.createElement('div');\n          if (el.hasAttribute) {\n            return function(el, name) {\n              return el.hasAttribute(name);\n            };\n          } else {\n            return function(el, name) {\n              return el.getAttribute(name) !== null;\n            };\n          }\n        })()\n      };\n  return attr;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/can\"], function (can) {\n\t// ## can.event.addEvent\n\t//\n\t// Adds a basic event listener to an object.\n\t// This consists of storing a cache of event listeners on each object,\n\t// that are iterated through later when events are dispatched.\n\t/**\n\t * @function can.event.addEvent\n\t * @parent can.event.static\n\t * @signature `obj.addEvent( event, handler )`\n\t *\n\t * Add a basic event listener to an object.\n\t *\n\t * @param {String} event The name of the event to listen for.\n\t * @param {Function} handler The handler that will be executed to handle the event.\n\t * @return {Object} this\n\t *\n\t * @signature `can.event.addEvent.call( obj, event, handler )`\n\t *\n\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t */\n\tcan.addEvent = function (event, handler) {\n\t\t// Initialize event cache.\n\t\tvar allEvents = this.__bindEvents || (this.__bindEvents = {}),\n\t\t\teventList = allEvents[event] || (allEvents[event] = []);\n\n\t\t// Add the event\n\t\teventList.push({\n\t\t\thandler: handler,\n\t\t\tname: event\n\t\t});\n\t\treturn this;\n\t};\n\n\t// ## can.event.listenTo\n\t//\n\t// Listens to an event without know how bind is implemented.\n\t// The primary use for this is to listen to another's objects event while \n\t// tracking events on the local object (similar to namespacing).\n\t//\n\t// The API was heavily influenced by BackboneJS: http://backbonejs.org/\n\t/**\n\t * @function can.event.listenTo\n\t * @parent can.event.static\n\t * @signature `obj.listenTo( other, event, handler )`\n\t *\n\t * Listens for an event on another object.\n\t * This is similar to concepts like event namespacing, except that the namespace \n\t * is the scope of the calling object.\n\t *\n\t * @param {Object} other The object to listen for events on.\n\t * @param {String} event The name of the event to listen for.\n\t * @param {Function} handler The handler that will be executed to handle the event.\n\t * @return {Object} this\n\t *\n\t * @signature `can.event.listenTo.call( obj, other, event, handler )`\n\t *\n\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t */\n\tcan.listenTo = function (other, event, handler) {\n\t\t// Initialize event cache\n\t\tvar idedEvents = this.__listenToEvents;\n\t\tif (!idedEvents) {\n\t\t\tidedEvents = this.__listenToEvents = {};\n\t\t}\n\n\t\t// Identify the other object\n\t\tvar otherId = can.cid(other);\n\t\tvar othersEvents = idedEvents[otherId];\n\t\t\n\t\t// Create a local event cache\n\t\tif (!othersEvents) {\n\t\t\tothersEvents = idedEvents[otherId] = {\n\t\t\t\tobj: other,\n\t\t\t\tevents: {}\n\t\t\t};\n\t\t}\n\t\tvar eventsEvents = othersEvents.events[event];\n\t\tif (!eventsEvents) {\n\t\t\teventsEvents = othersEvents.events[event] = [];\n\t\t}\n\n\t\t// Add the event, both locally and to the other object\n\t\teventsEvents.push(handler);\n\t\tcan.bind.call(other, event, handler);\n\t};\n\n\t// ## can.event.stopListening\n\t// \n\t// Stops listening for events on other objects\n\t/**\n\t * @function can.event.stopListening\n\t * @parent can.event.static\n\t * @signature `obj.stopListening( other, event, handler )`\n\t *\n\t * Stops listening for an event on another object.\n\t *\n\t * @param {Object} other The object to listen for events on.\n\t * @param {String} event The name of the event to listen for.\n\t * @param {Function} handler The handler that will be executed to handle the event.\n\t * @return {Object} this\n\t *\n\t * @signature `can.event.stopListening.call( obj, other, event, handler )`\n\t *\n\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t */\n\tcan.stopListening = function (other, event, handler) {\n\t\tvar idedEvents = this.__listenToEvents,\n\t\t\titerIdedEvents = idedEvents,\n\t\t\ti = 0;\n\t\tif (!idedEvents) {\n\t\t\treturn this;\n\t\t}\n\t\tif (other) {\n\t\t\tvar othercid = can.cid(other);\n\t\t\t(iterIdedEvents = {})[othercid] = idedEvents[othercid];\n\t\t\t// you might be trying to listen to something that is not there\n\t\t\tif (!idedEvents[othercid]) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\n\t\t// Clean up events on the other object\n\t\tfor (var cid in iterIdedEvents) {\n\t\t\tvar othersEvents = iterIdedEvents[cid],\n\t\t\t\teventsEvents;\n\t\t\tother = idedEvents[cid].obj;\n\n\t\t\t// Find the cache of events\n\t\t\tif (!event) {\n\t\t\t\teventsEvents = othersEvents.events;\n\t\t\t} else {\n\t\t\t\t(eventsEvents = {})[event] = othersEvents.events[event];\n\t\t\t}\n\n\t\t\t// Unbind event handlers, both locally and on the other object\n\t\t\tfor (var eventName in eventsEvents) {\n\t\t\t\tvar handlers = eventsEvents[eventName] || [];\n\t\t\t\ti = 0;\n\t\t\t\twhile (i < handlers.length) {\n\t\t\t\t\tif (handler && handler === handlers[i] || !handler) {\n\t\t\t\t\t\tcan.unbind.call(other, eventName, handlers[i]);\n\t\t\t\t\t\thandlers.splice(i, 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// no more handlers?\n\t\t\t\tif (!handlers.length) {\n\t\t\t\t\tdelete othersEvents.events[eventName];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (can.isEmptyObject(othersEvents.events)) {\n\t\t\t\tdelete idedEvents[cid];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t// ## can.event.removeEvent\n\t//\n\t// Removes a basic event listener from an object.\n\t// This removes event handlers from the cache of listened events.\n\t/**\n\t * @function can.event.removeEvent\n\t * @parent can.event.static\n\t * @signature `obj.removeEvent( event, handler )`\n\t *\n\t * Removes a basic event listener from an object.\n\t *\n\t * @param {String} event The name of the event to listen for.\n\t * @param {Function} handler The handler that will be executed to handle the event.\n\t * @param {Function} [__validate] An extra function that can validate an event handler \n\t *                                as a match. This is an internal parameter and only used \n\t *                                for `can/event` plugins.\n\t * @return {Object} this\n\t *\n\t * @signature `can.event.removeEvent.call( obj, event, handler )`\n\t *\n\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t */\n\tcan.removeEvent = function (event, fn, __validate) {\n\t\tif (!this.__bindEvents) {\n\t\t\treturn this;\n\t\t}\n\t\tvar events = this.__bindEvents[event] || [],\n\t\t\ti = 0,\n\t\t\tev, isFunction = typeof fn === 'function';\n\t\twhile (i < events.length) {\n\t\t\tev = events[i];\n\t\t\t// Determine whether this event handler is \"equivalent\" to the one requested\n\t\t\t// Generally this requires the same event/function, but a validation function \n\t\t\t// can be included for extra conditions. This is used in some plugins like `can/event/namespace`.\n\t\t\tif (__validate ? __validate(ev, event, fn) : isFunction && ev.handler === fn || !isFunction && (ev.cid === fn || !fn)) {\n\t\t\t\tevents.splice(i, 1);\n\t\t\t} else {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t};\n\n\t// ## can.event.dispatch\n\t//\n\t// Dispatches/triggers a basic event on an object.\n\t/**\n\t * @function can.event.dispatch\n\t * @parent can.event.static\n\t * @signature `obj.dispatch( event, args )`\n\t *\n\t * Dispatches/triggers a basic event on an object.\n\t *\n\t * @param {String|Object} event The event to dispatch\n\t * @param {Array} [args] Additional arguments to pass to event handlers\n\t * @return {Object} event The resulting event object\n\t *\n\t * @signature `can.event.dispatch.call( obj, event, args )`\n\t *\n\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t */\n\tcan.dispatch = function (event, args) {\n\t\tvar events = this.__bindEvents;\n\t\tif (!events) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Initialize the event object\n\t\tif (typeof event === 'string') {\n\t\t\tevent = {\n\t\t\t\ttype: event\n\t\t\t};\n\t\t}\n\n\t\t// Grab event listeners\n\t\tvar eventName = event.type,\n\t\t\thandlers = (events[eventName] || []).slice(0);\n\t\t\n\t\t// Execute handlers listening for this event.\n\t\targs = [event].concat(args || []);\n\t\tfor (var i = 0, len = handlers.length; i < len; i++) {\n\t\t\thandlers[i].handler.apply(this, args);\n\t\t}\n\n\t\treturn event;\n\t};\n\t\n\t// ## can.event.one\n\t//\n\t// Adds a basic event listener that listens to an event once and only once.\n\t/**\n\t * @function can.event.one\n\t * @parent can.event.static\n\t * @signature `obj.one( event, handler )`\n\t *\n\t * Adds a basic event listener that listens to an event once and only once.\n\t *\n\t * @param {String} event The name of the event to listen for.\n\t * @param {Function} handler The handler that will be executed to handle the event.\n\t * @return {Object} this\n\t */\n\tcan.one = function(event, handler) {\n\t\t// Unbind the listener after it has been executed\n\t\tvar one = function() {\n\t\t\tcan.unbind.call(this, event, one);\n\t\t\treturn handler.apply(this, arguments);\n\t\t};\n\n\t\t// Bind the altered listener\n\t\tcan.bind.call(this, event, one);\n\t\treturn this;\n\t};\n\n\t// ## can.event\n\t// Create and export the `can.event` mixin\n\tcan.event = {\n\t\t// Event method aliases\n\t\t/**\n\t\t * @function can.event.on\n\t\t * @parent can.event.static\n\t\t * @signature `obj.on( event, handler )`\n\t\t *\n\t\t * Add a basic event listener to an object.\n\t\t *\n\t\t * This is an alias of [can.event.addEvent addEvent].\n\t\t *\n\t\t * @signature `can.event.on.call( obj, event, handler )`\n\t\t *\n\t\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t\t */\n\t\ton: can.addEvent,\n\t\t/**\n\t\t * @function can.event.off\n\t\t * @parent can.event.static\n\t\t * @signature `obj.off( event, handler )`\n\t\t *\n\t\t * Removes a basic event listener from an object.\n\t\t *\n\t\t * This is an alias of [can.event.removeEvent removeEvent].\n\t\t *\n\t\t * @signature `can.event.off.call( obj, event, handler )`\n\t\t *\n\t\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t\t */\n\t\toff: can.removeEvent,\n\t\t/**\n\t\t * @function can.event.bind\n\t\t * @parent can.event.static\n\t\t * @signature `obj.bind( event, handler )`\n\t\t *\n\t\t * Add a basic event listener to an object.\n\t\t *\n\t\t * This is an alias of [can.event.addEvent addEvent].\n\t\t *\n\t\t * @signature `can.event.bind.call( obj, event, handler )`\n\t\t *\n\t\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t\t */\n\t\tbind: can.addEvent,\n\t\t/**\n\t\t * @function can.event.unbind\n\t\t * @parent can.event.static\n\t\t * @signature `obj.unbind( event, handler )`\n\t\t *\n\t\t * Removes a basic event listener from an object.\n\t\t *\n\t\t * This is an alias of [can.event.removeEvent removeEvent].\n\t\t *\n\t\t * @signature `can.event.unbind.call( obj, event, handler )`\n\t\t *\n\t\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t\t */\n\t\tunbind: can.removeEvent,\n\t\t/**\n\t\t * @function can.event.delegate\n\t\t * @parent can.event.static\n\t\t * @signature `obj.delegate( selector, event, handler )`\n\t\t *\n\t\t * Provides a compatibility layer for adding delegate event listeners.\n\t\t * This doesn't actually implement delegates, but rather allows \n\t\t * logic that assumes a delegate to still function.\n\t\t *\n\t\t * Therefore, this is essentially an alias of [can.event.addEvent addEvent] with the selector ignored.\n\t\t *\n\t\t * @param {String} selector The **ignored** selector to use for the delegate.\n\t\t * @param {String} event The name of the event to listen for.\n\t\t * @param {Function} handler The handler that will be executed to handle the event.\n\t\t * @return {Object} this\n\t\t *\n\t\t * @signature `can.event.delegate.call( obj, selector, event, handler )`\n\t\t *\n\t\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t\t */\n\t\tdelegate: function(selector, event, handler) {\n\t\t\treturn can.addEvent.call(event, handler);\n\t\t},\n\t\t/**\n\t\t * @function can.event.undelegate\n\t\t * @parent can.event.static\n\t\t * @signature `obj.undelegate( selector, event, handler )`\n\t\t *\n\t\t * Provides a compatibility layer for removing delegate event listeners.\n\t\t * This doesn't actually implement delegates, but rather allows \n\t\t * logic that assumes a delegate to still function.\n\t\t *\n\t\t * Therefore, this is essentially an alias of [can.event.removeEvent removeEvent] with the selector ignored.\n\t\t *\n\t\t * @param {String} selector The **ignored** selector to use for the delegate.\n\t\t * @param {String} event The name of the event to listen for.\n\t\t * @param {Function} handler The handler that will be executed to handle the event.\n\t\t * @return {Object} this\n\t\t *\n\t\t * @signature `can.event.undelegate.call( obj, selector, event, handler )`\n\t\t *\n\t\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t\t */\n\t\tundelegate: function(selector, event, handler) {\n\t\t\treturn can.removeEvent.call(event, handler);\n\t\t},\n\t\t/**\n\t\t * @function can.event.trigger\n\t\t * @parent can.event.static\n\t\t * @signature `obj.trigger( event, args )`\n\t\t *\n\t\t * Dispatches/triggers a basic event on an object.\n\t\t * This is an alias of [can.event.dispatch dispatch].\n\t\t *\n\t\t * @signature `can.event.trigger.call( obj, event, args )`\n\t\t *\n\t\t * This syntax can be used for objects that don't include the `can.event` mixin.\n\t\t */\n\t\ttrigger: can.dispatch,\n\n\t\t// Normal can/event methods\n\t\tone: can.one,\n\t\taddEvent: can.addEvent,\n\t\tremoveEvent: can.removeEvent,\n\t\tlistenTo: can.listenTo,\n\t\tstopListening: can.stopListening,\n\t\tdispatch: can.dispatch\n\t};\n\n\treturn can.event;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/event\";\ndefine([\"can/util/can\"], function(can) {\n  can.addEvent = function(event, handler) {\n    var allEvents = this.__bindEvents || (this.__bindEvents = {}),\n        eventList = allEvents[event] || (allEvents[event] = []);\n    eventList.push({\n      handler: handler,\n      name: event\n    });\n    return this;\n  };\n  can.listenTo = function(other, event, handler) {\n    var idedEvents = this.__listenToEvents;\n    if (!idedEvents) {\n      idedEvents = this.__listenToEvents = {};\n    }\n    var otherId = can.cid(other);\n    var othersEvents = idedEvents[otherId];\n    if (!othersEvents) {\n      othersEvents = idedEvents[otherId] = {\n        obj: other,\n        events: {}\n      };\n    }\n    var eventsEvents = othersEvents.events[event];\n    if (!eventsEvents) {\n      eventsEvents = othersEvents.events[event] = [];\n    }\n    eventsEvents.push(handler);\n    can.bind.call(other, event, handler);\n  };\n  can.stopListening = function(other, event, handler) {\n    var idedEvents = this.__listenToEvents,\n        iterIdedEvents = idedEvents,\n        i = 0;\n    if (!idedEvents) {\n      return this;\n    }\n    if (other) {\n      var othercid = can.cid(other);\n      (iterIdedEvents = {})[othercid] = idedEvents[othercid];\n      if (!idedEvents[othercid]) {\n        return this;\n      }\n    }\n    for (var cid in iterIdedEvents) {\n      var othersEvents = iterIdedEvents[cid],\n          eventsEvents;\n      other = idedEvents[cid].obj;\n      if (!event) {\n        eventsEvents = othersEvents.events;\n      } else {\n        (eventsEvents = {})[event] = othersEvents.events[event];\n      }\n      for (var eventName in eventsEvents) {\n        var handlers = eventsEvents[eventName] || [];\n        i = 0;\n        while (i < handlers.length) {\n          if (handler && handler === handlers[i] || !handler) {\n            can.unbind.call(other, eventName, handlers[i]);\n            handlers.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n        if (!handlers.length) {\n          delete othersEvents.events[eventName];\n        }\n      }\n      if (can.isEmptyObject(othersEvents.events)) {\n        delete idedEvents[cid];\n      }\n    }\n    return this;\n  };\n  can.removeEvent = function(event, fn, __validate) {\n    if (!this.__bindEvents) {\n      return this;\n    }\n    var events = this.__bindEvents[event] || [],\n        i = 0,\n        ev,\n        isFunction = typeof fn === 'function';\n    while (i < events.length) {\n      ev = events[i];\n      if (__validate ? __validate(ev, event, fn) : isFunction && ev.handler === fn || !isFunction && (ev.cid === fn || !fn)) {\n        events.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    return this;\n  };\n  can.dispatch = function(event, args) {\n    var events = this.__bindEvents;\n    if (!events) {\n      return;\n    }\n    if (typeof event === 'string') {\n      event = {type: event};\n    }\n    var eventName = event.type,\n        handlers = (events[eventName] || []).slice(0);\n    args = [event].concat(args || []);\n    for (var i = 0,\n        len = handlers.length; i < len; i++) {\n      handlers[i].handler.apply(this, args);\n    }\n    return event;\n  };\n  can.one = function(event, handler) {\n    var one = function() {\n      can.unbind.call(this, event, one);\n      return handler.apply(this, arguments);\n    };\n    can.bind.call(this, event, one);\n    return this;\n  };\n  can.event = {\n    on: can.addEvent,\n    off: can.removeEvent,\n    bind: can.addEvent,\n    unbind: can.removeEvent,\n    delegate: function(selector, event, handler) {\n      return can.addEvent.call(event, handler);\n    },\n    undelegate: function(selector, event, handler) {\n      return can.removeEvent.call(event, handler);\n    },\n    trigger: can.dispatch,\n    one: can.one,\n    addEvent: can.addEvent,\n    removeEvent: can.removeEvent,\n    listenTo: can.listenTo,\n    stopListening: can.stopListening,\n    dispatch: can.dispatch\n  };\n  return can.event;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/can\"], function (can) {\n\tcan.inserted = function (elems) {\n\t\t// Turn the `elems` property into an array to prevent mutations from changing the looping.\n\t\telems = can.makeArray(elems);\n\t\tvar inDocument = false,\n\t\t\t// Gets the `doc` to use as a reference for finding out whether the element is in the document.\n\t\t\tdoc = can.$(document.contains ? document : document.body),\n\t\t\tchildren;\n\t\t// Go through `elems` and trigger the `inserted` event.\n\t\t// If the first element is not in the document (a Document Fragment) it will exit the function. If it is in the document it sets the `inDocument` flag to true. This means that we only check for the first element and either exit the function or start triggering \"inserted\" for child elements.\n\t\tfor (var i = 0, elem;\n\t\t\t(elem = elems[i]) !== undefined; i++) {\n\t\t\tif (!inDocument) {\n\t\t\t\tif (elem.getElementsByTagName) {\n\t\t\t\t\tif (can.has(doc, elem)\n\t\t\t\t\t\t.length) {\n\t\t\t\t\t\tinDocument = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've found an element in the document then we can now trigger **\"inserted\"** for `elem` and all of its children. We are using `getElementsByTagName(\"*\")` so that we grab all of the descendant nodes.\n\t\t\tif (inDocument && elem.getElementsByTagName) {\n\t\t\t\tchildren = can.makeArray(elem.getElementsByTagName(\"*\"));\n\t\t\t\tcan.trigger(elem, \"inserted\", [], false);\n\t\t\t\tfor (var j = 0, child;\n\t\t\t\t\t(child = children[j]) !== undefined; j++) {\n\t\t\t\t\tcan.trigger(child, \"inserted\", [], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// ## can.appendChild\n\t// Used to append a node to an element and trigger the \"inserted\" event on all of the newly inserted children. Since `can.inserted` takes an array we convert the child to an array, or in the case of a DocumentFragment we first convert the childNodes to an array and call inserted on those.\n\tcan.appendChild = function (el, child) {\n\t\tvar children;\n\t\tif (child.nodeType === 11) {\n\t\t\tchildren = can.makeArray(child.childNodes);\n\t\t} else {\n\t\t\tchildren = [child];\n\t\t}\n\t\tel.appendChild(child);\n\t\tcan.inserted(children);\n\t};\n\n\t// ## can.insertBefore\n\t// Like can.appendChild, used to insert a node to an element before a reference node and then trigger the \"inserted\" event.\n\tcan.insertBefore = function (el, child, ref) {\n\t\tvar children;\n\t\tif (child.nodeType === 11) {\n\t\t\tchildren = can.makeArray(child.childNodes);\n\t\t} else {\n\t\t\tchildren = [child];\n\t\t}\n\t\tel.insertBefore(child, ref);\n\t\tcan.inserted(children);\n\t};\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/inserted\";\ndefine([\"can/util/can\"], function(can) {\n  can.inserted = function(elems) {\n    elems = can.makeArray(elems);\n    var inDocument = false,\n        doc = can.$(document.contains ? document : document.body),\n        children;\n    for (var i = 0,\n        elem; (elem = elems[i]) !== undefined; i++) {\n      if (!inDocument) {\n        if (elem.getElementsByTagName) {\n          if (can.has(doc, elem).length) {\n            inDocument = true;\n          } else {\n            return;\n          }\n        } else {\n          continue;\n        }\n      }\n      if (inDocument && elem.getElementsByTagName) {\n        children = can.makeArray(elem.getElementsByTagName(\"*\"));\n        can.trigger(elem, \"inserted\", [], false);\n        for (var j = 0,\n            child; (child = children[j]) !== undefined; j++) {\n          can.trigger(child, \"inserted\", [], false);\n        }\n      }\n    }\n  };\n  can.appendChild = function(el, child) {\n    var children;\n    if (child.nodeType === 11) {\n      children = can.makeArray(child.childNodes);\n    } else {\n      children = [child];\n    }\n    el.appendChild(child);\n    can.inserted(children);\n  };\n  can.insertBefore = function(el, child, ref) {\n    var children;\n    if (child.nodeType === 11) {\n      children = can.makeArray(child.childNodes);\n    } else {\n      children = [child];\n    }\n    el.insertBefore(child, ref);\n    can.inserted(children);\n  };\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/can\"], function (can) {\n\t\n\t// The following is from jQuery\n\tvar isArrayLike = function(obj){\n\t\tvar length = obj.length;\n\t\treturn typeof arr !== \"function\" &&\n\t\t\t( length === 0 || typeof length === \"number\" && length > 0 && ( length - 1 ) in obj );\n\t};\n\t\n\tcan.each = function (elements, callback, context) {\n\t\tvar i = 0,\n\t\t\tkey,\n\t\t\tlen,\n\t\t\titem;\n\t\tif (elements) {\n\t\t\tif ( isArrayLike(elements) ) {\n\t\t\t\tif(can.List && elements instanceof can.List ) {\n\t\t\t\t\tfor (len = elements.attr(\"length\"); i < len; i++) {\n\t\t\t\t\t\titem = elements.attr(i);\n\t\t\t\t\t\tif (callback.call(context || item, item, i, elements) === false) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (len = elements.length; i < len; i++) {\n\t\t\t\t\t\titem = elements[i];\n\t\t\t\t\t\tif (callback.call(context || item, item, i, elements) === false) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (typeof elements === \"object\") {\n\t\t\t\t\n\t\t\t\tif (can.Map && elements instanceof can.Map || elements === can.route) {\n\t\t\t\t\tvar keys = can.Map.keys(elements);\n\t\t\t\t\tfor(i =0, len = keys.length; i < len; i++) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\titem = elements.attr(key);\n\t\t\t\t\t\tif (callback.call(context || item, item, key, elements) === false) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (key in elements) {\n\t\t\t\t\t\tif (elements.hasOwnProperty(key) && callback.call(context || elements[key], elements[key], key, elements) === false) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn elements;\n\t};\n\treturn can;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/util/array/each\";\ndefine([\"can/util/can\"], function(can) {\n  var isArrayLike = function(obj) {\n    var length = obj.length;\n    return typeof arr !== \"function\" && (length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj);\n  };\n  can.each = function(elements, callback, context) {\n    var i = 0,\n        key,\n        len,\n        item;\n    if (elements) {\n      if (isArrayLike(elements)) {\n        if (can.List && elements instanceof can.List) {\n          for (len = elements.attr(\"length\"); i < len; i++) {\n            item = elements.attr(i);\n            if (callback.call(context || item, item, i, elements) === false) {\n              break;\n            }\n          }\n        } else {\n          for (len = elements.length; i < len; i++) {\n            item = elements[i];\n            if (callback.call(context || item, item, i, elements) === false) {\n              break;\n            }\n          }\n        }\n      } else if (typeof elements === \"object\") {\n        if (can.Map && elements instanceof can.Map || elements === can.route) {\n          var keys = can.Map.keys(elements);\n          for (i = 0, len = keys.length; i < len; i++) {\n            key = keys[i];\n            item = elements.attr(key);\n            if (callback.call(context || item, item, key, elements) === false) {\n              break;\n            }\n          }\n        } else {\n          for (key in elements) {\n            if (elements.hasOwnProperty(key) && callback.call(context || elements[key], elements[key], key, elements) === false) {\n              break;\n            }\n          }\n        }\n      }\n    }\n    return elements;\n  };\n  return can;\n});\n\n","module.exports = function() {\n  \"use strict\";\n  var __moduleName = \"bower_components/jquery/dist/jquery\";\n  (function(global, factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n      module.exports = global.document ? factory(global, true) : function(w) {\n        if (!w.document) {\n          throw new Error(\"jQuery requires a window with a document\");\n        }\n        return factory(w);\n      };\n    } else {\n      factory(global);\n    }\n  }(typeof window !== \"undefined\" ? window : this, function(window, noGlobal) {\n    var arr = [];\n    var slice = arr.slice;\n    var concat = arr.concat;\n    var push = arr.push;\n    var indexOf = arr.indexOf;\n    var class2type = {};\n    var toString = class2type.toString;\n    var hasOwn = class2type.hasOwnProperty;\n    var support = {};\n    var document = window.document,\n        version = \"2.1.1\",\n        jQuery = function(selector, context) {\n          return new jQuery.fn.init(selector, context);\n        },\n        rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n        rmsPrefix = /^-ms-/,\n        rdashAlpha = /-([\\da-z])/gi,\n        fcamelCase = function(all, letter) {\n          return letter.toUpperCase();\n        };\n    jQuery.fn = jQuery.prototype = {\n      jquery: version,\n      constructor: jQuery,\n      selector: \"\",\n      length: 0,\n      toArray: function() {\n        return slice.call(this);\n      },\n      get: function(num) {\n        return num != null ? (num < 0 ? this[num + this.length] : this[num]) : slice.call(this);\n      },\n      pushStack: function(elems) {\n        var ret = jQuery.merge(this.constructor(), elems);\n        ret.prevObject = this;\n        ret.context = this.context;\n        return ret;\n      },\n      each: function(callback, args) {\n        return jQuery.each(this, callback, args);\n      },\n      map: function(callback) {\n        return this.pushStack(jQuery.map(this, function(elem, i) {\n          return callback.call(elem, i, elem);\n        }));\n      },\n      slice: function() {\n        return this.pushStack(slice.apply(this, arguments));\n      },\n      first: function() {\n        return this.eq(0);\n      },\n      last: function() {\n        return this.eq(-1);\n      },\n      eq: function(i) {\n        var len = this.length,\n            j = +i + (i < 0 ? len : 0);\n        return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n      },\n      end: function() {\n        return this.prevObject || this.constructor(null);\n      },\n      push: push,\n      sort: arr.sort,\n      splice: arr.splice\n    };\n    jQuery.extend = jQuery.fn.extend = function() {\n      var options,\n          name,\n          src,\n          copy,\n          copyIsArray,\n          clone,\n          target = arguments[0] || {},\n          i = 1,\n          length = arguments.length,\n          deep = false;\n      if (typeof target === \"boolean\") {\n        deep = target;\n        target = arguments[i] || {};\n        i++;\n      }\n      if (typeof target !== \"object\" && !jQuery.isFunction(target)) {\n        target = {};\n      }\n      if (i === length) {\n        target = this;\n        i--;\n      }\n      for (; i < length; i++) {\n        if ((options = arguments[i]) != null) {\n          for (name in options) {\n            src = target[name];\n            copy = options[name];\n            if (target === copy) {\n              continue;\n            }\n            if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {\n              if (copyIsArray) {\n                copyIsArray = false;\n                clone = src && jQuery.isArray(src) ? src : [];\n              } else {\n                clone = src && jQuery.isPlainObject(src) ? src : {};\n              }\n              target[name] = jQuery.extend(deep, clone, copy);\n            } else if (copy !== undefined) {\n              target[name] = copy;\n            }\n          }\n        }\n      }\n      return target;\n    };\n    jQuery.extend({\n      expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n      isReady: true,\n      error: function(msg) {\n        throw new Error(msg);\n      },\n      noop: function() {},\n      isFunction: function(obj) {\n        return jQuery.type(obj) === \"function\";\n      },\n      isArray: Array.isArray,\n      isWindow: function(obj) {\n        return obj != null && obj === obj.window;\n      },\n      isNumeric: function(obj) {\n        return !jQuery.isArray(obj) && obj - parseFloat(obj) >= 0;\n      },\n      isPlainObject: function(obj) {\n        if (jQuery.type(obj) !== \"object\" || obj.nodeType || jQuery.isWindow(obj)) {\n          return false;\n        }\n        if (obj.constructor && !hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n          return false;\n        }\n        return true;\n      },\n      isEmptyObject: function(obj) {\n        var name;\n        for (name in obj) {\n          return false;\n        }\n        return true;\n      },\n      type: function(obj) {\n        if (obj == null) {\n          return obj + \"\";\n        }\n        return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n      },\n      globalEval: function(code) {\n        var script,\n            indirect = eval;\n        code = jQuery.trim(code);\n        if (code) {\n          if (code.indexOf(\"use strict\") === 1) {\n            script = document.createElement(\"script\");\n            script.text = code;\n            document.head.appendChild(script).parentNode.removeChild(script);\n          } else {\n            indirect(code);\n          }\n        }\n      },\n      camelCase: function(string) {\n        return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n      },\n      nodeName: function(elem, name) {\n        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n      },\n      each: function(obj, callback, args) {\n        var value,\n            i = 0,\n            length = obj.length,\n            isArray = isArraylike(obj);\n        if (args) {\n          if (isArray) {\n            for (; i < length; i++) {\n              value = callback.apply(obj[i], args);\n              if (value === false) {\n                break;\n              }\n            }\n          } else {\n            for (i in obj) {\n              value = callback.apply(obj[i], args);\n              if (value === false) {\n                break;\n              }\n            }\n          }\n        } else {\n          if (isArray) {\n            for (; i < length; i++) {\n              value = callback.call(obj[i], i, obj[i]);\n              if (value === false) {\n                break;\n              }\n            }\n          } else {\n            for (i in obj) {\n              value = callback.call(obj[i], i, obj[i]);\n              if (value === false) {\n                break;\n              }\n            }\n          }\n        }\n        return obj;\n      },\n      trim: function(text) {\n        return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n      },\n      makeArray: function(arr, results) {\n        var ret = results || [];\n        if (arr != null) {\n          if (isArraylike(Object(arr))) {\n            jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n          } else {\n            push.call(ret, arr);\n          }\n        }\n        return ret;\n      },\n      inArray: function(elem, arr, i) {\n        return arr == null ? -1 : indexOf.call(arr, elem, i);\n      },\n      merge: function(first, second) {\n        var len = +second.length,\n            j = 0,\n            i = first.length;\n        for (; j < len; j++) {\n          first[i++] = second[j];\n        }\n        first.length = i;\n        return first;\n      },\n      grep: function(elems, callback, invert) {\n        var callbackInverse,\n            matches = [],\n            i = 0,\n            length = elems.length,\n            callbackExpect = !invert;\n        for (; i < length; i++) {\n          callbackInverse = !callback(elems[i], i);\n          if (callbackInverse !== callbackExpect) {\n            matches.push(elems[i]);\n          }\n        }\n        return matches;\n      },\n      map: function(elems, callback, arg) {\n        var value,\n            i = 0,\n            length = elems.length,\n            isArray = isArraylike(elems),\n            ret = [];\n        if (isArray) {\n          for (; i < length; i++) {\n            value = callback(elems[i], i, arg);\n            if (value != null) {\n              ret.push(value);\n            }\n          }\n        } else {\n          for (i in elems) {\n            value = callback(elems[i], i, arg);\n            if (value != null) {\n              ret.push(value);\n            }\n          }\n        }\n        return concat.apply([], ret);\n      },\n      guid: 1,\n      proxy: function(fn, context) {\n        var tmp,\n            args,\n            proxy;\n        if (typeof context === \"string\") {\n          tmp = fn[context];\n          context = fn;\n          fn = tmp;\n        }\n        if (!jQuery.isFunction(fn)) {\n          return undefined;\n        }\n        args = slice.call(arguments, 2);\n        proxy = function() {\n          return fn.apply(context || this, args.concat(slice.call(arguments)));\n        };\n        proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n        return proxy;\n      },\n      now: Date.now,\n      support: support\n    });\n    jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n      class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n    });\n    function isArraylike(obj) {\n      var length = obj.length,\n          type = jQuery.type(obj);\n      if (type === \"function\" || jQuery.isWindow(obj)) {\n        return false;\n      }\n      if (obj.nodeType === 1 && length) {\n        return true;\n      }\n      return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj;\n    }\n    var Sizzle = (function(window) {\n      var i,\n          support,\n          Expr,\n          getText,\n          isXML,\n          tokenize,\n          compile,\n          select,\n          outermostContext,\n          sortInput,\n          hasDuplicate,\n          setDocument,\n          document,\n          docElem,\n          documentIsHTML,\n          rbuggyQSA,\n          rbuggyMatches,\n          matches,\n          contains,\n          expando = \"sizzle\" + -(new Date()),\n          preferredDoc = window.document,\n          dirruns = 0,\n          done = 0,\n          classCache = createCache(),\n          tokenCache = createCache(),\n          compilerCache = createCache(),\n          sortOrder = function(a, b) {\n            if (a === b) {\n              hasDuplicate = true;\n            }\n            return 0;\n          },\n          strundefined = typeof undefined,\n          MAX_NEGATIVE = 1 << 31,\n          hasOwn = ({}).hasOwnProperty,\n          arr = [],\n          pop = arr.pop,\n          push_native = arr.push,\n          push = arr.push,\n          slice = arr.slice,\n          indexOf = arr.indexOf || function(elem) {\n            var i = 0,\n                len = this.length;\n            for (; i < len; i++) {\n              if (this[i] === elem) {\n                return i;\n              }\n            }\n            return -1;\n          },\n          booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n          whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n          characterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n          identifier = characterEncoding.replace(\"w\", \"w#\"),\n          attributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace + \"*([*^$|!~]?=)\" + whitespace + \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n          pseudos = \":(\" + characterEncoding + \")(?:\\\\((\" + \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + \".*\" + \")\\\\)|)\",\n          rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n          rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n          rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n          rattributeQuotes = new RegExp(\"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\"),\n          rpseudo = new RegExp(pseudos),\n          ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n          matchExpr = {\n            \"ID\": new RegExp(\"^#(\" + characterEncoding + \")\"),\n            \"CLASS\": new RegExp(\"^\\\\.(\" + characterEncoding + \")\"),\n            \"TAG\": new RegExp(\"^(\" + characterEncoding.replace(\"w\", \"w*\") + \")\"),\n            \"ATTR\": new RegExp(\"^\" + attributes),\n            \"PSEUDO\": new RegExp(\"^\" + pseudos),\n            \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n            \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n            \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n          },\n          rinputs = /^(?:input|select|textarea|button)$/i,\n          rheader = /^h\\d$/i,\n          rnative = /^[^{]+\\{\\s*\\[native \\w/,\n          rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n          rsibling = /[+~]/,\n          rescape = /'|\\\\/g,\n          runescape = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\"),\n          funescape = function(_, escaped, escapedWhitespace) {\n            var high = \"0x\" + escaped - 0x10000;\n            return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n          };\n      try {\n        push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes);\n        arr[preferredDoc.childNodes.length].nodeType;\n      } catch (e) {\n        push = {apply: arr.length ? function(target, els) {\n            push_native.apply(target, slice.call(els));\n          } : function(target, els) {\n            var j = target.length,\n                i = 0;\n            while ((target[j++] = els[i++])) {}\n            target.length = j - 1;\n          }};\n      }\n      function Sizzle(selector, context, results, seed) {\n        var match,\n            elem,\n            m,\n            nodeType,\n            i,\n            groups,\n            old,\n            nid,\n            newContext,\n            newSelector;\n        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n          setDocument(context);\n        }\n        context = context || document;\n        results = results || [];\n        if (!selector || typeof selector !== \"string\") {\n          return results;\n        }\n        if ((nodeType = context.nodeType) !== 1 && nodeType !== 9) {\n          return [];\n        }\n        if (documentIsHTML && !seed) {\n          if ((match = rquickExpr.exec(selector))) {\n            if ((m = match[1])) {\n              if (nodeType === 9) {\n                elem = context.getElementById(m);\n                if (elem && elem.parentNode) {\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                }\n              } else {\n                if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              }\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results;\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          }\n          if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n            nid = old = expando;\n            newContext = context;\n            newSelector = nodeType === 9 && selector;\n            if (nodeType === 1 && context.nodeName.toLowerCase() !== \"object\") {\n              groups = tokenize(selector);\n              if ((old = context.getAttribute(\"id\"))) {\n                nid = old.replace(rescape, \"\\\\$&\");\n              } else {\n                context.setAttribute(\"id\", nid);\n              }\n              nid = \"[id='\" + nid + \"'] \";\n              i = groups.length;\n              while (i--) {\n                groups[i] = nid + toSelector(groups[i]);\n              }\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n              newSelector = groups.join(\",\");\n            }\n            if (newSelector) {\n              try {\n                push.apply(results, newContext.querySelectorAll(newSelector));\n                return results;\n              } catch (qsaError) {} finally {\n                if (!old) {\n                  context.removeAttribute(\"id\");\n                }\n              }\n            }\n          }\n        }\n        return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n      }\n      function createCache() {\n        var keys = [];\n        function cache(key, value) {\n          if (keys.push(key + \" \") > Expr.cacheLength) {\n            delete cache[keys.shift()];\n          }\n          return (cache[key + \" \"] = value);\n        }\n        return cache;\n      }\n      function markFunction(fn) {\n        fn[expando] = true;\n        return fn;\n      }\n      function assert(fn) {\n        var div = document.createElement(\"div\");\n        try {\n          return !!fn(div);\n        } catch (e) {\n          return false;\n        } finally {\n          if (div.parentNode) {\n            div.parentNode.removeChild(div);\n          }\n          div = null;\n        }\n      }\n      function addHandle(attrs, handler) {\n        var arr = attrs.split(\"|\"),\n            i = attrs.length;\n        while (i--) {\n          Expr.attrHandle[arr[i]] = handler;\n        }\n      }\n      function siblingCheck(a, b) {\n        var cur = b && a,\n            diff = cur && a.nodeType === 1 && b.nodeType === 1 && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);\n        if (diff) {\n          return diff;\n        }\n        if (cur) {\n          while ((cur = cur.nextSibling)) {\n            if (cur === b) {\n              return -1;\n            }\n          }\n        }\n        return a ? 1 : -1;\n      }\n      function createInputPseudo(type) {\n        return function(elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === \"input\" && elem.type === type;\n        };\n      }\n      function createButtonPseudo(type) {\n        return function(elem) {\n          var name = elem.nodeName.toLowerCase();\n          return (name === \"input\" || name === \"button\") && elem.type === type;\n        };\n      }\n      function createPositionalPseudo(fn) {\n        return markFunction(function(argument) {\n          argument = +argument;\n          return markFunction(function(seed, matches) {\n            var j,\n                matchIndexes = fn([], seed.length, argument),\n                i = matchIndexes.length;\n            while (i--) {\n              if (seed[(j = matchIndexes[i])]) {\n                seed[j] = !(matches[j] = seed[j]);\n              }\n            }\n          });\n        });\n      }\n      function testContext(context) {\n        return context && typeof context.getElementsByTagName !== strundefined && context;\n      }\n      support = Sizzle.support = {};\n      isXML = Sizzle.isXML = function(elem) {\n        var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n        return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n      };\n      setDocument = Sizzle.setDocument = function(node) {\n        var hasCompare,\n            doc = node ? node.ownerDocument || node : preferredDoc,\n            parent = doc.defaultView;\n        if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n          return document;\n        }\n        document = doc;\n        docElem = doc.documentElement;\n        documentIsHTML = !isXML(doc);\n        if (parent && parent !== parent.top) {\n          if (parent.addEventListener) {\n            parent.addEventListener(\"unload\", function() {\n              setDocument();\n            }, false);\n          } else if (parent.attachEvent) {\n            parent.attachEvent(\"onunload\", function() {\n              setDocument();\n            });\n          }\n        }\n        support.attributes = assert(function(div) {\n          div.className = \"i\";\n          return !div.getAttribute(\"className\");\n        });\n        support.getElementsByTagName = assert(function(div) {\n          div.appendChild(doc.createComment(\"\"));\n          return !div.getElementsByTagName(\"*\").length;\n        });\n        support.getElementsByClassName = rnative.test(doc.getElementsByClassName) && assert(function(div) {\n          div.innerHTML = \"<div class='a'></div><div class='a i'></div>\";\n          div.firstChild.className = \"i\";\n          return div.getElementsByClassName(\"i\").length === 2;\n        });\n        support.getById = assert(function(div) {\n          docElem.appendChild(div).id = expando;\n          return !doc.getElementsByName || !doc.getElementsByName(expando).length;\n        });\n        if (support.getById) {\n          Expr.find[\"ID\"] = function(id, context) {\n            if (typeof context.getElementById !== strundefined && documentIsHTML) {\n              var m = context.getElementById(id);\n              return m && m.parentNode ? [m] : [];\n            }\n          };\n          Expr.filter[\"ID\"] = function(id) {\n            var attrId = id.replace(runescape, funescape);\n            return function(elem) {\n              return elem.getAttribute(\"id\") === attrId;\n            };\n          };\n        } else {\n          delete Expr.find[\"ID\"];\n          Expr.filter[\"ID\"] = function(id) {\n            var attrId = id.replace(runescape, funescape);\n            return function(elem) {\n              var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n              return node && node.value === attrId;\n            };\n          };\n        }\n        Expr.find[\"TAG\"] = support.getElementsByTagName ? function(tag, context) {\n          if (typeof context.getElementsByTagName !== strundefined) {\n            return context.getElementsByTagName(tag);\n          }\n        } : function(tag, context) {\n          var elem,\n              tmp = [],\n              i = 0,\n              results = context.getElementsByTagName(tag);\n          if (tag === \"*\") {\n            while ((elem = results[i++])) {\n              if (elem.nodeType === 1) {\n                tmp.push(elem);\n              }\n            }\n            return tmp;\n          }\n          return results;\n        };\n        Expr.find[\"CLASS\"] = support.getElementsByClassName && function(className, context) {\n          if (typeof context.getElementsByClassName !== strundefined && documentIsHTML) {\n            return context.getElementsByClassName(className);\n          }\n        };\n        rbuggyMatches = [];\n        rbuggyQSA = [];\n        if ((support.qsa = rnative.test(doc.querySelectorAll))) {\n          assert(function(div) {\n            div.innerHTML = \"<select msallowclip=''><option selected=''></option></select>\";\n            if (div.querySelectorAll(\"[msallowclip^='']\").length) {\n              rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n            }\n            if (!div.querySelectorAll(\"[selected]\").length) {\n              rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n            }\n            if (!div.querySelectorAll(\":checked\").length) {\n              rbuggyQSA.push(\":checked\");\n            }\n          });\n          assert(function(div) {\n            var input = doc.createElement(\"input\");\n            input.setAttribute(\"type\", \"hidden\");\n            div.appendChild(input).setAttribute(\"name\", \"D\");\n            if (div.querySelectorAll(\"[name=d]\").length) {\n              rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n            }\n            if (!div.querySelectorAll(\":enabled\").length) {\n              rbuggyQSA.push(\":enabled\", \":disabled\");\n            }\n            div.querySelectorAll(\"*,:x\");\n            rbuggyQSA.push(\",.*:\");\n          });\n        }\n        if ((support.matchesSelector = rnative.test((matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)))) {\n          assert(function(div) {\n            support.disconnectedMatch = matches.call(div, \"div\");\n            matches.call(div, \"[s!='']:x\");\n            rbuggyMatches.push(\"!=\", pseudos);\n          });\n        }\n        rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n        rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n        hasCompare = rnative.test(docElem.compareDocumentPosition);\n        contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {\n          var adown = a.nodeType === 9 ? a.documentElement : a,\n              bup = b && b.parentNode;\n          return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n        } : function(a, b) {\n          if (b) {\n            while ((b = b.parentNode)) {\n              if (b === a) {\n                return true;\n              }\n            }\n          }\n          return false;\n        };\n        sortOrder = hasCompare ? function(a, b) {\n          if (a === b) {\n            hasDuplicate = true;\n            return 0;\n          }\n          var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n          if (compare) {\n            return compare;\n          }\n          compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;\n          if (compare & 1 || (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {\n            if (a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n              return -1;\n            }\n            if (b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n              return 1;\n            }\n            return sortInput ? (indexOf.call(sortInput, a) - indexOf.call(sortInput, b)) : 0;\n          }\n          return compare & 4 ? -1 : 1;\n        } : function(a, b) {\n          if (a === b) {\n            hasDuplicate = true;\n            return 0;\n          }\n          var cur,\n              i = 0,\n              aup = a.parentNode,\n              bup = b.parentNode,\n              ap = [a],\n              bp = [b];\n          if (!aup || !bup) {\n            return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : sortInput ? (indexOf.call(sortInput, a) - indexOf.call(sortInput, b)) : 0;\n          } else if (aup === bup) {\n            return siblingCheck(a, b);\n          }\n          cur = a;\n          while ((cur = cur.parentNode)) {\n            ap.unshift(cur);\n          }\n          cur = b;\n          while ((cur = cur.parentNode)) {\n            bp.unshift(cur);\n          }\n          while (ap[i] === bp[i]) {\n            i++;\n          }\n          return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n        };\n        return doc;\n      };\n      Sizzle.matches = function(expr, elements) {\n        return Sizzle(expr, null, null, elements);\n      };\n      Sizzle.matchesSelector = function(elem, expr) {\n        if ((elem.ownerDocument || elem) !== document) {\n          setDocument(elem);\n        }\n        expr = expr.replace(rattributeQuotes, \"='$1']\");\n        if (support.matchesSelector && documentIsHTML && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n          try {\n            var ret = matches.call(elem, expr);\n            if (ret || support.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {\n              return ret;\n            }\n          } catch (e) {}\n        }\n        return Sizzle(expr, document, null, [elem]).length > 0;\n      };\n      Sizzle.contains = function(context, elem) {\n        if ((context.ownerDocument || context) !== document) {\n          setDocument(context);\n        }\n        return contains(context, elem);\n      };\n      Sizzle.attr = function(elem, name) {\n        if ((elem.ownerDocument || elem) !== document) {\n          setDocument(elem);\n        }\n        var fn = Expr.attrHandle[name.toLowerCase()],\n            val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n        return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n      };\n      Sizzle.error = function(msg) {\n        throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n      };\n      Sizzle.uniqueSort = function(results) {\n        var elem,\n            duplicates = [],\n            j = 0,\n            i = 0;\n        hasDuplicate = !support.detectDuplicates;\n        sortInput = !support.sortStable && results.slice(0);\n        results.sort(sortOrder);\n        if (hasDuplicate) {\n          while ((elem = results[i++])) {\n            if (elem === results[i]) {\n              j = duplicates.push(i);\n            }\n          }\n          while (j--) {\n            results.splice(duplicates[j], 1);\n          }\n        }\n        sortInput = null;\n        return results;\n      };\n      getText = Sizzle.getText = function(elem) {\n        var node,\n            ret = \"\",\n            i = 0,\n            nodeType = elem.nodeType;\n        if (!nodeType) {\n          while ((node = elem[i++])) {\n            ret += getText(node);\n          }\n        } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n          if (typeof elem.textContent === \"string\") {\n            return elem.textContent;\n          } else {\n            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n              ret += getText(elem);\n            }\n          }\n        } else if (nodeType === 3 || nodeType === 4) {\n          return elem.nodeValue;\n        }\n        return ret;\n      };\n      Expr = Sizzle.selectors = {\n        cacheLength: 50,\n        createPseudo: markFunction,\n        match: matchExpr,\n        attrHandle: {},\n        find: {},\n        relative: {\n          \">\": {\n            dir: \"parentNode\",\n            first: true\n          },\n          \" \": {dir: \"parentNode\"},\n          \"+\": {\n            dir: \"previousSibling\",\n            first: true\n          },\n          \"~\": {dir: \"previousSibling\"}\n        },\n        preFilter: {\n          \"ATTR\": function(match) {\n            match[1] = match[1].replace(runescape, funescape);\n            match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n            if (match[2] === \"~=\") {\n              match[3] = \" \" + match[3] + \" \";\n            }\n            return match.slice(0, 4);\n          },\n          \"CHILD\": function(match) {\n            match[1] = match[1].toLowerCase();\n            if (match[1].slice(0, 3) === \"nth\") {\n              if (!match[3]) {\n                Sizzle.error(match[0]);\n              }\n              match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n              match[5] = +((match[7] + match[8]) || match[3] === \"odd\");\n            } else if (match[3]) {\n              Sizzle.error(match[0]);\n            }\n            return match;\n          },\n          \"PSEUDO\": function(match) {\n            var excess,\n                unquoted = !match[6] && match[2];\n            if (matchExpr[\"CHILD\"].test(match[0])) {\n              return null;\n            }\n            if (match[3]) {\n              match[2] = match[4] || match[5] || \"\";\n            } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n              match[0] = match[0].slice(0, excess);\n              match[2] = unquoted.slice(0, excess);\n            }\n            return match.slice(0, 3);\n          }\n        },\n        filter: {\n          \"TAG\": function(nodeNameSelector) {\n            var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n            return nodeNameSelector === \"*\" ? function() {\n              return true;\n            } : function(elem) {\n              return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n            };\n          },\n          \"CLASS\": function(className) {\n            var pattern = classCache[className + \" \"];\n            return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function(elem) {\n              return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\") || \"\");\n            });\n          },\n          \"ATTR\": function(name, operator, check) {\n            return function(elem) {\n              var result = Sizzle.attr(elem, name);\n              if (result == null) {\n                return operator === \"!=\";\n              }\n              if (!operator) {\n                return true;\n              }\n              result += \"\";\n              return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n            };\n          },\n          \"CHILD\": function(type, what, argument, first, last) {\n            var simple = type.slice(0, 3) !== \"nth\",\n                forward = type.slice(-4) !== \"last\",\n                ofType = what === \"of-type\";\n            return first === 1 && last === 0 ? function(elem) {\n              return !!elem.parentNode;\n            } : function(elem, context, xml) {\n              var cache,\n                  outerCache,\n                  node,\n                  diff,\n                  nodeIndex,\n                  start,\n                  dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                  parent = elem.parentNode,\n                  name = ofType && elem.nodeName.toLowerCase(),\n                  useCache = !xml && !ofType;\n              if (parent) {\n                if (simple) {\n                  while (dir) {\n                    node = elem;\n                    while ((node = node[dir])) {\n                      if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                        return false;\n                      }\n                    }\n                    start = dir = type === \"only\" && !start && \"nextSibling\";\n                  }\n                  return true;\n                }\n                start = [forward ? parent.firstChild : parent.lastChild];\n                if (forward && useCache) {\n                  outerCache = parent[expando] || (parent[expando] = {});\n                  cache = outerCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = cache[0] === dirruns && cache[2];\n                  node = nodeIndex && parent.childNodes[nodeIndex];\n                  while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {\n                    if (node.nodeType === 1 && ++diff && node === elem) {\n                      outerCache[type] = [dirruns, nodeIndex, diff];\n                      break;\n                    }\n                  }\n                } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) {\n                  diff = cache[1];\n                } else {\n                  while ((node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop())) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      if (useCache) {\n                        (node[expando] || (node[expando] = {}))[type] = [dirruns, diff];\n                      }\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n                diff -= last;\n                return diff === first || (diff % first === 0 && diff / first >= 0);\n              }\n            };\n          },\n          \"PSEUDO\": function(pseudo, argument) {\n            var args,\n                fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo);\n            if (fn[expando]) {\n              return fn(argument);\n            }\n            if (fn.length > 1) {\n              args = [pseudo, pseudo, \"\", argument];\n              return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {\n                var idx,\n                    matched = fn(seed, argument),\n                    i = matched.length;\n                while (i--) {\n                  idx = indexOf.call(seed, matched[i]);\n                  seed[idx] = !(matches[idx] = matched[i]);\n                }\n              }) : function(elem) {\n                return fn(elem, 0, args);\n              };\n            }\n            return fn;\n          }\n        },\n        pseudos: {\n          \"not\": markFunction(function(selector) {\n            var input = [],\n                results = [],\n                matcher = compile(selector.replace(rtrim, \"$1\"));\n            return matcher[expando] ? markFunction(function(seed, matches, context, xml) {\n              var elem,\n                  unmatched = matcher(seed, null, xml, []),\n                  i = seed.length;\n              while (i--) {\n                if ((elem = unmatched[i])) {\n                  seed[i] = !(matches[i] = elem);\n                }\n              }\n            }) : function(elem, context, xml) {\n              input[0] = elem;\n              matcher(input, null, xml, results);\n              return !results.pop();\n            };\n          }),\n          \"has\": markFunction(function(selector) {\n            return function(elem) {\n              return Sizzle(selector, elem).length > 0;\n            };\n          }),\n          \"contains\": markFunction(function(text) {\n            return function(elem) {\n              return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n            };\n          }),\n          \"lang\": markFunction(function(lang) {\n            if (!ridentifier.test(lang || \"\")) {\n              Sizzle.error(\"unsupported lang: \" + lang);\n            }\n            lang = lang.replace(runescape, funescape).toLowerCase();\n            return function(elem) {\n              var elemLang;\n              do {\n                if ((elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\"))) {\n                  elemLang = elemLang.toLowerCase();\n                  return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n                }\n              } while ((elem = elem.parentNode) && elem.nodeType === 1);\n              return false;\n            };\n          }),\n          \"target\": function(elem) {\n            var hash = window.location && window.location.hash;\n            return hash && hash.slice(1) === elem.id;\n          },\n          \"root\": function(elem) {\n            return elem === docElem;\n          },\n          \"focus\": function(elem) {\n            return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n          },\n          \"enabled\": function(elem) {\n            return elem.disabled === false;\n          },\n          \"disabled\": function(elem) {\n            return elem.disabled === true;\n          },\n          \"checked\": function(elem) {\n            var nodeName = elem.nodeName.toLowerCase();\n            return (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n          },\n          \"selected\": function(elem) {\n            if (elem.parentNode) {\n              elem.parentNode.selectedIndex;\n            }\n            return elem.selected === true;\n          },\n          \"empty\": function(elem) {\n            for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n              if (elem.nodeType < 6) {\n                return false;\n              }\n            }\n            return true;\n          },\n          \"parent\": function(elem) {\n            return !Expr.pseudos[\"empty\"](elem);\n          },\n          \"header\": function(elem) {\n            return rheader.test(elem.nodeName);\n          },\n          \"input\": function(elem) {\n            return rinputs.test(elem.nodeName);\n          },\n          \"button\": function(elem) {\n            var name = elem.nodeName.toLowerCase();\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\n          },\n          \"text\": function(elem) {\n            var attr;\n            return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ((attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n          },\n          \"first\": createPositionalPseudo(function() {\n            return [0];\n          }),\n          \"last\": createPositionalPseudo(function(matchIndexes, length) {\n            return [length - 1];\n          }),\n          \"eq\": createPositionalPseudo(function(matchIndexes, length, argument) {\n            return [argument < 0 ? argument + length : argument];\n          }),\n          \"even\": createPositionalPseudo(function(matchIndexes, length) {\n            var i = 0;\n            for (; i < length; i += 2) {\n              matchIndexes.push(i);\n            }\n            return matchIndexes;\n          }),\n          \"odd\": createPositionalPseudo(function(matchIndexes, length) {\n            var i = 1;\n            for (; i < length; i += 2) {\n              matchIndexes.push(i);\n            }\n            return matchIndexes;\n          }),\n          \"lt\": createPositionalPseudo(function(matchIndexes, length, argument) {\n            var i = argument < 0 ? argument + length : argument;\n            for (; --i >= 0; ) {\n              matchIndexes.push(i);\n            }\n            return matchIndexes;\n          }),\n          \"gt\": createPositionalPseudo(function(matchIndexes, length, argument) {\n            var i = argument < 0 ? argument + length : argument;\n            for (; ++i < length; ) {\n              matchIndexes.push(i);\n            }\n            return matchIndexes;\n          })\n        }\n      };\n      Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n      for (i in {\n        radio: true,\n        checkbox: true,\n        file: true,\n        password: true,\n        image: true\n      }) {\n        Expr.pseudos[i] = createInputPseudo(i);\n      }\n      for (i in {\n        submit: true,\n        reset: true\n      }) {\n        Expr.pseudos[i] = createButtonPseudo(i);\n      }\n      function setFilters() {}\n      setFilters.prototype = Expr.filters = Expr.pseudos;\n      Expr.setFilters = new setFilters();\n      tokenize = Sizzle.tokenize = function(selector, parseOnly) {\n        var matched,\n            match,\n            tokens,\n            type,\n            soFar,\n            groups,\n            preFilters,\n            cached = tokenCache[selector + \" \"];\n        if (cached) {\n          return parseOnly ? 0 : cached.slice(0);\n        }\n        soFar = selector;\n        groups = [];\n        preFilters = Expr.preFilter;\n        while (soFar) {\n          if (!matched || (match = rcomma.exec(soFar))) {\n            if (match) {\n              soFar = soFar.slice(match[0].length) || soFar;\n            }\n            groups.push((tokens = []));\n          }\n          matched = false;\n          if ((match = rcombinators.exec(soFar))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: match[0].replace(rtrim, \" \")\n            });\n            soFar = soFar.slice(matched.length);\n          }\n          for (type in Expr.filter) {\n            if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n              matched = match.shift();\n              tokens.push({\n                value: matched,\n                type: type,\n                matches: match\n              });\n              soFar = soFar.slice(matched.length);\n            }\n          }\n          if (!matched) {\n            break;\n          }\n        }\n        return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);\n      };\n      function toSelector(tokens) {\n        var i = 0,\n            len = tokens.length,\n            selector = \"\";\n        for (; i < len; i++) {\n          selector += tokens[i].value;\n        }\n        return selector;\n      }\n      function addCombinator(matcher, combinator, base) {\n        var dir = combinator.dir,\n            checkNonElements = base && dir === \"parentNode\",\n            doneName = done++;\n        return combinator.first ? function(elem, context, xml) {\n          while ((elem = elem[dir])) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              return matcher(elem, context, xml);\n            }\n          }\n        } : function(elem, context, xml) {\n          var oldCache,\n              outerCache,\n              newCache = [dirruns, doneName];\n          if (xml) {\n            while ((elem = elem[dir])) {\n              if (elem.nodeType === 1 || checkNonElements) {\n                if (matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          } else {\n            while ((elem = elem[dir])) {\n              if (elem.nodeType === 1 || checkNonElements) {\n                outerCache = elem[expando] || (elem[expando] = {});\n                if ((oldCache = outerCache[dir]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                  return (newCache[2] = oldCache[2]);\n                } else {\n                  outerCache[dir] = newCache;\n                  if ((newCache[2] = matcher(elem, context, xml))) {\n                    return true;\n                  }\n                }\n              }\n            }\n          }\n        };\n      }\n      function elementMatcher(matchers) {\n        return matchers.length > 1 ? function(elem, context, xml) {\n          var i = matchers.length;\n          while (i--) {\n            if (!matchers[i](elem, context, xml)) {\n              return false;\n            }\n          }\n          return true;\n        } : matchers[0];\n      }\n      function multipleContexts(selector, contexts, results) {\n        var i = 0,\n            len = contexts.length;\n        for (; i < len; i++) {\n          Sizzle(selector, contexts[i], results);\n        }\n        return results;\n      }\n      function condense(unmatched, map, filter, context, xml) {\n        var elem,\n            newUnmatched = [],\n            i = 0,\n            len = unmatched.length,\n            mapped = map != null;\n        for (; i < len; i++) {\n          if ((elem = unmatched[i])) {\n            if (!filter || filter(elem, context, xml)) {\n              newUnmatched.push(elem);\n              if (mapped) {\n                map.push(i);\n              }\n            }\n          }\n        }\n        return newUnmatched;\n      }\n      function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n        if (postFilter && !postFilter[expando]) {\n          postFilter = setMatcher(postFilter);\n        }\n        if (postFinder && !postFinder[expando]) {\n          postFinder = setMatcher(postFinder, postSelector);\n        }\n        return markFunction(function(seed, results, context, xml) {\n          var temp,\n              i,\n              elem,\n              preMap = [],\n              postMap = [],\n              preexisting = results.length,\n              elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n              matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n              matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;\n          if (matcher) {\n            matcher(matcherIn, matcherOut, context, xml);\n          }\n          if (postFilter) {\n            temp = condense(matcherOut, postMap);\n            postFilter(temp, [], context, xml);\n            i = temp.length;\n            while (i--) {\n              if ((elem = temp[i])) {\n                matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n              }\n            }\n          }\n          if (seed) {\n            if (postFinder || preFilter) {\n              if (postFinder) {\n                temp = [];\n                i = matcherOut.length;\n                while (i--) {\n                  if ((elem = matcherOut[i])) {\n                    temp.push((matcherIn[i] = elem));\n                  }\n                }\n                postFinder(null, (matcherOut = []), temp, xml);\n              }\n              i = matcherOut.length;\n              while (i--) {\n                if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1) {\n                  seed[temp] = !(results[temp] = elem);\n                }\n              }\n            }\n          } else {\n            matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n            if (postFinder) {\n              postFinder(null, results, matcherOut, xml);\n            } else {\n              push.apply(results, matcherOut);\n            }\n          }\n        });\n      }\n      function matcherFromTokens(tokens) {\n        var checkContext,\n            matcher,\n            j,\n            len = tokens.length,\n            leadingRelative = Expr.relative[tokens[0].type],\n            implicitRelative = leadingRelative || Expr.relative[\" \"],\n            i = leadingRelative ? 1 : 0,\n            matchContext = addCombinator(function(elem) {\n              return elem === checkContext;\n            }, implicitRelative, true),\n            matchAnyContext = addCombinator(function(elem) {\n              return indexOf.call(checkContext, elem) > -1;\n            }, implicitRelative, true),\n            matchers = [function(elem, context, xml) {\n              return (!leadingRelative && (xml || context !== outermostContext)) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n            }];\n        for (; i < len; i++) {\n          if ((matcher = Expr.relative[tokens[i].type])) {\n            matchers = [addCombinator(elementMatcher(matchers), matcher)];\n          } else {\n            matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\n            if (matcher[expando]) {\n              j = ++i;\n              for (; j < len; j++) {\n                if (Expr.relative[tokens[j].type]) {\n                  break;\n                }\n              }\n              return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1).concat({value: tokens[i - 2].type === \" \" ? \"*\" : \"\"})).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens((tokens = tokens.slice(j))), j < len && toSelector(tokens));\n            }\n            matchers.push(matcher);\n          }\n        }\n        return elementMatcher(matchers);\n      }\n      function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n        var bySet = setMatchers.length > 0,\n            byElement = elementMatchers.length > 0,\n            superMatcher = function(seed, context, xml, results, outermost) {\n              var elem,\n                  j,\n                  matcher,\n                  matchedCount = 0,\n                  i = \"0\",\n                  unmatched = seed && [],\n                  setMatched = [],\n                  contextBackup = outermostContext,\n                  elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n                  dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n                  len = elems.length;\n              if (outermost) {\n                outermostContext = context !== document && context;\n              }\n              for (; i !== len && (elem = elems[i]) != null; i++) {\n                if (byElement && elem) {\n                  j = 0;\n                  while ((matcher = elementMatchers[j++])) {\n                    if (matcher(elem, context, xml)) {\n                      results.push(elem);\n                      break;\n                    }\n                  }\n                  if (outermost) {\n                    dirruns = dirrunsUnique;\n                  }\n                }\n                if (bySet) {\n                  if ((elem = !matcher && elem)) {\n                    matchedCount--;\n                  }\n                  if (seed) {\n                    unmatched.push(elem);\n                  }\n                }\n              }\n              matchedCount += i;\n              if (bySet && i !== matchedCount) {\n                j = 0;\n                while ((matcher = setMatchers[j++])) {\n                  matcher(unmatched, setMatched, context, xml);\n                }\n                if (seed) {\n                  if (matchedCount > 0) {\n                    while (i--) {\n                      if (!(unmatched[i] || setMatched[i])) {\n                        setMatched[i] = pop.call(results);\n                      }\n                    }\n                  }\n                  setMatched = condense(setMatched);\n                }\n                push.apply(results, setMatched);\n                if (outermost && !seed && setMatched.length > 0 && (matchedCount + setMatchers.length) > 1) {\n                  Sizzle.uniqueSort(results);\n                }\n              }\n              if (outermost) {\n                dirruns = dirrunsUnique;\n                outermostContext = contextBackup;\n              }\n              return unmatched;\n            };\n        return bySet ? markFunction(superMatcher) : superMatcher;\n      }\n      compile = Sizzle.compile = function(selector, match) {\n        var i,\n            setMatchers = [],\n            elementMatchers = [],\n            cached = compilerCache[selector + \" \"];\n        if (!cached) {\n          if (!match) {\n            match = tokenize(selector);\n          }\n          i = match.length;\n          while (i--) {\n            cached = matcherFromTokens(match[i]);\n            if (cached[expando]) {\n              setMatchers.push(cached);\n            } else {\n              elementMatchers.push(cached);\n            }\n          }\n          cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n          cached.selector = selector;\n        }\n        return cached;\n      };\n      select = Sizzle.select = function(selector, context, results, seed) {\n        var i,\n            tokens,\n            token,\n            type,\n            find,\n            compiled = typeof selector === \"function\" && selector,\n            match = !seed && tokenize((selector = compiled.selector || selector));\n        results = results || [];\n        if (match.length === 1) {\n          tokens = match[0] = match[0].slice(0);\n          if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && support.getById && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n            context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n            if (!context) {\n              return results;\n            } else if (compiled) {\n              context = context.parentNode;\n            }\n            selector = selector.slice(tokens.shift().value.length);\n          }\n          i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n          while (i--) {\n            token = tokens[i];\n            if (Expr.relative[(type = token.type)]) {\n              break;\n            }\n            if ((find = Expr.find[type])) {\n              if ((seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context))) {\n                tokens.splice(i, 1);\n                selector = seed.length && toSelector(tokens);\n                if (!selector) {\n                  push.apply(results, seed);\n                  return results;\n                }\n                break;\n              }\n            }\n          }\n        }\n        (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, rsibling.test(selector) && testContext(context.parentNode) || context);\n        return results;\n      };\n      support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando;\n      support.detectDuplicates = !!hasDuplicate;\n      setDocument();\n      support.sortDetached = assert(function(div1) {\n        return div1.compareDocumentPosition(document.createElement(\"div\")) & 1;\n      });\n      if (!assert(function(div) {\n        div.innerHTML = \"<a href='#'></a>\";\n        return div.firstChild.getAttribute(\"href\") === \"#\";\n      })) {\n        addHandle(\"type|href|height|width\", function(elem, name, isXML) {\n          if (!isXML) {\n            return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n          }\n        });\n      }\n      if (!support.attributes || !assert(function(div) {\n        div.innerHTML = \"<input/>\";\n        div.firstChild.setAttribute(\"value\", \"\");\n        return div.firstChild.getAttribute(\"value\") === \"\";\n      })) {\n        addHandle(\"value\", function(elem, name, isXML) {\n          if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n            return elem.defaultValue;\n          }\n        });\n      }\n      if (!assert(function(div) {\n        return div.getAttribute(\"disabled\") == null;\n      })) {\n        addHandle(booleans, function(elem, name, isXML) {\n          var val;\n          if (!isXML) {\n            return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n          }\n        });\n      }\n      return Sizzle;\n    })(window);\n    jQuery.find = Sizzle;\n    jQuery.expr = Sizzle.selectors;\n    jQuery.expr[\":\"] = jQuery.expr.pseudos;\n    jQuery.unique = Sizzle.uniqueSort;\n    jQuery.text = Sizzle.getText;\n    jQuery.isXMLDoc = Sizzle.isXML;\n    jQuery.contains = Sizzle.contains;\n    var rneedsContext = jQuery.expr.match.needsContext;\n    var rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n    var risSimple = /^.[^:#\\[\\.,]*$/;\n    function winnow(elements, qualifier, not) {\n      if (jQuery.isFunction(qualifier)) {\n        return jQuery.grep(elements, function(elem, i) {\n          return !!qualifier.call(elem, i, elem) !== not;\n        });\n      }\n      if (qualifier.nodeType) {\n        return jQuery.grep(elements, function(elem) {\n          return (elem === qualifier) !== not;\n        });\n      }\n      if (typeof qualifier === \"string\") {\n        if (risSimple.test(qualifier)) {\n          return jQuery.filter(qualifier, elements, not);\n        }\n        qualifier = jQuery.filter(qualifier, elements);\n      }\n      return jQuery.grep(elements, function(elem) {\n        return (indexOf.call(qualifier, elem) >= 0) !== not;\n      });\n    }\n    jQuery.filter = function(expr, elems, not) {\n      var elem = elems[0];\n      if (not) {\n        expr = \":not(\" + expr + \")\";\n      }\n      return elems.length === 1 && elem.nodeType === 1 ? jQuery.find.matchesSelector(elem, expr) ? [elem] : [] : jQuery.find.matches(expr, jQuery.grep(elems, function(elem) {\n        return elem.nodeType === 1;\n      }));\n    };\n    jQuery.fn.extend({\n      find: function(selector) {\n        var i,\n            len = this.length,\n            ret = [],\n            self = this;\n        if (typeof selector !== \"string\") {\n          return this.pushStack(jQuery(selector).filter(function() {\n            for (i = 0; i < len; i++) {\n              if (jQuery.contains(self[i], this)) {\n                return true;\n              }\n            }\n          }));\n        }\n        for (i = 0; i < len; i++) {\n          jQuery.find(selector, self[i], ret);\n        }\n        ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);\n        ret.selector = this.selector ? this.selector + \" \" + selector : selector;\n        return ret;\n      },\n      filter: function(selector) {\n        return this.pushStack(winnow(this, selector || [], false));\n      },\n      not: function(selector) {\n        return this.pushStack(winnow(this, selector || [], true));\n      },\n      is: function(selector) {\n        return !!winnow(this, typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n      }\n    });\n    var rootjQuery,\n        rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n        init = jQuery.fn.init = function(selector, context) {\n          var match,\n              elem;\n          if (!selector) {\n            return this;\n          }\n          if (typeof selector === \"string\") {\n            if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n              match = [null, selector, null];\n            } else {\n              match = rquickExpr.exec(selector);\n            }\n            if (match && (match[1] || !context)) {\n              if (match[1]) {\n                context = context instanceof jQuery ? context[0] : context;\n                jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n                if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n                  for (match in context) {\n                    if (jQuery.isFunction(this[match])) {\n                      this[match](context[match]);\n                    } else {\n                      this.attr(match, context[match]);\n                    }\n                  }\n                }\n                return this;\n              } else {\n                elem = document.getElementById(match[2]);\n                if (elem && elem.parentNode) {\n                  this.length = 1;\n                  this[0] = elem;\n                }\n                this.context = document;\n                this.selector = selector;\n                return this;\n              }\n            } else if (!context || context.jquery) {\n              return (context || rootjQuery).find(selector);\n            } else {\n              return this.constructor(context).find(selector);\n            }\n          } else if (selector.nodeType) {\n            this.context = this[0] = selector;\n            this.length = 1;\n            return this;\n          } else if (jQuery.isFunction(selector)) {\n            return typeof rootjQuery.ready !== \"undefined\" ? rootjQuery.ready(selector) : selector(jQuery);\n          }\n          if (selector.selector !== undefined) {\n            this.selector = selector.selector;\n            this.context = selector.context;\n          }\n          return jQuery.makeArray(selector, this);\n        };\n    init.prototype = jQuery.fn;\n    rootjQuery = jQuery(document);\n    var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n        guaranteedUnique = {\n          children: true,\n          contents: true,\n          next: true,\n          prev: true\n        };\n    jQuery.extend({\n      dir: function(elem, dir, until) {\n        var matched = [],\n            truncate = until !== undefined;\n        while ((elem = elem[dir]) && elem.nodeType !== 9) {\n          if (elem.nodeType === 1) {\n            if (truncate && jQuery(elem).is(until)) {\n              break;\n            }\n            matched.push(elem);\n          }\n        }\n        return matched;\n      },\n      sibling: function(n, elem) {\n        var matched = [];\n        for (; n; n = n.nextSibling) {\n          if (n.nodeType === 1 && n !== elem) {\n            matched.push(n);\n          }\n        }\n        return matched;\n      }\n    });\n    jQuery.fn.extend({\n      has: function(target) {\n        var targets = jQuery(target, this),\n            l = targets.length;\n        return this.filter(function() {\n          var i = 0;\n          for (; i < l; i++) {\n            if (jQuery.contains(this, targets[i])) {\n              return true;\n            }\n          }\n        });\n      },\n      closest: function(selectors, context) {\n        var cur,\n            i = 0,\n            l = this.length,\n            matched = [],\n            pos = rneedsContext.test(selectors) || typeof selectors !== \"string\" ? jQuery(selectors, context || this.context) : 0;\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            if (cur.nodeType < 11 && (pos ? pos.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n        return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched);\n      },\n      index: function(elem) {\n        if (!elem) {\n          return (this[0] && this[0].parentNode) ? this.first().prevAll().length : -1;\n        }\n        if (typeof elem === \"string\") {\n          return indexOf.call(jQuery(elem), this[0]);\n        }\n        return indexOf.call(this, elem.jquery ? elem[0] : elem);\n      },\n      add: function(selector, context) {\n        return this.pushStack(jQuery.unique(jQuery.merge(this.get(), jQuery(selector, context))));\n      },\n      addBack: function(selector) {\n        return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n      }\n    });\n    function sibling(cur, dir) {\n      while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n      return cur;\n    }\n    jQuery.each({\n      parent: function(elem) {\n        var parent = elem.parentNode;\n        return parent && parent.nodeType !== 11 ? parent : null;\n      },\n      parents: function(elem) {\n        return jQuery.dir(elem, \"parentNode\");\n      },\n      parentsUntil: function(elem, i, until) {\n        return jQuery.dir(elem, \"parentNode\", until);\n      },\n      next: function(elem) {\n        return sibling(elem, \"nextSibling\");\n      },\n      prev: function(elem) {\n        return sibling(elem, \"previousSibling\");\n      },\n      nextAll: function(elem) {\n        return jQuery.dir(elem, \"nextSibling\");\n      },\n      prevAll: function(elem) {\n        return jQuery.dir(elem, \"previousSibling\");\n      },\n      nextUntil: function(elem, i, until) {\n        return jQuery.dir(elem, \"nextSibling\", until);\n      },\n      prevUntil: function(elem, i, until) {\n        return jQuery.dir(elem, \"previousSibling\", until);\n      },\n      siblings: function(elem) {\n        return jQuery.sibling((elem.parentNode || {}).firstChild, elem);\n      },\n      children: function(elem) {\n        return jQuery.sibling(elem.firstChild);\n      },\n      contents: function(elem) {\n        return elem.contentDocument || jQuery.merge([], elem.childNodes);\n      }\n    }, function(name, fn) {\n      jQuery.fn[name] = function(until, selector) {\n        var matched = jQuery.map(this, fn, until);\n        if (name.slice(-5) !== \"Until\") {\n          selector = until;\n        }\n        if (selector && typeof selector === \"string\") {\n          matched = jQuery.filter(selector, matched);\n        }\n        if (this.length > 1) {\n          if (!guaranteedUnique[name]) {\n            jQuery.unique(matched);\n          }\n          if (rparentsprev.test(name)) {\n            matched.reverse();\n          }\n        }\n        return this.pushStack(matched);\n      };\n    });\n    var rnotwhite = (/\\S+/g);\n    var optionsCache = {};\n    function createOptions(options) {\n      var object = optionsCache[options] = {};\n      jQuery.each(options.match(rnotwhite) || [], function(_, flag) {\n        object[flag] = true;\n      });\n      return object;\n    }\n    jQuery.Callbacks = function(options) {\n      options = typeof options === \"string\" ? (optionsCache[options] || createOptions(options)) : jQuery.extend({}, options);\n      var memory,\n          fired,\n          firing,\n          firingStart,\n          firingLength,\n          firingIndex,\n          list = [],\n          stack = !options.once && [],\n          fire = function(data) {\n            memory = options.memory && data;\n            fired = true;\n            firingIndex = firingStart || 0;\n            firingStart = 0;\n            firingLength = list.length;\n            firing = true;\n            for (; list && firingIndex < firingLength; firingIndex++) {\n              if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\n                memory = false;\n                break;\n              }\n            }\n            firing = false;\n            if (list) {\n              if (stack) {\n                if (stack.length) {\n                  fire(stack.shift());\n                }\n              } else if (memory) {\n                list = [];\n              } else {\n                self.disable();\n              }\n            }\n          },\n          self = {\n            add: function() {\n              if (list) {\n                var start = list.length;\n                (function add(args) {\n                  jQuery.each(args, function(_, arg) {\n                    var type = jQuery.type(arg);\n                    if (type === \"function\") {\n                      if (!options.unique || !self.has(arg)) {\n                        list.push(arg);\n                      }\n                    } else if (arg && arg.length && type !== \"string\") {\n                      add(arg);\n                    }\n                  });\n                })(arguments);\n                if (firing) {\n                  firingLength = list.length;\n                } else if (memory) {\n                  firingStart = start;\n                  fire(memory);\n                }\n              }\n              return this;\n            },\n            remove: function() {\n              if (list) {\n                jQuery.each(arguments, function(_, arg) {\n                  var index;\n                  while ((index = jQuery.inArray(arg, list, index)) > -1) {\n                    list.splice(index, 1);\n                    if (firing) {\n                      if (index <= firingLength) {\n                        firingLength--;\n                      }\n                      if (index <= firingIndex) {\n                        firingIndex--;\n                      }\n                    }\n                  }\n                });\n              }\n              return this;\n            },\n            has: function(fn) {\n              return fn ? jQuery.inArray(fn, list) > -1 : !!(list && list.length);\n            },\n            empty: function() {\n              list = [];\n              firingLength = 0;\n              return this;\n            },\n            disable: function() {\n              list = stack = memory = undefined;\n              return this;\n            },\n            disabled: function() {\n              return !list;\n            },\n            lock: function() {\n              stack = undefined;\n              if (!memory) {\n                self.disable();\n              }\n              return this;\n            },\n            locked: function() {\n              return !stack;\n            },\n            fireWith: function(context, args) {\n              if (list && (!fired || stack)) {\n                args = args || [];\n                args = [context, args.slice ? args.slice() : args];\n                if (firing) {\n                  stack.push(args);\n                } else {\n                  fire(args);\n                }\n              }\n              return this;\n            },\n            fire: function() {\n              self.fireWith(this, arguments);\n              return this;\n            },\n            fired: function() {\n              return !!fired;\n            }\n          };\n      return self;\n    };\n    jQuery.extend({\n      Deferred: function(func) {\n        var tuples = [[\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\"], [\"notify\", \"progress\", jQuery.Callbacks(\"memory\")]],\n            state = \"pending\",\n            promise = {\n              state: function() {\n                return state;\n              },\n              always: function() {\n                deferred.done(arguments).fail(arguments);\n                return this;\n              },\n              then: function() {\n                var fns = arguments;\n                return jQuery.Deferred(function(newDefer) {\n                  jQuery.each(tuples, function(i, tuple) {\n                    var fn = jQuery.isFunction(fns[i]) && fns[i];\n                    deferred[tuple[1]](function() {\n                      var returned = fn && fn.apply(this, arguments);\n                      if (returned && jQuery.isFunction(returned.promise)) {\n                        returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify);\n                      } else {\n                        newDefer[tuple[0] + \"With\"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\n                      }\n                    });\n                  });\n                  fns = null;\n                }).promise();\n              },\n              promise: function(obj) {\n                return obj != null ? jQuery.extend(obj, promise) : promise;\n              }\n            },\n            deferred = {};\n        promise.pipe = promise.then;\n        jQuery.each(tuples, function(i, tuple) {\n          var list = tuple[2],\n              stateString = tuple[3];\n          promise[tuple[1]] = list.add;\n          if (stateString) {\n            list.add(function() {\n              state = stateString;\n            }, tuples[i ^ 1][2].disable, tuples[2][2].lock);\n          }\n          deferred[tuple[0]] = function() {\n            deferred[tuple[0] + \"With\"](this === deferred ? promise : this, arguments);\n            return this;\n          };\n          deferred[tuple[0] + \"With\"] = list.fireWith;\n        });\n        promise.promise(deferred);\n        if (func) {\n          func.call(deferred, deferred);\n        }\n        return deferred;\n      },\n      when: function(subordinate) {\n        var i = 0,\n            resolveValues = slice.call(arguments),\n            length = resolveValues.length,\n            remaining = length !== 1 || (subordinate && jQuery.isFunction(subordinate.promise)) ? length : 0,\n            deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n            updateFunc = function(i, contexts, values) {\n              return function(value) {\n                contexts[i] = this;\n                values[i] = arguments.length > 1 ? slice.call(arguments) : value;\n                if (values === progressValues) {\n                  deferred.notifyWith(contexts, values);\n                } else if (!(--remaining)) {\n                  deferred.resolveWith(contexts, values);\n                }\n              };\n            },\n            progressValues,\n            progressContexts,\n            resolveContexts;\n        if (length > 1) {\n          progressValues = new Array(length);\n          progressContexts = new Array(length);\n          resolveContexts = new Array(length);\n          for (; i < length; i++) {\n            if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {\n              resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues));\n            } else {\n              --remaining;\n            }\n          }\n        }\n        if (!remaining) {\n          deferred.resolveWith(resolveContexts, resolveValues);\n        }\n        return deferred.promise();\n      }\n    });\n    var readyList;\n    jQuery.fn.ready = function(fn) {\n      jQuery.ready.promise().done(fn);\n      return this;\n    };\n    jQuery.extend({\n      isReady: false,\n      readyWait: 1,\n      holdReady: function(hold) {\n        if (hold) {\n          jQuery.readyWait++;\n        } else {\n          jQuery.ready(true);\n        }\n      },\n      ready: function(wait) {\n        if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n          return;\n        }\n        jQuery.isReady = true;\n        if (wait !== true && --jQuery.readyWait > 0) {\n          return;\n        }\n        readyList.resolveWith(document, [jQuery]);\n        if (jQuery.fn.triggerHandler) {\n          jQuery(document).triggerHandler(\"ready\");\n          jQuery(document).off(\"ready\");\n        }\n      }\n    });\n    function completed() {\n      document.removeEventListener(\"DOMContentLoaded\", completed, false);\n      window.removeEventListener(\"load\", completed, false);\n      jQuery.ready();\n    }\n    jQuery.ready.promise = function(obj) {\n      if (!readyList) {\n        readyList = jQuery.Deferred();\n        if (document.readyState === \"complete\") {\n          setTimeout(jQuery.ready);\n        } else {\n          document.addEventListener(\"DOMContentLoaded\", completed, false);\n          window.addEventListener(\"load\", completed, false);\n        }\n      }\n      return readyList.promise(obj);\n    };\n    jQuery.ready.promise();\n    var access = jQuery.access = function(elems, fn, key, value, chainable, emptyGet, raw) {\n      var i = 0,\n          len = elems.length,\n          bulk = key == null;\n      if (jQuery.type(key) === \"object\") {\n        chainable = true;\n        for (i in key) {\n          jQuery.access(elems, fn, i, key[i], true, emptyGet, raw);\n        }\n      } else if (value !== undefined) {\n        chainable = true;\n        if (!jQuery.isFunction(value)) {\n          raw = true;\n        }\n        if (bulk) {\n          if (raw) {\n            fn.call(elems, value);\n            fn = null;\n          } else {\n            bulk = fn;\n            fn = function(elem, key, value) {\n              return bulk.call(jQuery(elem), value);\n            };\n          }\n        }\n        if (fn) {\n          for (; i < len; i++) {\n            fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n          }\n        }\n      }\n      return chainable ? elems : bulk ? fn.call(elems) : len ? fn(elems[0], key) : emptyGet;\n    };\n    jQuery.acceptData = function(owner) {\n      return owner.nodeType === 1 || owner.nodeType === 9 || !(+owner.nodeType);\n    };\n    function Data() {\n      Object.defineProperty(this.cache = {}, 0, {get: function() {\n          return {};\n        }});\n      this.expando = jQuery.expando + Math.random();\n    }\n    Data.uid = 1;\n    Data.accepts = jQuery.acceptData;\n    Data.prototype = {\n      key: function(owner) {\n        if (!Data.accepts(owner)) {\n          return 0;\n        }\n        var descriptor = {},\n            unlock = owner[this.expando];\n        if (!unlock) {\n          unlock = Data.uid++;\n          try {\n            descriptor[this.expando] = {value: unlock};\n            Object.defineProperties(owner, descriptor);\n          } catch (e) {\n            descriptor[this.expando] = unlock;\n            jQuery.extend(owner, descriptor);\n          }\n        }\n        if (!this.cache[unlock]) {\n          this.cache[unlock] = {};\n        }\n        return unlock;\n      },\n      set: function(owner, data, value) {\n        var prop,\n            unlock = this.key(owner),\n            cache = this.cache[unlock];\n        if (typeof data === \"string\") {\n          cache[data] = value;\n        } else {\n          if (jQuery.isEmptyObject(cache)) {\n            jQuery.extend(this.cache[unlock], data);\n          } else {\n            for (prop in data) {\n              cache[prop] = data[prop];\n            }\n          }\n        }\n        return cache;\n      },\n      get: function(owner, key) {\n        var cache = this.cache[this.key(owner)];\n        return key === undefined ? cache : cache[key];\n      },\n      access: function(owner, key, value) {\n        var stored;\n        if (key === undefined || ((key && typeof key === \"string\") && value === undefined)) {\n          stored = this.get(owner, key);\n          return stored !== undefined ? stored : this.get(owner, jQuery.camelCase(key));\n        }\n        this.set(owner, key, value);\n        return value !== undefined ? value : key;\n      },\n      remove: function(owner, key) {\n        var i,\n            name,\n            camel,\n            unlock = this.key(owner),\n            cache = this.cache[unlock];\n        if (key === undefined) {\n          this.cache[unlock] = {};\n        } else {\n          if (jQuery.isArray(key)) {\n            name = key.concat(key.map(jQuery.camelCase));\n          } else {\n            camel = jQuery.camelCase(key);\n            if (key in cache) {\n              name = [key, camel];\n            } else {\n              name = camel;\n              name = name in cache ? [name] : (name.match(rnotwhite) || []);\n            }\n          }\n          i = name.length;\n          while (i--) {\n            delete cache[name[i]];\n          }\n        }\n      },\n      hasData: function(owner) {\n        return !jQuery.isEmptyObject(this.cache[owner[this.expando]] || {});\n      },\n      discard: function(owner) {\n        if (owner[this.expando]) {\n          delete this.cache[owner[this.expando]];\n        }\n      }\n    };\n    var data_priv = new Data();\n    var data_user = new Data();\n    var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n        rmultiDash = /([A-Z])/g;\n    function dataAttr(elem, key, data) {\n      var name;\n      if (data === undefined && elem.nodeType === 1) {\n        name = \"data-\" + key.replace(rmultiDash, \"-$1\").toLowerCase();\n        data = elem.getAttribute(name);\n        if (typeof data === \"string\") {\n          try {\n            data = data === \"true\" ? true : data === \"false\" ? false : data === \"null\" ? null : +data + \"\" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;\n          } catch (e) {}\n          data_user.set(elem, key, data);\n        } else {\n          data = undefined;\n        }\n      }\n      return data;\n    }\n    jQuery.extend({\n      hasData: function(elem) {\n        return data_user.hasData(elem) || data_priv.hasData(elem);\n      },\n      data: function(elem, name, data) {\n        return data_user.access(elem, name, data);\n      },\n      removeData: function(elem, name) {\n        data_user.remove(elem, name);\n      },\n      _data: function(elem, name, data) {\n        return data_priv.access(elem, name, data);\n      },\n      _removeData: function(elem, name) {\n        data_priv.remove(elem, name);\n      }\n    });\n    jQuery.fn.extend({\n      data: function(key, value) {\n        var i,\n            name,\n            data,\n            elem = this[0],\n            attrs = elem && elem.attributes;\n        if (key === undefined) {\n          if (this.length) {\n            data = data_user.get(elem);\n            if (elem.nodeType === 1 && !data_priv.get(elem, \"hasDataAttrs\")) {\n              i = attrs.length;\n              while (i--) {\n                if (attrs[i]) {\n                  name = attrs[i].name;\n                  if (name.indexOf(\"data-\") === 0) {\n                    name = jQuery.camelCase(name.slice(5));\n                    dataAttr(elem, name, data[name]);\n                  }\n                }\n              }\n              data_priv.set(elem, \"hasDataAttrs\", true);\n            }\n          }\n          return data;\n        }\n        if (typeof key === \"object\") {\n          return this.each(function() {\n            data_user.set(this, key);\n          });\n        }\n        return access(this, function(value) {\n          var data,\n              camelKey = jQuery.camelCase(key);\n          if (elem && value === undefined) {\n            data = data_user.get(elem, key);\n            if (data !== undefined) {\n              return data;\n            }\n            data = data_user.get(elem, camelKey);\n            if (data !== undefined) {\n              return data;\n            }\n            data = dataAttr(elem, camelKey, undefined);\n            if (data !== undefined) {\n              return data;\n            }\n            return;\n          }\n          this.each(function() {\n            var data = data_user.get(this, camelKey);\n            data_user.set(this, camelKey, value);\n            if (key.indexOf(\"-\") !== -1 && data !== undefined) {\n              data_user.set(this, key, value);\n            }\n          });\n        }, null, value, arguments.length > 1, null, true);\n      },\n      removeData: function(key) {\n        return this.each(function() {\n          data_user.remove(this, key);\n        });\n      }\n    });\n    jQuery.extend({\n      queue: function(elem, type, data) {\n        var queue;\n        if (elem) {\n          type = (type || \"fx\") + \"queue\";\n          queue = data_priv.get(elem, type);\n          if (data) {\n            if (!queue || jQuery.isArray(data)) {\n              queue = data_priv.access(elem, type, jQuery.makeArray(data));\n            } else {\n              queue.push(data);\n            }\n          }\n          return queue || [];\n        }\n      },\n      dequeue: function(elem, type) {\n        type = type || \"fx\";\n        var queue = jQuery.queue(elem, type),\n            startLength = queue.length,\n            fn = queue.shift(),\n            hooks = jQuery._queueHooks(elem, type),\n            next = function() {\n              jQuery.dequeue(elem, type);\n            };\n        if (fn === \"inprogress\") {\n          fn = queue.shift();\n          startLength--;\n        }\n        if (fn) {\n          if (type === \"fx\") {\n            queue.unshift(\"inprogress\");\n          }\n          delete hooks.stop;\n          fn.call(elem, next, hooks);\n        }\n        if (!startLength && hooks) {\n          hooks.empty.fire();\n        }\n      },\n      _queueHooks: function(elem, type) {\n        var key = type + \"queueHooks\";\n        return data_priv.get(elem, key) || data_priv.access(elem, key, {empty: jQuery.Callbacks(\"once memory\").add(function() {\n            data_priv.remove(elem, [type + \"queue\", key]);\n          })});\n      }\n    });\n    jQuery.fn.extend({\n      queue: function(type, data) {\n        var setter = 2;\n        if (typeof type !== \"string\") {\n          data = type;\n          type = \"fx\";\n          setter--;\n        }\n        if (arguments.length < setter) {\n          return jQuery.queue(this[0], type);\n        }\n        return data === undefined ? this : this.each(function() {\n          var queue = jQuery.queue(this, type, data);\n          jQuery._queueHooks(this, type);\n          if (type === \"fx\" && queue[0] !== \"inprogress\") {\n            jQuery.dequeue(this, type);\n          }\n        });\n      },\n      dequeue: function(type) {\n        return this.each(function() {\n          jQuery.dequeue(this, type);\n        });\n      },\n      clearQueue: function(type) {\n        return this.queue(type || \"fx\", []);\n      },\n      promise: function(type, obj) {\n        var tmp,\n            count = 1,\n            defer = jQuery.Deferred(),\n            elements = this,\n            i = this.length,\n            resolve = function() {\n              if (!(--count)) {\n                defer.resolveWith(elements, [elements]);\n              }\n            };\n        if (typeof type !== \"string\") {\n          obj = type;\n          type = undefined;\n        }\n        type = type || \"fx\";\n        while (i--) {\n          tmp = data_priv.get(elements[i], type + \"queueHooks\");\n          if (tmp && tmp.empty) {\n            count++;\n            tmp.empty.add(resolve);\n          }\n        }\n        resolve();\n        return defer.promise(obj);\n      }\n    });\n    var pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n    var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n    var isHidden = function(elem, el) {\n      elem = el || elem;\n      return jQuery.css(elem, \"display\") === \"none\" || !jQuery.contains(elem.ownerDocument, elem);\n    };\n    var rcheckableType = (/^(?:checkbox|radio)$/i);\n    (function() {\n      var fragment = document.createDocumentFragment(),\n          div = fragment.appendChild(document.createElement(\"div\")),\n          input = document.createElement(\"input\");\n      input.setAttribute(\"type\", \"radio\");\n      input.setAttribute(\"checked\", \"checked\");\n      input.setAttribute(\"name\", \"t\");\n      div.appendChild(input);\n      support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n      div.innerHTML = \"<textarea>x</textarea>\";\n      support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n    })();\n    var strundefined = typeof undefined;\n    support.focusinBubbles = \"onfocusin\" in window;\n    var rkeyEvent = /^key/,\n        rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n        rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n        rtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n    function returnTrue() {\n      return true;\n    }\n    function returnFalse() {\n      return false;\n    }\n    function safeActiveElement() {\n      try {\n        return document.activeElement;\n      } catch (err) {}\n    }\n    jQuery.event = {\n      global: {},\n      add: function(elem, types, handler, data, selector) {\n        var handleObjIn,\n            eventHandle,\n            tmp,\n            events,\n            t,\n            handleObj,\n            special,\n            handlers,\n            type,\n            namespaces,\n            origType,\n            elemData = data_priv.get(elem);\n        if (!elemData) {\n          return;\n        }\n        if (handler.handler) {\n          handleObjIn = handler;\n          handler = handleObjIn.handler;\n          selector = handleObjIn.selector;\n        }\n        if (!handler.guid) {\n          handler.guid = jQuery.guid++;\n        }\n        if (!(events = elemData.events)) {\n          events = elemData.events = {};\n        }\n        if (!(eventHandle = elemData.handle)) {\n          eventHandle = elemData.handle = function(e) {\n            return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n          };\n        }\n        types = (types || \"\").match(rnotwhite) || [\"\"];\n        t = types.length;\n        while (t--) {\n          tmp = rtypenamespace.exec(types[t]) || [];\n          type = origType = tmp[1];\n          namespaces = (tmp[2] || \"\").split(\".\").sort();\n          if (!type) {\n            continue;\n          }\n          special = jQuery.event.special[type] || {};\n          type = (selector ? special.delegateType : special.bindType) || type;\n          special = jQuery.event.special[type] || {};\n          handleObj = jQuery.extend({\n            type: type,\n            origType: origType,\n            data: data,\n            handler: handler,\n            guid: handler.guid,\n            selector: selector,\n            needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n            namespace: namespaces.join(\".\")\n          }, handleObjIn);\n          if (!(handlers = events[type])) {\n            handlers = events[type] = [];\n            handlers.delegateCount = 0;\n            if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n              if (elem.addEventListener) {\n                elem.addEventListener(type, eventHandle, false);\n              }\n            }\n          }\n          if (special.add) {\n            special.add.call(elem, handleObj);\n            if (!handleObj.handler.guid) {\n              handleObj.handler.guid = handler.guid;\n            }\n          }\n          if (selector) {\n            handlers.splice(handlers.delegateCount++, 0, handleObj);\n          } else {\n            handlers.push(handleObj);\n          }\n          jQuery.event.global[type] = true;\n        }\n      },\n      remove: function(elem, types, handler, selector, mappedTypes) {\n        var j,\n            origCount,\n            tmp,\n            events,\n            t,\n            handleObj,\n            special,\n            handlers,\n            type,\n            namespaces,\n            origType,\n            elemData = data_priv.hasData(elem) && data_priv.get(elem);\n        if (!elemData || !(events = elemData.events)) {\n          return;\n        }\n        types = (types || \"\").match(rnotwhite) || [\"\"];\n        t = types.length;\n        while (t--) {\n          tmp = rtypenamespace.exec(types[t]) || [];\n          type = origType = tmp[1];\n          namespaces = (tmp[2] || \"\").split(\".\").sort();\n          if (!type) {\n            for (type in events) {\n              jQuery.event.remove(elem, type + types[t], handler, selector, true);\n            }\n            continue;\n          }\n          special = jQuery.event.special[type] || {};\n          type = (selector ? special.delegateType : special.bindType) || type;\n          handlers = events[type] || [];\n          tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\");\n          origCount = j = handlers.length;\n          while (j--) {\n            handleObj = handlers[j];\n            if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n              handlers.splice(j, 1);\n              if (handleObj.selector) {\n                handlers.delegateCount--;\n              }\n              if (special.remove) {\n                special.remove.call(elem, handleObj);\n              }\n            }\n          }\n          if (origCount && !handlers.length) {\n            if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n              jQuery.removeEvent(elem, type, elemData.handle);\n            }\n            delete events[type];\n          }\n        }\n        if (jQuery.isEmptyObject(events)) {\n          delete elemData.handle;\n          data_priv.remove(elem, \"events\");\n        }\n      },\n      trigger: function(event, data, elem, onlyHandlers) {\n        var i,\n            cur,\n            tmp,\n            bubbleType,\n            ontype,\n            handle,\n            special,\n            eventPath = [elem || document],\n            type = hasOwn.call(event, \"type\") ? event.type : event,\n            namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n        cur = tmp = elem = elem || document;\n        if (elem.nodeType === 3 || elem.nodeType === 8) {\n          return;\n        }\n        if (rfocusMorph.test(type + jQuery.event.triggered)) {\n          return;\n        }\n        if (type.indexOf(\".\") >= 0) {\n          namespaces = type.split(\".\");\n          type = namespaces.shift();\n          namespaces.sort();\n        }\n        ontype = type.indexOf(\":\") < 0 && \"on\" + type;\n        event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event);\n        event.isTrigger = onlyHandlers ? 2 : 3;\n        event.namespace = namespaces.join(\".\");\n        event.namespace_re = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\n        event.result = undefined;\n        if (!event.target) {\n          event.target = elem;\n        }\n        data = data == null ? [event] : jQuery.makeArray(data, [event]);\n        special = jQuery.event.special[type] || {};\n        if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n          return;\n        }\n        if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n          bubbleType = special.delegateType || type;\n          if (!rfocusMorph.test(bubbleType + type)) {\n            cur = cur.parentNode;\n          }\n          for (; cur; cur = cur.parentNode) {\n            eventPath.push(cur);\n            tmp = cur;\n          }\n          if (tmp === (elem.ownerDocument || document)) {\n            eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n          }\n        }\n        i = 0;\n        while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n          event.type = i > 1 ? bubbleType : special.bindType || type;\n          handle = (data_priv.get(cur, \"events\") || {})[event.type] && data_priv.get(cur, \"handle\");\n          if (handle) {\n            handle.apply(cur, data);\n          }\n          handle = ontype && cur[ontype];\n          if (handle && handle.apply && jQuery.acceptData(cur)) {\n            event.result = handle.apply(cur, data);\n            if (event.result === false) {\n              event.preventDefault();\n            }\n          }\n        }\n        event.type = type;\n        if (!onlyHandlers && !event.isDefaultPrevented()) {\n          if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && jQuery.acceptData(elem)) {\n            if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {\n              tmp = elem[ontype];\n              if (tmp) {\n                elem[ontype] = null;\n              }\n              jQuery.event.triggered = type;\n              elem[type]();\n              jQuery.event.triggered = undefined;\n              if (tmp) {\n                elem[ontype] = tmp;\n              }\n            }\n          }\n        }\n        return event.result;\n      },\n      dispatch: function(event) {\n        event = jQuery.event.fix(event);\n        var i,\n            j,\n            ret,\n            matched,\n            handleObj,\n            handlerQueue = [],\n            args = slice.call(arguments),\n            handlers = (data_priv.get(this, \"events\") || {})[event.type] || [],\n            special = jQuery.event.special[event.type] || {};\n        args[0] = event;\n        event.delegateTarget = this;\n        if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n          return;\n        }\n        handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n        i = 0;\n        while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n          event.currentTarget = matched.elem;\n          j = 0;\n          while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n            if (!event.namespace_re || event.namespace_re.test(handleObj.namespace)) {\n              event.handleObj = handleObj;\n              event.data = handleObj.data;\n              ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n              if (ret !== undefined) {\n                if ((event.result = ret) === false) {\n                  event.preventDefault();\n                  event.stopPropagation();\n                }\n              }\n            }\n          }\n        }\n        if (special.postDispatch) {\n          special.postDispatch.call(this, event);\n        }\n        return event.result;\n      },\n      handlers: function(event, handlers) {\n        var i,\n            matches,\n            sel,\n            handleObj,\n            handlerQueue = [],\n            delegateCount = handlers.delegateCount,\n            cur = event.target;\n        if (delegateCount && cur.nodeType && (!event.button || event.type !== \"click\")) {\n          for (; cur !== this; cur = cur.parentNode || this) {\n            if (cur.disabled !== true || event.type !== \"click\") {\n              matches = [];\n              for (i = 0; i < delegateCount; i++) {\n                handleObj = handlers[i];\n                sel = handleObj.selector + \" \";\n                if (matches[sel] === undefined) {\n                  matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [cur]).length;\n                }\n                if (matches[sel]) {\n                  matches.push(handleObj);\n                }\n              }\n              if (matches.length) {\n                handlerQueue.push({\n                  elem: cur,\n                  handlers: matches\n                });\n              }\n            }\n          }\n        }\n        if (delegateCount < handlers.length) {\n          handlerQueue.push({\n            elem: this,\n            handlers: handlers.slice(delegateCount)\n          });\n        }\n        return handlerQueue;\n      },\n      props: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n      fixHooks: {},\n      keyHooks: {\n        props: \"char charCode key keyCode\".split(\" \"),\n        filter: function(event, original) {\n          if (event.which == null) {\n            event.which = original.charCode != null ? original.charCode : original.keyCode;\n          }\n          return event;\n        }\n      },\n      mouseHooks: {\n        props: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n        filter: function(event, original) {\n          var eventDoc,\n              doc,\n              body,\n              button = original.button;\n          if (event.pageX == null && original.clientX != null) {\n            eventDoc = event.target.ownerDocument || document;\n            doc = eventDoc.documentElement;\n            body = eventDoc.body;\n            event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n            event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n          }\n          if (!event.which && button !== undefined) {\n            event.which = (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\n          }\n          return event;\n        }\n      },\n      fix: function(event) {\n        if (event[jQuery.expando]) {\n          return event;\n        }\n        var i,\n            prop,\n            copy,\n            type = event.type,\n            originalEvent = event,\n            fixHook = this.fixHooks[type];\n        if (!fixHook) {\n          this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {};\n        }\n        copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;\n        event = new jQuery.Event(originalEvent);\n        i = copy.length;\n        while (i--) {\n          prop = copy[i];\n          event[prop] = originalEvent[prop];\n        }\n        if (!event.target) {\n          event.target = document;\n        }\n        if (event.target.nodeType === 3) {\n          event.target = event.target.parentNode;\n        }\n        return fixHook.filter ? fixHook.filter(event, originalEvent) : event;\n      },\n      special: {\n        load: {noBubble: true},\n        focus: {\n          trigger: function() {\n            if (this !== safeActiveElement() && this.focus) {\n              this.focus();\n              return false;\n            }\n          },\n          delegateType: \"focusin\"\n        },\n        blur: {\n          trigger: function() {\n            if (this === safeActiveElement() && this.blur) {\n              this.blur();\n              return false;\n            }\n          },\n          delegateType: \"focusout\"\n        },\n        click: {\n          trigger: function() {\n            if (this.type === \"checkbox\" && this.click && jQuery.nodeName(this, \"input\")) {\n              this.click();\n              return false;\n            }\n          },\n          _default: function(event) {\n            return jQuery.nodeName(event.target, \"a\");\n          }\n        },\n        beforeunload: {postDispatch: function(event) {\n            if (event.result !== undefined && event.originalEvent) {\n              event.originalEvent.returnValue = event.result;\n            }\n          }}\n      },\n      simulate: function(type, elem, event, bubble) {\n        var e = jQuery.extend(new jQuery.Event(), event, {\n          type: type,\n          isSimulated: true,\n          originalEvent: {}\n        });\n        if (bubble) {\n          jQuery.event.trigger(e, null, elem);\n        } else {\n          jQuery.event.dispatch.call(elem, e);\n        }\n        if (e.isDefaultPrevented()) {\n          event.preventDefault();\n        }\n      }\n    };\n    jQuery.removeEvent = function(elem, type, handle) {\n      if (elem.removeEventListener) {\n        elem.removeEventListener(type, handle, false);\n      }\n    };\n    jQuery.Event = function(src, props) {\n      if (!(this instanceof jQuery.Event)) {\n        return new jQuery.Event(src, props);\n      }\n      if (src && src.type) {\n        this.originalEvent = src;\n        this.type = src.type;\n        this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && src.returnValue === false ? returnTrue : returnFalse;\n      } else {\n        this.type = src;\n      }\n      if (props) {\n        jQuery.extend(this, props);\n      }\n      this.timeStamp = src && src.timeStamp || jQuery.now();\n      this[jQuery.expando] = true;\n    };\n    jQuery.Event.prototype = {\n      isDefaultPrevented: returnFalse,\n      isPropagationStopped: returnFalse,\n      isImmediatePropagationStopped: returnFalse,\n      preventDefault: function() {\n        var e = this.originalEvent;\n        this.isDefaultPrevented = returnTrue;\n        if (e && e.preventDefault) {\n          e.preventDefault();\n        }\n      },\n      stopPropagation: function() {\n        var e = this.originalEvent;\n        this.isPropagationStopped = returnTrue;\n        if (e && e.stopPropagation) {\n          e.stopPropagation();\n        }\n      },\n      stopImmediatePropagation: function() {\n        var e = this.originalEvent;\n        this.isImmediatePropagationStopped = returnTrue;\n        if (e && e.stopImmediatePropagation) {\n          e.stopImmediatePropagation();\n        }\n        this.stopPropagation();\n      }\n    };\n    jQuery.each({\n      mouseenter: \"mouseover\",\n      mouseleave: \"mouseout\",\n      pointerenter: \"pointerover\",\n      pointerleave: \"pointerout\"\n    }, function(orig, fix) {\n      jQuery.event.special[orig] = {\n        delegateType: fix,\n        bindType: fix,\n        handle: function(event) {\n          var ret,\n              target = this,\n              related = event.relatedTarget,\n              handleObj = event.handleObj;\n          if (!related || (related !== target && !jQuery.contains(target, related))) {\n            event.type = handleObj.origType;\n            ret = handleObj.handler.apply(this, arguments);\n            event.type = fix;\n          }\n          return ret;\n        }\n      };\n    });\n    if (!support.focusinBubbles) {\n      jQuery.each({\n        focus: \"focusin\",\n        blur: \"focusout\"\n      }, function(orig, fix) {\n        var handler = function(event) {\n          jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);\n        };\n        jQuery.event.special[fix] = {\n          setup: function() {\n            var doc = this.ownerDocument || this,\n                attaches = data_priv.access(doc, fix);\n            if (!attaches) {\n              doc.addEventListener(orig, handler, true);\n            }\n            data_priv.access(doc, fix, (attaches || 0) + 1);\n          },\n          teardown: function() {\n            var doc = this.ownerDocument || this,\n                attaches = data_priv.access(doc, fix) - 1;\n            if (!attaches) {\n              doc.removeEventListener(orig, handler, true);\n              data_priv.remove(doc, fix);\n            } else {\n              data_priv.access(doc, fix, attaches);\n            }\n          }\n        };\n      });\n    }\n    jQuery.fn.extend({\n      on: function(types, selector, data, fn, one) {\n        var origFn,\n            type;\n        if (typeof types === \"object\") {\n          if (typeof selector !== \"string\") {\n            data = data || selector;\n            selector = undefined;\n          }\n          for (type in types) {\n            this.on(type, selector, data, types[type], one);\n          }\n          return this;\n        }\n        if (data == null && fn == null) {\n          fn = selector;\n          data = selector = undefined;\n        } else if (fn == null) {\n          if (typeof selector === \"string\") {\n            fn = data;\n            data = undefined;\n          } else {\n            fn = data;\n            data = selector;\n            selector = undefined;\n          }\n        }\n        if (fn === false) {\n          fn = returnFalse;\n        } else if (!fn) {\n          return this;\n        }\n        if (one === 1) {\n          origFn = fn;\n          fn = function(event) {\n            jQuery().off(event);\n            return origFn.apply(this, arguments);\n          };\n          fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n        }\n        return this.each(function() {\n          jQuery.event.add(this, types, fn, data, selector);\n        });\n      },\n      one: function(types, selector, data, fn) {\n        return this.on(types, selector, data, fn, 1);\n      },\n      off: function(types, selector, fn) {\n        var handleObj,\n            type;\n        if (types && types.preventDefault && types.handleObj) {\n          handleObj = types.handleObj;\n          jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n          return this;\n        }\n        if (typeof types === \"object\") {\n          for (type in types) {\n            this.off(type, selector, types[type]);\n          }\n          return this;\n        }\n        if (selector === false || typeof selector === \"function\") {\n          fn = selector;\n          selector = undefined;\n        }\n        if (fn === false) {\n          fn = returnFalse;\n        }\n        return this.each(function() {\n          jQuery.event.remove(this, types, fn, selector);\n        });\n      },\n      trigger: function(type, data) {\n        return this.each(function() {\n          jQuery.event.trigger(type, data, this);\n        });\n      },\n      triggerHandler: function(type, data) {\n        var elem = this[0];\n        if (elem) {\n          return jQuery.event.trigger(type, data, elem, true);\n        }\n      }\n    });\n    var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n        rtagName = /<([\\w:]+)/,\n        rhtml = /<|&#?\\w+;/,\n        rnoInnerhtml = /<(?:script|style|link)/i,\n        rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n        rscriptType = /^$|\\/(?:java|ecma)script/i,\n        rscriptTypeMasked = /^true\\/(.*)/,\n        rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n        wrapMap = {\n          option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n          thead: [1, \"<table>\", \"</table>\"],\n          col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n          tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n          td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n          _default: [0, \"\", \"\"]\n        };\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n    function manipulationTarget(elem, content) {\n      return jQuery.nodeName(elem, \"table\") && jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\") ? elem.getElementsByTagName(\"tbody\")[0] || elem.appendChild(elem.ownerDocument.createElement(\"tbody\")) : elem;\n    }\n    function disableScript(elem) {\n      elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n      return elem;\n    }\n    function restoreScript(elem) {\n      var match = rscriptTypeMasked.exec(elem.type);\n      if (match) {\n        elem.type = match[1];\n      } else {\n        elem.removeAttribute(\"type\");\n      }\n      return elem;\n    }\n    function setGlobalEval(elems, refElements) {\n      var i = 0,\n          l = elems.length;\n      for (; i < l; i++) {\n        data_priv.set(elems[i], \"globalEval\", !refElements || data_priv.get(refElements[i], \"globalEval\"));\n      }\n    }\n    function cloneCopyEvent(src, dest) {\n      var i,\n          l,\n          type,\n          pdataOld,\n          pdataCur,\n          udataOld,\n          udataCur,\n          events;\n      if (dest.nodeType !== 1) {\n        return;\n      }\n      if (data_priv.hasData(src)) {\n        pdataOld = data_priv.access(src);\n        pdataCur = data_priv.set(dest, pdataOld);\n        events = pdataOld.events;\n        if (events) {\n          delete pdataCur.handle;\n          pdataCur.events = {};\n          for (type in events) {\n            for (i = 0, l = events[type].length; i < l; i++) {\n              jQuery.event.add(dest, type, events[type][i]);\n            }\n          }\n        }\n      }\n      if (data_user.hasData(src)) {\n        udataOld = data_user.access(src);\n        udataCur = jQuery.extend({}, udataOld);\n        data_user.set(dest, udataCur);\n      }\n    }\n    function getAll(context, tag) {\n      var ret = context.getElementsByTagName ? context.getElementsByTagName(tag || \"*\") : context.querySelectorAll ? context.querySelectorAll(tag || \"*\") : [];\n      return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([context], ret) : ret;\n    }\n    function fixInput(src, dest) {\n      var nodeName = dest.nodeName.toLowerCase();\n      if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n        dest.checked = src.checked;\n      } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n        dest.defaultValue = src.defaultValue;\n      }\n    }\n    jQuery.extend({\n      clone: function(elem, dataAndEvents, deepDataAndEvents) {\n        var i,\n            l,\n            srcElements,\n            destElements,\n            clone = elem.cloneNode(true),\n            inPage = jQuery.contains(elem.ownerDocument, elem);\n        if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n          destElements = getAll(clone);\n          srcElements = getAll(elem);\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            fixInput(srcElements[i], destElements[i]);\n          }\n        }\n        if (dataAndEvents) {\n          if (deepDataAndEvents) {\n            srcElements = srcElements || getAll(elem);\n            destElements = destElements || getAll(clone);\n            for (i = 0, l = srcElements.length; i < l; i++) {\n              cloneCopyEvent(srcElements[i], destElements[i]);\n            }\n          } else {\n            cloneCopyEvent(elem, clone);\n          }\n        }\n        destElements = getAll(clone, \"script\");\n        if (destElements.length > 0) {\n          setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n        }\n        return clone;\n      },\n      buildFragment: function(elems, context, scripts, selection) {\n        var elem,\n            tmp,\n            tag,\n            wrap,\n            contains,\n            j,\n            fragment = context.createDocumentFragment(),\n            nodes = [],\n            i = 0,\n            l = elems.length;\n        for (; i < l; i++) {\n          elem = elems[i];\n          if (elem || elem === 0) {\n            if (jQuery.type(elem) === \"object\") {\n              jQuery.merge(nodes, elem.nodeType ? [elem] : elem);\n            } else if (!rhtml.test(elem)) {\n              nodes.push(context.createTextNode(elem));\n            } else {\n              tmp = tmp || fragment.appendChild(context.createElement(\"div\"));\n              tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n              wrap = wrapMap[tag] || wrapMap._default;\n              tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, \"<$1></$2>\") + wrap[2];\n              j = wrap[0];\n              while (j--) {\n                tmp = tmp.lastChild;\n              }\n              jQuery.merge(nodes, tmp.childNodes);\n              tmp = fragment.firstChild;\n              tmp.textContent = \"\";\n            }\n          }\n        }\n        fragment.textContent = \"\";\n        i = 0;\n        while ((elem = nodes[i++])) {\n          if (selection && jQuery.inArray(elem, selection) !== -1) {\n            continue;\n          }\n          contains = jQuery.contains(elem.ownerDocument, elem);\n          tmp = getAll(fragment.appendChild(elem), \"script\");\n          if (contains) {\n            setGlobalEval(tmp);\n          }\n          if (scripts) {\n            j = 0;\n            while ((elem = tmp[j++])) {\n              if (rscriptType.test(elem.type || \"\")) {\n                scripts.push(elem);\n              }\n            }\n          }\n        }\n        return fragment;\n      },\n      cleanData: function(elems) {\n        var data,\n            elem,\n            type,\n            key,\n            special = jQuery.event.special,\n            i = 0;\n        for (; (elem = elems[i]) !== undefined; i++) {\n          if (jQuery.acceptData(elem)) {\n            key = elem[data_priv.expando];\n            if (key && (data = data_priv.cache[key])) {\n              if (data.events) {\n                for (type in data.events) {\n                  if (special[type]) {\n                    jQuery.event.remove(elem, type);\n                  } else {\n                    jQuery.removeEvent(elem, type, data.handle);\n                  }\n                }\n              }\n              if (data_priv.cache[key]) {\n                delete data_priv.cache[key];\n              }\n            }\n          }\n          delete data_user.cache[elem[data_user.expando]];\n        }\n      }\n    });\n    jQuery.fn.extend({\n      text: function(value) {\n        return access(this, function(value) {\n          return value === undefined ? jQuery.text(this) : this.empty().each(function() {\n            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n              this.textContent = value;\n            }\n          });\n        }, null, value, arguments.length);\n      },\n      append: function() {\n        return this.domManip(arguments, function(elem) {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            var target = manipulationTarget(this, elem);\n            target.appendChild(elem);\n          }\n        });\n      },\n      prepend: function() {\n        return this.domManip(arguments, function(elem) {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            var target = manipulationTarget(this, elem);\n            target.insertBefore(elem, target.firstChild);\n          }\n        });\n      },\n      before: function() {\n        return this.domManip(arguments, function(elem) {\n          if (this.parentNode) {\n            this.parentNode.insertBefore(elem, this);\n          }\n        });\n      },\n      after: function() {\n        return this.domManip(arguments, function(elem) {\n          if (this.parentNode) {\n            this.parentNode.insertBefore(elem, this.nextSibling);\n          }\n        });\n      },\n      remove: function(selector, keepData) {\n        var elem,\n            elems = selector ? jQuery.filter(selector, this) : this,\n            i = 0;\n        for (; (elem = elems[i]) != null; i++) {\n          if (!keepData && elem.nodeType === 1) {\n            jQuery.cleanData(getAll(elem));\n          }\n          if (elem.parentNode) {\n            if (keepData && jQuery.contains(elem.ownerDocument, elem)) {\n              setGlobalEval(getAll(elem, \"script\"));\n            }\n            elem.parentNode.removeChild(elem);\n          }\n        }\n        return this;\n      },\n      empty: function() {\n        var elem,\n            i = 0;\n        for (; (elem = this[i]) != null; i++) {\n          if (elem.nodeType === 1) {\n            jQuery.cleanData(getAll(elem, false));\n            elem.textContent = \"\";\n          }\n        }\n        return this;\n      },\n      clone: function(dataAndEvents, deepDataAndEvents) {\n        dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n        deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n        return this.map(function() {\n          return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n        });\n      },\n      html: function(value) {\n        return access(this, function(value) {\n          var elem = this[0] || {},\n              i = 0,\n              l = this.length;\n          if (value === undefined && elem.nodeType === 1) {\n            return elem.innerHTML;\n          }\n          if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n            value = value.replace(rxhtmlTag, \"<$1></$2>\");\n            try {\n              for (; i < l; i++) {\n                elem = this[i] || {};\n                if (elem.nodeType === 1) {\n                  jQuery.cleanData(getAll(elem, false));\n                  elem.innerHTML = value;\n                }\n              }\n              elem = 0;\n            } catch (e) {}\n          }\n          if (elem) {\n            this.empty().append(value);\n          }\n        }, null, value, arguments.length);\n      },\n      replaceWith: function() {\n        var arg = arguments[0];\n        this.domManip(arguments, function(elem) {\n          arg = this.parentNode;\n          jQuery.cleanData(getAll(this));\n          if (arg) {\n            arg.replaceChild(elem, this);\n          }\n        });\n        return arg && (arg.length || arg.nodeType) ? this : this.remove();\n      },\n      detach: function(selector) {\n        return this.remove(selector, true);\n      },\n      domManip: function(args, callback) {\n        args = concat.apply([], args);\n        var fragment,\n            first,\n            scripts,\n            hasScripts,\n            node,\n            doc,\n            i = 0,\n            l = this.length,\n            set = this,\n            iNoClone = l - 1,\n            value = args[0],\n            isFunction = jQuery.isFunction(value);\n        if (isFunction || (l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value))) {\n          return this.each(function(index) {\n            var self = set.eq(index);\n            if (isFunction) {\n              args[0] = value.call(this, index, self.html());\n            }\n            self.domManip(args, callback);\n          });\n        }\n        if (l) {\n          fragment = jQuery.buildFragment(args, this[0].ownerDocument, false, this);\n          first = fragment.firstChild;\n          if (fragment.childNodes.length === 1) {\n            fragment = first;\n          }\n          if (first) {\n            scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n            hasScripts = scripts.length;\n            for (; i < l; i++) {\n              node = fragment;\n              if (i !== iNoClone) {\n                node = jQuery.clone(node, true, true);\n                if (hasScripts) {\n                  jQuery.merge(scripts, getAll(node, \"script\"));\n                }\n              }\n              callback.call(this[i], node, i);\n            }\n            if (hasScripts) {\n              doc = scripts[scripts.length - 1].ownerDocument;\n              jQuery.map(scripts, restoreScript);\n              for (i = 0; i < hasScripts; i++) {\n                node = scripts[i];\n                if (rscriptType.test(node.type || \"\") && !data_priv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n                  if (node.src) {\n                    if (jQuery._evalUrl) {\n                      jQuery._evalUrl(node.src);\n                    }\n                  } else {\n                    jQuery.globalEval(node.textContent.replace(rcleanScript, \"\"));\n                  }\n                }\n              }\n            }\n          }\n        }\n        return this;\n      }\n    });\n    jQuery.each({\n      appendTo: \"append\",\n      prependTo: \"prepend\",\n      insertBefore: \"before\",\n      insertAfter: \"after\",\n      replaceAll: \"replaceWith\"\n    }, function(name, original) {\n      jQuery.fn[name] = function(selector) {\n        var elems,\n            ret = [],\n            insert = jQuery(selector),\n            last = insert.length - 1,\n            i = 0;\n        for (; i <= last; i++) {\n          elems = i === last ? this : this.clone(true);\n          jQuery(insert[i])[original](elems);\n          push.apply(ret, elems.get());\n        }\n        return this.pushStack(ret);\n      };\n    });\n    var iframe,\n        elemdisplay = {};\n    function actualDisplay(name, doc) {\n      var style,\n          elem = jQuery(doc.createElement(name)).appendTo(doc.body),\n          display = window.getDefaultComputedStyle && (style = window.getDefaultComputedStyle(elem[0])) ? style.display : jQuery.css(elem[0], \"display\");\n      elem.detach();\n      return display;\n    }\n    function defaultDisplay(nodeName) {\n      var doc = document,\n          display = elemdisplay[nodeName];\n      if (!display) {\n        display = actualDisplay(nodeName, doc);\n        if (display === \"none\" || !display) {\n          iframe = (iframe || jQuery(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(doc.documentElement);\n          doc = iframe[0].contentDocument;\n          doc.write();\n          doc.close();\n          display = actualDisplay(nodeName, doc);\n          iframe.detach();\n        }\n        elemdisplay[nodeName] = display;\n      }\n      return display;\n    }\n    var rmargin = (/^margin/);\n    var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n    var getStyles = function(elem) {\n      return elem.ownerDocument.defaultView.getComputedStyle(elem, null);\n    };\n    function curCSS(elem, name, computed) {\n      var width,\n          minWidth,\n          maxWidth,\n          ret,\n          style = elem.style;\n      computed = computed || getStyles(elem);\n      if (computed) {\n        ret = computed.getPropertyValue(name) || computed[name];\n      }\n      if (computed) {\n        if (ret === \"\" && !jQuery.contains(elem.ownerDocument, elem)) {\n          ret = jQuery.style(elem, name);\n        }\n        if (rnumnonpx.test(ret) && rmargin.test(name)) {\n          width = style.width;\n          minWidth = style.minWidth;\n          maxWidth = style.maxWidth;\n          style.minWidth = style.maxWidth = style.width = ret;\n          ret = computed.width;\n          style.width = width;\n          style.minWidth = minWidth;\n          style.maxWidth = maxWidth;\n        }\n      }\n      return ret !== undefined ? ret + \"\" : ret;\n    }\n    function addGetHookIf(conditionFn, hookFn) {\n      return {get: function() {\n          if (conditionFn()) {\n            delete this.get;\n            return;\n          }\n          return (this.get = hookFn).apply(this, arguments);\n        }};\n    }\n    (function() {\n      var pixelPositionVal,\n          boxSizingReliableVal,\n          docElem = document.documentElement,\n          container = document.createElement(\"div\"),\n          div = document.createElement(\"div\");\n      if (!div.style) {\n        return;\n      }\n      div.style.backgroundClip = \"content-box\";\n      div.cloneNode(true).style.backgroundClip = \"\";\n      support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n      container.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" + \"position:absolute\";\n      container.appendChild(div);\n      function computePixelPositionAndBoxSizingReliable() {\n        div.style.cssText = \"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" + \"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" + \"border:1px;padding:1px;width:4px;position:absolute\";\n        div.innerHTML = \"\";\n        docElem.appendChild(container);\n        var divStyle = window.getComputedStyle(div, null);\n        pixelPositionVal = divStyle.top !== \"1%\";\n        boxSizingReliableVal = divStyle.width === \"4px\";\n        docElem.removeChild(container);\n      }\n      if (window.getComputedStyle) {\n        jQuery.extend(support, {\n          pixelPosition: function() {\n            computePixelPositionAndBoxSizingReliable();\n            return pixelPositionVal;\n          },\n          boxSizingReliable: function() {\n            if (boxSizingReliableVal == null) {\n              computePixelPositionAndBoxSizingReliable();\n            }\n            return boxSizingReliableVal;\n          },\n          reliableMarginRight: function() {\n            var ret,\n                marginDiv = div.appendChild(document.createElement(\"div\"));\n            marginDiv.style.cssText = div.style.cssText = \"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" + \"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n            marginDiv.style.marginRight = marginDiv.style.width = \"0\";\n            div.style.width = \"1px\";\n            docElem.appendChild(container);\n            ret = !parseFloat(window.getComputedStyle(marginDiv, null).marginRight);\n            docElem.removeChild(container);\n            return ret;\n          }\n        });\n      }\n    })();\n    jQuery.swap = function(elem, options, callback, args) {\n      var ret,\n          name,\n          old = {};\n      for (name in options) {\n        old[name] = elem.style[name];\n        elem.style[name] = options[name];\n      }\n      ret = callback.apply(elem, args || []);\n      for (name in options) {\n        elem.style[name] = old[name];\n      }\n      return ret;\n    };\n    var rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n        rnumsplit = new RegExp(\"^(\" + pnum + \")(.*)$\", \"i\"),\n        rrelNum = new RegExp(\"^([+-])=(\" + pnum + \")\", \"i\"),\n        cssShow = {\n          position: \"absolute\",\n          visibility: \"hidden\",\n          display: \"block\"\n        },\n        cssNormalTransform = {\n          letterSpacing: \"0\",\n          fontWeight: \"400\"\n        },\n        cssPrefixes = [\"Webkit\", \"O\", \"Moz\", \"ms\"];\n    function vendorPropName(style, name) {\n      if (name in style) {\n        return name;\n      }\n      var capName = name[0].toUpperCase() + name.slice(1),\n          origName = name,\n          i = cssPrefixes.length;\n      while (i--) {\n        name = cssPrefixes[i] + capName;\n        if (name in style) {\n          return name;\n        }\n      }\n      return origName;\n    }\n    function setPositiveNumber(elem, value, subtract) {\n      var matches = rnumsplit.exec(value);\n      return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || \"px\") : value;\n    }\n    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n      var i = extra === (isBorderBox ? \"border\" : \"content\") ? 4 : name === \"width\" ? 1 : 0,\n          val = 0;\n      for (; i < 4; i += 2) {\n        if (extra === \"margin\") {\n          val += jQuery.css(elem, extra + cssExpand[i], true, styles);\n        }\n        if (isBorderBox) {\n          if (extra === \"content\") {\n            val -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n          }\n          if (extra !== \"margin\") {\n            val -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n          }\n        } else {\n          val += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n          if (extra !== \"padding\") {\n            val += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n          }\n        }\n      }\n      return val;\n    }\n    function getWidthOrHeight(elem, name, extra) {\n      var valueIsBorderBox = true,\n          val = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n          styles = getStyles(elem),\n          isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\";\n      if (val <= 0 || val == null) {\n        val = curCSS(elem, name, styles);\n        if (val < 0 || val == null) {\n          val = elem.style[name];\n        }\n        if (rnumnonpx.test(val)) {\n          return val;\n        }\n        valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);\n        val = parseFloat(val) || 0;\n      }\n      return (val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles)) + \"px\";\n    }\n    function showHide(elements, show) {\n      var display,\n          elem,\n          hidden,\n          values = [],\n          index = 0,\n          length = elements.length;\n      for (; index < length; index++) {\n        elem = elements[index];\n        if (!elem.style) {\n          continue;\n        }\n        values[index] = data_priv.get(elem, \"olddisplay\");\n        display = elem.style.display;\n        if (show) {\n          if (!values[index] && display === \"none\") {\n            elem.style.display = \"\";\n          }\n          if (elem.style.display === \"\" && isHidden(elem)) {\n            values[index] = data_priv.access(elem, \"olddisplay\", defaultDisplay(elem.nodeName));\n          }\n        } else {\n          hidden = isHidden(elem);\n          if (display !== \"none\" || !hidden) {\n            data_priv.set(elem, \"olddisplay\", hidden ? display : jQuery.css(elem, \"display\"));\n          }\n        }\n      }\n      for (index = 0; index < length; index++) {\n        elem = elements[index];\n        if (!elem.style) {\n          continue;\n        }\n        if (!show || elem.style.display === \"none\" || elem.style.display === \"\") {\n          elem.style.display = show ? values[index] || \"\" : \"none\";\n        }\n      }\n      return elements;\n    }\n    jQuery.extend({\n      cssHooks: {opacity: {get: function(elem, computed) {\n            if (computed) {\n              var ret = curCSS(elem, \"opacity\");\n              return ret === \"\" ? \"1\" : ret;\n            }\n          }}},\n      cssNumber: {\n        \"columnCount\": true,\n        \"fillOpacity\": true,\n        \"flexGrow\": true,\n        \"flexShrink\": true,\n        \"fontWeight\": true,\n        \"lineHeight\": true,\n        \"opacity\": true,\n        \"order\": true,\n        \"orphans\": true,\n        \"widows\": true,\n        \"zIndex\": true,\n        \"zoom\": true\n      },\n      cssProps: {\"float\": \"cssFloat\"},\n      style: function(elem, name, value, extra) {\n        if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n          return;\n        }\n        var ret,\n            type,\n            hooks,\n            origName = jQuery.camelCase(name),\n            style = elem.style;\n        name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName));\n        hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n        if (value !== undefined) {\n          type = typeof value;\n          if (type === \"string\" && (ret = rrelNum.exec(value))) {\n            value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name));\n            type = \"number\";\n          }\n          if (value == null || value !== value) {\n            return;\n          }\n          if (type === \"number\" && !jQuery.cssNumber[origName]) {\n            value += \"px\";\n          }\n          if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n            style[name] = \"inherit\";\n          }\n          if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n            style[name] = value;\n          }\n        } else {\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n            return ret;\n          }\n          return style[name];\n        }\n      },\n      css: function(elem, name, extra, styles) {\n        var val,\n            num,\n            hooks,\n            origName = jQuery.camelCase(name);\n        name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName));\n        hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n        if (hooks && \"get\" in hooks) {\n          val = hooks.get(elem, true, extra);\n        }\n        if (val === undefined) {\n          val = curCSS(elem, name, styles);\n        }\n        if (val === \"normal\" && name in cssNormalTransform) {\n          val = cssNormalTransform[name];\n        }\n        if (extra === \"\" || extra) {\n          num = parseFloat(val);\n          return extra === true || jQuery.isNumeric(num) ? num || 0 : val;\n        }\n        return val;\n      }\n    });\n    jQuery.each([\"height\", \"width\"], function(i, name) {\n      jQuery.cssHooks[name] = {\n        get: function(elem, computed, extra) {\n          if (computed) {\n            return rdisplayswap.test(jQuery.css(elem, \"display\")) && elem.offsetWidth === 0 ? jQuery.swap(elem, cssShow, function() {\n              return getWidthOrHeight(elem, name, extra);\n            }) : getWidthOrHeight(elem, name, extra);\n          }\n        },\n        set: function(elem, value, extra) {\n          var styles = extra && getStyles(elem);\n          return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\", styles) : 0);\n        }\n      };\n    });\n    jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight, function(elem, computed) {\n      if (computed) {\n        return jQuery.swap(elem, {\"display\": \"inline-block\"}, curCSS, [elem, \"marginRight\"]);\n      }\n    });\n    jQuery.each({\n      margin: \"\",\n      padding: \"\",\n      border: \"Width\"\n    }, function(prefix, suffix) {\n      jQuery.cssHooks[prefix + suffix] = {expand: function(value) {\n          var i = 0,\n              expanded = {},\n              parts = typeof value === \"string\" ? value.split(\" \") : [value];\n          for (; i < 4; i++) {\n            expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n          }\n          return expanded;\n        }};\n      if (!rmargin.test(prefix)) {\n        jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n      }\n    });\n    jQuery.fn.extend({\n      css: function(name, value) {\n        return access(this, function(elem, name, value) {\n          var styles,\n              len,\n              map = {},\n              i = 0;\n          if (jQuery.isArray(name)) {\n            styles = getStyles(elem);\n            len = name.length;\n            for (; i < len; i++) {\n              map[name[i]] = jQuery.css(elem, name[i], false, styles);\n            }\n            return map;\n          }\n          return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n        }, name, value, arguments.length > 1);\n      },\n      show: function() {\n        return showHide(this, true);\n      },\n      hide: function() {\n        return showHide(this);\n      },\n      toggle: function(state) {\n        if (typeof state === \"boolean\") {\n          return state ? this.show() : this.hide();\n        }\n        return this.each(function() {\n          if (isHidden(this)) {\n            jQuery(this).show();\n          } else {\n            jQuery(this).hide();\n          }\n        });\n      }\n    });\n    function Tween(elem, options, prop, end, easing) {\n      return new Tween.prototype.init(elem, options, prop, end, easing);\n    }\n    jQuery.Tween = Tween;\n    Tween.prototype = {\n      constructor: Tween,\n      init: function(elem, options, prop, end, easing, unit) {\n        this.elem = elem;\n        this.prop = prop;\n        this.easing = easing || \"swing\";\n        this.options = options;\n        this.start = this.now = this.cur();\n        this.end = end;\n        this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n      },\n      cur: function() {\n        var hooks = Tween.propHooks[this.prop];\n        return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n      },\n      run: function(percent) {\n        var eased,\n            hooks = Tween.propHooks[this.prop];\n        if (this.options.duration) {\n          this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n        } else {\n          this.pos = eased = percent;\n        }\n        this.now = (this.end - this.start) * eased + this.start;\n        if (this.options.step) {\n          this.options.step.call(this.elem, this.now, this);\n        }\n        if (hooks && hooks.set) {\n          hooks.set(this);\n        } else {\n          Tween.propHooks._default.set(this);\n        }\n        return this;\n      }\n    };\n    Tween.prototype.init.prototype = Tween.prototype;\n    Tween.propHooks = {_default: {\n        get: function(tween) {\n          var result;\n          if (tween.elem[tween.prop] != null && (!tween.elem.style || tween.elem.style[tween.prop] == null)) {\n            return tween.elem[tween.prop];\n          }\n          result = jQuery.css(tween.elem, tween.prop, \"\");\n          return !result || result === \"auto\" ? 0 : result;\n        },\n        set: function(tween) {\n          if (jQuery.fx.step[tween.prop]) {\n            jQuery.fx.step[tween.prop](tween);\n          } else if (tween.elem.style && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n            jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n          } else {\n            tween.elem[tween.prop] = tween.now;\n          }\n        }\n      }};\n    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {set: function(tween) {\n        if (tween.elem.nodeType && tween.elem.parentNode) {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }};\n    jQuery.easing = {\n      linear: function(p) {\n        return p;\n      },\n      swing: function(p) {\n        return 0.5 - Math.cos(p * Math.PI) / 2;\n      }\n    };\n    jQuery.fx = Tween.prototype.init;\n    jQuery.fx.step = {};\n    var fxNow,\n        timerId,\n        rfxtypes = /^(?:toggle|show|hide)$/,\n        rfxnum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\"),\n        rrun = /queueHooks$/,\n        animationPrefilters = [defaultPrefilter],\n        tweeners = {\"*\": [function(prop, value) {\n            var tween = this.createTween(prop, value),\n                target = tween.cur(),\n                parts = rfxnum.exec(value),\n                unit = parts && parts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n                start = (jQuery.cssNumber[prop] || unit !== \"px\" && +target) && rfxnum.exec(jQuery.css(tween.elem, prop)),\n                scale = 1,\n                maxIterations = 20;\n            if (start && start[3] !== unit) {\n              unit = unit || start[3];\n              parts = parts || [];\n              start = +target || 1;\n              do {\n                scale = scale || \".5\";\n                start = start / scale;\n                jQuery.style(tween.elem, prop, start + unit);\n              } while (scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);\n            }\n            if (parts) {\n              start = tween.start = +start || +target || 0;\n              tween.unit = unit;\n              tween.end = parts[1] ? start + (parts[1] + 1) * parts[2] : +parts[2];\n            }\n            return tween;\n          }]};\n    function createFxNow() {\n      setTimeout(function() {\n        fxNow = undefined;\n      });\n      return (fxNow = jQuery.now());\n    }\n    function genFx(type, includeWidth) {\n      var which,\n          i = 0,\n          attrs = {height: type};\n      includeWidth = includeWidth ? 1 : 0;\n      for (; i < 4; i += 2 - includeWidth) {\n        which = cssExpand[i];\n        attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n      }\n      if (includeWidth) {\n        attrs.opacity = attrs.width = type;\n      }\n      return attrs;\n    }\n    function createTween(value, prop, animation) {\n      var tween,\n          collection = (tweeners[prop] || []).concat(tweeners[\"*\"]),\n          index = 0,\n          length = collection.length;\n      for (; index < length; index++) {\n        if ((tween = collection[index].call(animation, prop, value))) {\n          return tween;\n        }\n      }\n    }\n    function defaultPrefilter(elem, props, opts) {\n      var prop,\n          value,\n          toggle,\n          tween,\n          hooks,\n          oldfire,\n          display,\n          checkDisplay,\n          anim = this,\n          orig = {},\n          style = elem.style,\n          hidden = elem.nodeType && isHidden(elem),\n          dataShow = data_priv.get(elem, \"fxshow\");\n      if (!opts.queue) {\n        hooks = jQuery._queueHooks(elem, \"fx\");\n        if (hooks.unqueued == null) {\n          hooks.unqueued = 0;\n          oldfire = hooks.empty.fire;\n          hooks.empty.fire = function() {\n            if (!hooks.unqueued) {\n              oldfire();\n            }\n          };\n        }\n        hooks.unqueued++;\n        anim.always(function() {\n          anim.always(function() {\n            hooks.unqueued--;\n            if (!jQuery.queue(elem, \"fx\").length) {\n              hooks.empty.fire();\n            }\n          });\n        });\n      }\n      if (elem.nodeType === 1 && (\"height\" in props || \"width\" in props)) {\n        opts.overflow = [style.overflow, style.overflowX, style.overflowY];\n        display = jQuery.css(elem, \"display\");\n        checkDisplay = display === \"none\" ? data_priv.get(elem, \"olddisplay\") || defaultDisplay(elem.nodeName) : display;\n        if (checkDisplay === \"inline\" && jQuery.css(elem, \"float\") === \"none\") {\n          style.display = \"inline-block\";\n        }\n      }\n      if (opts.overflow) {\n        style.overflow = \"hidden\";\n        anim.always(function() {\n          style.overflow = opts.overflow[0];\n          style.overflowX = opts.overflow[1];\n          style.overflowY = opts.overflow[2];\n        });\n      }\n      for (prop in props) {\n        value = props[prop];\n        if (rfxtypes.exec(value)) {\n          delete props[prop];\n          toggle = toggle || value === \"toggle\";\n          if (value === (hidden ? \"hide\" : \"show\")) {\n            if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n              hidden = true;\n            } else {\n              continue;\n            }\n          }\n          orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n        } else {\n          display = undefined;\n        }\n      }\n      if (!jQuery.isEmptyObject(orig)) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = data_priv.access(elem, \"fxshow\", {});\n        }\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        }\n        if (hidden) {\n          jQuery(elem).show();\n        } else {\n          anim.done(function() {\n            jQuery(elem).hide();\n          });\n        }\n        anim.done(function() {\n          var prop;\n          data_priv.remove(elem, \"fxshow\");\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n        for (prop in orig) {\n          tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n          if (!(prop in dataShow)) {\n            dataShow[prop] = tween.start;\n            if (hidden) {\n              tween.end = tween.start;\n              tween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n            }\n          }\n        }\n      } else if ((display === \"none\" ? defaultDisplay(elem.nodeName) : display) === \"inline\") {\n        style.display = display;\n      }\n    }\n    function propFilter(props, specialEasing) {\n      var index,\n          name,\n          easing,\n          value,\n          hooks;\n      for (index in props) {\n        name = jQuery.camelCase(index);\n        easing = specialEasing[name];\n        value = props[index];\n        if (jQuery.isArray(value)) {\n          easing = value[1];\n          value = props[index] = value[0];\n        }\n        if (index !== name) {\n          props[name] = value;\n          delete props[index];\n        }\n        hooks = jQuery.cssHooks[name];\n        if (hooks && \"expand\" in hooks) {\n          value = hooks.expand(value);\n          delete props[name];\n          for (index in value) {\n            if (!(index in props)) {\n              props[index] = value[index];\n              specialEasing[index] = easing;\n            }\n          }\n        } else {\n          specialEasing[name] = easing;\n        }\n      }\n    }\n    function Animation(elem, properties, options) {\n      var result,\n          stopped,\n          index = 0,\n          length = animationPrefilters.length,\n          deferred = jQuery.Deferred().always(function() {\n            delete tick.elem;\n          }),\n          tick = function() {\n            if (stopped) {\n              return false;\n            }\n            var currentTime = fxNow || createFxNow(),\n                remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n                temp = remaining / animation.duration || 0,\n                percent = 1 - temp,\n                index = 0,\n                length = animation.tweens.length;\n            for (; index < length; index++) {\n              animation.tweens[index].run(percent);\n            }\n            deferred.notifyWith(elem, [animation, percent, remaining]);\n            if (percent < 1 && length) {\n              return remaining;\n            } else {\n              deferred.resolveWith(elem, [animation]);\n              return false;\n            }\n          },\n          animation = deferred.promise({\n            elem: elem,\n            props: jQuery.extend({}, properties),\n            opts: jQuery.extend(true, {specialEasing: {}}, options),\n            originalProperties: properties,\n            originalOptions: options,\n            startTime: fxNow || createFxNow(),\n            duration: options.duration,\n            tweens: [],\n            createTween: function(prop, end) {\n              var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n              animation.tweens.push(tween);\n              return tween;\n            },\n            stop: function(gotoEnd) {\n              var index = 0,\n                  length = gotoEnd ? animation.tweens.length : 0;\n              if (stopped) {\n                return this;\n              }\n              stopped = true;\n              for (; index < length; index++) {\n                animation.tweens[index].run(1);\n              }\n              if (gotoEnd) {\n                deferred.resolveWith(elem, [animation, gotoEnd]);\n              } else {\n                deferred.rejectWith(elem, [animation, gotoEnd]);\n              }\n              return this;\n            }\n          }),\n          props = animation.props;\n      propFilter(props, animation.opts.specialEasing);\n      for (; index < length; index++) {\n        result = animationPrefilters[index].call(animation, elem, props, animation.opts);\n        if (result) {\n          return result;\n        }\n      }\n      jQuery.map(props, createTween, animation);\n      if (jQuery.isFunction(animation.opts.start)) {\n        animation.opts.start.call(elem, animation);\n      }\n      jQuery.fx.timer(jQuery.extend(tick, {\n        elem: elem,\n        anim: animation,\n        queue: animation.opts.queue\n      }));\n      return animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    }\n    jQuery.Animation = jQuery.extend(Animation, {\n      tweener: function(props, callback) {\n        if (jQuery.isFunction(props)) {\n          callback = props;\n          props = [\"*\"];\n        } else {\n          props = props.split(\" \");\n        }\n        var prop,\n            index = 0,\n            length = props.length;\n        for (; index < length; index++) {\n          prop = props[index];\n          tweeners[prop] = tweeners[prop] || [];\n          tweeners[prop].unshift(callback);\n        }\n      },\n      prefilter: function(callback, prepend) {\n        if (prepend) {\n          animationPrefilters.unshift(callback);\n        } else {\n          animationPrefilters.push(callback);\n        }\n      }\n    });\n    jQuery.speed = function(speed, easing, fn) {\n      var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n        complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,\n        duration: speed,\n        easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n      };\n      opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;\n      if (opt.queue == null || opt.queue === true) {\n        opt.queue = \"fx\";\n      }\n      opt.old = opt.complete;\n      opt.complete = function() {\n        if (jQuery.isFunction(opt.old)) {\n          opt.old.call(this);\n        }\n        if (opt.queue) {\n          jQuery.dequeue(this, opt.queue);\n        }\n      };\n      return opt;\n    };\n    jQuery.fn.extend({\n      fadeTo: function(speed, to, easing, callback) {\n        return this.filter(isHidden).css(\"opacity\", 0).show().end().animate({opacity: to}, speed, easing, callback);\n      },\n      animate: function(prop, speed, easing, callback) {\n        var empty = jQuery.isEmptyObject(prop),\n            optall = jQuery.speed(speed, easing, callback),\n            doAnimation = function() {\n              var anim = Animation(this, jQuery.extend({}, prop), optall);\n              if (empty || data_priv.get(this, \"finish\")) {\n                anim.stop(true);\n              }\n            };\n        doAnimation.finish = doAnimation;\n        return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n      },\n      stop: function(type, clearQueue, gotoEnd) {\n        var stopQueue = function(hooks) {\n          var stop = hooks.stop;\n          delete hooks.stop;\n          stop(gotoEnd);\n        };\n        if (typeof type !== \"string\") {\n          gotoEnd = clearQueue;\n          clearQueue = type;\n          type = undefined;\n        }\n        if (clearQueue && type !== false) {\n          this.queue(type || \"fx\", []);\n        }\n        return this.each(function() {\n          var dequeue = true,\n              index = type != null && type + \"queueHooks\",\n              timers = jQuery.timers,\n              data = data_priv.get(this);\n          if (index) {\n            if (data[index] && data[index].stop) {\n              stopQueue(data[index]);\n            }\n          } else {\n            for (index in data) {\n              if (data[index] && data[index].stop && rrun.test(index)) {\n                stopQueue(data[index]);\n              }\n            }\n          }\n          for (index = timers.length; index--; ) {\n            if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n              timers[index].anim.stop(gotoEnd);\n              dequeue = false;\n              timers.splice(index, 1);\n            }\n          }\n          if (dequeue || !gotoEnd) {\n            jQuery.dequeue(this, type);\n          }\n        });\n      },\n      finish: function(type) {\n        if (type !== false) {\n          type = type || \"fx\";\n        }\n        return this.each(function() {\n          var index,\n              data = data_priv.get(this),\n              queue = data[type + \"queue\"],\n              hooks = data[type + \"queueHooks\"],\n              timers = jQuery.timers,\n              length = queue ? queue.length : 0;\n          data.finish = true;\n          jQuery.queue(this, type, []);\n          if (hooks && hooks.stop) {\n            hooks.stop.call(this, true);\n          }\n          for (index = timers.length; index--; ) {\n            if (timers[index].elem === this && timers[index].queue === type) {\n              timers[index].anim.stop(true);\n              timers.splice(index, 1);\n            }\n          }\n          for (index = 0; index < length; index++) {\n            if (queue[index] && queue[index].finish) {\n              queue[index].finish.call(this);\n            }\n          }\n          delete data.finish;\n        });\n      }\n    });\n    jQuery.each([\"toggle\", \"show\", \"hide\"], function(i, name) {\n      var cssFn = jQuery.fn[name];\n      jQuery.fn[name] = function(speed, easing, callback) {\n        return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n      };\n    });\n    jQuery.each({\n      slideDown: genFx(\"show\"),\n      slideUp: genFx(\"hide\"),\n      slideToggle: genFx(\"toggle\"),\n      fadeIn: {opacity: \"show\"},\n      fadeOut: {opacity: \"hide\"},\n      fadeToggle: {opacity: \"toggle\"}\n    }, function(name, props) {\n      jQuery.fn[name] = function(speed, easing, callback) {\n        return this.animate(props, speed, easing, callback);\n      };\n    });\n    jQuery.timers = [];\n    jQuery.fx.tick = function() {\n      var timer,\n          i = 0,\n          timers = jQuery.timers;\n      fxNow = jQuery.now();\n      for (; i < timers.length; i++) {\n        timer = timers[i];\n        if (!timer() && timers[i] === timer) {\n          timers.splice(i--, 1);\n        }\n      }\n      if (!timers.length) {\n        jQuery.fx.stop();\n      }\n      fxNow = undefined;\n    };\n    jQuery.fx.timer = function(timer) {\n      jQuery.timers.push(timer);\n      if (timer()) {\n        jQuery.fx.start();\n      } else {\n        jQuery.timers.pop();\n      }\n    };\n    jQuery.fx.interval = 13;\n    jQuery.fx.start = function() {\n      if (!timerId) {\n        timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval);\n      }\n    };\n    jQuery.fx.stop = function() {\n      clearInterval(timerId);\n      timerId = null;\n    };\n    jQuery.fx.speeds = {\n      slow: 600,\n      fast: 200,\n      _default: 400\n    };\n    jQuery.fn.delay = function(time, type) {\n      time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n      type = type || \"fx\";\n      return this.queue(type, function(next, hooks) {\n        var timeout = setTimeout(next, time);\n        hooks.stop = function() {\n          clearTimeout(timeout);\n        };\n      });\n    };\n    (function() {\n      var input = document.createElement(\"input\"),\n          select = document.createElement(\"select\"),\n          opt = select.appendChild(document.createElement(\"option\"));\n      input.type = \"checkbox\";\n      support.checkOn = input.value !== \"\";\n      support.optSelected = opt.selected;\n      select.disabled = true;\n      support.optDisabled = !opt.disabled;\n      input = document.createElement(\"input\");\n      input.value = \"t\";\n      input.type = \"radio\";\n      support.radioValue = input.value === \"t\";\n    })();\n    var nodeHook,\n        boolHook,\n        attrHandle = jQuery.expr.attrHandle;\n    jQuery.fn.extend({\n      attr: function(name, value) {\n        return access(this, jQuery.attr, name, value, arguments.length > 1);\n      },\n      removeAttr: function(name) {\n        return this.each(function() {\n          jQuery.removeAttr(this, name);\n        });\n      }\n    });\n    jQuery.extend({\n      attr: function(elem, name, value) {\n        var hooks,\n            ret,\n            nType = elem.nodeType;\n        if (!elem || nType === 3 || nType === 8 || nType === 2) {\n          return;\n        }\n        if (typeof elem.getAttribute === strundefined) {\n          return jQuery.prop(elem, name, value);\n        }\n        if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n          name = name.toLowerCase();\n          hooks = jQuery.attrHooks[name] || (jQuery.expr.match.bool.test(name) ? boolHook : nodeHook);\n        }\n        if (value !== undefined) {\n          if (value === null) {\n            jQuery.removeAttr(elem, name);\n          } else if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n            return ret;\n          } else {\n            elem.setAttribute(name, value + \"\");\n            return value;\n          }\n        } else if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n          return ret;\n        } else {\n          ret = jQuery.find.attr(elem, name);\n          return ret == null ? undefined : ret;\n        }\n      },\n      removeAttr: function(elem, value) {\n        var name,\n            propName,\n            i = 0,\n            attrNames = value && value.match(rnotwhite);\n        if (attrNames && elem.nodeType === 1) {\n          while ((name = attrNames[i++])) {\n            propName = jQuery.propFix[name] || name;\n            if (jQuery.expr.match.bool.test(name)) {\n              elem[propName] = false;\n            }\n            elem.removeAttribute(name);\n          }\n        }\n      },\n      attrHooks: {type: {set: function(elem, value) {\n            if (!support.radioValue && value === \"radio\" && jQuery.nodeName(elem, \"input\")) {\n              var val = elem.value;\n              elem.setAttribute(\"type\", value);\n              if (val) {\n                elem.value = val;\n              }\n              return value;\n            }\n          }}}\n    });\n    boolHook = {set: function(elem, value, name) {\n        if (value === false) {\n          jQuery.removeAttr(elem, name);\n        } else {\n          elem.setAttribute(name, name);\n        }\n        return name;\n      }};\n    jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function(i, name) {\n      var getter = attrHandle[name] || jQuery.find.attr;\n      attrHandle[name] = function(elem, name, isXML) {\n        var ret,\n            handle;\n        if (!isXML) {\n          handle = attrHandle[name];\n          attrHandle[name] = ret;\n          ret = getter(elem, name, isXML) != null ? name.toLowerCase() : null;\n          attrHandle[name] = handle;\n        }\n        return ret;\n      };\n    });\n    var rfocusable = /^(?:input|select|textarea|button)$/i;\n    jQuery.fn.extend({\n      prop: function(name, value) {\n        return access(this, jQuery.prop, name, value, arguments.length > 1);\n      },\n      removeProp: function(name) {\n        return this.each(function() {\n          delete this[jQuery.propFix[name] || name];\n        });\n      }\n    });\n    jQuery.extend({\n      propFix: {\n        \"for\": \"htmlFor\",\n        \"class\": \"className\"\n      },\n      prop: function(elem, name, value) {\n        var ret,\n            hooks,\n            notxml,\n            nType = elem.nodeType;\n        if (!elem || nType === 3 || nType === 8 || nType === 2) {\n          return;\n        }\n        notxml = nType !== 1 || !jQuery.isXMLDoc(elem);\n        if (notxml) {\n          name = jQuery.propFix[name] || name;\n          hooks = jQuery.propHooks[name];\n        }\n        if (value !== undefined) {\n          return hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined ? ret : (elem[name] = value);\n        } else {\n          return hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null ? ret : elem[name];\n        }\n      },\n      propHooks: {tabIndex: {get: function(elem) {\n            return elem.hasAttribute(\"tabindex\") || rfocusable.test(elem.nodeName) || elem.href ? elem.tabIndex : -1;\n          }}}\n    });\n    if (!support.optSelected) {\n      jQuery.propHooks.selected = {get: function(elem) {\n          var parent = elem.parentNode;\n          if (parent && parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n          return null;\n        }};\n    }\n    jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function() {\n      jQuery.propFix[this.toLowerCase()] = this;\n    });\n    var rclass = /[\\t\\r\\n\\f]/g;\n    jQuery.fn.extend({\n      addClass: function(value) {\n        var classes,\n            elem,\n            cur,\n            clazz,\n            j,\n            finalValue,\n            proceed = typeof value === \"string\" && value,\n            i = 0,\n            len = this.length;\n        if (jQuery.isFunction(value)) {\n          return this.each(function(j) {\n            jQuery(this).addClass(value.call(this, j, this.className));\n          });\n        }\n        if (proceed) {\n          classes = (value || \"\").match(rnotwhite) || [];\n          for (; i < len; i++) {\n            elem = this[i];\n            cur = elem.nodeType === 1 && (elem.className ? (\" \" + elem.className + \" \").replace(rclass, \" \") : \" \");\n            if (cur) {\n              j = 0;\n              while ((clazz = classes[j++])) {\n                if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                  cur += clazz + \" \";\n                }\n              }\n              finalValue = jQuery.trim(cur);\n              if (elem.className !== finalValue) {\n                elem.className = finalValue;\n              }\n            }\n          }\n        }\n        return this;\n      },\n      removeClass: function(value) {\n        var classes,\n            elem,\n            cur,\n            clazz,\n            j,\n            finalValue,\n            proceed = arguments.length === 0 || typeof value === \"string\" && value,\n            i = 0,\n            len = this.length;\n        if (jQuery.isFunction(value)) {\n          return this.each(function(j) {\n            jQuery(this).removeClass(value.call(this, j, this.className));\n          });\n        }\n        if (proceed) {\n          classes = (value || \"\").match(rnotwhite) || [];\n          for (; i < len; i++) {\n            elem = this[i];\n            cur = elem.nodeType === 1 && (elem.className ? (\" \" + elem.className + \" \").replace(rclass, \" \") : \"\");\n            if (cur) {\n              j = 0;\n              while ((clazz = classes[j++])) {\n                while (cur.indexOf(\" \" + clazz + \" \") >= 0) {\n                  cur = cur.replace(\" \" + clazz + \" \", \" \");\n                }\n              }\n              finalValue = value ? jQuery.trim(cur) : \"\";\n              if (elem.className !== finalValue) {\n                elem.className = finalValue;\n              }\n            }\n          }\n        }\n        return this;\n      },\n      toggleClass: function(value, stateVal) {\n        var type = typeof value;\n        if (typeof stateVal === \"boolean\" && type === \"string\") {\n          return stateVal ? this.addClass(value) : this.removeClass(value);\n        }\n        if (jQuery.isFunction(value)) {\n          return this.each(function(i) {\n            jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\n          });\n        }\n        return this.each(function() {\n          if (type === \"string\") {\n            var className,\n                i = 0,\n                self = jQuery(this),\n                classNames = value.match(rnotwhite) || [];\n            while ((className = classNames[i++])) {\n              if (self.hasClass(className)) {\n                self.removeClass(className);\n              } else {\n                self.addClass(className);\n              }\n            }\n          } else if (type === strundefined || type === \"boolean\") {\n            if (this.className) {\n              data_priv.set(this, \"__className__\", this.className);\n            }\n            this.className = this.className || value === false ? \"\" : data_priv.get(this, \"__className__\") || \"\";\n          }\n        });\n      },\n      hasClass: function(selector) {\n        var className = \" \" + selector + \" \",\n            i = 0,\n            l = this.length;\n        for (; i < l; i++) {\n          if (this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf(className) >= 0) {\n            return true;\n          }\n        }\n        return false;\n      }\n    });\n    var rreturn = /\\r/g;\n    jQuery.fn.extend({val: function(value) {\n        var hooks,\n            ret,\n            isFunction,\n            elem = this[0];\n        if (!arguments.length) {\n          if (elem) {\n            hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n            if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n              return ret;\n            }\n            ret = elem.value;\n            return typeof ret === \"string\" ? ret.replace(rreturn, \"\") : ret == null ? \"\" : ret;\n          }\n          return;\n        }\n        isFunction = jQuery.isFunction(value);\n        return this.each(function(i) {\n          var val;\n          if (this.nodeType !== 1) {\n            return;\n          }\n          if (isFunction) {\n            val = value.call(this, i, jQuery(this).val());\n          } else {\n            val = value;\n          }\n          if (val == null) {\n            val = \"\";\n          } else if (typeof val === \"number\") {\n            val += \"\";\n          } else if (jQuery.isArray(val)) {\n            val = jQuery.map(val, function(value) {\n              return value == null ? \"\" : value + \"\";\n            });\n          }\n          hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n          if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n            this.value = val;\n          }\n        });\n      }});\n    jQuery.extend({valHooks: {\n        option: {get: function(elem) {\n            var val = jQuery.find.attr(elem, \"value\");\n            return val != null ? val : jQuery.trim(jQuery.text(elem));\n          }},\n        select: {\n          get: function(elem) {\n            var value,\n                option,\n                options = elem.options,\n                index = elem.selectedIndex,\n                one = elem.type === \"select-one\" || index < 0,\n                values = one ? null : [],\n                max = one ? index + 1 : options.length,\n                i = index < 0 ? max : one ? index : 0;\n            for (; i < max; i++) {\n              option = options[i];\n              if ((option.selected || i === index) && (support.optDisabled ? !option.disabled : option.getAttribute(\"disabled\") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, \"optgroup\"))) {\n                value = jQuery(option).val();\n                if (one) {\n                  return value;\n                }\n                values.push(value);\n              }\n            }\n            return values;\n          },\n          set: function(elem, value) {\n            var optionSet,\n                option,\n                options = elem.options,\n                values = jQuery.makeArray(value),\n                i = options.length;\n            while (i--) {\n              option = options[i];\n              if ((option.selected = jQuery.inArray(option.value, values) >= 0)) {\n                optionSet = true;\n              }\n            }\n            if (!optionSet) {\n              elem.selectedIndex = -1;\n            }\n            return values;\n          }\n        }\n      }});\n    jQuery.each([\"radio\", \"checkbox\"], function() {\n      jQuery.valHooks[this] = {set: function(elem, value) {\n          if (jQuery.isArray(value)) {\n            return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0);\n          }\n        }};\n      if (!support.checkOn) {\n        jQuery.valHooks[this].get = function(elem) {\n          return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n        };\n      }\n    });\n    jQuery.each((\"blur focus focusin focusout load resize scroll unload click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function(i, name) {\n      jQuery.fn[name] = function(data, fn) {\n        return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n      };\n    });\n    jQuery.fn.extend({\n      hover: function(fnOver, fnOut) {\n        return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n      },\n      bind: function(types, data, fn) {\n        return this.on(types, null, data, fn);\n      },\n      unbind: function(types, fn) {\n        return this.off(types, null, fn);\n      },\n      delegate: function(selector, types, data, fn) {\n        return this.on(types, selector, data, fn);\n      },\n      undelegate: function(selector, types, fn) {\n        return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n      }\n    });\n    var nonce = jQuery.now();\n    var rquery = (/\\?/);\n    jQuery.parseJSON = function(data) {\n      return JSON.parse(data + \"\");\n    };\n    jQuery.parseXML = function(data) {\n      var xml,\n          tmp;\n      if (!data || typeof data !== \"string\") {\n        return null;\n      }\n      try {\n        tmp = new DOMParser();\n        xml = tmp.parseFromString(data, \"text/xml\");\n      } catch (e) {\n        xml = undefined;\n      }\n      if (!xml || xml.getElementsByTagName(\"parsererror\").length) {\n        jQuery.error(\"Invalid XML: \" + data);\n      }\n      return xml;\n    };\n    var ajaxLocParts,\n        ajaxLocation,\n        rhash = /#.*$/,\n        rts = /([?&])_=[^&]*/,\n        rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n        rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n        rnoContent = /^(?:GET|HEAD)$/,\n        rprotocol = /^\\/\\//,\n        rurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n        prefilters = {},\n        transports = {},\n        allTypes = \"*/\".concat(\"*\");\n    try {\n      ajaxLocation = location.href;\n    } catch (e) {\n      ajaxLocation = document.createElement(\"a\");\n      ajaxLocation.href = \"\";\n      ajaxLocation = ajaxLocation.href;\n    }\n    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];\n    function addToPrefiltersOrTransports(structure) {\n      return function(dataTypeExpression, func) {\n        if (typeof dataTypeExpression !== \"string\") {\n          func = dataTypeExpression;\n          dataTypeExpression = \"*\";\n        }\n        var dataType,\n            i = 0,\n            dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\n        if (jQuery.isFunction(func)) {\n          while ((dataType = dataTypes[i++])) {\n            if (dataType[0] === \"+\") {\n              dataType = dataType.slice(1) || \"*\";\n              (structure[dataType] = structure[dataType] || []).unshift(func);\n            } else {\n              (structure[dataType] = structure[dataType] || []).push(func);\n            }\n          }\n        }\n      };\n    }\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n      var inspected = {},\n          seekingTransport = (structure === transports);\n      function inspect(dataType) {\n        var selected;\n        inspected[dataType] = true;\n        jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\n          var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n          if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n            options.dataTypes.unshift(dataTypeOrTransport);\n            inspect(dataTypeOrTransport);\n            return false;\n          } else if (seekingTransport) {\n            return !(selected = dataTypeOrTransport);\n          }\n        });\n        return selected;\n      }\n      return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n    }\n    function ajaxExtend(target, src) {\n      var key,\n          deep,\n          flatOptions = jQuery.ajaxSettings.flatOptions || {};\n      for (key in src) {\n        if (src[key] !== undefined) {\n          (flatOptions[key] ? target : (deep || (deep = {})))[key] = src[key];\n        }\n      }\n      if (deep) {\n        jQuery.extend(true, target, deep);\n      }\n      return target;\n    }\n    function ajaxHandleResponses(s, jqXHR, responses) {\n      var ct,\n          type,\n          finalDataType,\n          firstDataType,\n          contents = s.contents,\n          dataTypes = s.dataTypes;\n      while (dataTypes[0] === \"*\") {\n        dataTypes.shift();\n        if (ct === undefined) {\n          ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n        }\n      }\n      if (ct) {\n        for (type in contents) {\n          if (contents[type] && contents[type].test(ct)) {\n            dataTypes.unshift(type);\n            break;\n          }\n        }\n      }\n      if (dataTypes[0] in responses) {\n        finalDataType = dataTypes[0];\n      } else {\n        for (type in responses) {\n          if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n            finalDataType = type;\n            break;\n          }\n          if (!firstDataType) {\n            firstDataType = type;\n          }\n        }\n        finalDataType = finalDataType || firstDataType;\n      }\n      if (finalDataType) {\n        if (finalDataType !== dataTypes[0]) {\n          dataTypes.unshift(finalDataType);\n        }\n        return responses[finalDataType];\n      }\n    }\n    function ajaxConvert(s, response, jqXHR, isSuccess) {\n      var conv2,\n          current,\n          conv,\n          tmp,\n          prev,\n          converters = {},\n          dataTypes = s.dataTypes.slice();\n      if (dataTypes[1]) {\n        for (conv in s.converters) {\n          converters[conv.toLowerCase()] = s.converters[conv];\n        }\n      }\n      current = dataTypes.shift();\n      while (current) {\n        if (s.responseFields[current]) {\n          jqXHR[s.responseFields[current]] = response;\n        }\n        if (!prev && isSuccess && s.dataFilter) {\n          response = s.dataFilter(response, s.dataType);\n        }\n        prev = current;\n        current = dataTypes.shift();\n        if (current) {\n          if (current === \"*\") {\n            current = prev;\n          } else if (prev !== \"*\" && prev !== current) {\n            conv = converters[prev + \" \" + current] || converters[\"* \" + current];\n            if (!conv) {\n              for (conv2 in converters) {\n                tmp = conv2.split(\" \");\n                if (tmp[1] === current) {\n                  conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n                  if (conv) {\n                    if (conv === true) {\n                      conv = converters[conv2];\n                    } else if (converters[conv2] !== true) {\n                      current = tmp[0];\n                      dataTypes.unshift(tmp[1]);\n                    }\n                    break;\n                  }\n                }\n              }\n            }\n            if (conv !== true) {\n              if (conv && s[\"throws\"]) {\n                response = conv(response);\n              } else {\n                try {\n                  response = conv(response);\n                } catch (e) {\n                  return {\n                    state: \"parsererror\",\n                    error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                  };\n                }\n              }\n            }\n          }\n        }\n      }\n      return {\n        state: \"success\",\n        data: response\n      };\n    }\n    jQuery.extend({\n      active: 0,\n      lastModified: {},\n      etag: {},\n      ajaxSettings: {\n        url: ajaxLocation,\n        type: \"GET\",\n        isLocal: rlocalProtocol.test(ajaxLocParts[1]),\n        global: true,\n        processData: true,\n        async: true,\n        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n        accepts: {\n          \"*\": allTypes,\n          text: \"text/plain\",\n          html: \"text/html\",\n          xml: \"application/xml, text/xml\",\n          json: \"application/json, text/javascript\"\n        },\n        contents: {\n          xml: /xml/,\n          html: /html/,\n          json: /json/\n        },\n        responseFields: {\n          xml: \"responseXML\",\n          text: \"responseText\",\n          json: \"responseJSON\"\n        },\n        converters: {\n          \"* text\": String,\n          \"text html\": true,\n          \"text json\": jQuery.parseJSON,\n          \"text xml\": jQuery.parseXML\n        },\n        flatOptions: {\n          url: true,\n          context: true\n        }\n      },\n      ajaxSetup: function(target, settings) {\n        return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);\n      },\n      ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n      ajaxTransport: addToPrefiltersOrTransports(transports),\n      ajax: function(url, options) {\n        if (typeof url === \"object\") {\n          options = url;\n          url = undefined;\n        }\n        options = options || {};\n        var transport,\n            cacheURL,\n            responseHeadersString,\n            responseHeaders,\n            timeoutTimer,\n            parts,\n            fireGlobals,\n            i,\n            s = jQuery.ajaxSetup({}, options),\n            callbackContext = s.context || s,\n            globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n            deferred = jQuery.Deferred(),\n            completeDeferred = jQuery.Callbacks(\"once memory\"),\n            statusCode = s.statusCode || {},\n            requestHeaders = {},\n            requestHeadersNames = {},\n            state = 0,\n            strAbort = \"canceled\",\n            jqXHR = {\n              readyState: 0,\n              getResponseHeader: function(key) {\n                var match;\n                if (state === 2) {\n                  if (!responseHeaders) {\n                    responseHeaders = {};\n                    while ((match = rheaders.exec(responseHeadersString))) {\n                      responseHeaders[match[1].toLowerCase()] = match[2];\n                    }\n                  }\n                  match = responseHeaders[key.toLowerCase()];\n                }\n                return match == null ? null : match;\n              },\n              getAllResponseHeaders: function() {\n                return state === 2 ? responseHeadersString : null;\n              },\n              setRequestHeader: function(name, value) {\n                var lname = name.toLowerCase();\n                if (!state) {\n                  name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;\n                  requestHeaders[name] = value;\n                }\n                return this;\n              },\n              overrideMimeType: function(type) {\n                if (!state) {\n                  s.mimeType = type;\n                }\n                return this;\n              },\n              statusCode: function(map) {\n                var code;\n                if (map) {\n                  if (state < 2) {\n                    for (code in map) {\n                      statusCode[code] = [statusCode[code], map[code]];\n                    }\n                  } else {\n                    jqXHR.always(map[jqXHR.status]);\n                  }\n                }\n                return this;\n              },\n              abort: function(statusText) {\n                var finalText = statusText || strAbort;\n                if (transport) {\n                  transport.abort(finalText);\n                }\n                done(0, finalText);\n                return this;\n              }\n            };\n        deferred.promise(jqXHR).complete = completeDeferred.add;\n        jqXHR.success = jqXHR.done;\n        jqXHR.error = jqXHR.fail;\n        s.url = ((url || s.url || ajaxLocation) + \"\").replace(rhash, \"\").replace(rprotocol, ajaxLocParts[1] + \"//\");\n        s.type = options.method || options.type || s.method || s.type;\n        s.dataTypes = jQuery.trim(s.dataType || \"*\").toLowerCase().match(rnotwhite) || [\"\"];\n        if (s.crossDomain == null) {\n          parts = rurl.exec(s.url.toLowerCase());\n          s.crossDomain = !!(parts && (parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] || (parts[3] || (parts[1] === \"http:\" ? \"80\" : \"443\")) !== (ajaxLocParts[3] || (ajaxLocParts[1] === \"http:\" ? \"80\" : \"443\"))));\n        }\n        if (s.data && s.processData && typeof s.data !== \"string\") {\n          s.data = jQuery.param(s.data, s.traditional);\n        }\n        inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n        if (state === 2) {\n          return jqXHR;\n        }\n        fireGlobals = s.global;\n        if (fireGlobals && jQuery.active++ === 0) {\n          jQuery.event.trigger(\"ajaxStart\");\n        }\n        s.type = s.type.toUpperCase();\n        s.hasContent = !rnoContent.test(s.type);\n        cacheURL = s.url;\n        if (!s.hasContent) {\n          if (s.data) {\n            cacheURL = (s.url += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data);\n            delete s.data;\n          }\n          if (s.cache === false) {\n            s.url = rts.test(cacheURL) ? cacheURL.replace(rts, \"$1_=\" + nonce++) : cacheURL + (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce++;\n          }\n        }\n        if (s.ifModified) {\n          if (jQuery.lastModified[cacheURL]) {\n            jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n          }\n          if (jQuery.etag[cacheURL]) {\n            jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n          }\n        }\n        if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n          jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n        }\n        jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]);\n        for (i in s.headers) {\n          jqXHR.setRequestHeader(i, s.headers[i]);\n        }\n        if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {\n          return jqXHR.abort();\n        }\n        strAbort = \"abort\";\n        for (i in {\n          success: 1,\n          error: 1,\n          complete: 1\n        }) {\n          jqXHR[i](s[i]);\n        }\n        transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n        if (!transport) {\n          done(-1, \"No Transport\");\n        } else {\n          jqXHR.readyState = 1;\n          if (fireGlobals) {\n            globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n          }\n          if (s.async && s.timeout > 0) {\n            timeoutTimer = setTimeout(function() {\n              jqXHR.abort(\"timeout\");\n            }, s.timeout);\n          }\n          try {\n            state = 1;\n            transport.send(requestHeaders, done);\n          } catch (e) {\n            if (state < 2) {\n              done(-1, e);\n            } else {\n              throw e;\n            }\n          }\n        }\n        function done(status, nativeStatusText, responses, headers) {\n          var isSuccess,\n              success,\n              error,\n              response,\n              modified,\n              statusText = nativeStatusText;\n          if (state === 2) {\n            return;\n          }\n          state = 2;\n          if (timeoutTimer) {\n            clearTimeout(timeoutTimer);\n          }\n          transport = undefined;\n          responseHeadersString = headers || \"\";\n          jqXHR.readyState = status > 0 ? 4 : 0;\n          isSuccess = status >= 200 && status < 300 || status === 304;\n          if (responses) {\n            response = ajaxHandleResponses(s, jqXHR, responses);\n          }\n          response = ajaxConvert(s, response, jqXHR, isSuccess);\n          if (isSuccess) {\n            if (s.ifModified) {\n              modified = jqXHR.getResponseHeader(\"Last-Modified\");\n              if (modified) {\n                jQuery.lastModified[cacheURL] = modified;\n              }\n              modified = jqXHR.getResponseHeader(\"etag\");\n              if (modified) {\n                jQuery.etag[cacheURL] = modified;\n              }\n            }\n            if (status === 204 || s.type === \"HEAD\") {\n              statusText = \"nocontent\";\n            } else if (status === 304) {\n              statusText = \"notmodified\";\n            } else {\n              statusText = response.state;\n              success = response.data;\n              error = response.error;\n              isSuccess = !error;\n            }\n          } else {\n            error = statusText;\n            if (status || !statusText) {\n              statusText = \"error\";\n              if (status < 0) {\n                status = 0;\n              }\n            }\n          }\n          jqXHR.status = status;\n          jqXHR.statusText = (nativeStatusText || statusText) + \"\";\n          if (isSuccess) {\n            deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n          } else {\n            deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n          }\n          jqXHR.statusCode(statusCode);\n          statusCode = undefined;\n          if (fireGlobals) {\n            globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n          }\n          completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n          if (fireGlobals) {\n            globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]);\n            if (!(--jQuery.active)) {\n              jQuery.event.trigger(\"ajaxStop\");\n            }\n          }\n        }\n        return jqXHR;\n      },\n      getJSON: function(url, data, callback) {\n        return jQuery.get(url, data, callback, \"json\");\n      },\n      getScript: function(url, callback) {\n        return jQuery.get(url, undefined, callback, \"script\");\n      }\n    });\n    jQuery.each([\"get\", \"post\"], function(i, method) {\n      jQuery[method] = function(url, data, callback, type) {\n        if (jQuery.isFunction(data)) {\n          type = type || callback;\n          callback = data;\n          data = undefined;\n        }\n        return jQuery.ajax({\n          url: url,\n          type: method,\n          dataType: type,\n          data: data,\n          success: callback\n        });\n      };\n    });\n    jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function(i, type) {\n      jQuery.fn[type] = function(fn) {\n        return this.on(type, fn);\n      };\n    });\n    jQuery._evalUrl = function(url) {\n      return jQuery.ajax({\n        url: url,\n        type: \"GET\",\n        dataType: \"script\",\n        async: false,\n        global: false,\n        \"throws\": true\n      });\n    };\n    jQuery.fn.extend({\n      wrapAll: function(html) {\n        var wrap;\n        if (jQuery.isFunction(html)) {\n          return this.each(function(i) {\n            jQuery(this).wrapAll(html.call(this, i));\n          });\n        }\n        if (this[0]) {\n          wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n          if (this[0].parentNode) {\n            wrap.insertBefore(this[0]);\n          }\n          wrap.map(function() {\n            var elem = this;\n            while (elem.firstElementChild) {\n              elem = elem.firstElementChild;\n            }\n            return elem;\n          }).append(this);\n        }\n        return this;\n      },\n      wrapInner: function(html) {\n        if (jQuery.isFunction(html)) {\n          return this.each(function(i) {\n            jQuery(this).wrapInner(html.call(this, i));\n          });\n        }\n        return this.each(function() {\n          var self = jQuery(this),\n              contents = self.contents();\n          if (contents.length) {\n            contents.wrapAll(html);\n          } else {\n            self.append(html);\n          }\n        });\n      },\n      wrap: function(html) {\n        var isFunction = jQuery.isFunction(html);\n        return this.each(function(i) {\n          jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n        });\n      },\n      unwrap: function() {\n        return this.parent().each(function() {\n          if (!jQuery.nodeName(this, \"body\")) {\n            jQuery(this).replaceWith(this.childNodes);\n          }\n        }).end();\n      }\n    });\n    jQuery.expr.filters.hidden = function(elem) {\n      return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n    };\n    jQuery.expr.filters.visible = function(elem) {\n      return !jQuery.expr.filters.hidden(elem);\n    };\n    var r20 = /%20/g,\n        rbracket = /\\[\\]$/,\n        rCRLF = /\\r?\\n/g,\n        rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n        rsubmittable = /^(?:input|select|textarea|keygen)/i;\n    function buildParams(prefix, obj, traditional, add) {\n      var name;\n      if (jQuery.isArray(obj)) {\n        jQuery.each(obj, function(i, v) {\n          if (traditional || rbracket.test(prefix)) {\n            add(prefix, v);\n          } else {\n            buildParams(prefix + \"[\" + (typeof v === \"object\" ? i : \"\") + \"]\", v, traditional, add);\n          }\n        });\n      } else if (!traditional && jQuery.type(obj) === \"object\") {\n        for (name in obj) {\n          buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n        }\n      } else {\n        add(prefix, obj);\n      }\n    }\n    jQuery.param = function(a, traditional) {\n      var prefix,\n          s = [],\n          add = function(key, value) {\n            value = jQuery.isFunction(value) ? value() : (value == null ? \"\" : value);\n            s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n          };\n      if (traditional === undefined) {\n        traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n      }\n      if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {\n        jQuery.each(a, function() {\n          add(this.name, this.value);\n        });\n      } else {\n        for (prefix in a) {\n          buildParams(prefix, a[prefix], traditional, add);\n        }\n      }\n      return s.join(\"&\").replace(r20, \"+\");\n    };\n    jQuery.fn.extend({\n      serialize: function() {\n        return jQuery.param(this.serializeArray());\n      },\n      serializeArray: function() {\n        return this.map(function() {\n          var elements = jQuery.prop(this, \"elements\");\n          return elements ? jQuery.makeArray(elements) : this;\n        }).filter(function() {\n          var type = this.type;\n          return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n        }).map(function(i, elem) {\n          var val = jQuery(this).val();\n          return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          }) : {\n            name: elem.name,\n            value: val.replace(rCRLF, \"\\r\\n\")\n          };\n        }).get();\n      }\n    });\n    jQuery.ajaxSettings.xhr = function() {\n      try {\n        return new XMLHttpRequest();\n      } catch (e) {}\n    };\n    var xhrId = 0,\n        xhrCallbacks = {},\n        xhrSuccessStatus = {\n          0: 200,\n          1223: 204\n        },\n        xhrSupported = jQuery.ajaxSettings.xhr();\n    if (window.ActiveXObject) {\n      jQuery(window).on(\"unload\", function() {\n        for (var key in xhrCallbacks) {\n          xhrCallbacks[key]();\n        }\n      });\n    }\n    support.cors = !!xhrSupported && (\"withCredentials\" in xhrSupported);\n    support.ajax = xhrSupported = !!xhrSupported;\n    jQuery.ajaxTransport(function(options) {\n      var callback;\n      if (support.cors || xhrSupported && !options.crossDomain) {\n        return {\n          send: function(headers, complete) {\n            var i,\n                xhr = options.xhr(),\n                id = ++xhrId;\n            xhr.open(options.type, options.url, options.async, options.username, options.password);\n            if (options.xhrFields) {\n              for (i in options.xhrFields) {\n                xhr[i] = options.xhrFields[i];\n              }\n            }\n            if (options.mimeType && xhr.overrideMimeType) {\n              xhr.overrideMimeType(options.mimeType);\n            }\n            if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n              headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n            }\n            for (i in headers) {\n              xhr.setRequestHeader(i, headers[i]);\n            }\n            callback = function(type) {\n              return function() {\n                if (callback) {\n                  delete xhrCallbacks[id];\n                  callback = xhr.onload = xhr.onerror = null;\n                  if (type === \"abort\") {\n                    xhr.abort();\n                  } else if (type === \"error\") {\n                    complete(xhr.status, xhr.statusText);\n                  } else {\n                    complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, typeof xhr.responseText === \"string\" ? {text: xhr.responseText} : undefined, xhr.getAllResponseHeaders());\n                  }\n                }\n              };\n            };\n            xhr.onload = callback();\n            xhr.onerror = callback(\"error\");\n            callback = xhrCallbacks[id] = callback(\"abort\");\n            try {\n              xhr.send(options.hasContent && options.data || null);\n            } catch (e) {\n              if (callback) {\n                throw e;\n              }\n            }\n          },\n          abort: function() {\n            if (callback) {\n              callback();\n            }\n          }\n        };\n      }\n    });\n    jQuery.ajaxSetup({\n      accepts: {script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},\n      contents: {script: /(?:java|ecma)script/},\n      converters: {\"text script\": function(text) {\n          jQuery.globalEval(text);\n          return text;\n        }}\n    });\n    jQuery.ajaxPrefilter(\"script\", function(s) {\n      if (s.cache === undefined) {\n        s.cache = false;\n      }\n      if (s.crossDomain) {\n        s.type = \"GET\";\n      }\n    });\n    jQuery.ajaxTransport(\"script\", function(s) {\n      if (s.crossDomain) {\n        var script,\n            callback;\n        return {\n          send: function(_, complete) {\n            script = jQuery(\"<script>\").prop({\n              async: true,\n              charset: s.scriptCharset,\n              src: s.url\n            }).on(\"load error\", callback = function(evt) {\n              script.remove();\n              callback = null;\n              if (evt) {\n                complete(evt.type === \"error\" ? 404 : 200, evt.type);\n              }\n            });\n            document.head.appendChild(script[0]);\n          },\n          abort: function() {\n            if (callback) {\n              callback();\n            }\n          }\n        };\n      }\n    });\n    var oldCallbacks = [],\n        rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n    jQuery.ajaxSetup({\n      jsonp: \"callback\",\n      jsonpCallback: function() {\n        var callback = oldCallbacks.pop() || (jQuery.expando + \"_\" + (nonce++));\n        this[callback] = true;\n        return callback;\n      }\n    });\n    jQuery.ajaxPrefilter(\"json jsonp\", function(s, originalSettings, jqXHR) {\n      var callbackName,\n          overwritten,\n          responseContainer,\n          jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && !(s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test(s.data) && \"data\");\n      if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n        callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n        if (jsonProp) {\n          s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n        } else if (s.jsonp !== false) {\n          s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n        }\n        s.converters[\"script json\"] = function() {\n          if (!responseContainer) {\n            jQuery.error(callbackName + \" was not called\");\n          }\n          return responseContainer[0];\n        };\n        s.dataTypes[0] = \"json\";\n        overwritten = window[callbackName];\n        window[callbackName] = function() {\n          responseContainer = arguments;\n        };\n        jqXHR.always(function() {\n          window[callbackName] = overwritten;\n          if (s[callbackName]) {\n            s.jsonpCallback = originalSettings.jsonpCallback;\n            oldCallbacks.push(callbackName);\n          }\n          if (responseContainer && jQuery.isFunction(overwritten)) {\n            overwritten(responseContainer[0]);\n          }\n          responseContainer = overwritten = undefined;\n        });\n        return \"script\";\n      }\n    });\n    jQuery.parseHTML = function(data, context, keepScripts) {\n      if (!data || typeof data !== \"string\") {\n        return null;\n      }\n      if (typeof context === \"boolean\") {\n        keepScripts = context;\n        context = false;\n      }\n      context = context || document;\n      var parsed = rsingleTag.exec(data),\n          scripts = !keepScripts && [];\n      if (parsed) {\n        return [context.createElement(parsed[1])];\n      }\n      parsed = jQuery.buildFragment([data], context, scripts);\n      if (scripts && scripts.length) {\n        jQuery(scripts).remove();\n      }\n      return jQuery.merge([], parsed.childNodes);\n    };\n    var _load = jQuery.fn.load;\n    jQuery.fn.load = function(url, params, callback) {\n      if (typeof url !== \"string\" && _load) {\n        return _load.apply(this, arguments);\n      }\n      var selector,\n          type,\n          response,\n          self = this,\n          off = url.indexOf(\" \");\n      if (off >= 0) {\n        selector = jQuery.trim(url.slice(off));\n        url = url.slice(0, off);\n      }\n      if (jQuery.isFunction(params)) {\n        callback = params;\n        params = undefined;\n      } else if (params && typeof params === \"object\") {\n        type = \"POST\";\n      }\n      if (self.length > 0) {\n        jQuery.ajax({\n          url: url,\n          type: type,\n          dataType: \"html\",\n          data: params\n        }).done(function(responseText) {\n          response = arguments;\n          self.html(selector ? jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : responseText);\n        }).complete(callback && function(jqXHR, status) {\n          self.each(callback, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      }\n      return this;\n    };\n    jQuery.expr.filters.animated = function(elem) {\n      return jQuery.grep(jQuery.timers, function(fn) {\n        return elem === fn.elem;\n      }).length;\n    };\n    var docElem = window.document.documentElement;\n    function getWindow(elem) {\n      return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;\n    }\n    jQuery.offset = {setOffset: function(elem, options, i) {\n        var curPosition,\n            curLeft,\n            curCSSTop,\n            curTop,\n            curOffset,\n            curCSSLeft,\n            calculatePosition,\n            position = jQuery.css(elem, \"position\"),\n            curElem = jQuery(elem),\n            props = {};\n        if (position === \"static\") {\n          elem.style.position = \"relative\";\n        }\n        curOffset = curElem.offset();\n        curCSSTop = jQuery.css(elem, \"top\");\n        curCSSLeft = jQuery.css(elem, \"left\");\n        calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1;\n        if (calculatePosition) {\n          curPosition = curElem.position();\n          curTop = curPosition.top;\n          curLeft = curPosition.left;\n        } else {\n          curTop = parseFloat(curCSSTop) || 0;\n          curLeft = parseFloat(curCSSLeft) || 0;\n        }\n        if (jQuery.isFunction(options)) {\n          options = options.call(elem, i, curOffset);\n        }\n        if (options.top != null) {\n          props.top = (options.top - curOffset.top) + curTop;\n        }\n        if (options.left != null) {\n          props.left = (options.left - curOffset.left) + curLeft;\n        }\n        if (\"using\" in options) {\n          options.using.call(elem, props);\n        } else {\n          curElem.css(props);\n        }\n      }};\n    jQuery.fn.extend({\n      offset: function(options) {\n        if (arguments.length) {\n          return options === undefined ? this : this.each(function(i) {\n            jQuery.offset.setOffset(this, options, i);\n          });\n        }\n        var docElem,\n            win,\n            elem = this[0],\n            box = {\n              top: 0,\n              left: 0\n            },\n            doc = elem && elem.ownerDocument;\n        if (!doc) {\n          return;\n        }\n        docElem = doc.documentElement;\n        if (!jQuery.contains(docElem, elem)) {\n          return box;\n        }\n        if (typeof elem.getBoundingClientRect !== strundefined) {\n          box = elem.getBoundingClientRect();\n        }\n        win = getWindow(doc);\n        return {\n          top: box.top + win.pageYOffset - docElem.clientTop,\n          left: box.left + win.pageXOffset - docElem.clientLeft\n        };\n      },\n      position: function() {\n        if (!this[0]) {\n          return;\n        }\n        var offsetParent,\n            offset,\n            elem = this[0],\n            parentOffset = {\n              top: 0,\n              left: 0\n            };\n        if (jQuery.css(elem, \"position\") === \"fixed\") {\n          offset = elem.getBoundingClientRect();\n        } else {\n          offsetParent = this.offsetParent();\n          offset = this.offset();\n          if (!jQuery.nodeName(offsetParent[0], \"html\")) {\n            parentOffset = offsetParent.offset();\n          }\n          parentOffset.top += jQuery.css(offsetParent[0], \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent[0], \"borderLeftWidth\", true);\n        }\n        return {\n          top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n          left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n        };\n      },\n      offsetParent: function() {\n        return this.map(function() {\n          var offsetParent = this.offsetParent || docElem;\n          while (offsetParent && (!jQuery.nodeName(offsetParent, \"html\") && jQuery.css(offsetParent, \"position\") === \"static\")) {\n            offsetParent = offsetParent.offsetParent;\n          }\n          return offsetParent || docElem;\n        });\n      }\n    });\n    jQuery.each({\n      scrollLeft: \"pageXOffset\",\n      scrollTop: \"pageYOffset\"\n    }, function(method, prop) {\n      var top = \"pageYOffset\" === prop;\n      jQuery.fn[method] = function(val) {\n        return access(this, function(elem, method, val) {\n          var win = getWindow(elem);\n          if (val === undefined) {\n            return win ? win[prop] : elem[method];\n          }\n          if (win) {\n            win.scrollTo(!top ? val : window.pageXOffset, top ? val : window.pageYOffset);\n          } else {\n            elem[method] = val;\n          }\n        }, method, val, arguments.length, null);\n      };\n    });\n    jQuery.each([\"top\", \"left\"], function(i, prop) {\n      jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {\n        if (computed) {\n          computed = curCSS(elem, prop);\n          return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n        }\n      });\n    });\n    jQuery.each({\n      Height: \"height\",\n      Width: \"width\"\n    }, function(name, type) {\n      jQuery.each({\n        padding: \"inner\" + name,\n        content: type,\n        \"\": \"outer\" + name\n      }, function(defaultExtra, funcName) {\n        jQuery.fn[funcName] = function(margin, value) {\n          var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n              extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n          return access(this, function(elem, type, value) {\n            var doc;\n            if (jQuery.isWindow(elem)) {\n              return elem.document.documentElement[\"client\" + name];\n            }\n            if (elem.nodeType === 9) {\n              doc = elem.documentElement;\n              return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n            }\n            return value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);\n          }, type, chainable ? margin : undefined, chainable, null);\n        };\n      });\n    });\n    jQuery.fn.size = function() {\n      return this.length;\n    };\n    jQuery.fn.andSelf = jQuery.fn.addBack;\n    if (typeof define === \"function\" && define.amd) {\n      define(\"jquery\", [], function() {\n        return jQuery;\n      });\n    }\n    var _jQuery = window.jQuery,\n        _$ = window.$;\n    jQuery.noConflict = function(deep) {\n      if (window.$ === jQuery) {\n        window.$ = _$;\n      }\n      if (deep && window.jQuery === jQuery) {\n        window.jQuery = _jQuery;\n      }\n      return jQuery;\n    };\n    if (typeof noGlobal === strundefined) {\n      window.jQuery = window.$ = jQuery;\n    }\n    return jQuery;\n  }));\n  return {};\n}.call(typeof global !== 'undefined' ? global : this);\n\n","/*!\n * jQuery JavaScript Library v2.1.1\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-05-01T17:11Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper window is present,\n\t\t// execute the factory and get jQuery\n\t\t// For environments that do not inherently posses a window with a document\n\t\t// (such as Node.js), expose a jQuery-making factory as module.exports\n\t\t// This accentuates the need for the creation of a real window\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Can't do this because several apps including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n// Support: Firefox 18+\n//\n\nvar arr = [];\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\t// Use the correct document accordingly with window argument (sandbox)\n\tdocument = window.document,\n\n\tversion = \"2.1.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\treturn !jQuery.isArray( obj ) && obj - parseFloat( obj ) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\t\t// Support: Android < 4.0, iOS < 6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t// and removal by using an indirect global eval\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n});\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v1.10.19\n * http://sizzlejs.com/\n *\n * Copyright 2013 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-04-18\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + -(new Date()),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tstrundefined = typeof undefined,\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf if we can't use a native one\n\tindexOf = arr.indexOf || function( elem ) {\n\t\tvar i = 0,\n\t\t\tlen = this.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( this[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\n\tif ( !selector || typeof selector !== \"string\" ) {\n\t\treturn results;\n\t}\n\n\tif ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {\n\t\treturn [];\n\t}\n\n\tif ( documentIsHTML && !seed ) {\n\n\t\t// Shortcuts\n\t\tif ( (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document (jQuery #6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType === 9 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== strundefined && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc,\n\t\tparent = doc.defaultView;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\n\t// Support tests\n\tdocumentIsHTML = !isXML( doc );\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent !== parent.top ) {\n\t\t// IE11 does not have attachEvent, so all must suffer\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", function() {\n\t\t\t\tsetDocument();\n\t\t\t}, false );\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", function() {\n\t\t\t\tsetDocument();\n\t\t\t});\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Check if getElementsByClassName can be trusted\n\tsupport.getElementsByClassName = rnative.test( doc.getElementsByClassName ) && assert(function( div ) {\n\t\tdiv.innerHTML = \"<div class='a'></div><div class='a i'></div>\";\n\n\t\t// Support: Safari<4\n\t\t// Catch class over-caching\n\t\tdiv.firstChild.className = \"i\";\n\t\t// Support: Opera<10\n\t\t// Catch gEBCN failure to find non-leading classes\n\t\treturn div.getElementsByClassName(\"i\").length === 2;\n\t});\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== strundefined && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== strundefined ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\t\t\t}\n\t\t} :\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdiv.innerHTML = \"<select msallowclip=''><option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowclip^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch(e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf.call( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (oldCache = outerCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\touterCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf.call( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\treturn ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is no seed and only one group\n\tif ( match.length === 1 ) {\n\n\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome<14\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) >= 0 ) !== not;\n\t});\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t}));\n};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n});\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[0] === \"<\" && selector[ selector.length - 1 ] === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn typeof rootjQuery.ready !== \"undefined\" ?\n\t\t\t\trootjQuery.ready( selector ) :\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t// methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.extend({\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\n\t\twhile ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar matched = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn matched;\n\t}\n});\n\njQuery.fn.extend({\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within\n\t// the matched set of elements\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.unique(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\twhile ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.unique( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n});\nvar rnotwhite = (/\\S+/g);\n\n\n\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// Flag to know if list is currently firing\n\t\tfiring,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend({\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n});\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\twindow.removeEventListener( \"load\", completed, false );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// we once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[0], key ) : emptyGet;\n};\n\n\n/**\n * Determines whether an object can have data\n */\njQuery.acceptData = function( owner ) {\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\nfunction Data() {\n\t// Support: Android < 4,\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\n\t// return new empty object instead with no [[set]] accessor\n\tObject.defineProperty( this.cache = {}, 0, {\n\t\tget: function() {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tthis.expando = jQuery.expando + Math.random();\n}\n\nData.uid = 1;\nData.accepts = jQuery.acceptData;\n\nData.prototype = {\n\tkey: function( owner ) {\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return the key for a frozen object.\n\t\tif ( !Data.accepts( owner ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar descriptor = {},\n\t\t\t// Check if the owner object already has a cache key\n\t\t\tunlock = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !unlock ) {\n\t\t\tunlock = Data.uid++;\n\n\t\t\t// Secure it in a non-enumerable, non-writable property\n\t\t\ttry {\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\n\t\t\t\tObject.defineProperties( owner, descriptor );\n\n\t\t\t// Support: Android < 4\n\t\t\t// Fallback to a less secure definition\n\t\t\t} catch ( e ) {\n\t\t\t\tdescriptor[ this.expando ] = unlock;\n\t\t\t\tjQuery.extend( owner, descriptor );\n\t\t\t}\n\t\t}\n\n\t\t// Ensure the cache object\n\t\tif ( !this.cache[ unlock ] ) {\n\t\t\tthis.cache[ unlock ] = {};\n\t\t}\n\n\t\treturn unlock;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\t// There may be an unlock assigned to this node,\n\t\t\t// if there is no entry for this \"owner\", create one inline\n\t\t\t// and set the unlock as though an owner entry had always existed\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\t\t\t// Fresh assignments by object are shallow copied\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\n\t\t\t} else {\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\t// Either a valid cache is found, or will be created.\n\t\t// New caches will be created and the unlock returned,\n\t\t// allowing direct access to the newly created\n\t\t// empty data object. A valid owner object must be provided.\n\t\tvar cache = this.cache[ this.key( owner ) ];\n\n\t\treturn key === undefined ?\n\t\t\tcache : cache[ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\n\t\t}\n\n\t\t// [*]When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.cache[ unlock ] = {};\n\n\t\t} else {\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\treturn !jQuery.isEmptyObject(\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\n\t\t);\n\t},\n\tdiscard: function( owner ) {\n\t\tif ( owner[ this.expando ] ) {\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\n\t\t}\n\t}\n};\nvar data_priv = new Data();\n\nvar data_user = new Data();\n\n\n\n/*\n\tImplementation Summary\n\n\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t2. Improve the module's maintainability by reducing the storage\n\t\tpaths to a single mechanism.\n\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n*/\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdata_user.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend({\n\thasData: function( elem ) {\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn data_user.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdata_user.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to data_priv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn data_priv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdata_priv.remove( elem, name );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = data_user.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tdata_user.set( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data,\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = data_user.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = data_user.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each(function() {\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = data_user.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdata_user.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\n\t\t\t\t\tdata_user.set( this, key, value );\n\t\t\t\t}\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tdata_user.remove( this, key );\n\t\t});\n\t}\n});\n\n\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = data_priv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = data_priv.access( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// not intended for public consumption - generates a queueHooks object, or returns the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn data_priv.get( elem, key ) || data_priv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tdata_priv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n\t};\n\nvar rcheckableType = (/^(?:checkbox|radio)$/i);\n\n\n\n(function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// #11217 - WebKit loses check when the name is after the checked attribute\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` need .setAttribute for WWA\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3\n\t// old WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\t// Support: IE9-IE11+\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n})();\nvar strundefined = typeof undefined;\n\n\n\nsupport.focusinBubbles = \"onfocusin\" in window;\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\t\t\tdata_priv.remove( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && jQuery.acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or\n\t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome < 28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle, false );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\t\t\t// Support: Android < 4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && e.preventDefault ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopImmediatePropagation ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// Create \"bubbling\" focus and blur events\n// Support: Firefox, Chrome, Safari\nif ( !support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdata_priv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdata_priv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdata_priv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar origFn, type;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\n\t\t// Support: IE 9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\n// Support: IE 9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdata_priv.set(\n\t\t\telems[ i ], \"globalEval\", !refElements || data_priv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( data_priv.hasData( src ) ) {\n\t\tpdataOld = data_priv.access( src );\n\t\tpdataCur = data_priv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( data_user.hasData( src ) ) {\n\t\tudataOld = data_user.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdata_user.set( dest, udataCur );\n\t}\n}\n\nfunction getAll( context, tag ) {\n\tvar ret = context.getElementsByTagName ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\tcontext.querySelectorAll ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n// Support: IE >= 9\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Support: IE >= 9\n\t\t// Fix Cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [],\n\t\t\ti = 0,\n\t\t\tl = elems.length;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[ 2 ];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t\t// Fixes #12346\n\t\t\t\t\t// Support: Webkit, IE\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type, key,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[ i ]) !== undefined; i++ ) {\n\t\t\tif ( jQuery.acceptData( elem ) ) {\n\t\t\t\tkey = elem[ data_priv.expando ];\n\n\t\t\t\tif ( key && (data = data_priv.cache[ key ]) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( data_priv.cache[ key ] ) {\n\t\t\t\t\t\t// Discard any remaining `private` data\n\t\t\t\t\t\tdelete data_priv.cache[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Discard any remaining `user` data\n\t\t\tdelete data_user.cache[ elem[ data_user.expando ] ];\n\t\t}\n\t}\n});\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each(function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\tremove: function( selector, keepData /* Internal Use Only */ ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map(function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar arg = arguments[ 0 ];\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\targ = this.parentNode;\n\n\t\t\tjQuery.cleanData( getAll( this ) );\n\n\t\t\tif ( arg ) {\n\t\t\t\targ.replaceChild( elem, this );\n\t\t\t}\n\t\t});\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn arg && (arg.length || arg.nodeType) ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[ i ], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!data_priv.access( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\n\nvar iframe,\n\telemdisplay = {};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar style,\n\t\telem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\t// getDefaultComputedStyle might be reliably used only on attached element\n\t\tdisplay = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?\n\n\t\t\t// Use of this method is a temporary fix (more like optmization) until something better comes along,\n\t\t\t// since it was removed from specification and supported only in FF\n\t\t\tstyle.display : jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = (iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" )).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = (/^margin/);\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\t\treturn elem.ownerDocument.defaultView.getComputedStyle( elem, null );\n\t};\n\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') in IE9, see #12537\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\t}\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: iOS < 6\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\t\t\t\t// Hook not needed (or it's not possible to use it due to missing dependency),\n\t\t\t\t// remove it.\n\t\t\t\t// Since there are no other hooks for marginRight, remove the whole object.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\n\t\t\treturn (this.get = hookFn).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\n(function() {\n\tvar pixelPositionVal, boxSizingReliableVal,\n\t\tdocElem = document.documentElement,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" +\n\t\t\"position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computePixelPositionAndBoxSizingReliable() {\n\t\tdiv.style.cssText =\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" +\n\t\t\t\"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" +\n\t\t\t\"border:1px;padding:1px;width:4px;position:absolute\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocElem.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div, null );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\tdocElem.removeChild( container );\n\t}\n\n\t// Support: node.js jsdom\n\t// Don't assume that getComputedStyle is a property of the global object\n\tif ( window.getComputedStyle ) {\n\t\tjQuery.extend( support, {\n\t\t\tpixelPosition: function() {\n\t\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t\t// No need to check if the test was already performed, though.\n\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\treturn pixelPositionVal;\n\t\t\t},\n\t\t\tboxSizingReliable: function() {\n\t\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\t}\n\t\t\t\treturn boxSizingReliableVal;\n\t\t\t},\n\t\t\treliableMarginRight: function() {\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\t\tvar ret,\n\t\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\t\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n\t\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\t\tdiv.style.width = \"1px\";\n\t\t\t\tdocElem.appendChild( container );\n\n\t\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );\n\n\t\t\t\tdocElem.removeChild( container );\n\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t});\n\t}\n})();\n\n\n// A method for quickly swapping in/out CSS properties to get correct calculations.\njQuery.swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar\n\t// swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trnumsplit = new RegExp( \"^(\" + pnum + \")(.*)$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + pnum + \")\", \"i\" ),\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// check for vendor prefixed names\n\tvar capName = name[0].toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// at this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// at this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// at this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// we need the check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = data_priv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = data_priv.access( elem, \"olddisplay\", defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdata_priv.set( elem, \"olddisplay\", hidden ? display : jQuery.css( elem, \"display\" ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend({\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t// normalize float css property\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// convert relative number strings (+= or -=) to relative numbers. #7345\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set. See: #7116\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Fixes #8908, it can be done more correctly by specifying setters in cssHooks,\n\t\t\t// but it would mean to define eight (for every problematic property) identical functions\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t//convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Return, converting to number if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\t\t\t\t// certain elements can have dimension info if we invisibly show them\n\t\t\t\t// however, it must have a current display style that would benefit from this\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) && elem.offsetWidth === 0 ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// Work around by temporarily setting element display to inline-block\n\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails\n\t\t\t// so, simple values such as \"10px\" are parsed to Float.\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// use step hook for back compat - use cssHook if its there - use .style if its\n\t\t\t// available and use plain properties where available\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\n\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t}\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*\n\t\t\t\t\t// Use a string for doubling factor so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t\t// And breaking the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t} ]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// if we include width, step value is 1 to do all cssExpand values,\n\t// if we don't include width, step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// we're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = data_priv.get( elem, \"fxshow\" );\n\n\t// handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// doing this makes sure that the complete handler will be called\n\t\t\t// before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdata_priv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always(function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t});\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = data_priv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\n\t\t\tdata_priv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( (display === \"none\" ? defaultDisplay( elem.nodeName ) : display) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// not quite $.extend, this wont overwrite keys already present.\n\t\t\t// also - reusing 'index' from above because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// if we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// resolve when we played the last frame\n\t\t\t\t// otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || data_priv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = data_priv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// start the next in the queue if the last step wasn't forced\n\t\t\t// timers currently will call their complete callbacks, which will dequeue\n\t\t\t// but only if they were gotoEnd\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = data_priv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\tclearTimeout( timeout );\n\t\t};\n\t});\n};\n\n\n(function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS 5.1, Android 4.x, Android 2.3\n\t// Check the default checkbox/radio value (\"\" on old WebKit; \"on\" elsewhere)\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Must access the parent to make an option select properly\n\t// Support: IE9, IE10\n\tsupport.optSelected = opt.selected;\n\n\t// Make sure that the options inside disabled selects aren't marked as disabled\n\t// (WebKit marks them as disabled)\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Check if an input maintains its value after becoming a radio\n\t// Support: IE9, IE10\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n})();\n\n\nvar nodeHook, boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE6-9\n\t\t\t\t\t// Reset value to default in case type is set after value during creation\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n});\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i;\n\njQuery.fn.extend({\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.hasAttribute( \"tabindex\" ) || rfocusable.test( elem.nodeName ) || elem.href ?\n\t\t\t\t\telem.tabIndex :\n\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Support: IE9+\n// Selectedness for an option in an optgroup can be inaccurate\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\njQuery.fn.extend({\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tdata_priv.set( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed \"false\",\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : data_priv.get( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n});\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend({\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE6-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ? !option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\t// Support: Webkit\n\t\t\t// \"\" is returned instead of \"on\" if a value isn't specified\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\n\n\nvar nonce = jQuery.now();\n\nvar rquery = (/\\?/);\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, tmp;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\ttmp = new DOMParser();\n\t\txml = tmp.parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\t// Document location\n\tajaxLocParts,\n\tajaxLocation,\n\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat(\"*\");\n\n// #8138, IE may throw an exception when accessing\n// a field from window.location if document.domain has been set\ntry {\n\tajaxLocation = location.href;\n} catch( e ) {\n\t// Use the href attribute of an A element\n\t// since IE will modify it given document.location\n\tajaxLocation = document.createElement( \"a\" );\n\tajaxLocation.href = \"\";\n\tajaxLocation = ajaxLocation.href;\n}\n\n// Segment location into parts\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\tfireGlobals = s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We extract error from statusText\n\t\t\t\t// then normalize statusText and status for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n});\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax({\n\t\turl: url,\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t});\n};\n\n\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n};\njQuery.expr.filters.visible = function( elem ) {\n\treturn !jQuery.expr.filters.hidden( elem );\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function() {\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrId = 0,\n\txhrCallbacks = {},\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\n// Support: IE9\n// Open requests must be manually aborted on unload (#5280)\nif ( window.ActiveXObject ) {\n\tjQuery( window ).on( \"unload\", function() {\n\t\tfor ( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t});\n}\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr(),\n\t\t\t\t\tid = ++xhrId;\n\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[ id ] = callback(\"abort\");\n\n\t\t\t\ttry {\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery(\"<script>\").prop({\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t}).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\n\n\n\n\n// data: string of html\n// context (optional): If specified, the fragment will be created in this context, defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[1] ) ];\n\t}\n\n\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t}).length;\n};\n\n\n\n\nvar docElem = window.document.documentElement;\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf(\"auto\") > -1;\n\n\t\t// Need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each(function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t});\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\t// If we don't have gBCR, just use 0,0 rather than error\n\t\t// BlackBerry 5, iOS 3 (original iPhone)\n\t\tif ( typeof elem.getBoundingClientRect !== strundefined ) {\n\t\t\tbox = elem.getBoundingClientRect();\n\t\t}\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// We assume that getBoundingClientRect is available when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\" ) === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : window.pageXOffset,\n\t\t\t\t\ttop ? val : window.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// getComputedStyle returns percent when specified for top/left/bottom/right\n// rather than make the css module depend on the offset module, we just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t// if curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n});\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t});\n}\n\n\n\n\nvar\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in\n// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === strundefined ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n\n}));\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/util/library\", \"can/view/elements\"], function (can) {\n\t// ## Helpers\n\t// Some browsers don't allow expando properties on HTMLTextNodes\n\t// so let's try to assign a custom property, an 'expando' property.\n\t// We use this boolean to determine how we are going to hold on\n\t// to HTMLTextNode within a nodeList.  More about this in the 'id'\n\t// function.\n\tvar canExpando = true;\n\ttry {\n\t\tdocument.createTextNode('')._ = 0;\n\t} catch (ex) {\n\t\tcanExpando = false;\n\t}\n\t\n\t// A mapping of element ids to nodeList id allowing us to quickly find an element\n\t// that needs to be replaced when updated.\n\tvar nodeMap = {},\n\t\t// A mapping of ids to text nodes, this map will be used in the \n\t\t// case of the browser not supporting expando properties.\n\t\ttextNodeMap = {},\n\t\t// The name of the expando property; the value returned \n\t\t// given a nodeMap key.\n\t\texpando = 'ejs_' + Math.random(),\n\t\t// The id used as the key in our nodeMap, this integer\n\t\t// will be preceded by 'element_' or 'obj_' depending on whether\n\t\t// the element has a nodeName.\n\t\t_id = 0,\n\n\t\t// ## nodeLists.id\n\t\t// Given a template node, create an id on the node as a expando\n\t\t// property, or if the node is an HTMLTextNode and the browser\n\t\t// doesn't support expando properties store the id with a\n\t\t// reference to the text node in an internal collection then return\n\t\t// the lookup id.\n\t\tid = function (node) {\n\t\t\t// If the browser supports expando properties or the node\n\t\t\t// provided is not an HTMLTextNode, we don't need to work\n\t\t\t// with the internal textNodeMap and we can place the property\n\t\t\t// on the node.\n\t\t\tif (canExpando || node.nodeType !== 3) {\n\t\t\t\t// If the node already has an (internal) id, then just \n\t\t\t\t// return the key of the nodeMap. This would be the case\n\t\t\t\t// in updating and unregistering a nodeList.\n\t\t\t\tif (node[expando]) {\n\t\t\t\t\treturn node[expando];\n\t\t\t\t} else {\n\t\t\t\t\t// If the node isn't already referenced in the map we need\n\t\t\t\t\t// to generate a lookup id and place it on the node itself.\n\t\t\t\t\t++_id;\n\t\t\t\t\treturn node[expando] = (node.nodeName ? 'element_' : 'obj_') + _id;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// The nodeList has a specific collection for HTMLTextNodes for \n\t\t\t\t// (older) browsers that do not support expando properties.\n\t\t\t\tfor (var textNodeID in textNodeMap) {\n\t\t\t\t\tif (textNodeMap[textNodeID] === node) {\n\t\t\t\t\t\treturn textNodeID;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If we didn't find the node, we need to register it and return\n\t\t\t\t// the id used.\n\t\t\t\t++_id;\n\n\t\t\t\t// If we didn't find the node, we need to register it and return\n\t\t\t\t// the id used.\n\t\t\t\t// \n\t\t\t\t// We have to store the node itself because of the browser's lack\n\t\t\t\t// of support for expando properties (i.e. we can't use a look-up\n\t\t\t\t// table and store the id on the node as a custom property).\n\t\t\t\ttextNodeMap['text_' + _id] = node;\n\t\t\t\treturn 'text_' + _id;\n\t\t\t}\n\t\t},\n\t\tsplice = [].splice,\n\t\tpush = [].push,\n\n\t\t// ## nodeLists.itemsInChildListTree\n\t\t// Given a nodeList return the number of child items in the provided\n\t\t// list and any child lists.\n\t\titemsInChildListTree = function(list){\n\t\t\tvar count = 0;\n\t\t\tfor(var i = 0, len = list.length ; i < len; i++){\n\t\t\t\tvar item = list[i];\n\t\t\t\t// If the item is an HTMLElement then increment the count by 1.\n\t\t\t\tif(item.nodeType) {\n\t\t\t\t\tcount++;\n\t\t\t\t} else {\n\t\t\t\t\t// If the item is not an HTMLElement it is a list, so\n\t\t\t\t\t// increment the count by the number of items in the child\n\t\t\t\t\t// list.\n\t\t\t\t\tcount += itemsInChildListTree(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t};\n\n\t// ## Registering & Updating\n\t// \n\t// To keep all live-bound sections knowing which elements they are managing,\n\t// all live-bound elments are registered and updated when they change.\n\t//\n\t// For example, the above template, when rendered with data like:\n\t// \n\t//     data = new can.Map({\n\t//         items: [\"first\",\"second\"]\n\t//     })\n\t//\n\t// This will first render the following content:\n\t// \n\t//     <div>\n\t//         <span data-view-id='5'/>\n\t//     </div>\n\t// \n\t// When the `5` callback is called, this will register the `<span>` like:\n\t// \n\t//     var ifsNodes = [<span 5>]\n\t//     nodeLists.register(ifsNodes);\n\t// \n\t// And then render `{{if}}`'s contents and update `ifsNodes` with it:\n\t//\n\t//     nodeLists.update( ifsNodes, [<\"\\nItems:\\n\">, <span data-view-id=\"6\">] );\n\t//\n\t// Next, hookup `6` is called which will regsiter the `<span>` like:\n\t//\n\t//     var eachsNodes = [<span 6>];\n\t//     nodeLists.register(eachsNodes);\n\t//\n\t// And then it will render `{{#each}}`'s content and update `eachsNodes` with it:\n\t//\n\t//     nodeLists.update(eachsNodes, [<label>,<label>]);\n\t//\n\t// As `nodeLists` knows that `eachsNodes` is inside `ifsNodes`, it also updates\n\t// `ifsNodes`'s nodes to look like:\n\t//\n\t//     [<\"\\nItems:\\n\">,<label>,<label>]\n\t//\n\t// Now, if all items were removed, `{{#if}}` would be able to remove\n\t// all the `<label>` elements.\n\t//\n\t// When you regsiter a nodeList, you can also provide a callback to know when\n\t// that nodeList has been replaced by a parent nodeList.  This is\n\t// useful for tearing down live-binding.\n\tvar nodeLists = {\n\t\tid: id,\n\t\t\n\t\t// ## nodeLists.update\n\t\t// Updates a nodeList with new items, i.e. when values for the template have changed.\n\t\tupdate: function (nodeList, newNodes) {\n\t\t\t// Unregister all childNodeLists.\n\t\t\tvar oldNodes = nodeLists.unregisterChildren(nodeList);\n\t\t\t\n\t\t\tnewNodes = can.makeArray(newNodes);\n\n\t\t\tvar oldListLength = nodeList.length;\n\t\t\t\n\t\t\t// Replace oldNodeLists's contents.\n\t\t\tsplice.apply(nodeList, [\n\t\t\t\t0,\n\t\t\t\toldListLength\n\t\t\t].concat(newNodes));\n\t\t\t\n\t\t\tnodeLists.nestList(nodeList);\n\t\t\t\n\t\t\treturn oldNodes;\n\t\t},\n\n\t\t// ## nodeLists.nestList\n\t\t// If a given list does not exist in the nodeMap then create an lookup\n\t\t// id for it in the nodeMap and assign the list to it.\n\t\t// If the the provided does happen to exist in the nodeMap update the\n\t\t// elements in the list.\n\t\t// @param {Array.<HTMLElement>} nodeList The nodeList being nested.\n\t\tnestList: function(list){\n\t\t\tvar index = 0;\n\t\t\twhile(index < list.length) {\n\t\t\t\tvar node = list[index],\n\t\t\t\t\tchildNodeList = nodeMap[id(node)];\n\t\t\t\tif(childNodeList) {\n\t\t\t\t\tif(childNodeList !== list) {\n\t\t\t\t\t\tlist.splice( index, itemsInChildListTree(childNodeList), childNodeList );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Indicate the new nodes belong to this list.\n\t\t\t\t\tnodeMap[id(node)] = list;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t}\n\t\t},\n\n\t\t// ## nodeLists.last\n\t\t// Return the last HTMLElement in a nodeList, if the last\n\t\t// element is a nodeList, returns the last HTMLElement of\n\t\t// the child list, etc.\n\t\tlast: function(nodeList){\n\t\t\tvar last = nodeList[nodeList.length - 1];\n\t\t\t// If the last node in the list is not an HTMLElement\n\t\t\t// it is a nodeList so call `last` again.\n\t\t\tif(last.nodeType) {\n\t\t\t\treturn last;\n\t\t\t} else {\n\t\t\t\treturn nodeLists.last(last);\n\t\t\t}\n\t\t},\n\n\t\t// ## nodeLists.first\n\t\t// Return the first HTMLElement in a nodeList, if the first\n\t\t// element is a nodeList, returns the first HTMLElement of\n\t\t// the child list, etc.\n\t\tfirst: function(nodeList) {\n\t\t\tvar first = nodeList[0];\n\t\t\t// If the first node in the list is not an HTMLElement\n\t\t\t// it is a nodeList so call `first` again. \n\t\t\tif(first.nodeType) {\n\t\t\t\treturn first;\n\t\t\t} else {\n\t\t\t\treturn nodeLists.first(first);\n\t\t\t}\n\t\t},\n\n\t\t// ## nodeLists.register\n\t\t// Registers a nodeList and returns the nodeList passed to register\n\t\tregister: function (nodeList, unregistered, parent) {\n\t\t\t// If a unregistered callback has been provided assign it to the nodeList\n\t\t\t// as a property to be called when the nodeList is unregistred.\n\t\t\tnodeList.unregistered = unregistered;\n\t\t\t\n\t\t\tnodeLists.nestList(nodeList);\n\t\t\t\n\t\t\treturn nodeList;\n\t\t},\n\n\t\t// ## nodeLists.unregisterChildren\n\t\t// Unregister all childen within the provided list and return the \n\t\t// unregistred nodes.\n\t\t// @param {Array.<HTMLElement>} nodeList The child list to unregister.\n\t\tunregisterChildren: function(nodeList){\n\t\t\tvar nodes = [];\n\t\t\t// For each node in the nodeList we want to compute it's id\n\t\t\t// and delete it from the nodeList's internal map.\n\t\t\tcan.each(nodeList, function (node) {\n\t\t\t\t// If the node does not have a nodeType it is an array of\n\t\t\t\t// nodes.\n\t\t\t\tif(node.nodeType) {\n\t\t\t\t\tdelete nodeMap[id(node)];\n\t\t\t\t\tnodes.push(node);\n\t\t\t\t} else {\n\t\t\t\t\t// Recursively unregister each of the child lists in \n\t\t\t\t\t// the nodeList.\n\t\t\t\t\tpush.apply(nodes, nodeLists.unregister(node));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn nodes;\n\t\t},\n\n\t\t// ## nodeLists.unregister\n\t\t// Unregister's a nodeList and returns the unregistered nodes.  \n\t\t// Call if the nodeList is no longer being updated. This will \n\t\t// also unregister all child nodeLists.\n\t\tunregister: function (nodeList) {\n\t\t\tvar nodes = nodeLists.unregisterChildren(nodeList);\n\t\t\t// If an 'unregisted' function was provided during registration, remove\n\t\t\t// it from the list, and call the function provided.\n\t\t\tif (nodeList.unregistered) {\n\t\t\t\tvar unregisteredCallback = nodeList.unregistered;\n\t\t\t\tdelete nodeList.unregistered;\n\t\t\t\t\n\t\t\t\tunregisteredCallback();\n\t\t\t}\n\t\t\treturn nodes;\n\t\t},\n\n\t\tnodeMap: nodeMap\n\t};\n\tcan.view.nodeLists = nodeLists;\n\treturn nodeLists;\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/node_lists\";\ndefine([\"can/util/library\", \"can/view/elements\"], function(can) {\n  var canExpando = true;\n  try {\n    document.createTextNode('')._ = 0;\n  } catch (ex) {\n    canExpando = false;\n  }\n  var nodeMap = {},\n      textNodeMap = {},\n      expando = 'ejs_' + Math.random(),\n      _id = 0,\n      id = function(node) {\n        if (canExpando || node.nodeType !== 3) {\n          if (node[expando]) {\n            return node[expando];\n          } else {\n            ++_id;\n            return node[expando] = (node.nodeName ? 'element_' : 'obj_') + _id;\n          }\n        } else {\n          for (var textNodeID in textNodeMap) {\n            if (textNodeMap[textNodeID] === node) {\n              return textNodeID;\n            }\n          }\n          ++_id;\n          textNodeMap['text_' + _id] = node;\n          return 'text_' + _id;\n        }\n      },\n      splice = [].splice,\n      push = [].push,\n      itemsInChildListTree = function(list) {\n        var count = 0;\n        for (var i = 0,\n            len = list.length; i < len; i++) {\n          var item = list[i];\n          if (item.nodeType) {\n            count++;\n          } else {\n            count += itemsInChildListTree(item);\n          }\n        }\n        return count;\n      };\n  var nodeLists = {\n    id: id,\n    update: function(nodeList, newNodes) {\n      var oldNodes = nodeLists.unregisterChildren(nodeList);\n      newNodes = can.makeArray(newNodes);\n      var oldListLength = nodeList.length;\n      splice.apply(nodeList, [0, oldListLength].concat(newNodes));\n      nodeLists.nestList(nodeList);\n      return oldNodes;\n    },\n    nestList: function(list) {\n      var index = 0;\n      while (index < list.length) {\n        var node = list[index],\n            childNodeList = nodeMap[id(node)];\n        if (childNodeList) {\n          if (childNodeList !== list) {\n            list.splice(index, itemsInChildListTree(childNodeList), childNodeList);\n          }\n        } else {\n          nodeMap[id(node)] = list;\n        }\n        index++;\n      }\n    },\n    last: function(nodeList) {\n      var last = nodeList[nodeList.length - 1];\n      if (last.nodeType) {\n        return last;\n      } else {\n        return nodeLists.last(last);\n      }\n    },\n    first: function(nodeList) {\n      var first = nodeList[0];\n      if (first.nodeType) {\n        return first;\n      } else {\n        return nodeLists.first(first);\n      }\n    },\n    register: function(nodeList, unregistered, parent) {\n      nodeList.unregistered = unregistered;\n      nodeLists.nestList(nodeList);\n      return nodeList;\n    },\n    unregisterChildren: function(nodeList) {\n      var nodes = [];\n      can.each(nodeList, function(node) {\n        if (node.nodeType) {\n          delete nodeMap[id(node)];\n          nodes.push(node);\n        } else {\n          push.apply(nodes, nodeLists.unregister(node));\n        }\n      });\n      return nodes;\n    },\n    unregister: function(nodeList) {\n      var nodes = nodeLists.unregisterChildren(nodeList);\n      if (nodeList.unregistered) {\n        var unregisteredCallback = nodeList.unregistered;\n        delete nodeList.unregistered;\n        unregisteredCallback();\n      }\n      return nodes;\n    },\n    nodeMap: nodeMap\n  };\n  can.view.nodeLists = nodeLists;\n  return nodeLists;\n});\n\n","/*!\n * CanJS - 2.1.0\n * http://canjs.us/\n * Copyright (c) 2014 Bitovi\n * Mon, 05 May 2014 22:15:43 GMT\n * Licensed MIT\n * Includes: CanJS default build\n * Download from: http://canjs.us/\n */\ndefine([\"can/view\"], function(){\n\t\n\t\n\tfunction makeMap(str){\n\t\tvar obj = {}, items = str.split(\",\");\n\t\tfor ( var i = 0; i < items.length; i++ ) {\n\t\t\tobj[ items[i] ] = true;\n\t\t}\n\t\t\t\n\t\treturn obj;\n\t}\n\t\n\tvar alphaNumericHU = \"-A-Za-z0-9_\",\n\t\tattributeNames = \"[a-zA-Z_:][\"+alphaNumericHU+\":.]+\",\n\t\tspaceEQspace = \"\\\\s*=\\\\s*\",\n\t\tdblQuote2dblQuote = \"\\\"((?:\\\\\\\\.|[^\\\"])*)\\\"\",\n\t\tquote2quote = \"'((?:\\\\\\\\.|[^'])*)'\",\n\t\tattributeEqAndValue = \"(?:\"+spaceEQspace+\"(?:\"+\n\t\t  \"(?:\\\"[^\\\"]*\\\")|(?:'[^']*')|[^>\\\\s]+))?\",\n\t\tmatchStash = \"\\\\{\\\\{[^\\\\}]*\\\\}\\\\}\\\\}?\",\n\t\tstash = \"\\\\{\\\\{([^\\\\}]*)\\\\}\\\\}\\\\}?\",\n\t\tstartTag = new RegExp(\"^<([\"+alphaNumericHU+\"]+)\"+\n\t\t\t\t\"(\" +\n\t\t\t\t\t\"(?:\\\\s*\"+\n\t\t\t\t\t\t\"(?:(?:\"+\n\t\t\t\t\t\t\t\"(?:\"+attributeNames+\")?\"+\n\t\t\t\t\t\t\tattributeEqAndValue+\")|\"+\n\t                   \"(?:\"+matchStash+\")+)\"+\n\t                \")*\"+\n\t            \")\\\\s*(\\\\/?)>\"),\n\t\tendTag = new RegExp(\"^<\\\\/([\"+alphaNumericHU+\"]+)[^>]*>\"),\n\t\tattr = new RegExp(\"(?:\"+\n\t\t\t\t\t\"(?:(\"+attributeNames+\")|\"+stash+\")\"+\n\t\t\t\t\t\t\t\t\"(?:\"+spaceEQspace+\n\t\t\t\t\t\t\t\t\t\"(?:\"+\n\t\t\t\t\t\t\t\t\t\t\"(?:\"+dblQuote2dblQuote+\")|(?:\"+quote2quote+\")|([^>\\\\s]+)\"+\n\t\t\t\t\t\t\t\t\t\")\"+\n\t\t\t\t\t\t\t\t\")?)\",\"g\"),\n\t\tmustache = new RegExp(stash,\"g\"),\n\t\ttxtBreak = /<|\\{\\{/;\n\n\t// Empty Elements - HTML 5\n\tvar empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\");\n\n\t// Block Elements - HTML 5\n\tvar block = makeMap(\"address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video\");\n\n\t// Inline Elements - HTML 5\n\tvar inline = makeMap(\"a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var\");\n\n\t// Elements that you can, intentionally, leave open\n\t// (and which close themselves)\n\tvar closeSelf = makeMap(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr\");\n\n\t// Attributes that have their values filled in disabled=\"disabled\"\n\tvar fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\");\n\n\t// Special Elements (can contain anything)\n\tvar special = makeMap(\"script,style\");\n\n\tvar HTMLParser = function (html, handler) {\n\t\t\n\t\tfunction parseStartTag(tag, tagName, rest, unary) {\n\t\t\ttagName = tagName.toLowerCase();\n\n\t\t\tif (block[tagName]) {\n\t\t\t\twhile (stack.last() && inline[stack.last()]) {\n\t\t\t\t\tparseEndTag(\"\", stack.last());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (closeSelf[tagName] && stack.last() === tagName) {\n\t\t\t\tparseEndTag(\"\", tagName);\n\t\t\t}\n\t\t\t\n\t\t\tunary = empty[tagName] || !!unary;\n\t\t\t\n\t\t\thandler.start(tagName, unary);\n\t\t\t\n\t\t\tif (!unary) {\n\t\t\t\tstack.push(tagName);\n\t\t\t}\n\t\t\t// find attribute or special\n\t\t\tHTMLParser.parseAttrs(rest, handler);\n\n\n\t\t\thandler.end(tagName,unary);\n\t\t\t\n\t\t}\n\n\t\tfunction parseEndTag(tag, tagName) {\n\t\t\t// If no tag name is provided, clean shop\n\t\t\tvar pos;\n\t\t\tif (!tagName) {\n\t\t\t\tpos = 0;\n\t\t\t}\n\t\t\t\t\n\n\t\t\t\t// Find the closest opened tag of the same type\n\t\t\telse {\n\t\t\t\tfor (pos = stack.length - 1; pos >= 0; pos--) {\n\t\t\t\t\tif (stack[pos] === tagName) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\n\t\t\tif (pos >= 0) {\n\t\t\t\t// Close all the open elements, up the stack\n\t\t\t\tfor (var i = stack.length - 1; i >= pos; i--) {\n\t\t\t\t\tif (handler.close) {\n\t\t\t\t\t\thandler.close(stack[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t// Remove the open elements from the stack\n\t\t\t\tstack.length = pos;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction parseMustache(mustache, inside){\n\t\t\tif(handler.special){\n\t\t\t\thandler.special(inside);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tvar index, chars, match, stack = [], last = html;\n\t\tstack.last = function () {\n\t\t\treturn this[this.length - 1];\n\t\t};\n\n\t\twhile (html) {\n\t\t\tchars = true;\n\n\t\t\t// Make sure we're not in a script or style element\n\t\t\tif (!stack.last() || !special[stack.last()]) {\n\n\t\t\t\t// Comment\n\t\t\t\tif (html.indexOf(\"<!--\") === 0) {\n\t\t\t\t\tindex = html.indexOf(\"-->\");\n\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tif (handler.comment) {\n\t\t\t\t\t\t\thandler.comment(html.substring(4, index));\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtml = html.substring(index + 3);\n\t\t\t\t\t\tchars = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// end tag\n\t\t\t\t} else if (html.indexOf(\"</\") === 0) {\n\t\t\t\t\tmatch = html.match(endTag);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\t\tmatch[0].replace(endTag, parseEndTag);\n\t\t\t\t\t\tchars = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// start tag\n\t\t\t\t} else if (html.indexOf(\"<\") === 0) {\n\t\t\t\t\tmatch = html.match(startTag);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\t\tmatch[0].replace(startTag, parseStartTag);\n\t\t\t\t\t\tchars = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (html.indexOf(\"{{\") === 0 ) {\n\t\t\t\t\tmatch = html.match(mustache);\n\t\t\t\t\t\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\t\tmatch[0].replace(mustache, parseMustache);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (chars) {\n\t\t\t\t\tindex = html.search(txtBreak);\n\n\t\t\t\t\tvar text = index < 0 ? html : html.substring(0, index);\n\t\t\t\t\thtml = index < 0 ? \"\" : html.substring(index);\n\n\t\t\t\t\tif (handler.chars && text) {\n\t\t\t\t\t\thandler.chars(text);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\thtml = html.replace(new RegExp(\"([\\\\s\\\\S]*?)<\\/\" + stack.last() + \"[^>]*>\"), function (all, text) {\n\t\t\t\t\ttext = text.replace(/<!--([\\s\\S]*?)-->|<!\\[CDATA\\[([\\s\\S]*?)]]>/g, \"$1$2\");\n\t\t\t\t\tif (handler.chars) {\n\t\t\t\t\t\thandler.chars(text);\n\t\t\t\t\t}\n\t\t\t\t\treturn \"\";\n\t\t\t\t});\n\n\t\t\t\tparseEndTag(\"\", stack.last());\n\t\t\t}\n\n\t\t\tif (html === last) {\n\t\t\t\tthrow \"Parse Error: \" + html;\n\t\t\t}\n\t\t\t\t\n\t\t\tlast = html;\n\t\t}\n\n\t\t// Clean up any remaining tags\n\t\tparseEndTag();\n\n\t\t\n\t\thandler.done();\n\t};\n\tHTMLParser.parseAttrs = function(rest, handler){\n\t\t\n\t\t\n\t\t(rest != null ? rest : \"\").replace(attr, function (text, name, special, dblQuote, singleQuote, val) {\n\t\t\tif(special) {\n\t\t\t\thandler.special(special);\n\t\t\t\t\n\t\t\t}\n\t\t\tif(name || dblQuote || singleQuote || val) {\n\t\t\t\tvar value = arguments[3] ? arguments[3] :\n\t\t\t\t\targuments[4] ? arguments[4] :\n\t\t\t\t\targuments[5] ? arguments[5] :\n\t\t\t\t\tfillAttrs[name.toLowerCase()] ? name : \"\";\n\t\t\t\thandler.attrStart(name || \"\");\n\t\t\t\t\n\t\t\t\tvar last = mustache.lastIndex = 0,\n\t\t\t\t\tres = mustache.exec(value),\n\t\t\t\t\tchars;\n\t\t\t\twhile(res) {\n\t\t\t\t\tchars = value.substring(\n\t\t\t\t\t\tlast,\n\t\t\t\t\t\tmustache.lastIndex - res[0].length );\n\t\t\t\t\tif( chars.length ) {\n\t\t\t\t\t\thandler.attrValue(chars);\n\t\t\t\t\t}\n\t\t\t\t\thandler.special(res[1]);\n\t\t\t\t\tlast = mustache.lastIndex;\n\t\t\t\t\tres = mustache.exec(value);\n\t\t\t\t}\n\t\t\t\tchars = value.substr(\n\t\t\t\t\t\tlast,\n\t\t\t\t\t\tvalue.length );\n\t\t\t\tif(chars) {\n\t\t\t\t\thandler.attrValue(chars);\n\t\t\t\t}\n\t\t\t\thandler.attrEnd(name || \"\");\n\t\t\t}\n\n\t\t\t\n\t\t});\n\t\t\n\t\t\n\t};\n\n\tcan.view.parser = HTMLParser;\n\t\n\treturn HTMLParser;\n\t\n});","\"use strict\";\nvar __moduleName = \"bower_components/canjs/amd/can/view/parser\";\ndefine([\"can/view\"], function() {\n  function makeMap(str) {\n    var obj = {},\n        items = str.split(\",\");\n    for (var i = 0; i < items.length; i++) {\n      obj[items[i]] = true;\n    }\n    return obj;\n  }\n  var alphaNumericHU = \"-A-Za-z0-9_\",\n      attributeNames = \"[a-zA-Z_:][\" + alphaNumericHU + \":.]+\",\n      spaceEQspace = \"\\\\s*=\\\\s*\",\n      dblQuote2dblQuote = \"\\\"((?:\\\\\\\\.|[^\\\"])*)\\\"\",\n      quote2quote = \"'((?:\\\\\\\\.|[^'])*)'\",\n      attributeEqAndValue = \"(?:\" + spaceEQspace + \"(?:\" + \"(?:\\\"[^\\\"]*\\\")|(?:'[^']*')|[^>\\\\s]+))?\",\n      matchStash = \"\\\\{\\\\{[^\\\\}]*\\\\}\\\\}\\\\}?\",\n      stash = \"\\\\{\\\\{([^\\\\}]*)\\\\}\\\\}\\\\}?\",\n      startTag = new RegExp(\"^<([\" + alphaNumericHU + \"]+)\" + \"(\" + \"(?:\\\\s*\" + \"(?:(?:\" + \"(?:\" + attributeNames + \")?\" + attributeEqAndValue + \")|\" + \"(?:\" + matchStash + \")+)\" + \")*\" + \")\\\\s*(\\\\/?)>\"),\n      endTag = new RegExp(\"^<\\\\/([\" + alphaNumericHU + \"]+)[^>]*>\"),\n      attr = new RegExp(\"(?:\" + \"(?:(\" + attributeNames + \")|\" + stash + \")\" + \"(?:\" + spaceEQspace + \"(?:\" + \"(?:\" + dblQuote2dblQuote + \")|(?:\" + quote2quote + \")|([^>\\\\s]+)\" + \")\" + \")?)\", \"g\"),\n      mustache = new RegExp(stash, \"g\"),\n      txtBreak = /<|\\{\\{/;\n  var empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\");\n  var block = makeMap(\"address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video\");\n  var inline = makeMap(\"a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var\");\n  var closeSelf = makeMap(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr\");\n  var fillAttrs = makeMap(\"checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected\");\n  var special = makeMap(\"script,style\");\n  var HTMLParser = function(html, handler) {\n    function parseStartTag(tag, tagName, rest, unary) {\n      tagName = tagName.toLowerCase();\n      if (block[tagName]) {\n        while (stack.last() && inline[stack.last()]) {\n          parseEndTag(\"\", stack.last());\n        }\n      }\n      if (closeSelf[tagName] && stack.last() === tagName) {\n        parseEndTag(\"\", tagName);\n      }\n      unary = empty[tagName] || !!unary;\n      handler.start(tagName, unary);\n      if (!unary) {\n        stack.push(tagName);\n      }\n      HTMLParser.parseAttrs(rest, handler);\n      handler.end(tagName, unary);\n    }\n    function parseEndTag(tag, tagName) {\n      var pos;\n      if (!tagName) {\n        pos = 0;\n      } else {\n        for (pos = stack.length - 1; pos >= 0; pos--) {\n          if (stack[pos] === tagName) {\n            break;\n          }\n        }\n      }\n      if (pos >= 0) {\n        for (var i = stack.length - 1; i >= pos; i--) {\n          if (handler.close) {\n            handler.close(stack[i]);\n          }\n        }\n        stack.length = pos;\n      }\n    }\n    function parseMustache(mustache, inside) {\n      if (handler.special) {\n        handler.special(inside);\n      }\n    }\n    var index,\n        chars,\n        match,\n        stack = [],\n        last = html;\n    stack.last = function() {\n      return this[this.length - 1];\n    };\n    while (html) {\n      chars = true;\n      if (!stack.last() || !special[stack.last()]) {\n        if (html.indexOf(\"<!--\") === 0) {\n          index = html.indexOf(\"-->\");\n          if (index >= 0) {\n            if (handler.comment) {\n              handler.comment(html.substring(4, index));\n            }\n            html = html.substring(index + 3);\n            chars = false;\n          }\n        } else if (html.indexOf(\"</\") === 0) {\n          match = html.match(endTag);\n          if (match) {\n            html = html.substring(match[0].length);\n            match[0].replace(endTag, parseEndTag);\n            chars = false;\n          }\n        } else if (html.indexOf(\"<\") === 0) {\n          match = html.match(startTag);\n          if (match) {\n            html = html.substring(match[0].length);\n            match[0].replace(startTag, parseStartTag);\n            chars = false;\n          }\n        } else if (html.indexOf(\"{{\") === 0) {\n          match = html.match(mustache);\n          if (match) {\n            html = html.substring(match[0].length);\n            match[0].replace(mustache, parseMustache);\n          }\n        }\n        if (chars) {\n          index = html.search(txtBreak);\n          var text = index < 0 ? html : html.substring(0, index);\n          html = index < 0 ? \"\" : html.substring(index);\n          if (handler.chars && text) {\n            handler.chars(text);\n          }\n        }\n      } else {\n        html = html.replace(new RegExp(\"([\\\\s\\\\S]*?)<\\/\" + stack.last() + \"[^>]*>\"), function(all, text) {\n          text = text.replace(/<!--([\\s\\S]*?)-->|<!\\[CDATA\\[([\\s\\S]*?)]]>/g, \"$1$2\");\n          if (handler.chars) {\n            handler.chars(text);\n          }\n          return \"\";\n        });\n        parseEndTag(\"\", stack.last());\n      }\n      if (html === last) {\n        throw \"Parse Error: \" + html;\n      }\n      last = html;\n    }\n    parseEndTag();\n    handler.done();\n  };\n  HTMLParser.parseAttrs = function(rest, handler) {\n    (rest != null ? rest : \"\").replace(attr, function(text, name, special, dblQuote, singleQuote, val) {\n      if (special) {\n        handler.special(special);\n      }\n      if (name || dblQuote || singleQuote || val) {\n        var value = arguments[3] ? arguments[3] : arguments[4] ? arguments[4] : arguments[5] ? arguments[5] : fillAttrs[name.toLowerCase()] ? name : \"\";\n        handler.attrStart(name || \"\");\n        var last = mustache.lastIndex = 0,\n            res = mustache.exec(value),\n            chars;\n        while (res) {\n          chars = value.substring(last, mustache.lastIndex - res[0].length);\n          if (chars.length) {\n            handler.attrValue(chars);\n          }\n          handler.special(res[1]);\n          last = mustache.lastIndex;\n          res = mustache.exec(value);\n        }\n        chars = value.substr(last, value.length);\n        if (chars) {\n          handler.attrValue(chars);\n        }\n        handler.attrEnd(name || \"\");\n      }\n    });\n  };\n  can.view.parser = HTMLParser;\n  return HTMLParser;\n});\n\n"],"sourceRoot":"webpack-module://"}